; ModuleID = 'llvm-link'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.b2ContactRegister = type { %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, void (%class.b2Contact*, %class.b2BlockAllocator*)*, i8 }
%class.b2Contact = type <{ i32 (...)**, i32, [4 x i8], %class.b2Contact*, %class.b2Contact*, %struct.b2ContactEdge, %struct.b2ContactEdge, %class.b2Fixture*, %class.b2Fixture*, i32, i32, %struct.b2Manifold, i32, float, float, float, float, [4 x i8] }>
%struct.b2ContactEdge = type { %class.b2Body*, %class.b2Contact*, %struct.b2ContactEdge*, %struct.b2ContactEdge* }
%class.b2Body = type { i32, i16, i32, %struct.b2Transform, %struct.b2Sweep, %struct.b2Vec2, float, %struct.b2Vec2, float, %class.b2World*, %class.b2Body*, %class.b2Body*, %class.b2Fixture*, i32, %struct.b2JointEdge*, %struct.b2ContactEdge*, float, float, float, float, float, float, float, float, i8* }
%struct.b2Transform = type { %struct.b2Vec2, %struct.b2Vec2 }
%struct.b2Sweep = type { %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float }
%struct.b2Vec2 = type { float, float }
%class.b2World = type { %class.b2BlockAllocator, %class.b2StackAllocator, i32, %class.b2ContactManager, %class.b2Body*, %class.b2Joint*, i32, i32, %struct.b2Vec2, i8, %class.b2ContactFilter*, %class.b2Draw*, float, i8, i8, i8, i8, %struct.b2Profile }
%class.b2BlockAllocator = type { %struct.b2Chunk*, i32, i32, [14 x %struct.b2Block*] }
%struct.b2Chunk = type { i32, %struct.b2Block* }
%struct.b2Block = type { %struct.b2Block* }
%class.b2StackAllocator = type <{ [102400 x i8], i32, i32, i32, [4 x i8], [32 x %struct.b2StackEntry], i32, [4 x i8] }>
%struct.b2StackEntry = type { i8*, i32, i8 }
%class.b2ContactManager = type { %class.b2BroadPhase, %class.b2Contact*, i32, %class.b2ContactFilter*, %class.b2ContactFilter*, %class.b2BlockAllocator* }
%class.b2BroadPhase = type <{ %class.b2DynamicTree, i32, [4 x i8], i32*, i32, i32, %struct.b2Pair*, i32, i32, i32, [4 x i8] }>
%class.b2DynamicTree = type <{ i32, [4 x i8], %struct.b2TreeNode*, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.b2TreeNode = type { %struct.b2Transform, i8*, %union.anon, i32, i32, i32 }
%union.anon = type { i32 }
%struct.b2Pair = type { i32, i32 }
%class.b2Joint = type { i32 (...)**, i32, %class.b2Joint*, %class.b2Joint*, %struct.b2JointEdge, %struct.b2JointEdge, %class.b2Body*, %class.b2Body*, i32, i8, i8, i8* }
%struct.b2JointEdge = type { %class.b2Body*, %class.b2Joint*, %struct.b2JointEdge*, %struct.b2JointEdge* }
%class.b2ContactFilter = type { i32 (...)** }
%class.b2Draw = type <{ i32 (...)**, i32, [4 x i8] }>
%struct.b2Profile = type { float, float, float, float, float, float, float, float }
%struct.b2Manifold = type { [2 x %struct.b2ManifoldPoint], %struct.b2Vec2, %struct.b2Vec2, i32, i32 }
%struct.b2ManifoldPoint = type { %struct.b2Vec2, float, float, %union.anon }
%class.b2Fixture = type { float, %class.b2Fixture*, %class.b2Body*, %class.b2Shape*, float, float, %struct.b2FixtureProxy*, i32, %struct.b2Filter, i8, i8* }
%class.b2Shape = type { i32 (...)**, i32, float }
%struct.b2FixtureProxy = type { %struct.b2Transform, %class.b2Fixture*, i32, i32 }
%struct.b2Filter = type { i16, i16, i16 }
%struct.b2Version = type { i32, i32, i32 }
%class.b2ChainShape = type <{ %class.b2Shape, %struct.b2Vec2*, i32, %struct.b2Vec2, %struct.b2Vec2, i8, i8, [2 x i8] }>
%class.b2DistanceJoint = type <{ %class.b2Joint, float, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, [4 x i8] }>
%struct.b2DistanceJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, float, float, float }
%struct.b2JointDef.base = type <{ i32, [4 x i8], i8*, %class.b2Body*, %class.b2Body*, i8 }>
%class.b2MouseJoint = type <{ %class.b2Joint, %struct.b2Vec2, %struct.b2Vec2, float, float, float, %struct.b2Vec2, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, float, float, %struct.b2Transform, %struct.b2Vec2, [4 x i8] }>
%struct.b2MouseJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, float, float, float }
%class.b2PrismaticJoint = type <{ %class.b2Joint, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, %struct.b2Vec3, float, float, float, float, float, i8, i8, [2 x i8], i32, i32, i32, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, %struct.b2Mat33, float, [4 x i8] }>
%struct.b2Vec3 = type { float, float, float }
%struct.b2Mat33 = type { %struct.b2Vec3, %struct.b2Vec3, %struct.b2Vec3 }
%struct.b2PrismaticJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, i8, float, float, i8, float, float }
%class.b2RevoluteJoint = type { %class.b2Joint, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec3, float, i8, float, float, i8, float, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, %struct.b2Mat33, float, i32 }
%struct.b2RevoluteJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, float, i8, float, float, i8, float, float }
%class.b2PulleyJoint = type { %class.b2Joint, %struct.b2Vec2, %struct.b2Vec2, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float }
%struct.b2PulleyJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float }
%class.b2GearJoint = type { %class.b2Joint, %class.b2Joint*, %class.b2Joint*, i32, i32, %class.b2Body*, %class.b2Body*, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, i32, i32, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, float, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float }
%struct.b2GearJointDef = type <{ %struct.b2JointDef.base, [7 x i8], %class.b2Joint*, %class.b2Joint*, float, [4 x i8] }>
%class.b2WheelJoint = type <{ %class.b2Joint, float, float, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, i8, [3 x i8], i32, i32, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, float, float, float, float, [4 x i8] }>
%struct.b2WheelJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, i8, float, float, float, float }
%class.b2WeldJoint = type <{ %class.b2Joint, float, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, %struct.b2Vec3, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, %struct.b2Mat33, [4 x i8] }>
%class.b2FrictionJoint = type { %class.b2Joint, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, %struct.b2Transform, float }
%struct.b2FrictionJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, float, float, [4 x i8] }
%class.b2RopeJoint = type <{ %class.b2Joint, %struct.b2Vec2, %struct.b2Vec2, float, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, i32, [4 x i8] }>
%struct.b2RopeJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, %struct.b2Vec2, float }
%class.b2MotorJoint = type <{ %class.b2Joint, %struct.b2Vec2, float, %struct.b2Vec2, float, float, float, float, i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float, %struct.b2Transform, float, [4 x i8] }>
%struct.b2MotorJointDef = type { %struct.b2JointDef.base, %struct.b2Vec2, float, float, float, float, [4 x i8] }
%class.b2CircleContact = type { %class.b2Contact.base, [4 x i8] }
%class.b2Contact.base = type <{ i32 (...)**, i32, [4 x i8], %class.b2Contact*, %class.b2Contact*, %struct.b2ContactEdge, %struct.b2ContactEdge, %class.b2Fixture*, %class.b2Fixture*, i32, i32, %struct.b2Manifold, i32, float, float, float, float }>
%class.b2Timer = type { i64, i64 }
%class.b2ContactSolver = type <{ %struct.b2TimeStep, %struct.b2Position*, %struct.b2Position*, %class.b2StackAllocator*, %struct.b2ContactPositionConstraint*, %struct.b2ContactVelocityConstraint*, %class.b2Contact**, i32, [4 x i8] }>
%struct.b2TimeStep = type { float, float, float, i32, i32, i8 }
%struct.b2Position = type { %struct.b2Vec2, float }
%struct.b2ContactPositionConstraint = type { [2 x %struct.b2Vec2], %struct.b2Vec2, %struct.b2Vec2, i32, i32, float, float, %struct.b2Vec2, %struct.b2Vec2, float, float, i32, float, float, i32 }
%struct.b2ContactVelocityConstraint = type { [2 x %struct.b2VelocityConstraintPoint], %struct.b2Vec2, %struct.b2Transform, %struct.b2Transform, i32, i32, float, float, float, float, float, float, float, i32, i32 }
%struct.b2VelocityConstraintPoint = type { %struct.b2Vec2, %struct.b2Vec2, float, float, float, float, float }
%struct.b2ContactSolverDef = type { %struct.b2TimeStep, %class.b2Contact**, i32, %struct.b2Position*, %struct.b2Position*, %class.b2StackAllocator* }
%struct.b2BodyDef = type <{ i32, %struct.b2Vec2, float, %struct.b2Vec2, float, float, float, i8, i8, i8, i8, i8, [7 x i8], i8*, float, [4 x i8] }>
%class.b2Island = type { %class.b2StackAllocator*, %class.b2ContactFilter*, %class.b2Body**, %class.b2Contact**, %class.b2Joint**, %struct.b2Position*, %struct.b2Position*, i32, i32, i32, i32, i32, i32 }
%class.b2Rope = type <{ i32, [4 x i8], %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Vec2*, float*, float*, float*, %struct.b2Vec2, float, float, float, [4 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.b2SolverData = type { %struct.b2TimeStep, %struct.b2Position*, %struct.b2Position* }
%class.b2CircleShape = type { %class.b2Shape, %struct.b2Vec2 }
%class.b2PolygonShape = type <{ %class.b2Shape, %struct.b2Vec2, [8 x %struct.b2Vec2], [8 x %struct.b2Vec2], i32, [4 x i8] }>
%class.b2EdgeShape = type <{ %class.b2Shape, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, i8, i8, [6 x i8] }>
%struct.b2ContactFeature = type { i8, i8, i8, i8 }
%struct.b2EPCollider = type <{ %struct.b2TempPolygon, %struct.b2Transform, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, i32, i32, %struct.b2Vec2, %struct.b2Vec2, float, i8, [3 x i8] }>
%struct.b2TempPolygon = type { [8 x %struct.b2Vec2], [8 x %struct.b2Vec2], i32 }
%struct.b2EPAxis = type { i32, i32, float }
%struct.b2ClipVertex = type { %struct.b2Vec2, %union.anon }
%struct.b2ReferenceFace = type { i32, i32, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, %struct.b2Vec2, float }
%struct.b2PositionSolverManifold = type { %struct.b2Vec2, %struct.b2Vec2, float }
%struct.b2MassData = type { float, %struct.b2Vec2, float }
%struct.b2ContactImpulse = type { [2 x float], [2 x float], i32 }
%struct.b2JointDef = type <{ i32, [4 x i8], i8*, %class.b2Body*, %class.b2Body*, i8, [7 x i8] }>
%struct.b2DistanceInput = type <{ %struct.b2DistanceProxy, %struct.b2DistanceProxy, %struct.b2Transform, %struct.b2Transform, i8, [7 x i8] }>
%struct.b2DistanceProxy = type { [2 x %struct.b2Vec2], %struct.b2Vec2*, i32, float }
%struct.b2SimplexCache = type { float, i16, [3 x i8], [3 x i8] }
%struct.b2DistanceOutput = type { %struct.b2Vec2, %struct.b2Vec2, float, i32 }
%struct.b2Simplex = type { %struct.b2SimplexVertex, %struct.b2SimplexVertex, %struct.b2SimplexVertex, i32 }
%struct.b2SimplexVertex = type { %struct.b2Vec2, %struct.b2Vec2, %struct.b2Vec2, float, i32, i32 }
%struct.b2WorldManifold = type { %struct.b2Vec2, [2 x %struct.b2Vec2], [2 x float] }
%struct.b2FixtureDef = type <{ %class.b2Shape*, i8*, float, float, float, i8, i8, %struct.b2Filter, [4 x i8] }>
%class.b2GrowableStack = type { i32*, [256 x i32], i32, i32 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { i1 (%struct.b2Pair*, %struct.b2Pair*)* }
%struct.b2TOIInput = type <{ %struct.b2DistanceProxy, %struct.b2DistanceProxy, %struct.b2Sweep, %struct.b2Sweep, float, [4 x i8] }>
%struct.b2TOIOutput = type { i32, float }
%struct.b2SeparationFunction = type <{ %struct.b2DistanceProxy*, %struct.b2DistanceProxy*, %struct.b2Sweep, %struct.b2Sweep, i32, %struct.b2Vec2, %struct.b2Vec2, [4 x i8] }>
%struct.b2WorldQueryWrapper = type { %class.b2BroadPhase*, %class.b2ContactFilter* }
%struct.b2Color = type { float, float, float, float }
%struct.b2RopeDef = type <{ %struct.b2Vec2*, i32, [4 x i8], float*, %struct.b2Vec2, float, float, float, [4 x i8] }>

$_ZNK6b2Body13GetWorldPointERK6b2Vec2 = comdat any

$_Z5b2MulRK11b2TransformRK6b2Vec2 = comdat any

$_ZN6b2Vec2C2Eff = comdat any

$_ZmlfRK6b2Vec2 = comdat any

$_ZN7b2Joint11ShiftOriginERK6b2Vec2 = comdat any

$_ZN15b2DistanceJointD2Ev = comdat any

$_ZN7b2JointD2Ev = comdat any

$_ZN15b2DistanceJointD0Ev = comdat any

$_ZN5b2RotC2Ef = comdat any

$_ZmiRK6b2Vec2S1_ = comdat any

$_Z5b2MulRK5b2RotRK6b2Vec2 = comdat any

$_ZplRK6b2Vec2S1_ = comdat any

$_ZNK6b2Vec26LengthEv = comdat any

$_ZN6b2Vec2mLEf = comdat any

$_ZN6b2Vec23SetEff = comdat any

$_Z7b2CrossRK6b2Vec2S1_ = comdat any

$_ZN6b2Vec2mIERKS_ = comdat any

$_ZN6b2Vec2pLERKS_ = comdat any

$_Z7b2CrossfRK6b2Vec2 = comdat any

$_Z5b2DotRK6b2Vec2S1_ = comdat any

$_ZN6b2Vec29NormalizeEv = comdat any

$_Z7b2ClampIfET_S0_S0_S0_ = comdat any

$_Z5b2MinIfET_S0_S0_ = comdat any

$_Z5b2MaxIfET_S0_S0_ = comdat any

$_Z5b2AbsIfET_S0_ = comdat any

$_ZN15b2FrictionJointD2Ev = comdat any

$_ZN15b2FrictionJointD0Ev = comdat any

$_ZN7b2Mat22C2Ev = comdat any

$_ZN6b2Vec2C2Ev = comdat any

$_ZNK7b2Mat2210GetInverseEv = comdat any

$_ZN6b2Vec27SetZeroEv = comdat any

$_Z5b2MulRK7b2Mat22RK6b2Vec2 = comdat any

$_ZNK6b2Vec2ngEv = comdat any

$_ZNK6b2Vec213LengthSquaredEv = comdat any

$_ZN11b2GearJointD2Ev = comdat any

$_ZN11b2GearJointD0Ev = comdat any

$_Z6b2MulTRK5b2RotRK6b2Vec2 = comdat any

$_ZNK6b2Body11GetPositionEv = comdat any

$_ZN12b2MotorJointD2Ev = comdat any

$_ZN12b2MotorJointD0Ev = comdat any

$_ZN12b2MouseJoint4DumpEv = comdat any

$_ZN12b2MouseJointD2Ev = comdat any

$_ZN12b2MouseJointD0Ev = comdat any

$_ZNK6b2Body7GetMassEv = comdat any

$_ZN16b2PrismaticJointD2Ev = comdat any

$_ZN16b2PrismaticJointD0Ev = comdat any

$_ZN6b2Vec33SetEfff = comdat any

$_ZN6b2Vec3mLEf = comdat any

$_ZN6b2Vec37SetZeroEv = comdat any

$_ZN6b2Vec3C2Efff = comdat any

$_ZNK6b2Vec3ngEv = comdat any

$_ZN6b2Vec3C2Ev = comdat any

$_Z7b2CrossRK6b2Vec3S1_ = comdat any

$_Z5b2DotRK6b2Vec3S1_ = comdat any

$_ZN6b2Vec3pLERKS_ = comdat any

$_ZmiRK6b2Vec3S1_ = comdat any

$_ZN7b2Mat33C2Ev = comdat any

$_ZNK7b2Mat225SolveERK6b2Vec2 = comdat any

$_ZN13b2PulleyJointD2Ev = comdat any

$_ZN13b2PulleyJointD0Ev = comdat any

$_ZN15b2RevoluteJointD2Ev = comdat any

$_ZN15b2RevoluteJointD0Ev = comdat any

$_ZN5b2Rot3SetEf = comdat any

$_ZN11b2RopeJointD2Ev = comdat any

$_ZN11b2RopeJointD0Ev = comdat any

$_ZN11b2WeldJointD2Ev = comdat any

$_ZN11b2WeldJointD0Ev = comdat any

$_Z7b2Mul22RK7b2Mat33RK6b2Vec2 = comdat any

$_Z5b2MulRK7b2Mat33RK6b2Vec3 = comdat any

$_ZmlfRK6b2Vec3 = comdat any

$_ZplRK6b2Vec3S1_ = comdat any

$_ZN12b2WheelJointD2Ev = comdat any

$_ZN12b2WheelJointD0Ev = comdat any

$_ZN9b2Fixture8GetShapeEv = comdat any

$_ZN15b2CircleContactD2Ev = comdat any

$_ZN9b2ContactD2Ev = comdat any

$_ZN15b2CircleContactD0Ev = comdat any

$_Z6b2MulTRK11b2TransformRK6b2Vec2 = comdat any

$_Z17b2DistanceSquaredRK6b2Vec2S1_ = comdat any

$_ZN25b2PolygonAndCircleContactD2Ev = comdat any

$_ZN25b2PolygonAndCircleContactD0Ev = comdat any

$_ZN22b2EdgeAndCircleContactD2Ev = comdat any

$_ZN22b2EdgeAndCircleContactD0Ev = comdat any

$_ZN12b2EPColliderC2Ev = comdat any

$_ZN13b2TempPolygonC2Ev = comdat any

$_ZN11b2TransformC2Ev = comdat any

$_ZN5b2RotC2Ev = comdat any

$_Z6b2MulTRK11b2TransformS1_ = comdat any

$_Z6b2MulTRK5b2RotS1_ = comdat any

$_ZN12b2ClipVertexC2Ev = comdat any

$_ZN15b2ReferenceFaceC2Ev = comdat any

$_ZN23b2EdgeAndPolygonContactD2Ev = comdat any

$_ZN23b2EdgeAndPolygonContactD0Ev = comdat any

$_ZN11b2EdgeShapeC2Ev = comdat any

$_ZN7b2ShapeC2Ev = comdat any

$_ZN7b2ShapeD2Ev = comdat any

$_ZN7b2ShapeD0Ev = comdat any

$_ZN11b2EdgeShapeD2Ev = comdat any

$_ZN11b2EdgeShapeD0Ev = comdat any

$_ZN11b2EdgeShapeaSERKS_ = comdat any

$_ZN7b2ShapeaSERKS_ = comdat any

$_Z5b2MinRK6b2Vec2S1_ = comdat any

$_Z5b2MaxRK6b2Vec2S1_ = comdat any

$__clang_call_terminate = comdat any

$_ZN23b2ChainAndCircleContactD2Ev = comdat any

$_ZN23b2ChainAndCircleContactD0Ev = comdat any

$_ZN24b2ChainAndPolygonContactD2Ev = comdat any

$_ZN24b2ChainAndPolygonContactD0Ev = comdat any

$_Z7b2CrossRK6b2Vec2f = comdat any

$_ZN16b2PolygonContactD2Ev = comdat any

$_ZN16b2PolygonContactD0Ev = comdat any

$_ZN15b2ContactFilterC2Ev = comdat any

$_ZN15b2ContactFilterD2Ev = comdat any

$_ZN15b2ContactFilterD0Ev = comdat any

$_ZN9b2Fixture7GetBodyEv = comdat any

$_ZNK6b2Body7GetTypeEv = comdat any

$_ZNK9b2Fixture13GetFilterDataEv = comdat any

$_ZN17b2ContactListenerC2Ev = comdat any

$_ZN17b2ContactListenerD2Ev = comdat any

$_ZN17b2ContactListenerD0Ev = comdat any

$_ZN17b2ContactListener12BeginContactEP9b2Contact = comdat any

$_ZN17b2ContactListener10EndContactEP9b2Contact = comdat any

$_ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold = comdat any

$_ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse = comdat any

$_ZN13b2CircleShapeD2Ev = comdat any

$_ZN13b2CircleShapeD0Ev = comdat any

$_ZN13b2CircleShapeC2Ev = comdat any

$_ZN13b2CircleShapeaSERKS_ = comdat any

$_ZN12b2ChainShapeC2Ev = comdat any

$_ZN14b2PolygonShapeD2Ev = comdat any

$_ZN14b2PolygonShapeD0Ev = comdat any

$_ZN14b2PolygonShapeC2Ev = comdat any

$_ZN14b2PolygonShapeaSERKS_ = comdat any

$_ZNK6b2Body13GetLocalPointERK6b2Vec2 = comdat any

$_ZN7b2Joint4DumpEv = comdat any

$_ZN7b2JointD0Ev = comdat any

$_Z9b2IsValidf = comdat any

$_ZNK7b2Joint7GetTypeEv = comdat any

$_ZN7b2Joint8GetBodyAEv = comdat any

$_ZN7b2Joint8GetBodyBEv = comdat any

$_ZNK6b2Vec27IsValidEv = comdat any

$_ZNK6b2Body12GetTransformEv = comdat any

$_ZNK6b2Body8IsActiveEv = comdat any

$_ZNK6b2Body8GetAngleEv = comdat any

$_ZN6b2Body8SetAwakeEb = comdat any

$_ZNK6b2Body7IsAwakeEv = comdat any

$_ZNK6b2Body14GetLocalVectorERK6b2Vec2 = comdat any

$_ZNK6b2Body14GetWorldVectorERK6b2Vec2 = comdat any

$_ZN9b2ContactD0Ev = comdat any

$_ZN10b2ManifoldC2Ev = comdat any

$_ZN15b2ManifoldPointC2Ev = comdat any

$_Z13b2MixFrictionff = comdat any

$_Z16b2MixRestitutionff = comdat any

$_ZNK9b2Fixture7GetTypeEv = comdat any

$_ZNK7b2Shape7GetTypeEv = comdat any

$_ZNK9b2Fixture8IsSensorEv = comdat any

$_ZN15b2DistanceInputC2Ev = comdat any

$_ZN15b2DistanceProxyC2Ev = comdat any

$_ZN16b2DistanceOutputC2Ev = comdat any

$_ZN9b2SimplexC2Ev = comdat any

$_ZN15b2SimplexVertexC2Ev = comdat any

$_ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_ = comdat any

$_ZNK15b2DistanceProxy9GetVertexEi = comdat any

$_ZNK9b2Simplex9GetMetricEv = comdat any

$_Z10b2DistanceRK6b2Vec2S1_ = comdat any

$_ZNK9b2Simplex15GetClosestPointEv = comdat any

$_ZNK9b2Simplex18GetSearchDirectionEv = comdat any

$_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2 = comdat any

$_Z5b2MaxIiET_S0_S0_ = comdat any

$_ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_ = comdat any

$_ZNK9b2Simplex10WriteCacheEP14b2SimplexCache = comdat any

$_ZN9b2Contact11GetManifoldEv = comdat any

$_ZN7b2Mat227SetZeroEv = comdat any

$_ZN15b2WorldManifoldC2Ev = comdat any

$_ZN24b2PositionSolverManifoldC2Ev = comdat any

$_ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i = comdat any

$_ZN7b2SweepC2Ev = comdat any

$_ZNK7b2World8IsLockedEv = comdat any

$_ZN10b2MassDataC2Ev = comdat any

$_ZNK9b2Fixture11GetMassDataEP10b2MassData = comdat any

$_ZN6b2AABBC2Ev = comdat any

$_ZN6b2AABB7CombineERKS_S1_ = comdat any

$_ZNK10b2TreeNode6IsLeafEv = comdat any

$_ZNK6b2AABB8ContainsERKS_ = comdat any

$_ZNK6b2AABB12GetPerimeterEv = comdat any

$_ZN9b2Contact11GetFixtureAEv = comdat any

$_ZN9b2Contact11GetFixtureBEv = comdat any

$_ZNK9b2Contact10IsTouchingEv = comdat any

$_ZN8b2FilterC2Ev = comdat any

$_ZN12b2FixtureDefC2Ev = comdat any

$_ZNK9b2Contact14GetChildIndexAEv = comdat any

$_ZNK9b2Contact14GetChildIndexBEv = comdat any

$_ZN9b2Contact7GetNextEv = comdat any

$_ZNK12b2BroadPhase11TestOverlapEii = comdat any

$_ZNK13b2DynamicTree10GetFatAABBEi = comdat any

$_Z13b2TestOverlapRK6b2AABBS1_ = comdat any

$_ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_ = comdat any

$_ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB = comdat any

$_ZN15b2GrowableStackIiLi256EEC2Ev = comdat any

$_ZN15b2GrowableStackIiLi256EE4PushERKi = comdat any

$_ZN15b2GrowableStackIiLi256EE8GetCountEv = comdat any

$_ZN15b2GrowableStackIiLi256EE3PopEv = comdat any

$_ZN15b2GrowableStackIiLi256EED2Ev = comdat any

$_Z5b2MinIiET_S0_S0_ = comdat any

$_Z14b2PairLessThanRK6b2PairS1_ = comdat any

$_ZSt4sortIP6b2PairPFbRKS0_S3_EEvT_S6_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterIPFbRK6b2PairS4_EEENS0_15_Iter_comp_iterIT_EES8_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEC2ES6_ = comdat any

$_ZSt6__sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_ = comdat any

$_ZSt4__lgl = comdat any

$_ZSt16__introsort_loopIP6b2PairlN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_T1_ = comdat any

$_ZSt14__partial_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_ = comdat any

$_ZSt13__heap_selectIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_ = comdat any

$_ZSt11__make_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_ = comdat any

$_ZSt13__adjust_heapIP6b2PairlS0_N9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valIPFbRK6b2PairS4_EEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS8_EE = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valIPFbRK6b2PairS4_EEC2ES6_ = comdat any

$_ZSt11__push_heapIP6b2PairlS0_N9__gnu_cxx5__ops14_Iter_comp_valIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valIPFbRK6b2PairS4_EEclIPS2_S2_EEbT_RT0_ = comdat any

$_ZSt10__pop_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_ = comdat any

$_ZSt11__sort_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_ = comdat any

$_ZSt27__unguarded_partition_pivotIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEET_SA_SA_T0_ = comdat any

$_ZSt22__move_median_to_firstIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_SA_T0_ = comdat any

$_ZSt9iter_swapIP6b2PairS1_EvT_T0_ = comdat any

$_ZNSt11__iter_swapILb1EE9iter_swapIP6b2PairS3_EEvT_T0_ = comdat any

$_ZSt4swapI6b2PairEvRT_S2_ = comdat any

$_ZSt21__unguarded_partitionIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEET_SA_SA_SA_T0_ = comdat any

$_ZSt22__final_insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_ = comdat any

$_ZSt16__insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_ = comdat any

$_ZSt13copy_backwardIP6b2PairS1_ET0_T_S3_S2_ = comdat any

$_ZSt12__miter_baseIP6b2PairENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt10_Iter_baseIP6b2PairLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP6b2PairS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIP6b2PairENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP6b2PairS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI6b2PairEEPT_PKS4_S7_S5_ = comdat any

$_ZN9__gnu_cxx5__ops15__val_comp_iterIPFbRK6b2PairS4_EEENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS8_EE = comdat any

$_ZN9__gnu_cxx5__ops14_Val_comp_iterIPFbRK6b2PairS4_EEC2ES6_ = comdat any

$_ZSt25__unguarded_linear_insertIP6b2PairN9__gnu_cxx5__ops14_Val_comp_iterIPFbRKS0_S6_EEEEvT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Val_comp_iterIPFbRK6b2PairS4_EEclIS2_PS2_EEbRT_T0_ = comdat any

$_ZSt26__unguarded_insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_ = comdat any

$_ZNK13b2DynamicTree11GetUserDataEi = comdat any

$_ZN6b2Body14GetContactListEv = comdat any

$_ZN9b2Contact16FlagForFilteringEv = comdat any

$_ZN6b2Body8GetWorldEv = comdat any

$_ZN6b2Body20SynchronizeTransformEv = comdat any

$_ZN16b2ContactManagerD2Ev = comdat any

$_ZN8b2Island5ClearEv = comdat any

$_ZN8b2Island3AddEP6b2Body = comdat any

$_ZNK9b2Contact9IsEnabledEv = comdat any

$_ZN8b2Island3AddEP9b2Contact = comdat any

$_ZN8b2Island3AddEP7b2Joint = comdat any

$_ZN6b2Body7GetNextEv = comdat any

$_ZNK6b2Body8IsBulletEv = comdat any

$_ZN7b2Sweep7AdvanceEf = comdat any

$_ZN10b2TOIInputC2Ev = comdat any

$_ZN7b2Sweep9NormalizeEv = comdat any

$_ZNK7b2Sweep12GetTransformEP11b2Transformf = comdat any

$_ZN20b2SeparationFunctionC2Ev = comdat any

$_ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f = comdat any

$_ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f = comdat any

$_ZNK20b2SeparationFunction8EvaluateEiif = comdat any

$_ZN6b2Body7AdvanceEf = comdat any

$_ZN9b2Contact10SetEnabledEb = comdat any

$_ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB = comdat any

$_ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB = comdat any

$_ZN19b2WorldQueryWrapper13QueryCallbackEi = comdat any

$_ZNK12b2BroadPhase11GetUserDataEi = comdat any

$_ZN14b2RayCastInputC2Ev = comdat any

$_ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput = comdat any

$_ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput = comdat any

$_Z5b2AbsRK6b2Vec2 = comdat any

$_ZNK6b2AABB9GetCenterEv = comdat any

$_ZNK6b2AABB10GetExtentsEv = comdat any

$_ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi = comdat any

$_ZN15b2RayCastOutputC2Ev = comdat any

$_ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi = comdat any

$_ZN7b2ColorC2Effff = comdat any

$_ZN6b2Body14GetFixtureListEv = comdat any

$_ZN9b2Fixture7GetNextEv = comdat any

$_ZN7b2Joint7GetNextEv = comdat any

$_ZNK12b2BroadPhase10GetFatAABBEi = comdat any

$_ZNK6b2Body14GetWorldCenterEv = comdat any

$_ZNK12b2BroadPhase13GetProxyCountEv = comdat any

$_ZNK12b2BroadPhase13GetTreeHeightEv = comdat any

$_ZNK12b2BroadPhase14GetTreeBalanceEv = comdat any

$_Z5b2AbsIiET_S0_ = comdat any

$_ZNK12b2BroadPhase14GetTreeQualityEv = comdat any

$_ZN12b2BroadPhase11ShiftOriginERK6b2Vec2 = comdat any

$_ZN6b2DrawD2Ev = comdat any

$_ZN6b2DrawD0Ev = comdat any

$_ZN6b2Vec2clEi = comdat any

$_ZNK6b2Vec2clEi = comdat any

$_Z6b2SwapIfEvRT_S1_ = comdat any

$_ZeqRK6b2Vec2S1_ = comdat any

$_ZNK6b2Vec24SkewEv = comdat any

$_ZN9b2BodyDefC2Ev = comdat any

$_ZTI7b2Joint = comdat any

$_ZTS7b2Joint = comdat any

$_ZTI9b2Contact = comdat any

$_ZTS9b2Contact = comdat any

$_ZTV7b2Shape = comdat any

$_ZTI7b2Shape = comdat any

$_ZTS7b2Shape = comdat any

$_ZTV17b2ContactListener = comdat any

$_ZTI17b2ContactListener = comdat any

$_ZTS17b2ContactListener = comdat any

$_ZTV7b2Joint = comdat any

$_ZTV9b2Contact = comdat any

$_ZTV6b2Draw = comdat any

$_ZTI6b2Draw = comdat any

$_ZTS6b2Draw = comdat any

@_ZTV15b2DistanceJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15b2DistanceJoint to i8*), i8* bitcast (<2 x float> (%class.b2DistanceJoint*)* @_ZNK15b2DistanceJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2DistanceJoint*)* @_ZNK15b2DistanceJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2DistanceJoint*, float)* @_ZNK15b2DistanceJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2DistanceJoint*, float)* @_ZNK15b2DistanceJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2DistanceJoint*)* @_ZN15b2DistanceJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2DistanceJoint*)* @_ZN15b2DistanceJointD2Ev to i8*), i8* bitcast (void (%class.b2DistanceJoint*)* @_ZN15b2DistanceJointD0Ev to i8*), i8* bitcast (void (%class.b2DistanceJoint*, %struct.b2SolverData*)* @_ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2DistanceJoint*, %struct.b2SolverData*)* @_ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2DistanceJoint*, %struct.b2SolverData*)* @_ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI15b2DistanceJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS15b2DistanceJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS15b2DistanceJoint = constant [18 x i8] c"15b2DistanceJoint\00"
@_ZTI7b2Joint = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZTS7b2Joint, i32 0, i32 0) }, comdat
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS7b2Joint = linkonce_odr constant [9 x i8] c"7b2Joint\00", comdat
@.str = private unnamed_addr constant [26 x i8] c"  b2DistanceJointDef jd;\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"  jd.length = %.15lef;\0A\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"  jd.frequencyHz = %.15lef;\0A\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"  jd.dampingRatio = %.15lef;\0A\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV15b2FrictionJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15b2FrictionJoint to i8*), i8* bitcast (<2 x float> (%class.b2FrictionJoint*)* @_ZNK15b2FrictionJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2FrictionJoint*)* @_ZNK15b2FrictionJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2FrictionJoint*, float)* @_ZNK15b2FrictionJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2FrictionJoint*, float)* @_ZNK15b2FrictionJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2FrictionJoint*)* @_ZN15b2FrictionJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2FrictionJoint*)* @_ZN15b2FrictionJointD2Ev to i8*), i8* bitcast (void (%class.b2FrictionJoint*)* @_ZN15b2FrictionJointD0Ev to i8*), i8* bitcast (void (%class.b2FrictionJoint*, %struct.b2SolverData*)* @_ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2FrictionJoint*, %struct.b2SolverData*)* @_ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2FrictionJoint*, %struct.b2SolverData*)* @_ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI15b2FrictionJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS15b2FrictionJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS15b2FrictionJoint = constant [18 x i8] c"15b2FrictionJoint\00"
@.str.3.1 = private unnamed_addr constant [26 x i8] c"  b2FrictionJointDef jd;\0A\00", align 1
@.str.4.2 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.5.3 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.6.4 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.7.5 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.8.6 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.9.7 = private unnamed_addr constant [26 x i8] c"  jd.maxForce = %.15lef;\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"  jd.maxTorque = %.15lef;\0A\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV11b2GearJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI11b2GearJoint to i8*), i8* bitcast (<2 x float> (%class.b2GearJoint*)* @_ZNK11b2GearJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2GearJoint*)* @_ZNK11b2GearJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2GearJoint*, float)* @_ZNK11b2GearJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2GearJoint*, float)* @_ZNK11b2GearJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2GearJoint*)* @_ZN11b2GearJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2GearJoint*)* @_ZN11b2GearJointD2Ev to i8*), i8* bitcast (void (%class.b2GearJoint*)* @_ZN11b2GearJointD0Ev to i8*), i8* bitcast (void (%class.b2GearJoint*, %struct.b2SolverData*)* @_ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2GearJoint*, %struct.b2SolverData*)* @_ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2GearJoint*, %struct.b2SolverData*)* @_ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI11b2GearJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS11b2GearJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS11b2GearJoint = constant [14 x i8] c"11b2GearJoint\00"
@.str.4.15 = private unnamed_addr constant [22 x i8] c"  b2GearJointDef jd;\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"  jd.joint1 = joints[%d];\0A\00", align 1
@.str.9.20 = private unnamed_addr constant [27 x i8] c"  jd.joint2 = joints[%d];\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [23 x i8] c"  jd.ratio = %.15lef;\0A\00", align 1
@.str.11.22 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV12b2MotorJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI12b2MotorJoint to i8*), i8* bitcast (<2 x float> (%class.b2MotorJoint*)* @_ZNK12b2MotorJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2MotorJoint*)* @_ZNK12b2MotorJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2MotorJoint*, float)* @_ZNK12b2MotorJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2MotorJoint*, float)* @_ZNK12b2MotorJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2MotorJoint*)* @_ZN12b2MotorJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2MotorJoint*)* @_ZN12b2MotorJointD2Ev to i8*), i8* bitcast (void (%class.b2MotorJoint*)* @_ZN12b2MotorJointD0Ev to i8*), i8* bitcast (void (%class.b2MotorJoint*, %struct.b2SolverData*)* @_ZN12b2MotorJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2MotorJoint*, %struct.b2SolverData*)* @_ZN12b2MotorJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2MotorJoint*, %struct.b2SolverData*)* @_ZN12b2MotorJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI12b2MotorJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTS12b2MotorJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS12b2MotorJoint = constant [15 x i8] c"12b2MotorJoint\00"
@.str.4.33 = private unnamed_addr constant [23 x i8] c"  b2MotorJointDef jd;\0A\00", align 1
@.str.5.34 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.6.35 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.7.36 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.8.37 = private unnamed_addr constant [42 x i8] c"  jd.linearOffset.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.9.38 = private unnamed_addr constant [31 x i8] c"  jd.angularOffset = %.15lef;\0A\00", align 1
@.str.10.39 = private unnamed_addr constant [26 x i8] c"  jd.maxForce = %.15lef;\0A\00", align 1
@.str.11.40 = private unnamed_addr constant [27 x i8] c"  jd.maxTorque = %.15lef;\0A\00", align 1
@.str.12.41 = private unnamed_addr constant [34 x i8] c"  jd.correctionFactor = %.15lef;\0A\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV12b2MouseJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI12b2MouseJoint to i8*), i8* bitcast (<2 x float> (%class.b2MouseJoint*)* @_ZNK12b2MouseJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2MouseJoint*)* @_ZNK12b2MouseJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2MouseJoint*, float)* @_ZNK12b2MouseJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2MouseJoint*, float)* @_ZNK12b2MouseJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2MouseJoint*)* @_ZN12b2MouseJoint4DumpEv to i8*), i8* bitcast (void (%class.b2MouseJoint*, %struct.b2Vec2*)* @_ZN12b2MouseJoint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2MouseJoint*)* @_ZN12b2MouseJointD2Ev to i8*), i8* bitcast (void (%class.b2MouseJoint*)* @_ZN12b2MouseJointD0Ev to i8*), i8* bitcast (void (%class.b2MouseJoint*, %struct.b2SolverData*)* @_ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2MouseJoint*, %struct.b2SolverData*)* @_ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2MouseJoint*, %struct.b2SolverData*)* @_ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI12b2MouseJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTS12b2MouseJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS12b2MouseJoint = constant [15 x i8] c"12b2MouseJoint\00"
@.str.6.48 = private unnamed_addr constant [39 x i8] c"Mouse joint dumping is not supported.\0A\00", align 1
@.str.5.49 = private unnamed_addr constant [27 x i8] c"d + h * k > 1.19209290e-7F\00", align 1
@.str.1.50 = private unnamed_addr constant [83 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2MouseJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData = private unnamed_addr constant [73 x i8] c"virtual void b2MouseJoint::InitVelocityConstraints(const b2SolverData &)\00", align 1
@_ZTV16b2PrismaticJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16b2PrismaticJoint to i8*), i8* bitcast (<2 x float> (%class.b2PrismaticJoint*)* @_ZNK16b2PrismaticJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2PrismaticJoint*)* @_ZNK16b2PrismaticJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2PrismaticJoint*, float)* @_ZNK16b2PrismaticJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2PrismaticJoint*, float)* @_ZNK16b2PrismaticJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2PrismaticJoint*)* @_ZN16b2PrismaticJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2PrismaticJoint*)* @_ZN16b2PrismaticJointD2Ev to i8*), i8* bitcast (void (%class.b2PrismaticJoint*)* @_ZN16b2PrismaticJointD0Ev to i8*), i8* bitcast (void (%class.b2PrismaticJoint*, %struct.b2SolverData*)* @_ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2PrismaticJoint*, %struct.b2SolverData*)* @_ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2PrismaticJoint*, %struct.b2SolverData*)* @_ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI16b2PrismaticJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16b2PrismaticJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS16b2PrismaticJoint = constant [19 x i8] c"16b2PrismaticJoint\00"
@.str.2.57 = private unnamed_addr constant [27 x i8] c"  b2PrismaticJointDef jd;\0A\00", align 1
@.str.3.58 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.4.59 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.5.60 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.6.61 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.7.62 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.8.63 = private unnamed_addr constant [40 x i8] c"  jd.localAxisA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.9.64 = private unnamed_addr constant [32 x i8] c"  jd.referenceAngle = %.15lef;\0A\00", align 1
@.str.10.65 = private unnamed_addr constant [30 x i8] c"  jd.enableLimit = bool(%d);\0A\00", align 1
@.str.11.66 = private unnamed_addr constant [34 x i8] c"  jd.lowerTranslation = %.15lef;\0A\00", align 1
@.str.12.67 = private unnamed_addr constant [34 x i8] c"  jd.upperTranslation = %.15lef;\0A\00", align 1
@.str.13.68 = private unnamed_addr constant [30 x i8] c"  jd.enableMotor = bool(%d);\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"  jd.motorSpeed = %.15lef;\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"  jd.maxMotorForce = %.15lef;\0A\00", align 1
@.str.16 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV13b2PulleyJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13b2PulleyJoint to i8*), i8* bitcast (<2 x float> (%class.b2PulleyJoint*)* @_ZNK13b2PulleyJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2PulleyJoint*)* @_ZNK13b2PulleyJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2PulleyJoint*, float)* @_ZNK13b2PulleyJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2PulleyJoint*, float)* @_ZNK13b2PulleyJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2PulleyJoint*)* @_ZN13b2PulleyJoint4DumpEv to i8*), i8* bitcast (void (%class.b2PulleyJoint*, %struct.b2Vec2*)* @_ZN13b2PulleyJoint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2PulleyJoint*)* @_ZN13b2PulleyJointD2Ev to i8*), i8* bitcast (void (%class.b2PulleyJoint*)* @_ZN13b2PulleyJointD0Ev to i8*), i8* bitcast (void (%class.b2PulleyJoint*, %struct.b2SolverData*)* @_ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2PulleyJoint*, %struct.b2SolverData*)* @_ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2PulleyJoint*, %struct.b2SolverData*)* @_ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI13b2PulleyJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZTS13b2PulleyJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS13b2PulleyJoint = constant [16 x i8] c"13b2PulleyJoint\00"
@.str.3.73 = private unnamed_addr constant [24 x i8] c"  b2PulleyJointDef jd;\0A\00", align 1
@.str.4.74 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.5.75 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.6.76 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.7.77 = private unnamed_addr constant [43 x i8] c"  jd.groundAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.8.78 = private unnamed_addr constant [43 x i8] c"  jd.groundAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.9.79 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.10.80 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.11.81 = private unnamed_addr constant [25 x i8] c"  jd.lengthA = %.15lef;\0A\00", align 1
@.str.12.82 = private unnamed_addr constant [25 x i8] c"  jd.lengthB = %.15lef;\0A\00", align 1
@.str.13.83 = private unnamed_addr constant [23 x i8] c"  jd.ratio = %.15lef;\0A\00", align 1
@.str.14.84 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV15b2RevoluteJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15b2RevoluteJoint to i8*), i8* bitcast (<2 x float> (%class.b2RevoluteJoint*)* @_ZNK15b2RevoluteJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2RevoluteJoint*)* @_ZNK15b2RevoluteJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2RevoluteJoint*, float)* @_ZNK15b2RevoluteJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2RevoluteJoint*, float)* @_ZNK15b2RevoluteJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2RevoluteJoint*)* @_ZN15b2RevoluteJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2RevoluteJoint*)* @_ZN15b2RevoluteJointD2Ev to i8*), i8* bitcast (void (%class.b2RevoluteJoint*)* @_ZN15b2RevoluteJointD0Ev to i8*), i8* bitcast (void (%class.b2RevoluteJoint*, %struct.b2SolverData*)* @_ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2RevoluteJoint*, %struct.b2SolverData*)* @_ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2RevoluteJoint*, %struct.b2SolverData*)* @_ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI15b2RevoluteJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS15b2RevoluteJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS15b2RevoluteJoint = constant [18 x i8] c"15b2RevoluteJoint\00"
@.str.2.90 = private unnamed_addr constant [26 x i8] c"  b2RevoluteJointDef jd;\0A\00", align 1
@.str.3.91 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.4.92 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [32 x i8] c"  jd.referenceAngle = %.15lef;\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [30 x i8] c"  jd.enableLimit = bool(%d);\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [28 x i8] c"  jd.lowerAngle = %.15lef;\0A\00", align 1
@.str.11.99 = private unnamed_addr constant [28 x i8] c"  jd.upperAngle = %.15lef;\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [30 x i8] c"  jd.enableMotor = bool(%d);\0A\00", align 1
@.str.13.101 = private unnamed_addr constant [28 x i8] c"  jd.motorSpeed = %.15lef;\0A\00", align 1
@.str.14.102 = private unnamed_addr constant [32 x i8] c"  jd.maxMotorTorque = %.15lef;\0A\00", align 1
@.str.15.103 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV11b2RopeJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI11b2RopeJoint to i8*), i8* bitcast (<2 x float> (%class.b2RopeJoint*)* @_ZNK11b2RopeJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2RopeJoint*)* @_ZNK11b2RopeJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2RopeJoint*, float)* @_ZNK11b2RopeJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2RopeJoint*, float)* @_ZNK11b2RopeJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2RopeJoint*)* @_ZN11b2RopeJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2RopeJoint*)* @_ZN11b2RopeJointD2Ev to i8*), i8* bitcast (void (%class.b2RopeJoint*)* @_ZN11b2RopeJointD0Ev to i8*), i8* bitcast (void (%class.b2RopeJoint*, %struct.b2SolverData*)* @_ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2RopeJoint*, %struct.b2SolverData*)* @_ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2RopeJoint*, %struct.b2SolverData*)* @_ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI11b2RopeJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS11b2RopeJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS11b2RopeJoint = constant [14 x i8] c"11b2RopeJoint\00"
@.str.108 = private unnamed_addr constant [22 x i8] c"  b2RopeJointDef jd;\0A\00", align 1
@.str.1.109 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.2.110 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.3.111 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.4.112 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.5.113 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.6.114 = private unnamed_addr constant [27 x i8] c"  jd.maxLength = %.15lef;\0A\00", align 1
@.str.7.115 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV11b2WeldJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI11b2WeldJoint to i8*), i8* bitcast (<2 x float> (%class.b2WeldJoint*)* @_ZNK11b2WeldJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2WeldJoint*)* @_ZNK11b2WeldJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2WeldJoint*, float)* @_ZNK11b2WeldJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2WeldJoint*, float)* @_ZNK11b2WeldJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2WeldJoint*)* @_ZN11b2WeldJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2WeldJoint*)* @_ZN11b2WeldJointD2Ev to i8*), i8* bitcast (void (%class.b2WeldJoint*)* @_ZN11b2WeldJointD0Ev to i8*), i8* bitcast (void (%class.b2WeldJoint*, %struct.b2SolverData*)* @_ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2WeldJoint*, %struct.b2SolverData*)* @_ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2WeldJoint*, %struct.b2SolverData*)* @_ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI11b2WeldJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS11b2WeldJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS11b2WeldJoint = constant [14 x i8] c"11b2WeldJoint\00"
@.str.118 = private unnamed_addr constant [22 x i8] c"  b2WeldJointDef jd;\0A\00", align 1
@.str.1.119 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.2.120 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.3.121 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.4.122 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.5.123 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.6.124 = private unnamed_addr constant [32 x i8] c"  jd.referenceAngle = %.15lef;\0A\00", align 1
@.str.7.125 = private unnamed_addr constant [29 x i8] c"  jd.frequencyHz = %.15lef;\0A\00", align 1
@.str.8.126 = private unnamed_addr constant [30 x i8] c"  jd.dampingRatio = %.15lef;\0A\00", align 1
@.str.9.127 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV12b2WheelJoint = unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI12b2WheelJoint to i8*), i8* bitcast (<2 x float> (%class.b2WheelJoint*)* @_ZNK12b2WheelJoint10GetAnchorAEv to i8*), i8* bitcast (<2 x float> (%class.b2WheelJoint*)* @_ZNK12b2WheelJoint10GetAnchorBEv to i8*), i8* bitcast (<2 x float> (%class.b2WheelJoint*, float)* @_ZNK12b2WheelJoint16GetReactionForceEf to i8*), i8* bitcast (float (%class.b2WheelJoint*, float)* @_ZNK12b2WheelJoint17GetReactionTorqueEf to i8*), i8* bitcast (void (%class.b2WheelJoint*)* @_ZN12b2WheelJoint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2WheelJoint*)* @_ZN12b2WheelJointD2Ev to i8*), i8* bitcast (void (%class.b2WheelJoint*)* @_ZN12b2WheelJointD0Ev to i8*), i8* bitcast (void (%class.b2WheelJoint*, %struct.b2SolverData*)* @_ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (void (%class.b2WheelJoint*, %struct.b2SolverData*)* @_ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData to i8*), i8* bitcast (i1 (%class.b2WheelJoint*, %struct.b2SolverData*)* @_ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData to i8*)], align 8
@_ZTI12b2WheelJoint = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTS12b2WheelJoint, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*) }
@_ZTS12b2WheelJoint = constant [15 x i8] c"12b2WheelJoint\00"
@.str.130 = private unnamed_addr constant [23 x i8] c"  b2WheelJointDef jd;\0A\00", align 1
@.str.1.131 = private unnamed_addr constant [26 x i8] c"  jd.bodyA = bodies[%d];\0A\00", align 1
@.str.2.132 = private unnamed_addr constant [26 x i8] c"  jd.bodyB = bodies[%d];\0A\00", align 1
@.str.3.133 = private unnamed_addr constant [35 x i8] c"  jd.collideConnected = bool(%d);\0A\00", align 1
@.str.4.134 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.5.135 = private unnamed_addr constant [42 x i8] c"  jd.localAnchorB.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.6.136 = private unnamed_addr constant [40 x i8] c"  jd.localAxisA.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.7.137 = private unnamed_addr constant [30 x i8] c"  jd.enableMotor = bool(%d);\0A\00", align 1
@.str.8.138 = private unnamed_addr constant [28 x i8] c"  jd.motorSpeed = %.15lef;\0A\00", align 1
@.str.9.139 = private unnamed_addr constant [32 x i8] c"  jd.maxMotorTorque = %.15lef;\0A\00", align 1
@.str.10.140 = private unnamed_addr constant [29 x i8] c"  jd.frequencyHz = %.15lef;\0A\00", align 1
@.str.11.141 = private unnamed_addr constant [30 x i8] c"  jd.dampingRatio = %.15lef;\0A\00", align 1
@.str.12.142 = private unnamed_addr constant [43 x i8] c"  joints[%d] = m_world->CreateJoint(&jd);\0A\00", align 1
@_ZTV15b2CircleContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15b2CircleContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN15b2CircleContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN15b2CircleContactD0Ev to i8*)], align 8
@_ZTI15b2CircleContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS15b2CircleContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS15b2CircleContact = constant [18 x i8] c"15b2CircleContact\00"
@_ZTI9b2Contact = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZTS9b2Contact, i32 0, i32 0) }, comdat
@_ZTS9b2Contact = linkonce_odr constant [11 x i8] c"9b2Contact\00", comdat
@_ZN9b2Contact11s_registersE = global [4 x [4 x %struct.b2ContactRegister]] zeroinitializer, align 16
@_ZN9b2Contact13s_initializedE = global i8 0, align 1
@g_blockSolve = global i8 1, align 1
@_ZTV25b2PolygonAndCircleContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI25b2PolygonAndCircleContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN25b2PolygonAndCircleContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN25b2PolygonAndCircleContactD0Ev to i8*)], align 8
@_ZTI25b2PolygonAndCircleContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTS25b2PolygonAndCircleContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS25b2PolygonAndCircleContact = constant [28 x i8] c"25b2PolygonAndCircleContact\00"
@_ZTV22b2EdgeAndCircleContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI22b2EdgeAndCircleContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN22b2EdgeAndCircleContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN22b2EdgeAndCircleContactD0Ev to i8*)], align 8
@_ZTI22b2EdgeAndCircleContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS22b2EdgeAndCircleContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS22b2EdgeAndCircleContact = constant [25 x i8] c"22b2EdgeAndCircleContact\00"
@.str.399 = private unnamed_addr constant [11 x i8] c"den > 0.0f\00", align 1
@.str.1.400 = private unnamed_addr constant [78 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2CollideEdge.cpp\00", align 1
@__PRETTY_FUNCTION__._Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_ = private unnamed_addr constant [128 x i8] c"void b2CollideEdgeAndCircle(b2Manifold *, const b2EdgeShape *, const b2Transform &, const b2CircleShape *, const b2Transform &)\00", align 1
@_ZTV23b2EdgeAndPolygonContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI23b2EdgeAndPolygonContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN23b2EdgeAndPolygonContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN23b2EdgeAndPolygonContactD0Ev to i8*)], align 8
@_ZTI23b2EdgeAndPolygonContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS23b2EdgeAndPolygonContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS23b2EdgeAndPolygonContact = constant [26 x i8] c"23b2EdgeAndPolygonContact\00"
@_ZTV23b2ChainAndCircleContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI23b2ChainAndCircleContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN23b2ChainAndCircleContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN23b2ChainAndCircleContactD0Ev to i8*)], align 8
@_ZTI23b2ChainAndCircleContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS23b2ChainAndCircleContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS23b2ChainAndCircleContact = constant [26 x i8] c"23b2ChainAndCircleContact\00"
@_ZTV7b2Shape = linkonce_odr unnamed_addr constant [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI7b2Shape to i8*), i8* bitcast (void (%class.b2Shape*)* @_ZN7b2ShapeD2Ev to i8*), i8* bitcast (void (%class.b2Shape*)* @_ZN7b2ShapeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], comdat, align 8
@_ZTI7b2Shape = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZTS7b2Shape, i32 0, i32 0) }, comdat
@_ZTS7b2Shape = linkonce_odr constant [9 x i8] c"7b2Shape\00", comdat
@_ZTV11b2EdgeShape = unnamed_addr constant [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI11b2EdgeShape to i8*), i8* bitcast (void (%class.b2EdgeShape*)* @_ZN11b2EdgeShapeD2Ev to i8*), i8* bitcast (void (%class.b2EdgeShape*)* @_ZN11b2EdgeShapeD0Ev to i8*), i8* bitcast (%class.b2Shape* (%class.b2EdgeShape*, %class.b2BlockAllocator*)* @_ZNK11b2EdgeShape5CloneEP16b2BlockAllocator to i8*), i8* bitcast (i32 (%class.b2EdgeShape*)* @_ZNK11b2EdgeShape13GetChildCountEv to i8*), i8* bitcast (i1 (%class.b2EdgeShape*, %struct.b2Transform*, %struct.b2Vec2*)* @_ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2 to i8*), i8* bitcast (i1 (%class.b2EdgeShape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)* @_ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi to i8*), i8* bitcast (void (%class.b2EdgeShape*, %struct.b2Transform*, %struct.b2Transform*, i32)* @_ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi to i8*), i8* bitcast (void (%class.b2EdgeShape*, %struct.b2MassData*, float)* @_ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf to i8*)], align 8
@_ZTI11b2EdgeShape = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS11b2EdgeShape, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Shape to i8*) }
@_ZTS11b2EdgeShape = constant [14 x i8] c"11b2EdgeShape\00"
@.str.2.310 = private unnamed_addr constant [9 x i8] c"0 < size\00", align 1
@.str.1.307 = private unnamed_addr constant [78 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Common/b2BlockAllocator.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN16b2BlockAllocator8AllocateEi = private unnamed_addr constant [40 x i8] c"void *b2BlockAllocator::Allocate(int32)\00", align 1
@_ZN16b2BlockAllocator17s_blockSizeLookupE = global [641 x i8] zeroinitializer, align 16
@.str.3.311 = private unnamed_addr constant [36 x i8] c"0 <= index && index < b2_blockSizes\00", align 1
@_ZN16b2BlockAllocator12s_blockSizesE = global [14 x i32] [i32 16, i32 32, i32 64, i32 96, i32 128, i32 160, i32 192, i32 224, i32 256, i32 320, i32 384, i32 448, i32 512, i32 640], align 16
@.str.4.312 = private unnamed_addr constant [39 x i8] c"blockCount * blockSize <= b2_chunkSize\00", align 1
@.str.6.370 = private unnamed_addr constant [34 x i8] c"0 <= index && index < m_count - 1\00", align 1
@.str.1.362 = private unnamed_addr constant [84 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/Shapes/b2ChainShape.cpp\00", align 1
@__PRETTY_FUNCTION__._ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei = private unnamed_addr constant [60 x i8] c"void b2ChainShape::GetChildEdge(b2EdgeShape *, int32) const\00", align 1
@_ZTV24b2ChainAndPolygonContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI24b2ChainAndPolygonContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN24b2ChainAndPolygonContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN24b2ChainAndPolygonContactD0Ev to i8*)], align 8
@_ZTI24b2ChainAndPolygonContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTS24b2ChainAndPolygonContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS24b2ChainAndPolygonContact = constant [27 x i8] c"24b2ChainAndPolygonContact\00"
@_ZTV16b2PolygonContact = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16b2PolygonContact to i8*), i8* bitcast (void (%class.b2CircleContact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)* @_ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_ to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN16b2PolygonContactD2Ev to i8*), i8* bitcast (void (%class.b2CircleContact*)* @_ZN16b2PolygonContactD0Ev to i8*)], align 8
@_ZTI16b2PolygonContact = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16b2PolygonContact, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*) }
@_ZTS16b2PolygonContact = constant [19 x i8] c"16b2PolygonContact\00"
@.str.405 = private unnamed_addr constant [37 x i8] c"0 <= edge1 && edge1 < poly1->m_count\00", align 1
@.str.1.406 = private unnamed_addr constant [81 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2CollidePolygon.cpp\00", align 1
@__PRETTY_FUNCTION__._ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_ = private unnamed_addr constant [137 x i8] c"void b2FindIncidentEdge(b2ClipVertex *, const b2PolygonShape *, const b2Transform &, int32, const b2PolygonShape *, const b2Transform &)\00", align 1
@b2_defaultFilter = global %class.b2ContactFilter zeroinitializer, align 8
@b2_defaultListener = global %class.b2ContactFilter zeroinitializer, align 8
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_b2ContactManager.cpp, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_b2Math.cpp, i8* null }]
@_ZTV15b2ContactFilter = unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI15b2ContactFilter to i8*), i8* bitcast (void (%class.b2ContactFilter*)* @_ZN15b2ContactFilterD2Ev to i8*), i8* bitcast (void (%class.b2ContactFilter*)* @_ZN15b2ContactFilterD0Ev to i8*), i8* bitcast (i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)* @_ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_ to i8*)], align 8
@_ZTI15b2ContactFilter = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS15b2ContactFilter, i32 0, i32 0) }
@_ZTS15b2ContactFilter = constant [18 x i8] c"15b2ContactFilter\00"
@_ZTV17b2ContactListener = linkonce_odr unnamed_addr constant [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI17b2ContactListener to i8*), i8* bitcast (void (%class.b2ContactFilter*)* @_ZN17b2ContactListenerD2Ev to i8*), i8* bitcast (void (%class.b2ContactFilter*)* @_ZN17b2ContactListenerD0Ev to i8*), i8* bitcast (void (%class.b2ContactFilter*, %class.b2Contact*)* @_ZN17b2ContactListener12BeginContactEP9b2Contact to i8*), i8* bitcast (void (%class.b2ContactFilter*, %class.b2Contact*)* @_ZN17b2ContactListener10EndContactEP9b2Contact to i8*), i8* bitcast (void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)* @_ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold to i8*), i8* bitcast (void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)* @_ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse to i8*)], comdat, align 8
@_ZTI17b2ContactListener = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17b2ContactListener, i32 0, i32 0) }, comdat
@_ZTS17b2ContactListener = linkonce_odr constant [20 x i8] c"17b2ContactListener\00", comdat
@b2Vec2_zero = global %struct.b2Vec2 zeroinitializer, align 4
@_ZN16b2BlockAllocator28s_blockSizeLookupInitializedE = global i8 0, align 1
@b2_version = global %struct.b2Version { i32 2, i32 3, i32 2 }, align 4
@_ZTV13b2CircleShape = unnamed_addr constant [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13b2CircleShape to i8*), i8* bitcast (void (%class.b2CircleShape*)* @_ZN13b2CircleShapeD2Ev to i8*), i8* bitcast (void (%class.b2CircleShape*)* @_ZN13b2CircleShapeD0Ev to i8*), i8* bitcast (%class.b2Shape* (%class.b2CircleShape*, %class.b2BlockAllocator*)* @_ZNK13b2CircleShape5CloneEP16b2BlockAllocator to i8*), i8* bitcast (i32 (%class.b2CircleShape*)* @_ZNK13b2CircleShape13GetChildCountEv to i8*), i8* bitcast (i1 (%class.b2CircleShape*, %struct.b2Transform*, %struct.b2Vec2*)* @_ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2 to i8*), i8* bitcast (i1 (%class.b2CircleShape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)* @_ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi to i8*), i8* bitcast (void (%class.b2CircleShape*, %struct.b2Transform*, %struct.b2Transform*, i32)* @_ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi to i8*), i8* bitcast (void (%class.b2CircleShape*, %struct.b2MassData*, float)* @_ZNK13b2CircleShape11ComputeMassEP10b2MassDataf to i8*)], align 8
@_ZTI13b2CircleShape = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZTS13b2CircleShape, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Shape to i8*) }
@_ZTS13b2CircleShape = constant [16 x i8] c"13b2CircleShape\00"
@_ZTV12b2ChainShape = unnamed_addr constant [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI12b2ChainShape to i8*), i8* bitcast (void (%class.b2ChainShape*)* @_ZN12b2ChainShapeD1Ev to i8*), i8* bitcast (void (%class.b2ChainShape*)* @_ZN12b2ChainShapeD0Ev to i8*), i8* bitcast (%class.b2Shape* (%class.b2ChainShape*, %class.b2BlockAllocator*)* @_ZNK12b2ChainShape5CloneEP16b2BlockAllocator to i8*), i8* bitcast (i32 (%class.b2ChainShape*)* @_ZNK12b2ChainShape13GetChildCountEv to i8*), i8* bitcast (i1 (%class.b2ChainShape*, %struct.b2Transform*, %struct.b2Vec2*)* @_ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2 to i8*), i8* bitcast (i1 (%class.b2ChainShape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)* @_ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi to i8*), i8* bitcast (void (%class.b2ChainShape*, %struct.b2Transform*, %struct.b2Transform*, i32)* @_ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi to i8*), i8* bitcast (void (%class.b2ChainShape*, %struct.b2MassData*, float)* @_ZNK12b2ChainShape11ComputeMassEP10b2MassDataf to i8*)], align 8
@_ZTI12b2ChainShape = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTS12b2ChainShape, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Shape to i8*) }
@_ZTS12b2ChainShape = constant [15 x i8] c"12b2ChainShape\00"
@.str.361 = private unnamed_addr constant [37 x i8] c"m_vertices == __null && m_count == 0\00", align 1
@__PRETTY_FUNCTION__._ZN12b2ChainShape11CreateChainEPK6b2Vec2i = private unnamed_addr constant [54 x i8] c"void b2ChainShape::CreateChain(const b2Vec2 *, int32)\00", align 1
@.str.4.363 = private unnamed_addr constant [11 x i8] c"count >= 2\00", align 1
@.str.5.364 = private unnamed_addr constant [64 x i8] c"b2DistanceSquared(vertices[i-1], vertices[i]) > 0.005f * 0.005f\00", align 1
@.str.7.365 = private unnamed_addr constant [21 x i8] c"childIndex < m_count\00", align 1
@__PRETTY_FUNCTION__._ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi = private unnamed_addr constant [112 x i8] c"virtual bool b2ChainShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const\00", align 1
@__PRETTY_FUNCTION__._ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi = private unnamed_addr constant [83 x i8] c"virtual void b2ChainShape::ComputeAABB(b2AABB *, const b2Transform &, int32) const\00", align 1
@_ZTV14b2PolygonShape = unnamed_addr constant [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI14b2PolygonShape to i8*), i8* bitcast (void (%class.b2PolygonShape*)* @_ZN14b2PolygonShapeD2Ev to i8*), i8* bitcast (void (%class.b2PolygonShape*)* @_ZN14b2PolygonShapeD0Ev to i8*), i8* bitcast (%class.b2Shape* (%class.b2PolygonShape*, %class.b2BlockAllocator*)* @_ZNK14b2PolygonShape5CloneEP16b2BlockAllocator to i8*), i8* bitcast (i32 (%class.b2PolygonShape*)* @_ZNK14b2PolygonShape13GetChildCountEv to i8*), i8* bitcast (i1 (%class.b2PolygonShape*, %struct.b2Transform*, %struct.b2Vec2*)* @_ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2 to i8*), i8* bitcast (i1 (%class.b2PolygonShape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)* @_ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi to i8*), i8* bitcast (void (%class.b2PolygonShape*, %struct.b2Transform*, %struct.b2Transform*, i32)* @_ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi to i8*), i8* bitcast (void (%class.b2PolygonShape*, %struct.b2MassData*, float)* @_ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf to i8*)], align 8
@_ZTI14b2PolygonShape = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS14b2PolygonShape, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI7b2Shape to i8*) }
@_ZTS14b2PolygonShape = constant [17 x i8] c"14b2PolygonShape\00"
@.str.4.371 = private unnamed_addr constant [44 x i8] c"0.0f <= lower && lower <= input.maxFraction\00", align 1
@.str.1.372 = private unnamed_addr constant [86 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/Shapes/b2PolygonShape.cpp\00", align 1
@__PRETTY_FUNCTION__._ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi = private unnamed_addr constant [114 x i8] c"virtual bool b2PolygonShape::RayCast(b2RayCastOutput *, const b2RayCastInput &, const b2Transform &, int32) const\00", align 1
@.str.5.373 = private unnamed_addr constant [13 x i8] c"m_count >= 3\00", align 1
@__PRETTY_FUNCTION__._ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf = private unnamed_addr constant [70 x i8] c"virtual void b2PolygonShape::ComputeMass(b2MassData *, float32) const\00", align 1
@.str.6.374 = private unnamed_addr constant [22 x i8] c"area > 1.19209290e-7F\00", align 1
@b2_gjkCalls = global i32 0, align 4
@b2_gjkIters = global i32 0, align 4
@b2_gjkMaxIters = global i32 0, align 4
@b2_toiTime = global float 0.000000e+00, align 4
@b2_toiMaxTime = global float 0.000000e+00, align 4
@b2_toiCalls = global i32 0, align 4
@b2_toiIters = global i32 0, align 4
@b2_toiMaxIters = global i32 0, align 4
@b2_toiRootIters = global i32 0, align 4
@b2_toiMaxRootIters = global i32 0, align 4
@_ZTV7b2Joint = linkonce_odr unnamed_addr constant [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI7b2Joint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.b2Joint*)* @_ZN7b2Joint4DumpEv to i8*), i8* bitcast (void (%class.b2Joint*, %struct.b2Vec2*)* @_ZN7b2Joint11ShiftOriginERK6b2Vec2 to i8*), i8* bitcast (void (%class.b2Joint*)* @_ZN7b2JointD2Ev to i8*), i8* bitcast (void (%class.b2Joint*)* @_ZN7b2JointD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], comdat, align 8
@.str.3.31 = private unnamed_addr constant [47 x i8] c"// Dump is not supported for this joint type.\0A\00", align 1
@.str.2.32 = private unnamed_addr constant [25 x i8] c"def->bodyA != def->bodyB\00", align 1
@.str.1.28 = private unnamed_addr constant [78 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2Joint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN7b2JointC2EPK10b2JointDef = private unnamed_addr constant [37 x i8] c"b2Joint::b2Joint(const b2JointDef *)\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"b2IsValid(force) && force >= 0.0f\00", align 1
@.str.1.13 = private unnamed_addr constant [86 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2FrictionJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN15b2FrictionJoint11SetMaxForceEf = private unnamed_addr constant [43 x i8] c"void b2FrictionJoint::SetMaxForce(float32)\00", align 1
@.str.2.14 = private unnamed_addr constant [36 x i8] c"b2IsValid(torque) && torque >= 0.0f\00", align 1
@__PRETTY_FUNCTION__._ZN15b2FrictionJoint12SetMaxTorqueEf = private unnamed_addr constant [44 x i8] c"void b2FrictionJoint::SetMaxTorque(float32)\00", align 1
@.str.23 = private unnamed_addr constant [58 x i8] c"m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint\00", align 1
@.str.1.24 = private unnamed_addr constant [82 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2GearJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN11b2GearJointC2EPK14b2GearJointDef = private unnamed_addr constant [49 x i8] c"b2GearJoint::b2GearJoint(const b2GearJointDef *)\00", align 1
@.str.2.25 = private unnamed_addr constant [58 x i8] c"m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint\00", align 1
@.str.3.26 = private unnamed_addr constant [17 x i8] c"b2IsValid(ratio)\00", align 1
@__PRETTY_FUNCTION__._ZN11b2GearJoint8SetRatioEf = private unnamed_addr constant [36 x i8] c"void b2GearJoint::SetRatio(float32)\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"def->target.IsValid()\00", align 1
@__PRETTY_FUNCTION__._ZN12b2MouseJointC2EPK15b2MouseJointDef = private unnamed_addr constant [52 x i8] c"b2MouseJoint::b2MouseJoint(const b2MouseJointDef *)\00", align 1
@.str.2.52 = private unnamed_addr constant [50 x i8] c"b2IsValid(def->maxForce) && def->maxForce >= 0.0f\00", align 1
@.str.3.53 = private unnamed_addr constant [56 x i8] c"b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f\00", align 1
@.str.4.54 = private unnamed_addr constant [58 x i8] c"b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f\00", align 1
@.str.2.87 = private unnamed_addr constant [19 x i8] c"def->ratio != 0.0f\00", align 1
@.str.1.86 = private unnamed_addr constant [84 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2PulleyJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN13b2PulleyJointC2EPK16b2PulleyJointDef = private unnamed_addr constant [55 x i8] c"b2PulleyJoint::b2PulleyJoint(const b2PulleyJointDef *)\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@__PRETTY_FUNCTION__._ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator = private unnamed_addr constant [72 x i8] c"static b2Joint *b2Joint::Create(const b2JointDef *, b2BlockAllocator *)\00", align 1
@__PRETTY_FUNCTION__._ZN16b2BlockAllocator4FreeEPvi = private unnamed_addr constant [43 x i8] c"void b2BlockAllocator::Free(void *, int32)\00", align 1
@__PRETTY_FUNCTION__._ZN7b2Joint7DestroyEPS_P16b2BlockAllocator = private unnamed_addr constant [60 x i8] c"static void b2Joint::Destroy(b2Joint *, b2BlockAllocator *)\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"b2IsValid(force) && force >= 0.0f\00", align 1
@.str.1.43 = private unnamed_addr constant [83 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2MotorJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN12b2MotorJoint11SetMaxForceEf = private unnamed_addr constant [40 x i8] c"void b2MotorJoint::SetMaxForce(float32)\00", align 1
@.str.2.44 = private unnamed_addr constant [36 x i8] c"b2IsValid(torque) && torque >= 0.0f\00", align 1
@__PRETTY_FUNCTION__._ZN12b2MotorJoint12SetMaxTorqueEf = private unnamed_addr constant [41 x i8] c"void b2MotorJoint::SetMaxTorque(float32)\00", align 1
@.str.3.45 = private unnamed_addr constant [54 x i8] c"b2IsValid(factor) && 0.0f <= factor && factor <= 1.0f\00", align 1
@__PRETTY_FUNCTION__._ZN12b2MotorJoint19SetCorrectionFactorEf = private unnamed_addr constant [48 x i8] c"void b2MotorJoint::SetCorrectionFactor(float32)\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"lower <= upper\00", align 1
@.str.1.70 = private unnamed_addr constant [87 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN16b2PrismaticJoint9SetLimitsEff = private unnamed_addr constant [51 x i8] c"void b2PrismaticJoint::SetLimits(float32, float32)\00", align 1
@.str.85 = private unnamed_addr constant [23 x i8] c"ratio > 1.19209290e-7F\00", align 1
@__PRETTY_FUNCTION__._ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f = private unnamed_addr constant [127 x i8] c"void b2PulleyJointDef::Initialize(b2Body *, b2Body *, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, const b2Vec2 &, float32)\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"lower <= upper\00", align 1
@.str.1.105 = private unnamed_addr constant [86 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN15b2RevoluteJoint9SetLimitsEff = private unnamed_addr constant [50 x i8] c"void b2RevoluteJoint::SetLimits(float32, float32)\00", align 1
@_ZTV9b2Contact = linkonce_odr unnamed_addr constant [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI9b2Contact to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.b2Contact*)* @_ZN9b2ContactD2Ev to i8*), i8* bitcast (void (%class.b2Contact*)* @_ZN9b2ContactD0Ev to i8*)], comdat, align 8
@.str.145 = private unnamed_addr constant [43 x i8] c"m_fixtureA->GetType() == b2Shape::e_circle\00", align 1
@.str.1.146 = private unnamed_addr constant [88 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2CircleContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN15b2CircleContactC2EP9b2FixtureS1_ = private unnamed_addr constant [59 x i8] c"b2CircleContact::b2CircleContact(b2Fixture *, b2Fixture *)\00", align 1
@.str.2.147 = private unnamed_addr constant [43 x i8] c"m_fixtureB->GetType() == b2Shape::e_circle\00", align 1
@.str.148 = private unnamed_addr constant [43 x i8] c"0 <= type1 && type1 < b2Shape::e_typeCount\00", align 1
@.str.1.149 = private unnamed_addr constant [82 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2Contact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_ = private unnamed_addr constant [106 x i8] c"static void b2Contact::AddType(b2ContactCreateFcn *, b2ContactDestroyFcn *, b2Shape::Type, b2Shape::Type)\00", align 1
@.str.2.150 = private unnamed_addr constant [43 x i8] c"0 <= type2 && type2 < b2Shape::e_typeCount\00", align 1
@.str.163 = private unnamed_addr constant [44 x i8] c"m_fixtureA->GetType() == b2Shape::e_polygon\00", align 1
@.str.1.164 = private unnamed_addr constant [98 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_ = private unnamed_addr constant [79 x i8] c"b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture *, b2Fixture *)\00", align 1
@.str.2.165 = private unnamed_addr constant [43 x i8] c"m_fixtureB->GetType() == b2Shape::e_circle\00", align 1
@.str.198 = private unnamed_addr constant [44 x i8] c"m_fixtureA->GetType() == b2Shape::e_polygon\00", align 1
@.str.1.199 = private unnamed_addr constant [89 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2PolygonContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN16b2PolygonContactC2EP9b2FixtureS1_ = private unnamed_addr constant [61 x i8] c"b2PolygonContact::b2PolygonContact(b2Fixture *, b2Fixture *)\00", align 1
@.str.2.200 = private unnamed_addr constant [44 x i8] c"m_fixtureB->GetType() == b2Shape::e_polygon\00", align 1
@.str.170 = private unnamed_addr constant [41 x i8] c"m_fixtureA->GetType() == b2Shape::e_edge\00", align 1
@.str.1.171 = private unnamed_addr constant [95 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndCircleContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_ = private unnamed_addr constant [73 x i8] c"b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture *, b2Fixture *)\00", align 1
@.str.2.172 = private unnamed_addr constant [43 x i8] c"m_fixtureB->GetType() == b2Shape::e_circle\00", align 1
@.str.177 = private unnamed_addr constant [41 x i8] c"m_fixtureA->GetType() == b2Shape::e_edge\00", align 1
@.str.1.178 = private unnamed_addr constant [96 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndPolygonContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_ = private unnamed_addr constant [75 x i8] c"b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture *, b2Fixture *)\00", align 1
@.str.2.179 = private unnamed_addr constant [44 x i8] c"m_fixtureB->GetType() == b2Shape::e_polygon\00", align 1
@.str.184 = private unnamed_addr constant [42 x i8] c"m_fixtureA->GetType() == b2Shape::e_chain\00", align 1
@.str.1.185 = private unnamed_addr constant [96 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2ChainAndCircleContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i = private unnamed_addr constant [89 x i8] c"b2ChainAndCircleContact::b2ChainAndCircleContact(b2Fixture *, int32, b2Fixture *, int32)\00", align 1
@.str.2.186 = private unnamed_addr constant [43 x i8] c"m_fixtureB->GetType() == b2Shape::e_circle\00", align 1
@.str.191 = private unnamed_addr constant [42 x i8] c"m_fixtureA->GetType() == b2Shape::e_chain\00", align 1
@.str.1.192 = private unnamed_addr constant [97 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2ChainAndPolygonContact.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i = private unnamed_addr constant [91 x i8] c"b2ChainAndPolygonContact::b2ChainAndPolygonContact(b2Fixture *, int32, b2Fixture *, int32)\00", align 1
@.str.2.193 = private unnamed_addr constant [44 x i8] c"m_fixtureB->GetType() == b2Shape::e_polygon\00", align 1
@__PRETTY_FUNCTION__._ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator = private unnamed_addr constant [96 x i8] c"static b2Contact *b2Contact::Create(b2Fixture *, int32, b2Fixture *, int32, b2BlockAllocator *)\00", align 1
@.str.3.151 = private unnamed_addr constant [22 x i8] c"s_initialized == true\00", align 1
@__PRETTY_FUNCTION__._ZN9b2Contact7DestroyEPS_P16b2BlockAllocator = private unnamed_addr constant [64 x i8] c"static void b2Contact::Destroy(b2Contact *, b2BlockAllocator *)\00", align 1
@.str.4.152 = private unnamed_addr constant [43 x i8] c"0 <= typeA && typeB < b2Shape::e_typeCount\00", align 1
@.str.415 = private unnamed_addr constant [37 x i8] c"0 <= index && index < chain->m_count\00", align 1
@.str.1.416 = private unnamed_addr constant [75 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2Distance.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN15b2DistanceProxy3SetEPK7b2Shapei = private unnamed_addr constant [50 x i8] c"void b2DistanceProxy::Set(const b2Shape *, int32)\00", align 1
@.str.2.417 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.3.420 = private unnamed_addr constant [18 x i8] c"cache->count <= 3\00", align 1
@__PRETTY_FUNCTION__._ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_ = private unnamed_addr constant [142 x i8] c"void b2Simplex::ReadCache(const b2SimplexCache *, const b2DistanceProxy *, const b2Transform &, const b2DistanceProxy *, const b2Transform &)\00", align 1
@.str.4.421 = private unnamed_addr constant [30 x i8] c"0 <= index && index < m_count\00", align 1
@.str.5.422 = private unnamed_addr constant [73 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2Distance.h\00", align 1
@__PRETTY_FUNCTION__._ZNK15b2DistanceProxy9GetVertexEi = private unnamed_addr constant [54 x i8] c"const b2Vec2 &b2DistanceProxy::GetVertex(int32) const\00", align 1
@__PRETTY_FUNCTION__._ZNK9b2Simplex9GetMetricEv = private unnamed_addr constant [37 x i8] c"float32 b2Simplex::GetMetric() const\00", align 1
@__PRETTY_FUNCTION__._Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput = private unnamed_addr constant [79 x i8] c"void b2Distance(b2DistanceOutput *, b2SimplexCache *, const b2DistanceInput *)\00", align 1
@__PRETTY_FUNCTION__._ZNK9b2Simplex15GetClosestPointEv = private unnamed_addr constant [42 x i8] c"b2Vec2 b2Simplex::GetClosestPoint() const\00", align 1
@__PRETTY_FUNCTION__._ZNK9b2Simplex18GetSearchDirectionEv = private unnamed_addr constant [45 x i8] c"b2Vec2 b2Simplex::GetSearchDirection() const\00", align 1
@__PRETTY_FUNCTION__._ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_ = private unnamed_addr constant [59 x i8] c"void b2Simplex::GetWitnessPoints(b2Vec2 *, b2Vec2 *) const\00", align 1
@.str.3.344 = private unnamed_addr constant [34 x i8] c"m_entryCount < b2_maxStackEntries\00", align 1
@.str.1.340 = private unnamed_addr constant [78 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Common/b2StackAllocator.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN16b2StackAllocator8AllocateEi = private unnamed_addr constant [40 x i8] c"void *b2StackAllocator::Allocate(int32)\00", align 1
@.str.155 = private unnamed_addr constant [15 x i8] c"pointCount > 0\00", align 1
@.str.1.156 = private unnamed_addr constant [88 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/Contacts/b2ContactSolver.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN15b2ContactSolverC2EP18b2ContactSolverDef = private unnamed_addr constant [55 x i8] c"b2ContactSolver::b2ContactSolver(b2ContactSolverDef *)\00", align 1
@.str.4.347 = private unnamed_addr constant [17 x i8] c"m_entryCount > 0\00", align 1
@__PRETTY_FUNCTION__._ZN16b2StackAllocator4FreeEPv = private unnamed_addr constant [36 x i8] c"void b2StackAllocator::Free(void *)\00", align 1
@.str.5.348 = private unnamed_addr constant [17 x i8] c"p == entry->data\00", align 1
@.str.2.157 = private unnamed_addr constant [25 x i8] c"manifold->pointCount > 0\00", align 1
@__PRETTY_FUNCTION__._ZN15b2ContactSolver29InitializeVelocityConstraintsEv = private unnamed_addr constant [54 x i8] c"void b2ContactSolver::InitializeVelocityConstraints()\00", align 1
@.str.3.158 = private unnamed_addr constant [35 x i8] c"pointCount == 1 || pointCount == 2\00", align 1
@__PRETTY_FUNCTION__._ZN15b2ContactSolver24SolveVelocityConstraintsEv = private unnamed_addr constant [49 x i8] c"void b2ContactSolver::SolveVelocityConstraints()\00", align 1
@.str.4.159 = private unnamed_addr constant [27 x i8] c"a.x >= 0.0f && a.y >= 0.0f\00", align 1
@.str.5.160 = private unnamed_addr constant [19 x i8] c"pc->pointCount > 0\00", align 1
@__PRETTY_FUNCTION__._ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i = private unnamed_addr constant [122 x i8] c"void b2PositionSolverManifold::Initialize(b2ContactPositionConstraint *, const b2Transform &, const b2Transform &, int32)\00", align 1
@.str.203 = private unnamed_addr constant [23 x i8] c"bd->position.IsValid()\00", align 1
@.str.1.204 = private unnamed_addr constant [70 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/b2Body.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World = private unnamed_addr constant [45 x i8] c"b2Body::b2Body(const b2BodyDef *, b2World *)\00", align 1
@.str.2.205 = private unnamed_addr constant [29 x i8] c"bd->linearVelocity.IsValid()\00", align 1
@.str.3.206 = private unnamed_addr constant [21 x i8] c"b2IsValid(bd->angle)\00", align 1
@.str.4.207 = private unnamed_addr constant [31 x i8] c"b2IsValid(bd->angularVelocity)\00", align 1
@.str.5.208 = private unnamed_addr constant [60 x i8] c"b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f\00", align 1
@.str.6.209 = private unnamed_addr constant [58 x i8] c"b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f\00", align 1
@.str.7.210 = private unnamed_addr constant [29 x i8] c"m_world->IsLocked() == false\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body7SetTypeE10b2BodyType = private unnamed_addr constant [33 x i8] c"void b2Body::SetType(b2BodyType)\00", align 1
@.str.11.211 = private unnamed_addr constant [25 x i8] c"m_type == b2_dynamicBody\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body13ResetMassDataEv = private unnamed_addr constant [29 x i8] c"void b2Body::ResetMassData()\00", align 1
@.str.12.212 = private unnamed_addr constant [11 x i8] c"m_I > 0.0f\00", align 1
@.str.4.442 = private unnamed_addr constant [41 x i8] c"0 <= proxyId && proxyId < m_nodeCapacity\00", align 1
@.str.1.424 = private unnamed_addr constant [78 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2DynamicTree.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2 = private unnamed_addr constant [69 x i8] c"bool b2DynamicTree::MoveProxy(int32, const b2AABB &, const b2Vec2 &)\00", align 1
@.str.5.443 = private unnamed_addr constant [26 x i8] c"m_nodes[proxyId].IsLeaf()\00", align 1
@.str.2.425 = private unnamed_addr constant [39 x i8] c"0 <= nodeId && nodeId < m_nodeCapacity\00", align 1
@__PRETTY_FUNCTION__._ZN13b2DynamicTree8FreeNodeEi = private unnamed_addr constant [36 x i8] c"void b2DynamicTree::FreeNode(int32)\00", align 1
@.str.3.426 = private unnamed_addr constant [16 x i8] c"0 < m_nodeCount\00", align 1
@.str.8.429 = private unnamed_addr constant [11 x i8] c"iA != (-1)\00", align 1
@__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi = private unnamed_addr constant [36 x i8] c"int32 b2DynamicTree::Balance(int32)\00", align 1
@.str.9.430 = private unnamed_addr constant [31 x i8] c"0 <= iB && iB < m_nodeCapacity\00", align 1
@.str.10.431 = private unnamed_addr constant [31 x i8] c"0 <= iC && iC < m_nodeCapacity\00", align 1
@.str.11.432 = private unnamed_addr constant [31 x i8] c"0 <= iF && iF < m_nodeCapacity\00", align 1
@.str.12.433 = private unnamed_addr constant [31 x i8] c"0 <= iG && iG < m_nodeCapacity\00", align 1
@.str.13.434 = private unnamed_addr constant [32 x i8] c"m_nodes[C->parent].child2 == iA\00", align 1
@.str.14.435 = private unnamed_addr constant [31 x i8] c"0 <= iD && iD < m_nodeCapacity\00", align 1
@.str.15.436 = private unnamed_addr constant [31 x i8] c"0 <= iE && iE < m_nodeCapacity\00", align 1
@.str.16.437 = private unnamed_addr constant [32 x i8] c"m_nodes[B->parent].child2 == iA\00", align 1
@.str.423 = private unnamed_addr constant [30 x i8] c"m_nodeCount == m_nodeCapacity\00", align 1
@__PRETTY_FUNCTION__._ZN13b2DynamicTree12AllocateNodeEv = private unnamed_addr constant [36 x i8] c"int32 b2DynamicTree::AllocateNode()\00", align 1
@.str.6.438 = private unnamed_addr constant [15 x i8] c"child1 != (-1)\00", align 1
@__PRETTY_FUNCTION__._ZN13b2DynamicTree10InsertLeafEi = private unnamed_addr constant [38 x i8] c"void b2DynamicTree::InsertLeaf(int32)\00", align 1
@.str.7.439 = private unnamed_addr constant [15 x i8] c"child2 != (-1)\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body13CreateFixtureEPK12b2FixtureDef = private unnamed_addr constant [55 x i8] c"b2Fixture *b2Body::CreateFixture(const b2FixtureDef *)\00", align 1
@.str.232 = private unnamed_addr constant [18 x i8] c"m_proxyCount == 0\00", align 1
@.str.1.233 = private unnamed_addr constant [73 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/b2Fixture.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform = private unnamed_addr constant [67 x i8] c"void b2Fixture::CreateProxies(b2BroadPhase *, const b2Transform &)\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body14DestroyFixtureEP9b2Fixture = private unnamed_addr constant [41 x i8] c"void b2Body::DestroyFixture(b2Fixture *)\00", align 1
@.str.8.213 = private unnamed_addr constant [24 x i8] c"fixture->m_body == this\00", align 1
@.str.9.214 = private unnamed_addr constant [19 x i8] c"m_fixtureCount > 0\00", align 1
@.str.10.215 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@__PRETTY_FUNCTION__._ZN13b2DynamicTree12DestroyProxyEi = private unnamed_addr constant [40 x i8] c"void b2DynamicTree::DestroyProxy(int32)\00", align 1
@__PRETTY_FUNCTION__._ZN9b2Fixture7DestroyEP16b2BlockAllocator = private unnamed_addr constant [44 x i8] c"void b2Fixture::Destroy(b2BlockAllocator *)\00", align 1
@.str.2.234 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body11SetMassDataEPK10b2MassData = private unnamed_addr constant [45 x i8] c"void b2Body::SetMassData(const b2MassData *)\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body12SetTransformERK6b2Vec2f = private unnamed_addr constant [51 x i8] c"void b2Body::SetTransform(const b2Vec2 &, float32)\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Body9SetActiveEb = private unnamed_addr constant [29 x i8] c"void b2Body::SetActive(bool)\00", align 1
@.str.13.216 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.14.217 = private unnamed_addr constant [17 x i8] c"  b2BodyDef bd;\0A\00", align 1
@.str.15.218 = private unnamed_addr constant [29 x i8] c"  bd.type = b2BodyType(%d);\0A\00", align 1
@.str.16.219 = private unnamed_addr constant [38 x i8] c"  bd.position.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"  bd.angle = %.15lef;\0A\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"  bd.linearVelocity.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"  bd.angularVelocity = %.15lef;\0A\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"  bd.linearDamping = %.15lef;\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"  bd.angularDamping = %.15lef;\0A\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"  bd.allowSleep = bool(%d);\0A\00", align 1
@.str.23.220 = private unnamed_addr constant [24 x i8] c"  bd.awake = bool(%d);\0A\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"  bd.fixedRotation = bool(%d);\0A\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"  bd.bullet = bool(%d);\0A\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"  bd.active = bool(%d);\0A\00", align 1
@.str.27.221 = private unnamed_addr constant [30 x i8] c"  bd.gravityScale = %.15lef;\0A\00", align 1
@.str.28 = private unnamed_addr constant [42 x i8] c"  bodies[%d] = m_world->CreateBody(&bd);\0A\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"  {\0A\00", align 1
@.str.3.243 = private unnamed_addr constant [22 x i8] c"    b2FixtureDef fd;\0A\00", align 1
@.str.4.244 = private unnamed_addr constant [28 x i8] c"    fd.friction = %.15lef;\0A\00", align 1
@.str.5.245 = private unnamed_addr constant [31 x i8] c"    fd.restitution = %.15lef;\0A\00", align 1
@.str.6.246 = private unnamed_addr constant [27 x i8] c"    fd.density = %.15lef;\0A\00", align 1
@.str.7.247 = private unnamed_addr constant [29 x i8] c"    fd.isSensor = bool(%d);\0A\00", align 1
@.str.8.248 = private unnamed_addr constant [42 x i8] c"    fd.filter.categoryBits = uint16(%d);\0A\00", align 1
@.str.9.249 = private unnamed_addr constant [38 x i8] c"    fd.filter.maskBits = uint16(%d);\0A\00", align 1
@.str.10.250 = private unnamed_addr constant [39 x i8] c"    fd.filter.groupIndex = int16(%d);\0A\00", align 1
@.str.11.251 = private unnamed_addr constant [26 x i8] c"    b2CircleShape shape;\0A\00", align 1
@.str.12.252 = private unnamed_addr constant [31 x i8] c"    shape.m_radius = %.15lef;\0A\00", align 1
@.str.13.253 = private unnamed_addr constant [38 x i8] c"    shape.m_p.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.14.254 = private unnamed_addr constant [24 x i8] c"    b2EdgeShape shape;\0A\00", align 1
@.str.15.255 = private unnamed_addr constant [44 x i8] c"    shape.m_vertex0.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.16.256 = private unnamed_addr constant [44 x i8] c"    shape.m_vertex1.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.17.257 = private unnamed_addr constant [44 x i8] c"    shape.m_vertex2.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.18.258 = private unnamed_addr constant [44 x i8] c"    shape.m_vertex3.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.19.259 = private unnamed_addr constant [36 x i8] c"    shape.m_hasVertex0 = bool(%d);\0A\00", align 1
@.str.20.260 = private unnamed_addr constant [36 x i8] c"    shape.m_hasVertex3 = bool(%d);\0A\00", align 1
@.str.21.261 = private unnamed_addr constant [27 x i8] c"    b2PolygonShape shape;\0A\00", align 1
@.str.22.262 = private unnamed_addr constant [20 x i8] c"    b2Vec2 vs[%d];\0A\00", align 1
@.str.23.263 = private unnamed_addr constant [35 x i8] c"    vs[%d].Set(%.15lef, %.15lef);\0A\00", align 1
@.str.24.264 = private unnamed_addr constant [24 x i8] c"    shape.Set(vs, %d);\0A\00", align 1
@.str.25.265 = private unnamed_addr constant [25 x i8] c"    b2ChainShape shape;\0A\00", align 1
@.str.26.266 = private unnamed_addr constant [32 x i8] c"    shape.CreateChain(vs, %d);\0A\00", align 1
@.str.27.267 = private unnamed_addr constant [47 x i8] c"    shape.m_prevVertex.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.28.268 = private unnamed_addr constant [47 x i8] c"    shape.m_nextVertex.Set(%.15lef, %.15lef);\0A\00", align 1
@.str.29.269 = private unnamed_addr constant [39 x i8] c"    shape.m_hasPrevVertex = bool(%d);\0A\00", align 1
@.str.30.270 = private unnamed_addr constant [39 x i8] c"    shape.m_hasNextVertex = bool(%d);\0A\00", align 1
@.str.31.271 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.272 = private unnamed_addr constant [24 x i8] c"    fd.shape = &shape;\0A\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"    bodies[%d]->CreateFixture(&fd);\0A\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"  }\0A\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.224 = private unnamed_addr constant [41 x i8] c"0 <= proxyId && proxyId < m_nodeCapacity\00", align 1
@.str.2.225 = private unnamed_addr constant [76 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2DynamicTree.h\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree10GetFatAABBEi = private unnamed_addr constant [53 x i8] c"const b2AABB &b2DynamicTree::GetFatAABB(int32) const\00", align 1
@.str.3.226 = private unnamed_addr constant [12 x i8] c"m_count > 0\00", align 1
@.str.4.227 = private unnamed_addr constant [75 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Common/b2GrowableStack.h\00", align 1
@__PRETTY_FUNCTION__._ZN15b2GrowableStackIiLi256EE3PopEv = private unnamed_addr constant [54 x i8] c"T b2GrowableStack<int, 256>::Pop() [T = int, N = 256]\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree11GetUserDataEi = private unnamed_addr constant [46 x i8] c"void *b2DynamicTree::GetUserData(int32) const\00", align 1
@.str.275 = private unnamed_addr constant [24 x i8] c"toiIndexA < m_bodyCount\00", align 1
@.str.1.276 = private unnamed_addr constant [72 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/b2Island.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN8b2Island8SolveTOIERK10b2TimeStepii = private unnamed_addr constant [58 x i8] c"void b2Island::SolveTOI(const b2TimeStep &, int32, int32)\00", align 1
@.str.2.277 = private unnamed_addr constant [24 x i8] c"toiIndexB < m_bodyCount\00", align 1
@.str.306 = private unnamed_addr constant [18 x i8] c"j < b2_blockSizes\00", align 1
@__PRETTY_FUNCTION__._ZN16b2BlockAllocatorC2Ev = private unnamed_addr constant [37 x i8] c"b2BlockAllocator::b2BlockAllocator()\00", align 1
@.str.339 = private unnamed_addr constant [13 x i8] c"m_index == 0\00", align 1
@__PRETTY_FUNCTION__._ZN16b2StackAllocatorD2Ev = private unnamed_addr constant [38 x i8] c"b2StackAllocator::~b2StackAllocator()\00", align 1
@.str.2.341 = private unnamed_addr constant [18 x i8] c"m_entryCount == 0\00", align 1
@.str.278 = private unnamed_addr constant [20 x i8] c"IsLocked() == false\00", align 1
@.str.1.279 = private unnamed_addr constant [71 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/b2World.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World10CreateBodyEPK9b2BodyDef = private unnamed_addr constant [47 x i8] c"b2Body *b2World::CreateBody(const b2BodyDef *)\00", align 1
@.str.2.280 = private unnamed_addr constant [16 x i8] c"m_bodyCount > 0\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World11DestroyBodyEP6b2Body = private unnamed_addr constant [36 x i8] c"void b2World::DestroyBody(b2Body *)\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World12DestroyJointEP7b2Joint = private unnamed_addr constant [38 x i8] c"void b2World::DestroyJoint(b2Joint *)\00", align 1
@.str.3.281 = private unnamed_addr constant [17 x i8] c"m_jointCount > 0\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World11CreateJointEPK10b2JointDef = private unnamed_addr constant [50 x i8] c"b2Joint *b2World::CreateJoint(const b2JointDef *)\00", align 1
@.str.4.282 = private unnamed_addr constant [22 x i8] c"b->IsActive() == true\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World5SolveERK10b2TimeStep = private unnamed_addr constant [40 x i8] c"void b2World::Solve(const b2TimeStep &)\00", align 1
@.str.19.283 = private unnamed_addr constant [29 x i8] c"m_bodyCount < m_bodyCapacity\00", align 1
@.str.20.284 = private unnamed_addr constant [70 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Dynamics/b2Island.h\00", align 1
@__PRETTY_FUNCTION__._ZN8b2Island3AddEP6b2Body = private unnamed_addr constant [29 x i8] c"void b2Island::Add(b2Body *)\00", align 1
@.str.21.285 = private unnamed_addr constant [35 x i8] c"m_contactCount < m_contactCapacity\00", align 1
@__PRETTY_FUNCTION__._ZN8b2Island3AddEP9b2Contact = private unnamed_addr constant [32 x i8] c"void b2Island::Add(b2Contact *)\00", align 1
@.str.5.286 = private unnamed_addr constant [23 x i8] c"stackCount < stackSize\00", align 1
@.str.22.287 = private unnamed_addr constant [31 x i8] c"m_jointCount < m_jointCapacity\00", align 1
@__PRETTY_FUNCTION__._ZN8b2Island3AddEP7b2Joint = private unnamed_addr constant [30 x i8] c"void b2Island::Add(b2Joint *)\00", align 1
@.str.6.288 = private unnamed_addr constant [14 x i8] c"alpha0 < 1.0f\00", align 1
@.str.23.289 = private unnamed_addr constant [66 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Common/b2Math.h\00", align 1
@__PRETTY_FUNCTION__._ZN7b2Sweep7AdvanceEf = private unnamed_addr constant [31 x i8] c"void b2Sweep::Advance(float32)\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World8SolveTOIERK10b2TimeStep = private unnamed_addr constant [43 x i8] c"void b2World::SolveTOI(const b2TimeStep &)\00", align 1
@.str.475 = private unnamed_addr constant [19 x i8] c"target > tolerance\00", align 1
@.str.1.476 = private unnamed_addr constant [79 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2TimeOfImpact.cpp\00", align 1
@__PRETTY_FUNCTION__._Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput = private unnamed_addr constant [55 x i8] c"void b2TimeOfImpact(b2TOIOutput *, const b2TOIInput *)\00", align 1
@.str.2.477 = private unnamed_addr constant [23 x i8] c"0 < count && count < 3\00", align 1
@__PRETTY_FUNCTION__._ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f = private unnamed_addr constant [158 x i8] c"float32 b2SeparationFunction::Initialize(const b2SimplexCache *, const b2DistanceProxy *, const b2Sweep &, const b2DistanceProxy *, const b2Sweep &, float32)\00", align 1
@.str.5.478 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@__PRETTY_FUNCTION__._ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f = private unnamed_addr constant [81 x i8] c"float32 b2SeparationFunction::FindMinSeparation(int32 *, int32 *, float32) const\00", align 1
@__PRETTY_FUNCTION__._ZNK20b2SeparationFunction8EvaluateEiif = private unnamed_addr constant [68 x i8] c"float32 b2SeparationFunction::Evaluate(int32, int32, float32) const\00", align 1
@.str.28.290 = private unnamed_addr constant [25 x i8] c"r.LengthSquared() > 0.0f\00", align 1
@.str.25.291 = private unnamed_addr constant [76 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Collision/b2DynamicTree.h\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput = private unnamed_addr constant [91 x i8] c"void b2DynamicTree::RayCast(T *, const b2RayCastInput &) const [T = b2WorldRayCastWrapper]\00", align 1
@.str.7.292 = private unnamed_addr constant [17 x i8] c"vertexCount <= 8\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color = private unnamed_addr constant [75 x i8] c"void b2World::DrawShape(b2Fixture *, const b2Transform &, const b2Color &)\00", align 1
@.str.31.466 = private unnamed_addr constant [24 x i8] c"node->IsLeaf() == false\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree13GetMaxBalanceEv = private unnamed_addr constant [43 x i8] c"int32 b2DynamicTree::GetMaxBalance() const\00", align 1
@.str.8.293 = private unnamed_addr constant [26 x i8] c"(m_flags & e_locked) == 0\00", align 1
@__PRETTY_FUNCTION__._ZN7b2World11ShiftOriginERK6b2Vec2 = private unnamed_addr constant [42 x i8] c"void b2World::ShiftOrigin(const b2Vec2 &)\00", align 1
@.str.9.294 = private unnamed_addr constant [29 x i8] c"b2Vec2 g(%.15lef, %.15lef);\0A\00", align 1
@.str.10.295 = private unnamed_addr constant [25 x i8] c"m_world->SetGravity(g);\0A\00", align 1
@.str.11.296 = private unnamed_addr constant [60 x i8] c"b2Body** bodies = (b2Body**)b2Alloc(%d * sizeof(b2Body*));\0A\00", align 1
@.str.12.297 = private unnamed_addr constant [63 x i8] c"b2Joint** joints = (b2Joint**)b2Alloc(%d * sizeof(b2Joint*));\0A\00", align 1
@.str.13.298 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.14.299 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.15.300 = private unnamed_addr constant [17 x i8] c"b2Free(joints);\0A\00", align 1
@.str.16.301 = private unnamed_addr constant [17 x i8] c"b2Free(bodies);\0A\00", align 1
@.str.17.302 = private unnamed_addr constant [16 x i8] c"joints = NULL;\0A\00", align 1
@.str.18.303 = private unnamed_addr constant [16 x i8] c"bodies = NULL;\0A\00", align 1
@_ZTV6b2Draw = linkonce_odr unnamed_addr constant [11 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI6b2Draw to i8*), i8* bitcast (void (%class.b2Draw*)* @_ZN6b2DrawD2Ev to i8*), i8* bitcast (void (%class.b2Draw*)* @_ZN6b2DrawD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], comdat, align 8
@_ZTI6b2Draw = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZTS6b2Draw, i32 0, i32 0) }, comdat
@_ZTS6b2Draw = linkonce_odr constant [8 x i8] c"6b2Draw\00", comdat
@__PRETTY_FUNCTION__._ZN12b2ChainShape10CreateLoopEPK6b2Vec2i = private unnamed_addr constant [53 x i8] c"void b2ChainShape::CreateLoop(const b2Vec2 *, int32)\00", align 1
@.str.2.366 = private unnamed_addr constant [11 x i8] c"count >= 3\00", align 1
@.str.3.367 = private unnamed_addr constant [44 x i8] c"b2DistanceSquared(v1, v2) > 0.005f * 0.005f\00", align 1
@.str.375 = private unnamed_addr constant [25 x i8] c"3 <= count && count <= 8\00", align 1
@__PRETTY_FUNCTION__._ZN14b2PolygonShape3SetEPK6b2Vec2i = private unnamed_addr constant [48 x i8] c"void b2PolygonShape::Set(const b2Vec2 *, int32)\00", align 1
@.str.2.376 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.3.377 = private unnamed_addr constant [55 x i8] c"edge.LengthSquared() > 1.19209290e-7F * 1.19209290e-7F\00", align 1
@.str.7.378 = private unnamed_addr constant [11 x i8] c"count >= 3\00", align 1
@__PRETTY_FUNCTION__._ZL15ComputeCentroidPK6b2Vec2i = private unnamed_addr constant [46 x i8] c"b2Vec2 ComputeCentroid(const b2Vec2 *, int32)\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree13ComputeHeightEi = private unnamed_addr constant [48 x i8] c"int32 b2DynamicTree::ComputeHeight(int32) const\00", align 1
@.str.17.450 = private unnamed_addr constant [30 x i8] c"m_nodes[index].parent == (-1)\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi = private unnamed_addr constant [51 x i8] c"void b2DynamicTree::ValidateStructure(int32) const\00", align 1
@.str.18.451 = private unnamed_addr constant [15 x i8] c"child1 == (-1)\00", align 1
@.str.19.452 = private unnamed_addr constant [15 x i8] c"child2 == (-1)\00", align 1
@.str.20.453 = private unnamed_addr constant [18 x i8] c"node->height == 0\00", align 1
@.str.21.454 = private unnamed_addr constant [39 x i8] c"0 <= child1 && child1 < m_nodeCapacity\00", align 1
@.str.22.455 = private unnamed_addr constant [39 x i8] c"0 <= child2 && child2 < m_nodeCapacity\00", align 1
@.str.23.456 = private unnamed_addr constant [32 x i8] c"m_nodes[child1].parent == index\00", align 1
@.str.24.457 = private unnamed_addr constant [32 x i8] c"m_nodes[child2].parent == index\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi = private unnamed_addr constant [49 x i8] c"void b2DynamicTree::ValidateMetrics(int32) const\00", align 1
@.str.25.458 = private unnamed_addr constant [23 x i8] c"node->height == height\00", align 1
@.str.26.459 = private unnamed_addr constant [41 x i8] c"aabb.lowerBound == node->aabb.lowerBound\00", align 1
@.str.27.460 = private unnamed_addr constant [41 x i8] c"aabb.upperBound == node->aabb.upperBound\00", align 1
@.str.28.461 = private unnamed_addr constant [45 x i8] c"0 <= freeIndex && freeIndex < m_nodeCapacity\00", align 1
@__PRETTY_FUNCTION__._ZNK13b2DynamicTree8ValidateEv = private unnamed_addr constant [37 x i8] c"void b2DynamicTree::Validate() const\00", align 1
@.str.29.462 = private unnamed_addr constant [31 x i8] c"GetHeight() == ComputeHeight()\00", align 1
@.str.30.463 = private unnamed_addr constant [42 x i8] c"m_nodeCount + freeCount == m_nodeCapacity\00", align 1
@.str.479 = private unnamed_addr constant [16 x i8] c"def->count >= 3\00", align 1
@.str.1.480 = private unnamed_addr constant [66 x i8] c"/home/alan/workspace/playground/Box2D/Box2D/Box2D/Rope/b2Rope.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN6b2Rope10InitializeEPK9b2RopeDef = private unnamed_addr constant [43 x i8] c"void b2Rope::Initialize(const b2RopeDef *)\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"b = %d\0A\00", align 1
@.str.1.35 = private unnamed_addr constant [19 x i8] c"%4.2f %4.2f %4.2f\0A\00", align 1

@_ZN12b2ChainShapeD1Ev = alias void (%class.b2ChainShape*), void (%class.b2ChainShape*)* @_ZN12b2ChainShapeD2Ev
@_ZN15b2DistanceJointC1EPK18b2DistanceJointDef = alias void (%class.b2DistanceJoint*, %struct.b2DistanceJointDef*), void (%class.b2DistanceJoint*, %struct.b2DistanceJointDef*)* @_ZN15b2DistanceJointC2EPK18b2DistanceJointDef
@_ZN12b2MouseJointC1EPK15b2MouseJointDef = alias void (%class.b2MouseJoint*, %struct.b2MouseJointDef*), void (%class.b2MouseJoint*, %struct.b2MouseJointDef*)* @_ZN12b2MouseJointC2EPK15b2MouseJointDef
@_ZN16b2PrismaticJointC1EPK19b2PrismaticJointDef = alias void (%class.b2PrismaticJoint*, %struct.b2PrismaticJointDef*), void (%class.b2PrismaticJoint*, %struct.b2PrismaticJointDef*)* @_ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef
@_ZN15b2RevoluteJointC1EPK18b2RevoluteJointDef = alias void (%class.b2RevoluteJoint*, %struct.b2RevoluteJointDef*), void (%class.b2RevoluteJoint*, %struct.b2RevoluteJointDef*)* @_ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef
@_ZN13b2PulleyJointC1EPK16b2PulleyJointDef = alias void (%class.b2PulleyJoint*, %struct.b2PulleyJointDef*), void (%class.b2PulleyJoint*, %struct.b2PulleyJointDef*)* @_ZN13b2PulleyJointC2EPK16b2PulleyJointDef
@_ZN11b2GearJointC1EPK14b2GearJointDef = alias void (%class.b2GearJoint*, %struct.b2GearJointDef*), void (%class.b2GearJoint*, %struct.b2GearJointDef*)* @_ZN11b2GearJointC2EPK14b2GearJointDef
@_ZN12b2WheelJointC1EPK15b2WheelJointDef = alias void (%class.b2WheelJoint*, %struct.b2WheelJointDef*), void (%class.b2WheelJoint*, %struct.b2WheelJointDef*)* @_ZN12b2WheelJointC2EPK15b2WheelJointDef
@_ZN11b2WeldJointC1EPK14b2WeldJointDef = alias void (%class.b2WeldJoint*, %struct.b2DistanceJointDef*), void (%class.b2WeldJoint*, %struct.b2DistanceJointDef*)* @_ZN11b2WeldJointC2EPK14b2WeldJointDef
@_ZN15b2FrictionJointC1EPK18b2FrictionJointDef = alias void (%class.b2FrictionJoint*, %struct.b2FrictionJointDef*), void (%class.b2FrictionJoint*, %struct.b2FrictionJointDef*)* @_ZN15b2FrictionJointC2EPK18b2FrictionJointDef
@_ZN11b2RopeJointC1EPK14b2RopeJointDef = alias void (%class.b2RopeJoint*, %struct.b2RopeJointDef*), void (%class.b2RopeJoint*, %struct.b2RopeJointDef*)* @_ZN11b2RopeJointC2EPK14b2RopeJointDef
@_ZN12b2MotorJointC1EPK15b2MotorJointDef = alias void (%class.b2MotorJoint*, %struct.b2MotorJointDef*), void (%class.b2MotorJoint*, %struct.b2MotorJointDef*)* @_ZN12b2MotorJointC2EPK15b2MotorJointDef
@_ZN15b2CircleContactC1EP9b2FixtureS1_ = alias void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*), void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*)* @_ZN15b2CircleContactC2EP9b2FixtureS1_
@_ZN25b2PolygonAndCircleContactC1EP9b2FixtureS1_ = alias void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*), void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*)* @_ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_
@_ZN16b2PolygonContactC1EP9b2FixtureS1_ = alias void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*), void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*)* @_ZN16b2PolygonContactC2EP9b2FixtureS1_
@_ZN22b2EdgeAndCircleContactC1EP9b2FixtureS1_ = alias void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*), void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*)* @_ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_
@_ZN23b2EdgeAndPolygonContactC1EP9b2FixtureS1_ = alias void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*), void (%class.b2CircleContact*, %class.b2Fixture*, %class.b2Fixture*)* @_ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_
@_ZN23b2ChainAndCircleContactC1EP9b2FixtureiS1_i = alias void (%class.b2CircleContact*, %class.b2Fixture*, i32, %class.b2Fixture*, i32), void (%class.b2CircleContact*, %class.b2Fixture*, i32, %class.b2Fixture*, i32)* @_ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i
@_ZN24b2ChainAndPolygonContactC1EP9b2FixtureiS1_i = alias void (%class.b2CircleContact*, %class.b2Fixture*, i32, %class.b2Fixture*, i32), void (%class.b2CircleContact*, %class.b2Fixture*, i32, %class.b2Fixture*, i32)* @_ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i
@_ZN9b2FixtureC1Ev = alias void (%class.b2Fixture*), void (%class.b2Fixture*)* @_ZN9b2FixtureC2Ev
@_ZN12b2BroadPhaseC1Ev = alias void (%class.b2BroadPhase*), void (%class.b2BroadPhase*)* @_ZN12b2BroadPhaseC2Ev
@_ZN13b2DynamicTreeC1Ev = alias void (%class.b2DynamicTree*), void (%class.b2DynamicTree*)* @_ZN13b2DynamicTreeC2Ev
@_ZN13b2DynamicTreeD1Ev = alias void (%class.b2DynamicTree*), void (%class.b2DynamicTree*)* @_ZN13b2DynamicTreeD2Ev
@_ZN7b2TimerC1Ev = alias void (%class.b2Timer*), void (%class.b2Timer*)* @_ZN7b2TimerC2Ev
@_ZN15b2ContactSolverC1EP18b2ContactSolverDef = alias void (%class.b2ContactSolver*, %struct.b2ContactSolverDef*), void (%class.b2ContactSolver*, %struct.b2ContactSolverDef*)* @_ZN15b2ContactSolverC2EP18b2ContactSolverDef
@_ZN15b2ContactSolverD1Ev = alias void (%class.b2ContactSolver*), void (%class.b2ContactSolver*)* @_ZN15b2ContactSolverD2Ev
@_ZN16b2BlockAllocatorC1Ev = alias void (%class.b2BlockAllocator*), void (%class.b2BlockAllocator*)* @_ZN16b2BlockAllocatorC2Ev
@_ZN16b2StackAllocatorC1Ev = alias void (%class.b2StackAllocator*), void (%class.b2StackAllocator*)* @_ZN16b2StackAllocatorC2Ev
@_ZN16b2ContactManagerC1Ev = alias void (%class.b2ContactManager*), void (%class.b2ContactManager*)* @_ZN16b2ContactManagerC2Ev
@_ZN12b2BroadPhaseD1Ev = alias void (%class.b2BroadPhase*), void (%class.b2BroadPhase*)* @_ZN12b2BroadPhaseD2Ev
@_ZN16b2StackAllocatorD1Ev = alias void (%class.b2StackAllocator*), void (%class.b2StackAllocator*)* @_ZN16b2StackAllocatorD2Ev
@_ZN16b2BlockAllocatorD1Ev = alias void (%class.b2BlockAllocator*), void (%class.b2BlockAllocator*)* @_ZN16b2BlockAllocatorD2Ev
@_ZN6b2BodyC1EPK9b2BodyDefP7b2World = alias void (%class.b2Body*, %struct.b2BodyDef*, %class.b2World*), void (%class.b2Body*, %struct.b2BodyDef*, %class.b2World*)* @_ZN6b2BodyC2EPK9b2BodyDefP7b2World
@_ZN6b2BodyD1Ev = alias void (%class.b2Body*), void (%class.b2Body*)* @_ZN6b2BodyD2Ev
@_ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener = alias void (%class.b2Island*, i32, i32, i32, %class.b2StackAllocator*, %class.b2ContactFilter*), void (%class.b2Island*, i32, i32, i32, %class.b2StackAllocator*, %class.b2ContactFilter*)* @_ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener
@_ZN8b2IslandD1Ev = alias void (%class.b2Island*), void (%class.b2Island*)* @_ZN8b2IslandD2Ev
@_ZN7b2WorldC1ERK6b2Vec2 = alias void (%class.b2World*, %struct.b2Vec2*), void (%class.b2World*, %struct.b2Vec2*)* @_ZN7b2WorldC2ERK6b2Vec2
@_ZN7b2WorldD1Ev = alias void (%class.b2World*), void (%class.b2World*)* @_ZN7b2WorldD2Ev
@_ZN6b2RopeC1Ev = alias void (%class.b2Rope*), void (%class.b2Rope*)* @_ZN6b2RopeC2Ev
@_ZN6b2RopeD1Ev = alias void (%class.b2Rope*), void (%class.b2Rope*)* @_ZN6b2RopeD2Ev

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2DistanceJoint10GetAnchorAEv(%class.b2DistanceJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2DistanceJoint*, align 8
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %2, align 8
  %3 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %2, align 8
  %4 = bitcast %class.b2DistanceJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %3, i32 0, i32 4
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %this, %struct.b2Vec2* dereferenceable(8) %localPoint) #1 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %struct.b2Vec2* %localPoint, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %7 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  ret <2 x float> %10
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %T, %struct.b2Vec2* dereferenceable(8) %v) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store %struct.b2Transform* %T, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 1
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fmul float %7, %10
  %12 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %17 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %16, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fmul float %15, %18
  %20 = fsub float %11, %19
  %21 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %22 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %22, i32 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fadd float %20, %24
  store float %25, float* %x, align 4
  %26 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %27 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %26, i32 0, i32 1
  %28 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %27, i32 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %30, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fmul float %29, %32
  %34 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %35 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %34, i32 0, i32 1
  %36 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %35, i32 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %39 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %38, i32 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fmul float %37, %40
  %42 = fadd float %33, %41
  %43 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %44 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %44, i32 0, i32 1
  %46 = load float, float* %45, align 4
  %47 = fadd float %42, %46
  store float %47, float* %y, align 4
  %48 = load float, float* %x, align 4
  %49 = load float, float* %y, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %48, float %49)
  %50 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  ret <2 x float> %51
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %this, float %xIn, float %yIn) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store float %xIn, float* %2, align 4
  store float %yIn, float* %3, align 4
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %2, align 4
  store float %6, float* %5, align 4
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 1
  %8 = load float, float* %3, align 4
  store float %8, float* %7, align 4
  ret void
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2DistanceJoint10GetAnchorBEv(%class.b2DistanceJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2DistanceJoint*, align 8
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %2, align 8
  %3 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %2, align 8
  %4 = bitcast %class.b2DistanceJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %3, i32 0, i32 5
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2DistanceJoint16GetReactionForceEf(%class.b2DistanceJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2DistanceJoint*, align 8
  %3 = alloca float, align 4
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %2, align 8
  %5 = load float, float* %3, align 4
  %6 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %4, i32 0, i32 7
  %7 = load float, float* %6, align 8
  %8 = fmul float %5, %7
  %9 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %4, i32 0, i32 11
  %10 = call <2 x float> @_ZmlfRK6b2Vec2(float %8, %struct.b2Vec2* dereferenceable(8) %9)
  %11 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %10, <2 x float>* %11, align 4
  %12 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  ret <2 x float> %13
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZmlfRK6b2Vec2(float %s, %struct.b2Vec2* dereferenceable(8) %a) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca float, align 4
  %3 = alloca %struct.b2Vec2*, align 8
  store float %s, float* %2, align 4
  store %struct.b2Vec2* %a, %struct.b2Vec2** %3, align 8
  %4 = load float, float* %2, align 4
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fmul float %4, %7
  %9 = load float, float* %2, align 4
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fmul float %9, %12
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %8, float %13)
  %14 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  ret <2 x float> %15
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2DistanceJoint17GetReactionTorqueEf(%class.b2DistanceJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2DistanceJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  ret float 0.000000e+00
}

; Function Attrs: uwtable
define void @_ZN15b2DistanceJoint4DumpEv(%class.b2DistanceJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2DistanceJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  %2 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  %3 = bitcast %class.b2DistanceJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2DistanceJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2DistanceJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 4
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 4
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 5
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 5
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 8
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i32 0, i32 0), double %38)
  %39 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 1
  %40 = load float, float* %39, align 8
  %41 = fpext float %40 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i32 0, i32 0), double %41)
  %42 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %2, i32 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = fpext float %43 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i32 0, i32 0), double %44)
  %45 = bitcast %class.b2DistanceJoint* %2 to %class.b2Joint*
  %46 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %45, i32 0, i32 8
  %47 = load i32, i32* %46, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i32 0, i32 0), i32 %47)
  ret void
}

; Function Attrs: uwtable
define void @_Z5b2LogPKcz(i8* %string, ...) #0 {
  %1 = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %string, i8** %1, align 8
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0
  %3 = bitcast %struct.__va_list_tag* %2 to i8*
  call void @llvm.va_start(i8* %3)
  %4 = load i8*, i8** %1, align 8
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0
  %6 = call i32 @vprintf(i8* %4, %struct.__va_list_tag* %5)
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0
  %8 = bitcast %struct.__va_list_tag* %7 to i8*
  call void @llvm.va_end(i8* %8)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

declare i32 @vprintf(i8*, %struct.__va_list_tag*) #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7b2Joint11ShiftOriginERK6b2Vec2(%class.b2Joint* %this, %struct.b2Vec2* dereferenceable(8) %newOrigin) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  store %struct.b2Vec2* %newOrigin, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN15b2DistanceJointD2Ev(%class.b2DistanceJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2DistanceJoint*, align 8
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  %2 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  %3 = bitcast %class.b2DistanceJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7b2JointD2Ev(%class.b2Joint* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2DistanceJointD0Ev(%class.b2DistanceJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2DistanceJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  %4 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  invoke void @_ZN15b2DistanceJointD2Ev(%class.b2DistanceJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2DistanceJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2DistanceJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #6

; Function Attrs: uwtable
define void @_ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2DistanceJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2DistanceJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %length = alloca float, align 4
  %crAu = alloca float, align 4
  %crBu = alloca float, align 4
  %invMass = alloca float, align 4
  %C = alloca float, align 4
  %omega = alloca float, align 4
  %d = alloca float, align 4
  %k = alloca float, align 4
  %h = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %12 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  %13 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %14 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %13, i32 0, i32 6
  %15 = load %class.b2Body*, %class.b2Body** %14, align 8
  %16 = getelementptr inbounds %class.b2Body, %class.b2Body* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  store i32 %17, i32* %18, align 8
  %19 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %20 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %19, i32 0, i32 7
  %21 = load %class.b2Body*, %class.b2Body** %20, align 8
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 14
  %26 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %27 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %26, i32 0, i32 6
  %28 = load %class.b2Body*, %class.b2Body** %27, align 8
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %28, i32 0, i32 4
  %30 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %29, i32 0, i32 0
  %31 = bitcast %struct.b2Vec2* %25 to i8*
  %32 = bitcast %struct.b2Vec2* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 4, i1 false)
  %33 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 15
  %34 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %35 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %34, i32 0, i32 7
  %36 = load %class.b2Body*, %class.b2Body** %35, align 8
  %37 = getelementptr inbounds %class.b2Body, %class.b2Body* %36, i32 0, i32 4
  %38 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %37, i32 0, i32 0
  %39 = bitcast %struct.b2Vec2* %33 to i8*
  %40 = bitcast %struct.b2Vec2* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false)
  %41 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %42 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %41, i32 0, i32 6
  %43 = load %class.b2Body*, %class.b2Body** %42, align 8
  %44 = getelementptr inbounds %class.b2Body, %class.b2Body* %43, i32 0, i32 17
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 16
  store float %45, float* %46, align 8
  %47 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %48 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %47, i32 0, i32 7
  %49 = load %class.b2Body*, %class.b2Body** %48, align 8
  %50 = getelementptr inbounds %class.b2Body, %class.b2Body* %49, i32 0, i32 17
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 17
  store float %51, float* %52, align 4
  %53 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %54 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %53, i32 0, i32 6
  %55 = load %class.b2Body*, %class.b2Body** %54, align 8
  %56 = getelementptr inbounds %class.b2Body, %class.b2Body* %55, i32 0, i32 19
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 18
  store float %57, float* %58, align 8
  %59 = bitcast %class.b2DistanceJoint* %12 to %class.b2Joint*
  %60 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %59, i32 0, i32 7
  %61 = load %class.b2Body*, %class.b2Body** %60, align 8
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %61, i32 0, i32 19
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 19
  store float %63, float* %64, align 4
  %65 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  %68 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %69 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %68, i32 0, i32 1
  %70 = load %struct.b2Position*, %struct.b2Position** %69, align 8
  %71 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %70, i64 %67
  %72 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %71, i32 0, i32 0
  %73 = bitcast %struct.b2Vec2* %cA to i8*
  %74 = bitcast %struct.b2Vec2* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 4, i1 false)
  %75 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  %76 = load i32, i32* %75, align 8
  %77 = sext i32 %76 to i64
  %78 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %79 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %78, i32 0, i32 1
  %80 = load %struct.b2Position*, %struct.b2Position** %79, align 8
  %81 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %80, i64 %77
  %82 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %81, i32 0, i32 1
  %83 = load float, float* %82, align 4
  store float %83, float* %aA, align 4
  %84 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %88 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %87, i32 0, i32 2
  %89 = load %struct.b2Position*, %struct.b2Position** %88, align 8
  %90 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %89, i64 %86
  %91 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %90, i32 0, i32 0
  %92 = bitcast %struct.b2Vec2* %vA to i8*
  %93 = bitcast %struct.b2Vec2* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 8, i32 4, i1 false)
  %94 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  %95 = load i32, i32* %94, align 8
  %96 = sext i32 %95 to i64
  %97 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %98 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %97, i32 0, i32 2
  %99 = load %struct.b2Position*, %struct.b2Position** %98, align 8
  %100 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %99, i64 %96
  %101 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %100, i32 0, i32 1
  %102 = load float, float* %101, align 4
  store float %102, float* %wA, align 4
  %103 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %107 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %106, i32 0, i32 1
  %108 = load %struct.b2Position*, %struct.b2Position** %107, align 8
  %109 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %108, i64 %105
  %110 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %109, i32 0, i32 0
  %111 = bitcast %struct.b2Vec2* %cB to i8*
  %112 = bitcast %struct.b2Vec2* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 4, i1 false)
  %113 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %117 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %116, i32 0, i32 1
  %118 = load %struct.b2Position*, %struct.b2Position** %117, align 8
  %119 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %118, i64 %115
  %120 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %119, i32 0, i32 1
  %121 = load float, float* %120, align 4
  store float %121, float* %aB, align 4
  %122 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %126 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %125, i32 0, i32 2
  %127 = load %struct.b2Position*, %struct.b2Position** %126, align 8
  %128 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %127, i64 %124
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i32 0, i32 0
  %130 = bitcast %struct.b2Vec2* %vB to i8*
  %131 = bitcast %struct.b2Vec2* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 4, i1 false)
  %132 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %136 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %135, i32 0, i32 2
  %137 = load %struct.b2Position*, %struct.b2Position** %136, align 8
  %138 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %137, i64 %134
  %139 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %138, i32 0, i32 1
  %140 = load float, float* %139, align 4
  store float %140, float* %wB, align 4
  %141 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %141)
  %142 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %142)
  %143 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 12
  %144 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 4
  %145 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 14
  %146 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %144, %struct.b2Vec2* dereferenceable(8) %145)
  %147 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  %148 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %149 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  %150 = bitcast %struct.b2Vec2* %143 to i8*
  %151 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 4, i1 false)
  %152 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 13
  %153 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 5
  %154 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 15
  %155 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %153, %struct.b2Vec2* dereferenceable(8) %154)
  %156 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %155, <2 x float>* %156, align 4
  %157 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %158 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %157, <2 x float>* %158, align 4
  %159 = bitcast %struct.b2Vec2* %152 to i8*
  %160 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 8, i32 4, i1 false)
  %161 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  %162 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 13
  %163 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %162)
  %164 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %163, <2 x float>* %164, align 4
  %165 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %cA)
  %166 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %165, <2 x float>* %166, align 4
  %167 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 12
  %168 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %167)
  %169 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %168, <2 x float>* %169, align 4
  %170 = bitcast %struct.b2Vec2* %161 to i8*
  %171 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %170, i8* %171, i64 8, i32 4, i1 false)
  %172 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  %173 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %172)
  store float %173, float* %length, align 4
  %174 = load float, float* %length, align 4
  %175 = fcmp ogt float %174, 0x3F747AE140000000
  br i1 %175, label %176, label %180

; <label>:176                                     ; preds = %0
  %177 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  %178 = load float, float* %length, align 4
  %179 = fdiv float 1.000000e+00, %178
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %177, float %179)
  br label %182

; <label>:180                                     ; preds = %0
  %181 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %181, float 0.000000e+00, float 0.000000e+00)
  br label %182

; <label>:182                                     ; preds = %180, %176
  %183 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 12
  %184 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  %185 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %183, %struct.b2Vec2* dereferenceable(8) %184)
  store float %185, float* %crAu, align 4
  %186 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 13
  %187 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  %188 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %186, %struct.b2Vec2* dereferenceable(8) %187)
  store float %188, float* %crBu, align 4
  %189 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 16
  %190 = load float, float* %189, align 8
  %191 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 18
  %192 = load float, float* %191, align 8
  %193 = load float, float* %crAu, align 4
  %194 = fmul float %192, %193
  %195 = load float, float* %crAu, align 4
  %196 = fmul float %194, %195
  %197 = fadd float %190, %196
  %198 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 17
  %199 = load float, float* %198, align 4
  %200 = fadd float %197, %199
  %201 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 19
  %202 = load float, float* %201, align 4
  %203 = load float, float* %crBu, align 4
  %204 = fmul float %202, %203
  %205 = load float, float* %crBu, align 4
  %206 = fmul float %204, %205
  %207 = fadd float %200, %206
  store float %207, float* %invMass, align 4
  %208 = load float, float* %invMass, align 4
  %209 = fcmp une float %208, 0.000000e+00
  br i1 %209, label %210, label %213

; <label>:210                                     ; preds = %182
  %211 = load float, float* %invMass, align 4
  %212 = fdiv float 1.000000e+00, %211
  br label %214

; <label>:213                                     ; preds = %182
  br label %214

; <label>:214                                     ; preds = %213, %210
  %215 = phi float [ %212, %210 ], [ 0.000000e+00, %213 ]
  %216 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 20
  store float %215, float* %216, align 8
  %217 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 1
  %218 = load float, float* %217, align 8
  %219 = fcmp ogt float %218, 0.000000e+00
  br i1 %219, label %220, label %287

; <label>:220                                     ; preds = %214
  %221 = load float, float* %length, align 4
  %222 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 8
  %223 = load float, float* %222, align 4
  %224 = fsub float %221, %223
  store float %224, float* %C, align 4
  %225 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 1
  %226 = load float, float* %225, align 8
  %227 = fmul float 0x401921FB60000000, %226
  store float %227, float* %omega, align 4
  %228 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 20
  %229 = load float, float* %228, align 8
  %230 = fmul float 2.000000e+00, %229
  %231 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 2
  %232 = load float, float* %231, align 4
  %233 = fmul float %230, %232
  %234 = load float, float* %omega, align 4
  %235 = fmul float %233, %234
  store float %235, float* %d, align 4
  %236 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 20
  %237 = load float, float* %236, align 8
  %238 = load float, float* %omega, align 4
  %239 = fmul float %237, %238
  %240 = load float, float* %omega, align 4
  %241 = fmul float %239, %240
  store float %241, float* %k, align 4
  %242 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %243 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %242, i32 0, i32 0
  %244 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %243, i32 0, i32 0
  %245 = load float, float* %244, align 8
  store float %245, float* %h, align 4
  %246 = load float, float* %h, align 4
  %247 = load float, float* %d, align 4
  %248 = load float, float* %h, align 4
  %249 = load float, float* %k, align 4
  %250 = fmul float %248, %249
  %251 = fadd float %247, %250
  %252 = fmul float %246, %251
  %253 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  store float %252, float* %253, align 4
  %254 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  %255 = load float, float* %254, align 4
  %256 = fcmp une float %255, 0.000000e+00
  br i1 %256, label %257, label %261

; <label>:257                                     ; preds = %220
  %258 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  %259 = load float, float* %258, align 4
  %260 = fdiv float 1.000000e+00, %259
  br label %262

; <label>:261                                     ; preds = %220
  br label %262

; <label>:262                                     ; preds = %261, %257
  %263 = phi float [ %260, %257 ], [ 0.000000e+00, %261 ]
  %264 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  store float %263, float* %264, align 4
  %265 = load float, float* %C, align 4
  %266 = load float, float* %h, align 4
  %267 = fmul float %265, %266
  %268 = load float, float* %k, align 4
  %269 = fmul float %267, %268
  %270 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  %271 = load float, float* %270, align 4
  %272 = fmul float %269, %271
  %273 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 3
  store float %272, float* %273, align 8
  %274 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  %275 = load float, float* %274, align 4
  %276 = load float, float* %invMass, align 4
  %277 = fadd float %276, %275
  store float %277, float* %invMass, align 4
  %278 = load float, float* %invMass, align 4
  %279 = fcmp une float %278, 0.000000e+00
  br i1 %279, label %280, label %283

; <label>:280                                     ; preds = %262
  %281 = load float, float* %invMass, align 4
  %282 = fdiv float 1.000000e+00, %281
  br label %284

; <label>:283                                     ; preds = %262
  br label %284

; <label>:284                                     ; preds = %283, %280
  %285 = phi float [ %282, %280 ], [ 0.000000e+00, %283 ]
  %286 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 20
  store float %285, float* %286, align 8
  br label %290

; <label>:287                                     ; preds = %214
  %288 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 6
  store float 0.000000e+00, float* %288, align 4
  %289 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 3
  store float 0.000000e+00, float* %289, align 8
  br label %290

; <label>:290                                     ; preds = %287, %284
  %291 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %292 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %291, i32 0, i32 0
  %293 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %292, i32 0, i32 5
  %294 = load i8, i8* %293, align 4
  %295 = trunc i8 %294 to i1
  br i1 %295, label %296, label %331

; <label>:296                                     ; preds = %290
  %297 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %298 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %297, i32 0, i32 0
  %299 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %298, i32 0, i32 2
  %300 = load float, float* %299, align 8
  %301 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 7
  %302 = load float, float* %301, align 8
  %303 = fmul float %302, %300
  store float %303, float* %301, align 8
  %304 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 7
  %305 = load float, float* %304, align 8
  %306 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 11
  %307 = call <2 x float> @_ZmlfRK6b2Vec2(float %305, %struct.b2Vec2* dereferenceable(8) %306)
  %308 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %307, <2 x float>* %308, align 4
  %309 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 16
  %310 = load float, float* %309, align 8
  %311 = call <2 x float> @_ZmlfRK6b2Vec2(float %310, %struct.b2Vec2* dereferenceable(8) %P)
  %312 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %311, <2 x float>* %312, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %10)
  %313 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 18
  %314 = load float, float* %313, align 8
  %315 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 12
  %316 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %315, %struct.b2Vec2* dereferenceable(8) %P)
  %317 = fmul float %314, %316
  %318 = load float, float* %wA, align 4
  %319 = fsub float %318, %317
  store float %319, float* %wA, align 4
  %320 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 17
  %321 = load float, float* %320, align 4
  %322 = call <2 x float> @_ZmlfRK6b2Vec2(float %321, %struct.b2Vec2* dereferenceable(8) %P)
  %323 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %322, <2 x float>* %323, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %11)
  %324 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 19
  %325 = load float, float* %324, align 4
  %326 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 13
  %327 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %326, %struct.b2Vec2* dereferenceable(8) %P)
  %328 = fmul float %325, %327
  %329 = load float, float* %wB, align 4
  %330 = fadd float %329, %328
  store float %330, float* %wB, align 4
  br label %333

; <label>:331                                     ; preds = %290
  %332 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 7
  store float 0.000000e+00, float* %332, align 8
  br label %333

; <label>:333                                     ; preds = %331, %296
  %334 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  %335 = load i32, i32* %334, align 8
  %336 = sext i32 %335 to i64
  %337 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %338 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %337, i32 0, i32 2
  %339 = load %struct.b2Position*, %struct.b2Position** %338, align 8
  %340 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %339, i64 %336
  %341 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %340, i32 0, i32 0
  %342 = bitcast %struct.b2Vec2* %341 to i8*
  %343 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %342, i8* %343, i64 8, i32 4, i1 false)
  %344 = load float, float* %wA, align 4
  %345 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 9
  %346 = load i32, i32* %345, align 8
  %347 = sext i32 %346 to i64
  %348 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %349 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %348, i32 0, i32 2
  %350 = load %struct.b2Position*, %struct.b2Position** %349, align 8
  %351 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %350, i64 %347
  %352 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %351, i32 0, i32 1
  store float %344, float* %352, align 4
  %353 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  %354 = load i32, i32* %353, align 4
  %355 = sext i32 %354 to i64
  %356 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %357 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %356, i32 0, i32 2
  %358 = load %struct.b2Position*, %struct.b2Position** %357, align 8
  %359 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %358, i64 %355
  %360 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %359, i32 0, i32 0
  %361 = bitcast %struct.b2Vec2* %360 to i8*
  %362 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %361, i8* %362, i64 8, i32 4, i1 false)
  %363 = load float, float* %wB, align 4
  %364 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %12, i32 0, i32 10
  %365 = load i32, i32* %364, align 4
  %366 = sext i32 %365 to i64
  %367 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %368 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %367, i32 0, i32 2
  %369 = load %struct.b2Position*, %struct.b2Position** %368, align 8
  %370 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %369, i64 %366
  %371 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %370, i32 0, i32 1
  store float %363, float* %371, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN5b2RotC2Ef(%struct.b2Vec2* %this, float %angle) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca float, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store float %angle, float* %2, align 4
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call float @sinf(float %4) #3
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  store float %5, float* %6, align 4
  %7 = load float, float* %2, align 4
  %8 = call float @cosf(float %7) #3
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  store float %8, float* %9, align 4
  ret void
}

; Function Attrs: nounwind
declare float @sinf(float) #8

; Function Attrs: nounwind
declare float @cosf(float) #8

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fsub float %6, %9
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fsub float %13, %16
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %10, float %17)
  %18 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  ret <2 x float> %19
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %q, %struct.b2Vec2* dereferenceable(8) %v) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %q, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %6, %9
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %13, %16
  %18 = fsub float %10, %17
  %19 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %20 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %19, i32 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %23 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %22, i32 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fmul float %21, %24
  %26 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %27 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %26, i32 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %30 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %29, i32 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fmul float %28, %31
  %33 = fadd float %25, %32
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %18, float %33)
  %34 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  ret <2 x float> %35
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fadd float %6, %9
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fadd float %13, %16
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %10, float %17)
  %18 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  ret <2 x float> %19
}

; Function Attrs: nounwind uwtable
define linkonce_odr float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  %2 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %3 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fmul float %9, %11
  %13 = fadd float %7, %12
  %14 = call float @sqrtf(float %13) #3
  ret float %14
}

; Function Attrs: nounwind
declare float @sqrtf(float) #8

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %this, float %a) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca float, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store float %a, float* %2, align 4
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, %4
  store float %7, float* %5, align 4
  %8 = load float, float* %2, align 4
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, %8
  store float %11, float* %9, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %this, float %x_, float %y_) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store float %x_, float* %2, align 4
  store float %y_, float* %3, align 4
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %5 = load float, float* %2, align 4
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  store float %5, float* %6, align 4
  %7 = load float, float* %3, align 4
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 1
  store float %7, float* %8, align 4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #5 comdat {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %6, i32 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %5, %8
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fmul float %12, %15
  %17 = fsub float %9, %16
  ret float %17
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %this, %struct.b2Vec2* dereferenceable(8) %v) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fsub float %8, %6
  store float %9, float* %7, align 4
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fsub float %14, %12
  store float %15, float* %13, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %this, %struct.b2Vec2* dereferenceable(8) %v) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fadd float %8, %6
  store float %9, float* %7, align 4
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fadd float %14, %12
  store float %15, float* %13, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2DistanceJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2DistanceJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %vpA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %vpB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %Cdot = alloca float, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %8 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  %9 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %13 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %12, i32 0, i32 2
  %14 = load %struct.b2Position*, %struct.b2Position** %13, align 8
  %15 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %14, i64 %11
  %16 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %15, i32 0, i32 0
  %17 = bitcast %struct.b2Vec2* %vA to i8*
  %18 = bitcast %struct.b2Vec2* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  %19 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 9
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %23 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %22, i32 0, i32 2
  %24 = load %struct.b2Position*, %struct.b2Position** %23, align 8
  %25 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %24, i64 %21
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i32 0, i32 1
  %27 = load float, float* %26, align 4
  store float %27, float* %wA, align 4
  %28 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 10
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %32 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %31, i32 0, i32 2
  %33 = load %struct.b2Position*, %struct.b2Position** %32, align 8
  %34 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %33, i64 %30
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i32 0, i32 0
  %36 = bitcast %struct.b2Vec2* %vB to i8*
  %37 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  %38 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 10
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %42 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %41, i32 0, i32 2
  %43 = load %struct.b2Position*, %struct.b2Position** %42, align 8
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i64 %40
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i32 0, i32 1
  %46 = load float, float* %45, align 4
  store float %46, float* %wB, align 4
  %47 = load float, float* %wA, align 4
  %48 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 12
  %49 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %47, %struct.b2Vec2* dereferenceable(8) %48)
  %50 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vA, %struct.b2Vec2* dereferenceable(8) %3)
  %52 = bitcast %struct.b2Vec2* %vpA to <2 x float>*
  store <2 x float> %51, <2 x float>* %52, align 4
  %53 = load float, float* %wB, align 4
  %54 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 13
  %55 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %53, %struct.b2Vec2* dereferenceable(8) %54)
  %56 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 4
  %57 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %4)
  %58 = bitcast %struct.b2Vec2* %vpB to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 11
  %60 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vpB, %struct.b2Vec2* dereferenceable(8) %vpA)
  %61 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %60, <2 x float>* %61, align 4
  %62 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %59, %struct.b2Vec2* dereferenceable(8) %5)
  store float %62, float* %Cdot, align 4
  %63 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 20
  %64 = load float, float* %63, align 8
  %65 = fsub float -0.000000e+00, %64
  %66 = load float, float* %Cdot, align 4
  %67 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 3
  %68 = load float, float* %67, align 8
  %69 = fadd float %66, %68
  %70 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 6
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 7
  %73 = load float, float* %72, align 8
  %74 = fmul float %71, %73
  %75 = fadd float %69, %74
  %76 = fmul float %65, %75
  store float %76, float* %impulse, align 4
  %77 = load float, float* %impulse, align 4
  %78 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 7
  %79 = load float, float* %78, align 8
  %80 = fadd float %79, %77
  store float %80, float* %78, align 8
  %81 = load float, float* %impulse, align 4
  %82 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 11
  %83 = call <2 x float> @_ZmlfRK6b2Vec2(float %81, %struct.b2Vec2* dereferenceable(8) %82)
  %84 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %83, <2 x float>* %84, align 4
  %85 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 16
  %86 = load float, float* %85, align 8
  %87 = call <2 x float> @_ZmlfRK6b2Vec2(float %86, %struct.b2Vec2* dereferenceable(8) %P)
  %88 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %87, <2 x float>* %88, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %6)
  %89 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 18
  %90 = load float, float* %89, align 8
  %91 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 12
  %92 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %91, %struct.b2Vec2* dereferenceable(8) %P)
  %93 = fmul float %90, %92
  %94 = load float, float* %wA, align 4
  %95 = fsub float %94, %93
  store float %95, float* %wA, align 4
  %96 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 17
  %97 = load float, float* %96, align 4
  %98 = call <2 x float> @_ZmlfRK6b2Vec2(float %97, %struct.b2Vec2* dereferenceable(8) %P)
  %99 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %98, <2 x float>* %99, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %7)
  %100 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 19
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 13
  %103 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %102, %struct.b2Vec2* dereferenceable(8) %P)
  %104 = fmul float %101, %103
  %105 = load float, float* %wB, align 4
  %106 = fadd float %105, %104
  store float %106, float* %wB, align 4
  %107 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 9
  %108 = load i32, i32* %107, align 8
  %109 = sext i32 %108 to i64
  %110 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %111 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %110, i32 0, i32 2
  %112 = load %struct.b2Position*, %struct.b2Position** %111, align 8
  %113 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %112, i64 %109
  %114 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %113, i32 0, i32 0
  %115 = bitcast %struct.b2Vec2* %114 to i8*
  %116 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 8, i32 4, i1 false)
  %117 = load float, float* %wA, align 4
  %118 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 9
  %119 = load i32, i32* %118, align 8
  %120 = sext i32 %119 to i64
  %121 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %122 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %121, i32 0, i32 2
  %123 = load %struct.b2Position*, %struct.b2Position** %122, align 8
  %124 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %123, i64 %120
  %125 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %124, i32 0, i32 1
  store float %117, float* %125, align 4
  %126 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 10
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %130 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %129, i32 0, i32 2
  %131 = load %struct.b2Position*, %struct.b2Position** %130, align 8
  %132 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %131, i64 %128
  %133 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %132, i32 0, i32 0
  %134 = bitcast %struct.b2Vec2* %133 to i8*
  %135 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 8, i32 4, i1 false)
  %136 = load float, float* %wB, align 4
  %137 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %8, i32 0, i32 10
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %141 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %140, i32 0, i32 2
  %142 = load %struct.b2Position*, %struct.b2Position** %141, align 8
  %143 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %142, i64 %139
  %144 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %143, i32 0, i32 1
  store float %136, float* %144, align 4
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z7b2CrossfRK6b2Vec2(float %s, %struct.b2Vec2* dereferenceable(8) %a) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca float, align 4
  %3 = alloca %struct.b2Vec2*, align 8
  store float %s, float* %2, align 4
  store %struct.b2Vec2* %a, %struct.b2Vec2** %3, align 8
  %4 = load float, float* %2, align 4
  %5 = fsub float -0.000000e+00, %4
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %6, i32 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %5, %8
  %10 = load float, float* %2, align 4
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fmul float %10, %13
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %9, float %14)
  %15 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  ret <2 x float> %16
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #5 comdat {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %6, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fmul float %5, %8
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fmul float %12, %15
  %17 = fadd float %9, %16
  ret float %17
}

; Function Attrs: uwtable
define zeroext i1 @_ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2DistanceJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2DistanceJoint*, align 8
  %3 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %u = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %length = alloca float, align 4
  %C = alloca float, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %2, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %3, align 8
  %10 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %2, align 8
  %11 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 1
  %12 = load float, float* %11, align 8
  %13 = fcmp ogt float %12, 0.000000e+00
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %0
  store i1 true, i1* %1, align 1
  br label %150

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %20 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %19, i32 0, i32 1
  %21 = load %struct.b2Position*, %struct.b2Position** %20, align 8
  %22 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %21, i64 %18
  %23 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %22, i32 0, i32 0
  %24 = bitcast %struct.b2Vec2* %cA to i8*
  %25 = bitcast %struct.b2Vec2* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false)
  %26 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %30 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %29, i32 0, i32 1
  %31 = load %struct.b2Position*, %struct.b2Position** %30, align 8
  %32 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %31, i64 %28
  %33 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  store float %34, float* %aA, align 4
  %35 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 10
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %39 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %38, i32 0, i32 1
  %40 = load %struct.b2Position*, %struct.b2Position** %39, align 8
  %41 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %40, i64 %37
  %42 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %41, i32 0, i32 0
  %43 = bitcast %struct.b2Vec2* %cB to i8*
  %44 = bitcast %struct.b2Vec2* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 4, i1 false)
  %45 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 10
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %49 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %48, i32 0, i32 1
  %50 = load %struct.b2Position*, %struct.b2Position** %49, align 8
  %51 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %50, i64 %47
  %52 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %51, i32 0, i32 1
  %53 = load float, float* %52, align 4
  store float %53, float* %aB, align 4
  %54 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %54)
  %55 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %55)
  %56 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 4
  %57 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 14
  %58 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %56, %struct.b2Vec2* dereferenceable(8) %57)
  %59 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %58, <2 x float>* %59, align 4
  %60 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %61 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %60, <2 x float>* %61, align 4
  %62 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 5
  %63 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 15
  %64 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %62, %struct.b2Vec2* dereferenceable(8) %63)
  %65 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %64, <2 x float>* %65, align 4
  %66 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %5)
  %67 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %66, <2 x float>* %67, align 4
  %68 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %69 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %68, <2 x float>* %69, align 4
  %70 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %cA)
  %71 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 4
  %72 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %rA)
  %73 = bitcast %struct.b2Vec2* %u to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %u)
  store float %74, float* %length, align 4
  %75 = load float, float* %length, align 4
  %76 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 8
  %77 = load float, float* %76, align 4
  %78 = fsub float %75, %77
  store float %78, float* %C, align 4
  %79 = load float, float* %C, align 4
  %80 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %79, float 0xBFC99999A0000000, float 0x3FC99999A0000000)
  store float %80, float* %C, align 4
  %81 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 20
  %82 = load float, float* %81, align 8
  %83 = fsub float -0.000000e+00, %82
  %84 = load float, float* %C, align 4
  %85 = fmul float %83, %84
  store float %85, float* %impulse, align 4
  %86 = load float, float* %impulse, align 4
  %87 = call <2 x float> @_ZmlfRK6b2Vec2(float %86, %struct.b2Vec2* dereferenceable(8) %u)
  %88 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %87, <2 x float>* %88, align 4
  %89 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 16
  %90 = load float, float* %89, align 8
  %91 = call <2 x float> @_ZmlfRK6b2Vec2(float %90, %struct.b2Vec2* dereferenceable(8) %P)
  %92 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %91, <2 x float>* %92, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %8)
  %93 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 18
  %94 = load float, float* %93, align 8
  %95 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %P)
  %96 = fmul float %94, %95
  %97 = load float, float* %aA, align 4
  %98 = fsub float %97, %96
  store float %98, float* %aA, align 4
  %99 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 17
  %100 = load float, float* %99, align 4
  %101 = call <2 x float> @_ZmlfRK6b2Vec2(float %100, %struct.b2Vec2* dereferenceable(8) %P)
  %102 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %101, <2 x float>* %102, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %9)
  %103 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 19
  %104 = load float, float* %103, align 4
  %105 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %P)
  %106 = fmul float %104, %105
  %107 = load float, float* %aB, align 4
  %108 = fadd float %107, %106
  store float %108, float* %aB, align 4
  %109 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 9
  %110 = load i32, i32* %109, align 8
  %111 = sext i32 %110 to i64
  %112 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %113 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %112, i32 0, i32 1
  %114 = load %struct.b2Position*, %struct.b2Position** %113, align 8
  %115 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %114, i64 %111
  %116 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %115, i32 0, i32 0
  %117 = bitcast %struct.b2Vec2* %116 to i8*
  %118 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %118, i64 8, i32 4, i1 false)
  %119 = load float, float* %aA, align 4
  %120 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 9
  %121 = load i32, i32* %120, align 8
  %122 = sext i32 %121 to i64
  %123 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %124 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %123, i32 0, i32 1
  %125 = load %struct.b2Position*, %struct.b2Position** %124, align 8
  %126 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %125, i64 %122
  %127 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %126, i32 0, i32 1
  store float %119, float* %127, align 4
  %128 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 10
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %132 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %131, i32 0, i32 1
  %133 = load %struct.b2Position*, %struct.b2Position** %132, align 8
  %134 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %133, i64 %130
  %135 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %134, i32 0, i32 0
  %136 = bitcast %struct.b2Vec2* %135 to i8*
  %137 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 8, i32 4, i1 false)
  %138 = load float, float* %aB, align 4
  %139 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %10, i32 0, i32 10
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = load %struct.b2SolverData*, %struct.b2SolverData** %3, align 8
  %143 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %142, i32 0, i32 1
  %144 = load %struct.b2Position*, %struct.b2Position** %143, align 8
  %145 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %144, i64 %141
  %146 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %145, i32 0, i32 1
  store float %138, float* %146, align 4
  %147 = load float, float* %C, align 4
  %148 = call float @_Z5b2AbsIfET_S0_(float %147)
  %149 = fcmp olt float %148, 0x3F747AE140000000
  store i1 %149, i1* %1, align 1
  br label %150

; <label>:150                                     ; preds = %15, %14
  %151 = load i1, i1* %1, align 1
  ret i1 %151
}

; Function Attrs: nounwind uwtable
define linkonce_odr float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %this) #2 comdat align 2 {
  %1 = alloca float, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %length = alloca float, align 4
  %invLength = alloca float, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %4 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %3)
  store float %4, float* %length, align 4
  %5 = load float, float* %length, align 4
  %6 = fcmp olt float %5, 0x3E80000000000000
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store float 0.000000e+00, float* %1, align 4
  br label %20

; <label>:8                                       ; preds = %0
  %9 = load float, float* %length, align 4
  %10 = fdiv float 1.000000e+00, %9
  store float %10, float* %invLength, align 4
  %11 = load float, float* %invLength, align 4
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %11
  store float %14, float* %12, align 4
  %15 = load float, float* %invLength, align 4
  %16 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fmul float %17, %15
  store float %18, float* %16, align 4
  %19 = load float, float* %length, align 4
  store float %19, float* %1, align 4
  br label %20

; <label>:20                                      ; preds = %8, %7
  %21 = load float, float* %1, align 4
  ret float %21
}

; Function Attrs: inlinehint uwtable
define linkonce_odr float @_Z7b2ClampIfET_S0_S0_S0_(float %a, float %low, float %high) #1 comdat {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  store float %a, float* %1, align 4
  store float %low, float* %2, align 4
  store float %high, float* %3, align 4
  %4 = load float, float* %2, align 4
  %5 = load float, float* %1, align 4
  %6 = load float, float* %3, align 4
  %7 = call float @_Z5b2MinIfET_S0_S0_(float %5, float %6)
  %8 = call float @_Z5b2MaxIfET_S0_S0_(float %4, float %7)
  ret float %8
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z5b2MinIfET_S0_S0_(float %a, float %b) #5 comdat {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  store float %a, float* %1, align 4
  store float %b, float* %2, align 4
  %3 = load float, float* %1, align 4
  %4 = load float, float* %2, align 4
  %5 = fcmp olt float %3, %4
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load float, float* %1, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load float, float* %2, align 4
  br label %10

; <label>:10                                      ; preds = %8, %6
  %11 = phi float [ %7, %6 ], [ %9, %8 ]
  ret float %11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z5b2MaxIfET_S0_S0_(float %a, float %b) #5 comdat {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  store float %a, float* %1, align 4
  store float %b, float* %2, align 4
  %3 = load float, float* %1, align 4
  %4 = load float, float* %2, align 4
  %5 = fcmp ogt float %3, %4
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load float, float* %1, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load float, float* %2, align 4
  br label %10

; <label>:10                                      ; preds = %8, %6
  %11 = phi float [ %7, %6 ], [ %9, %8 ]
  ret float %11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z5b2AbsIfET_S0_(float %a) #5 comdat {
  %1 = alloca float, align 4
  store float %a, float* %1, align 4
  %2 = load float, float* %1, align 4
  %3 = fcmp ogt float %2, 0.000000e+00
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = load float, float* %1, align 4
  br label %9

; <label>:6                                       ; preds = %0
  %7 = load float, float* %1, align 4
  %8 = fsub float -0.000000e+00, %7
  br label %9

; <label>:9                                       ; preds = %6, %4
  %10 = phi float [ %5, %4 ], [ %8, %6 ]
  ret float %10
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2FrictionJoint10GetAnchorAEv(%class.b2FrictionJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2FrictionJoint*, align 8
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %2, align 8
  %3 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %2, align 8
  %4 = bitcast %class.b2FrictionJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %3, i32 0, i32 1
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2FrictionJoint10GetAnchorBEv(%class.b2FrictionJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2FrictionJoint*, align 8
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %2, align 8
  %3 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %2, align 8
  %4 = bitcast %class.b2FrictionJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %3, i32 0, i32 2
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2FrictionJoint16GetReactionForceEf(%class.b2FrictionJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2FrictionJoint*, align 8
  %3 = alloca float, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %2, align 8
  %5 = load float, float* %3, align 4
  %6 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %4, i32 0, i32 3
  %7 = call <2 x float> @_ZmlfRK6b2Vec2(float %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  ret <2 x float> %10
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2FrictionJoint17GetReactionTorqueEf(%class.b2FrictionJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %3, i32 0, i32 4
  %6 = load float, float* %5, align 8
  %7 = fmul float %4, %6
  ret float %7
}

; Function Attrs: uwtable
define void @_ZN15b2FrictionJoint4DumpEv(%class.b2FrictionJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  %2 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %3 = bitcast %class.b2FrictionJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2FrictionJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.1, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.2, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.3, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2FrictionJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6.4, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.5, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 2
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 2
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8.6, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 5
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9.7, i32 0, i32 0), double %38)
  %39 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 6
  %40 = load float, float* %39, align 8
  %41 = fpext float %40 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), double %41)
  %42 = bitcast %class.b2FrictionJoint* %2 to %class.b2Joint*
  %43 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %42, i32 0, i32 8
  %44 = load i32, i32* %43, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i32 0, i32 0), i32 %44)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN15b2FrictionJointD2Ev(%class.b2FrictionJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  %2 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %3 = bitcast %class.b2FrictionJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2FrictionJointD0Ev(%class.b2FrictionJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  %4 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  invoke void @_ZN15b2FrictionJointD2Ev(%class.b2FrictionJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2FrictionJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2FrictionJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2FrictionJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %K = alloca %struct.b2Transform, align 4
  %7 = alloca %struct.b2Transform, align 4
  %P = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %10 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %11 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %12 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %11, i32 0, i32 6
  %13 = load %class.b2Body*, %class.b2Body** %12, align 8
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %13, i32 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 7
  store i32 %15, i32* %16, align 4
  %17 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %18 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %17, i32 0, i32 7
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  %20 = getelementptr inbounds %class.b2Body, %class.b2Body* %19, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 8
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 11
  %24 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %25 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %24, i32 0, i32 6
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %26, i32 0, i32 4
  %28 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %27, i32 0, i32 0
  %29 = bitcast %struct.b2Vec2* %23 to i8*
  %30 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 12
  %32 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %33 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %32, i32 0, i32 7
  %34 = load %class.b2Body*, %class.b2Body** %33, align 8
  %35 = getelementptr inbounds %class.b2Body, %class.b2Body* %34, i32 0, i32 4
  %36 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %35, i32 0, i32 0
  %37 = bitcast %struct.b2Vec2* %31 to i8*
  %38 = bitcast %struct.b2Vec2* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %40 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %39, i32 0, i32 6
  %41 = load %class.b2Body*, %class.b2Body** %40, align 8
  %42 = getelementptr inbounds %class.b2Body, %class.b2Body* %41, i32 0, i32 17
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 13
  store float %43, float* %44, align 4
  %45 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %46 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %45, i32 0, i32 7
  %47 = load %class.b2Body*, %class.b2Body** %46, align 8
  %48 = getelementptr inbounds %class.b2Body, %class.b2Body* %47, i32 0, i32 17
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 14
  store float %49, float* %50, align 8
  %51 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %52 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %51, i32 0, i32 6
  %53 = load %class.b2Body*, %class.b2Body** %52, align 8
  %54 = getelementptr inbounds %class.b2Body, %class.b2Body* %53, i32 0, i32 19
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 15
  store float %55, float* %56, align 4
  %57 = bitcast %class.b2FrictionJoint* %10 to %class.b2Joint*
  %58 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %57, i32 0, i32 7
  %59 = load %class.b2Body*, %class.b2Body** %58, align 8
  %60 = getelementptr inbounds %class.b2Body, %class.b2Body* %59, i32 0, i32 19
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 16
  store float %61, float* %62, align 8
  %63 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %67 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %66, i32 0, i32 1
  %68 = load %struct.b2Position*, %struct.b2Position** %67, align 8
  %69 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %68, i64 %65
  %70 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %69, i32 0, i32 1
  %71 = load float, float* %70, align 4
  store float %71, float* %aA, align 4
  %72 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %76 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %75, i32 0, i32 2
  %77 = load %struct.b2Position*, %struct.b2Position** %76, align 8
  %78 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %77, i64 %74
  %79 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %78, i32 0, i32 0
  %80 = bitcast %struct.b2Vec2* %vA to i8*
  %81 = bitcast %struct.b2Vec2* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 4, i1 false)
  %82 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 7
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %86 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %85, i32 0, i32 2
  %87 = load %struct.b2Position*, %struct.b2Position** %86, align 8
  %88 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %87, i64 %84
  %89 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %88, i32 0, i32 1
  %90 = load float, float* %89, align 4
  store float %90, float* %wA, align 4
  %91 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 8
  %92 = load i32, i32* %91, align 8
  %93 = sext i32 %92 to i64
  %94 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %95 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %94, i32 0, i32 1
  %96 = load %struct.b2Position*, %struct.b2Position** %95, align 8
  %97 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %96, i64 %93
  %98 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %97, i32 0, i32 1
  %99 = load float, float* %98, align 4
  store float %99, float* %aB, align 4
  %100 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 8
  %101 = load i32, i32* %100, align 8
  %102 = sext i32 %101 to i64
  %103 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %104 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %103, i32 0, i32 2
  %105 = load %struct.b2Position*, %struct.b2Position** %104, align 8
  %106 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %105, i64 %102
  %107 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %106, i32 0, i32 0
  %108 = bitcast %struct.b2Vec2* %vB to i8*
  %109 = bitcast %struct.b2Vec2* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 8, i32 4, i1 false)
  %110 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 8
  %111 = load i32, i32* %110, align 8
  %112 = sext i32 %111 to i64
  %113 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %114 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %113, i32 0, i32 2
  %115 = load %struct.b2Position*, %struct.b2Position** %114, align 8
  %116 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %115, i64 %112
  %117 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %116, i32 0, i32 1
  %118 = load float, float* %117, align 4
  store float %118, float* %wB, align 4
  %119 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %119)
  %120 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %120)
  %121 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %122 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 1
  %123 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 11
  %124 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %122, %struct.b2Vec2* dereferenceable(8) %123)
  %125 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %124, <2 x float>* %125, align 4
  %126 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %127 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %126, <2 x float>* %127, align 4
  %128 = bitcast %struct.b2Vec2* %121 to i8*
  %129 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 4, i1 false)
  %130 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %131 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 2
  %132 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 12
  %133 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %131, %struct.b2Vec2* dereferenceable(8) %132)
  %134 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %133, <2 x float>* %134, align 4
  %135 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %136 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %135, <2 x float>* %136, align 4
  %137 = bitcast %struct.b2Vec2* %130 to i8*
  %138 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 4, i1 false)
  %139 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 13
  %140 = load float, float* %139, align 4
  store float %140, float* %mA, align 4
  %141 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 14
  %142 = load float, float* %141, align 8
  store float %142, float* %mB, align 4
  %143 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 15
  %144 = load float, float* %143, align 4
  store float %144, float* %iA, align 4
  %145 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 16
  %146 = load float, float* %145, align 8
  store float %146, float* %iB, align 4
  call void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %K)
  %147 = load float, float* %mA, align 4
  %148 = load float, float* %mB, align 4
  %149 = fadd float %147, %148
  %150 = load float, float* %iA, align 4
  %151 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %152 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %151, i32 0, i32 1
  %153 = load float, float* %152, align 4
  %154 = fmul float %150, %153
  %155 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %156 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %155, i32 0, i32 1
  %157 = load float, float* %156, align 4
  %158 = fmul float %154, %157
  %159 = fadd float %149, %158
  %160 = load float, float* %iB, align 4
  %161 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %162 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %161, i32 0, i32 1
  %163 = load float, float* %162, align 4
  %164 = fmul float %160, %163
  %165 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %166 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %165, i32 0, i32 1
  %167 = load float, float* %166, align 4
  %168 = fmul float %164, %167
  %169 = fadd float %159, %168
  %170 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %171 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %170, i32 0, i32 0
  store float %169, float* %171, align 4
  %172 = load float, float* %iA, align 4
  %173 = fsub float -0.000000e+00, %172
  %174 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %175 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %174, i32 0, i32 0
  %176 = load float, float* %175, align 4
  %177 = fmul float %173, %176
  %178 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %179 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %178, i32 0, i32 1
  %180 = load float, float* %179, align 4
  %181 = fmul float %177, %180
  %182 = load float, float* %iB, align 4
  %183 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %184 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %183, i32 0, i32 0
  %185 = load float, float* %184, align 4
  %186 = fmul float %182, %185
  %187 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %188 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %187, i32 0, i32 1
  %189 = load float, float* %188, align 4
  %190 = fmul float %186, %189
  %191 = fsub float %181, %190
  %192 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %193 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %192, i32 0, i32 1
  store float %191, float* %193, align 4
  %194 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %195 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %194, i32 0, i32 1
  %196 = load float, float* %195, align 4
  %197 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %198 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %197, i32 0, i32 0
  store float %196, float* %198, align 4
  %199 = load float, float* %mA, align 4
  %200 = load float, float* %mB, align 4
  %201 = fadd float %199, %200
  %202 = load float, float* %iA, align 4
  %203 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %204 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %203, i32 0, i32 0
  %205 = load float, float* %204, align 4
  %206 = fmul float %202, %205
  %207 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %208 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %207, i32 0, i32 0
  %209 = load float, float* %208, align 4
  %210 = fmul float %206, %209
  %211 = fadd float %201, %210
  %212 = load float, float* %iB, align 4
  %213 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %214 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %213, i32 0, i32 0
  %215 = load float, float* %214, align 4
  %216 = fmul float %212, %215
  %217 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %218 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %217, i32 0, i32 0
  %219 = load float, float* %218, align 4
  %220 = fmul float %216, %219
  %221 = fadd float %211, %220
  %222 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %223 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %222, i32 0, i32 1
  store float %221, float* %223, align 4
  %224 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 17
  %225 = call { <2 x float>, <2 x float> } @_ZNK7b2Mat2210GetInverseEv(%struct.b2Transform* %K)
  %226 = bitcast %struct.b2Transform* %7 to { <2 x float>, <2 x float> }*
  %227 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %226, i32 0, i32 0
  %228 = extractvalue { <2 x float>, <2 x float> } %225, 0
  store <2 x float> %228, <2 x float>* %227, align 4
  %229 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %226, i32 0, i32 1
  %230 = extractvalue { <2 x float>, <2 x float> } %225, 1
  store <2 x float> %230, <2 x float>* %229, align 4
  %231 = bitcast %struct.b2Transform* %224 to i8*
  %232 = bitcast %struct.b2Transform* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %231, i8* %232, i64 16, i32 4, i1 false)
  %233 = load float, float* %iA, align 4
  %234 = load float, float* %iB, align 4
  %235 = fadd float %233, %234
  %236 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 18
  store float %235, float* %236, align 4
  %237 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 18
  %238 = load float, float* %237, align 4
  %239 = fcmp ogt float %238, 0.000000e+00
  br i1 %239, label %240, label %245

; <label>:240                                     ; preds = %0
  %241 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 18
  %242 = load float, float* %241, align 4
  %243 = fdiv float 1.000000e+00, %242
  %244 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 18
  store float %243, float* %244, align 4
  br label %245

; <label>:245                                     ; preds = %240, %0
  %246 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %247 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %246, i32 0, i32 0
  %248 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %247, i32 0, i32 5
  %249 = load i8, i8* %248, align 4
  %250 = trunc i8 %249 to i1
  br i1 %250, label %251, label %294

; <label>:251                                     ; preds = %245
  %252 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 3
  %253 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %254 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %253, i32 0, i32 0
  %255 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %254, i32 0, i32 2
  %256 = load float, float* %255, align 8
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %252, float %256)
  %257 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %258 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %257, i32 0, i32 0
  %259 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %258, i32 0, i32 2
  %260 = load float, float* %259, align 8
  %261 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 4
  %262 = load float, float* %261, align 8
  %263 = fmul float %262, %260
  store float %263, float* %261, align 8
  %264 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 3
  %265 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %264, i32 0, i32 0
  %266 = load float, float* %265, align 8
  %267 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 3
  %268 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %267, i32 0, i32 1
  %269 = load float, float* %268, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %266, float %269)
  %270 = load float, float* %mA, align 4
  %271 = call <2 x float> @_ZmlfRK6b2Vec2(float %270, %struct.b2Vec2* dereferenceable(8) %P)
  %272 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %271, <2 x float>* %272, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %8)
  %273 = load float, float* %iA, align 4
  %274 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 9
  %275 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %274, %struct.b2Vec2* dereferenceable(8) %P)
  %276 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 4
  %277 = load float, float* %276, align 8
  %278 = fadd float %275, %277
  %279 = fmul float %273, %278
  %280 = load float, float* %wA, align 4
  %281 = fsub float %280, %279
  store float %281, float* %wA, align 4
  %282 = load float, float* %mB, align 4
  %283 = call <2 x float> @_ZmlfRK6b2Vec2(float %282, %struct.b2Vec2* dereferenceable(8) %P)
  %284 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %283, <2 x float>* %284, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %9)
  %285 = load float, float* %iB, align 4
  %286 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 10
  %287 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %286, %struct.b2Vec2* dereferenceable(8) %P)
  %288 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 4
  %289 = load float, float* %288, align 8
  %290 = fadd float %287, %289
  %291 = fmul float %285, %290
  %292 = load float, float* %wB, align 4
  %293 = fadd float %292, %291
  store float %293, float* %wB, align 4
  br label %297

; <label>:294                                     ; preds = %245
  %295 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 3
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %295)
  %296 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 4
  store float 0.000000e+00, float* %296, align 8
  br label %297

; <label>:297                                     ; preds = %294, %251
  %298 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 7
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %302 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %301, i32 0, i32 2
  %303 = load %struct.b2Position*, %struct.b2Position** %302, align 8
  %304 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %303, i64 %300
  %305 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %304, i32 0, i32 0
  %306 = bitcast %struct.b2Vec2* %305 to i8*
  %307 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %306, i8* %307, i64 8, i32 4, i1 false)
  %308 = load float, float* %wA, align 4
  %309 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 7
  %310 = load i32, i32* %309, align 4
  %311 = sext i32 %310 to i64
  %312 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %313 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %312, i32 0, i32 2
  %314 = load %struct.b2Position*, %struct.b2Position** %313, align 8
  %315 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %314, i64 %311
  %316 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %315, i32 0, i32 1
  store float %308, float* %316, align 4
  %317 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 8
  %318 = load i32, i32* %317, align 8
  %319 = sext i32 %318 to i64
  %320 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %321 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %320, i32 0, i32 2
  %322 = load %struct.b2Position*, %struct.b2Position** %321, align 8
  %323 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %322, i64 %319
  %324 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %323, i32 0, i32 0
  %325 = bitcast %struct.b2Vec2* %324 to i8*
  %326 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 8, i32 4, i1 false)
  %327 = load float, float* %wB, align 4
  %328 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %10, i32 0, i32 8
  %329 = load i32, i32* %328, align 8
  %330 = sext i32 %329 to i64
  %331 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %332 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %331, i32 0, i32 2
  %333 = load %struct.b2Position*, %struct.b2Position** %332, align 8
  %334 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %333, i64 %330
  %335 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %334, i32 0, i32 1
  store float %327, float* %335, align 4
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  %2 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  %3 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  %2 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr { <2 x float>, <2 x float> } @_ZNK7b2Mat2210GetInverseEv(%struct.b2Transform* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Transform, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %d = alloca float, align 4
  %det = alloca float, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %2, align 8
  %3 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %4 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  store float %6, float* %a, align 4
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 1
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  store float %9, float* %b, align 4
  %10 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 0
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  store float %12, float* %c, align 4
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  store float %15, float* %d, align 4
  call void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %1)
  %16 = load float, float* %a, align 4
  %17 = load float, float* %d, align 4
  %18 = fmul float %16, %17
  %19 = load float, float* %b, align 4
  %20 = load float, float* %c, align 4
  %21 = fmul float %19, %20
  %22 = fsub float %18, %21
  store float %22, float* %det, align 4
  %23 = load float, float* %det, align 4
  %24 = fcmp une float %23, 0.000000e+00
  br i1 %24, label %25, label %28

; <label>:25                                      ; preds = %0
  %26 = load float, float* %det, align 4
  %27 = fdiv float 1.000000e+00, %26
  store float %27, float* %det, align 4
  br label %28

; <label>:28                                      ; preds = %25, %0
  %29 = load float, float* %det, align 4
  %30 = load float, float* %d, align 4
  %31 = fmul float %29, %30
  %32 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %1, i32 0, i32 0
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 0
  store float %31, float* %33, align 4
  %34 = load float, float* %det, align 4
  %35 = fsub float -0.000000e+00, %34
  %36 = load float, float* %b, align 4
  %37 = fmul float %35, %36
  %38 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %1, i32 0, i32 1
  %39 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %38, i32 0, i32 0
  store float %37, float* %39, align 4
  %40 = load float, float* %det, align 4
  %41 = fsub float -0.000000e+00, %40
  %42 = load float, float* %c, align 4
  %43 = fmul float %41, %42
  %44 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %1, i32 0, i32 0
  %45 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %44, i32 0, i32 1
  store float %43, float* %45, align 4
  %46 = load float, float* %det, align 4
  %47 = load float, float* %a, align 4
  %48 = fmul float %46, %47
  %49 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %1, i32 0, i32 1
  %50 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %49, i32 0, i32 1
  store float %48, float* %50, align 4
  %51 = bitcast %struct.b2Transform* %1 to { <2 x float>, <2 x float> }*
  %52 = load { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %51, align 4
  ret { <2 x float>, <2 x float> } %52
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  %2 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %3 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 0
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 1
  store float 0.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2FrictionJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %h = alloca float, align 4
  %Cdot = alloca float, align 4
  %impulse = alloca float, align 4
  %oldImpulse = alloca float, align 4
  %maxImpulse = alloca float, align 4
  %Cdot1 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %impulse2 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %oldImpulse3 = alloca %struct.b2Vec2, align 4
  %maxImpulse4 = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %11 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %12 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %16 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %15, i32 0, i32 2
  %17 = load %struct.b2Position*, %struct.b2Position** %16, align 8
  %18 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %17, i64 %14
  %19 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %18, i32 0, i32 0
  %20 = bitcast %struct.b2Vec2* %vA to i8*
  %21 = bitcast %struct.b2Vec2* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 4, i1 false)
  %22 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 7
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %26 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %25, i32 0, i32 2
  %27 = load %struct.b2Position*, %struct.b2Position** %26, align 8
  %28 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %27, i64 %24
  %29 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %28, i32 0, i32 1
  %30 = load float, float* %29, align 4
  store float %30, float* %wA, align 4
  %31 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 8
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %35 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %34, i32 0, i32 2
  %36 = load %struct.b2Position*, %struct.b2Position** %35, align 8
  %37 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %36, i64 %33
  %38 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %37, i32 0, i32 0
  %39 = bitcast %struct.b2Vec2* %vB to i8*
  %40 = bitcast %struct.b2Vec2* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false)
  %41 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %45 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %44, i32 0, i32 2
  %46 = load %struct.b2Position*, %struct.b2Position** %45, align 8
  %47 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %46, i64 %43
  %48 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %47, i32 0, i32 1
  %49 = load float, float* %48, align 4
  store float %49, float* %wB, align 4
  %50 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 13
  %51 = load float, float* %50, align 4
  store float %51, float* %mA, align 4
  %52 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 14
  %53 = load float, float* %52, align 8
  store float %53, float* %mB, align 4
  %54 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 15
  %55 = load float, float* %54, align 4
  store float %55, float* %iA, align 4
  %56 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 16
  %57 = load float, float* %56, align 8
  store float %57, float* %iB, align 4
  %58 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %59 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %58, i32 0, i32 0
  %60 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %59, i32 0, i32 0
  %61 = load float, float* %60, align 8
  store float %61, float* %h, align 4
  %62 = load float, float* %wB, align 4
  %63 = load float, float* %wA, align 4
  %64 = fsub float %62, %63
  store float %64, float* %Cdot, align 4
  %65 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 18
  %66 = load float, float* %65, align 4
  %67 = fsub float -0.000000e+00, %66
  %68 = load float, float* %Cdot, align 4
  %69 = fmul float %67, %68
  store float %69, float* %impulse, align 4
  %70 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 4
  %71 = load float, float* %70, align 8
  store float %71, float* %oldImpulse, align 4
  %72 = load float, float* %h, align 4
  %73 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 6
  %74 = load float, float* %73, align 8
  %75 = fmul float %72, %74
  store float %75, float* %maxImpulse, align 4
  %76 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 4
  %77 = load float, float* %76, align 8
  %78 = load float, float* %impulse, align 4
  %79 = fadd float %77, %78
  %80 = load float, float* %maxImpulse, align 4
  %81 = fsub float -0.000000e+00, %80
  %82 = load float, float* %maxImpulse, align 4
  %83 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %79, float %81, float %82)
  %84 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 4
  store float %83, float* %84, align 8
  %85 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 4
  %86 = load float, float* %85, align 8
  %87 = load float, float* %oldImpulse, align 4
  %88 = fsub float %86, %87
  store float %88, float* %impulse, align 4
  %89 = load float, float* %iA, align 4
  %90 = load float, float* %impulse, align 4
  %91 = fmul float %89, %90
  %92 = load float, float* %wA, align 4
  %93 = fsub float %92, %91
  store float %93, float* %wA, align 4
  %94 = load float, float* %iB, align 4
  %95 = load float, float* %impulse, align 4
  %96 = fmul float %94, %95
  %97 = load float, float* %wB, align 4
  %98 = fadd float %97, %96
  store float %98, float* %wB, align 4
  %99 = load float, float* %wB, align 4
  %100 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 10
  %101 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %99, %struct.b2Vec2* dereferenceable(8) %100)
  %102 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %101, <2 x float>* %102, align 4
  %103 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %5)
  %104 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %103, <2 x float>* %104, align 4
  %105 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %4, %struct.b2Vec2* dereferenceable(8) %vA)
  %106 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %105, <2 x float>* %106, align 4
  %107 = load float, float* %wA, align 4
  %108 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 9
  %109 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %107, %struct.b2Vec2* dereferenceable(8) %108)
  %110 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %109, <2 x float>* %110, align 4
  %111 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %6)
  %112 = bitcast %struct.b2Vec2* %Cdot1 to <2 x float>*
  store <2 x float> %111, <2 x float>* %112, align 4
  %113 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 17
  %114 = call <2 x float> @_Z5b2MulRK7b2Mat22RK6b2Vec2(%struct.b2Transform* dereferenceable(16) %113, %struct.b2Vec2* dereferenceable(8) %Cdot1)
  %115 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %114, <2 x float>* %115, align 4
  %116 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %7)
  %117 = bitcast %struct.b2Vec2* %impulse2 to <2 x float>*
  store <2 x float> %116, <2 x float>* %117, align 4
  %118 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 3
  %119 = bitcast %struct.b2Vec2* %oldImpulse3 to i8*
  %120 = bitcast %struct.b2Vec2* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 8, i32 4, i1 false)
  %121 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 3
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %121, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %122 = load float, float* %h, align 4
  %123 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 5
  %124 = load float, float* %123, align 4
  %125 = fmul float %122, %124
  store float %125, float* %maxImpulse4, align 4
  %126 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 3
  %127 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %126)
  %128 = load float, float* %maxImpulse4, align 4
  %129 = load float, float* %maxImpulse4, align 4
  %130 = fmul float %128, %129
  %131 = fcmp ogt float %127, %130
  br i1 %131, label %132, label %137

; <label>:132                                     ; preds = %0
  %133 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 3
  %134 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %133)
  %135 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 3
  %136 = load float, float* %maxImpulse4, align 4
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %135, float %136)
  br label %137

; <label>:137                                     ; preds = %132, %0
  %138 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 3
  %139 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %138, %struct.b2Vec2* dereferenceable(8) %oldImpulse3)
  %140 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %139, <2 x float>* %140, align 4
  %141 = bitcast %struct.b2Vec2* %impulse2 to i8*
  %142 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 4, i1 false)
  %143 = load float, float* %mA, align 4
  %144 = call <2 x float> @_ZmlfRK6b2Vec2(float %143, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %145 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %144, <2 x float>* %145, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %9)
  %146 = load float, float* %iA, align 4
  %147 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 9
  %148 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %147, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %149 = fmul float %146, %148
  %150 = load float, float* %wA, align 4
  %151 = fsub float %150, %149
  store float %151, float* %wA, align 4
  %152 = load float, float* %mB, align 4
  %153 = call <2 x float> @_ZmlfRK6b2Vec2(float %152, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %154 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %153, <2 x float>* %154, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %10)
  %155 = load float, float* %iB, align 4
  %156 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 10
  %157 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %156, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %158 = fmul float %155, %157
  %159 = load float, float* %wB, align 4
  %160 = fadd float %159, %158
  store float %160, float* %wB, align 4
  %161 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 7
  %162 = load i32, i32* %161, align 4
  %163 = sext i32 %162 to i64
  %164 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %165 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %164, i32 0, i32 2
  %166 = load %struct.b2Position*, %struct.b2Position** %165, align 8
  %167 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %166, i64 %163
  %168 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %167, i32 0, i32 0
  %169 = bitcast %struct.b2Vec2* %168 to i8*
  %170 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 8, i32 4, i1 false)
  %171 = load float, float* %wA, align 4
  %172 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 7
  %173 = load i32, i32* %172, align 4
  %174 = sext i32 %173 to i64
  %175 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %176 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %175, i32 0, i32 2
  %177 = load %struct.b2Position*, %struct.b2Position** %176, align 8
  %178 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %177, i64 %174
  %179 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %178, i32 0, i32 1
  store float %171, float* %179, align 4
  %180 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 8
  %181 = load i32, i32* %180, align 8
  %182 = sext i32 %181 to i64
  %183 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %184 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %183, i32 0, i32 2
  %185 = load %struct.b2Position*, %struct.b2Position** %184, align 8
  %186 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %185, i64 %182
  %187 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %186, i32 0, i32 0
  %188 = bitcast %struct.b2Vec2* %187 to i8*
  %189 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 8, i32 4, i1 false)
  %190 = load float, float* %wB, align 4
  %191 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %11, i32 0, i32 8
  %192 = load i32, i32* %191, align 8
  %193 = sext i32 %192 to i64
  %194 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %195 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %194, i32 0, i32 2
  %196 = load %struct.b2Position*, %struct.b2Position** %195, align 8
  %197 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %196, i64 %193
  %198 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %197, i32 0, i32 1
  store float %190, float* %198, align 4
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z5b2MulRK7b2Mat22RK6b2Vec2(%struct.b2Transform* dereferenceable(16) %A, %struct.b2Vec2* dereferenceable(8) %v) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Transform* %A, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fmul float %7, %10
  %12 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %17 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %16, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fmul float %15, %18
  %20 = fadd float %11, %19
  %21 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %22 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %22, i32 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i32 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = fmul float %24, %27
  %29 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %30 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %29, i32 0, i32 1
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %30, i32 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %34 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %33, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fmul float %32, %35
  %37 = fadd float %28, %36
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %20, float %37)
  %38 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  ret <2 x float> %39
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %1)
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fsub float -0.000000e+00, %5
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fsub float -0.000000e+00, %8
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %1, float %6, float %9)
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: nounwind uwtable
define linkonce_odr float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  %2 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %3 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fmul float %9, %11
  %13 = fadd float %7, %12
  ret float %13
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2FrictionJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %3 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %4 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  ret i1 true
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2GearJoint10GetAnchorAEv(%class.b2GearJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2GearJoint*, align 8
  store %class.b2GearJoint* %this, %class.b2GearJoint** %2, align 8
  %3 = load %class.b2GearJoint*, %class.b2GearJoint** %2, align 8
  %4 = bitcast %class.b2GearJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %3, i32 0, i32 7
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2GearJoint10GetAnchorBEv(%class.b2GearJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2GearJoint*, align 8
  store %class.b2GearJoint* %this, %class.b2GearJoint** %2, align 8
  %3 = load %class.b2GearJoint*, %class.b2GearJoint** %2, align 8
  %4 = bitcast %class.b2GearJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %3, i32 0, i32 8
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2GearJoint16GetReactionForceEf(%class.b2GearJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2GearJoint*, align 8
  %3 = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2GearJoint*, %class.b2GearJoint** %2, align 8
  %5 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %4, i32 0, i32 17
  %6 = load float, float* %5, align 8
  %7 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %4, i32 0, i32 34
  %8 = call <2 x float> @_ZmlfRK6b2Vec2(float %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = load float, float* %3, align 4
  %11 = call <2 x float> @_ZmlfRK6b2Vec2(float %10, %struct.b2Vec2* dereferenceable(8) %P)
  %12 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %11, <2 x float>* %12, align 4
  %13 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  ret <2 x float> %14
}

; Function Attrs: nounwind uwtable
define float @_ZNK11b2GearJoint17GetReactionTorqueEf(%class.b2GearJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca float, align 4
  %L = alloca float, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %4 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %3, i32 0, i32 17
  %5 = load float, float* %4, align 8
  %6 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %3, i32 0, i32 36
  %7 = load float, float* %6, align 4
  %8 = fmul float %5, %7
  store float %8, float* %L, align 4
  %9 = load float, float* %2, align 4
  %10 = load float, float* %L, align 4
  %11 = fmul float %9, %10
  ret float %11
}

; Function Attrs: uwtable
define void @_ZN11b2GearJoint4DumpEv(%class.b2GearJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %index1 = alloca i32, align 4
  %index2 = alloca i32, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  %2 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %3 = bitcast %class.b2GearJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2GearJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  %13 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %2, i32 0, i32 1
  %14 = load %class.b2Joint*, %class.b2Joint** %13, align 8
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 8
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %index1, align 4
  %17 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %2, i32 0, i32 2
  %18 = load %class.b2Joint*, %class.b2Joint** %17, align 8
  %19 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %18, i32 0, i32 8
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %index2, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.15, i32 0, i32 0))
  %21 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0), i32 %21)
  %22 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.17, i32 0, i32 0), i32 %22)
  %23 = bitcast %class.b2GearJoint* %2 to %class.b2Joint*
  %24 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %23, i32 0, i32 10
  %25 = load i8, i8* %24, align 1
  %26 = trunc i8 %25 to i1
  %27 = zext i1 %26 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.18, i32 0, i32 0), i32 %27)
  %28 = load i32, i32* %index1, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i32 %28)
  %29 = load i32, i32* %index2, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.20, i32 0, i32 0), i32 %29)
  %30 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %2, i32 0, i32 16
  %31 = load float, float* %30, align 4
  %32 = fpext float %31 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.21, i32 0, i32 0), double %32)
  %33 = bitcast %class.b2GearJoint* %2 to %class.b2Joint*
  %34 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %33, i32 0, i32 8
  %35 = load i32, i32* %34, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11.22, i32 0, i32 0), i32 %35)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN11b2GearJointD2Ev(%class.b2GearJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  %2 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %3 = bitcast %class.b2GearJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN11b2GearJointD0Ev(%class.b2GearJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  %4 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  invoke void @_ZN11b2GearJointD2Ev(%class.b2GearJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2GearJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2GearJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2GearJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %aC = alloca float, align 4
  %vC = alloca %struct.b2Vec2, align 4
  %wC = alloca float, align 4
  %aD = alloca float, align 4
  %vD = alloca %struct.b2Vec2, align 4
  %wD = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %qC = alloca %struct.b2Vec2, align 4
  %qD = alloca %struct.b2Vec2, align 4
  %u = alloca %struct.b2Vec2, align 4
  %rC = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %u1 = alloca %struct.b2Vec2, align 4
  %rD = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %12 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %13 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %14 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %13, i32 0, i32 6
  %15 = load %class.b2Body*, %class.b2Body** %14, align 8
  %16 = getelementptr inbounds %class.b2Body, %class.b2Body* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 18
  store i32 %17, i32* %18, align 4
  %19 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %20 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %19, i32 0, i32 7
  %21 = load %class.b2Body*, %class.b2Body** %20, align 8
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 19
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 5
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %26, i32 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 20
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 6
  %31 = load %class.b2Body*, %class.b2Body** %30, align 8
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 21
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 22
  %36 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %37 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %36, i32 0, i32 6
  %38 = load %class.b2Body*, %class.b2Body** %37, align 8
  %39 = getelementptr inbounds %class.b2Body, %class.b2Body* %38, i32 0, i32 4
  %40 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %39, i32 0, i32 0
  %41 = bitcast %struct.b2Vec2* %35 to i8*
  %42 = bitcast %struct.b2Vec2* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  %43 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 23
  %44 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %45 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %44, i32 0, i32 7
  %46 = load %class.b2Body*, %class.b2Body** %45, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 4
  %48 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %47, i32 0, i32 0
  %49 = bitcast %struct.b2Vec2* %43 to i8*
  %50 = bitcast %struct.b2Vec2* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 4, i1 false)
  %51 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 24
  %52 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 5
  %53 = load %class.b2Body*, %class.b2Body** %52, align 8
  %54 = getelementptr inbounds %class.b2Body, %class.b2Body* %53, i32 0, i32 4
  %55 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %54, i32 0, i32 0
  %56 = bitcast %struct.b2Vec2* %51 to i8*
  %57 = bitcast %struct.b2Vec2* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 4, i1 false)
  %58 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 25
  %59 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 6
  %60 = load %class.b2Body*, %class.b2Body** %59, align 8
  %61 = getelementptr inbounds %class.b2Body, %class.b2Body* %60, i32 0, i32 4
  %62 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %61, i32 0, i32 0
  %63 = bitcast %struct.b2Vec2* %58 to i8*
  %64 = bitcast %struct.b2Vec2* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 4, i1 false)
  %65 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %66 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %65, i32 0, i32 6
  %67 = load %class.b2Body*, %class.b2Body** %66, align 8
  %68 = getelementptr inbounds %class.b2Body, %class.b2Body* %67, i32 0, i32 17
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 26
  store float %69, float* %70, align 4
  %71 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %72 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %71, i32 0, i32 7
  %73 = load %class.b2Body*, %class.b2Body** %72, align 8
  %74 = getelementptr inbounds %class.b2Body, %class.b2Body* %73, i32 0, i32 17
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 27
  store float %75, float* %76, align 8
  %77 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 5
  %78 = load %class.b2Body*, %class.b2Body** %77, align 8
  %79 = getelementptr inbounds %class.b2Body, %class.b2Body* %78, i32 0, i32 17
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 28
  store float %80, float* %81, align 4
  %82 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 6
  %83 = load %class.b2Body*, %class.b2Body** %82, align 8
  %84 = getelementptr inbounds %class.b2Body, %class.b2Body* %83, i32 0, i32 17
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 29
  store float %85, float* %86, align 8
  %87 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %88 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %87, i32 0, i32 6
  %89 = load %class.b2Body*, %class.b2Body** %88, align 8
  %90 = getelementptr inbounds %class.b2Body, %class.b2Body* %89, i32 0, i32 19
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 30
  store float %91, float* %92, align 4
  %93 = bitcast %class.b2GearJoint* %12 to %class.b2Joint*
  %94 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %93, i32 0, i32 7
  %95 = load %class.b2Body*, %class.b2Body** %94, align 8
  %96 = getelementptr inbounds %class.b2Body, %class.b2Body* %95, i32 0, i32 19
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 31
  store float %97, float* %98, align 8
  %99 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 5
  %100 = load %class.b2Body*, %class.b2Body** %99, align 8
  %101 = getelementptr inbounds %class.b2Body, %class.b2Body* %100, i32 0, i32 19
  %102 = load float, float* %101, align 4
  %103 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 32
  store float %102, float* %103, align 4
  %104 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 6
  %105 = load %class.b2Body*, %class.b2Body** %104, align 8
  %106 = getelementptr inbounds %class.b2Body, %class.b2Body* %105, i32 0, i32 19
  %107 = load float, float* %106, align 4
  %108 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 33
  store float %107, float* %108, align 8
  %109 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 18
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %113 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %112, i32 0, i32 1
  %114 = load %struct.b2Position*, %struct.b2Position** %113, align 8
  %115 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %114, i64 %111
  %116 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %115, i32 0, i32 1
  %117 = load float, float* %116, align 4
  store float %117, float* %aA, align 4
  %118 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 18
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %122 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %121, i32 0, i32 2
  %123 = load %struct.b2Position*, %struct.b2Position** %122, align 8
  %124 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %123, i64 %120
  %125 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %124, i32 0, i32 0
  %126 = bitcast %struct.b2Vec2* %vA to i8*
  %127 = bitcast %struct.b2Vec2* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 8, i32 4, i1 false)
  %128 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 18
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %132 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %131, i32 0, i32 2
  %133 = load %struct.b2Position*, %struct.b2Position** %132, align 8
  %134 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %133, i64 %130
  %135 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %134, i32 0, i32 1
  %136 = load float, float* %135, align 4
  store float %136, float* %wA, align 4
  %137 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 19
  %138 = load i32, i32* %137, align 8
  %139 = sext i32 %138 to i64
  %140 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %141 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %140, i32 0, i32 1
  %142 = load %struct.b2Position*, %struct.b2Position** %141, align 8
  %143 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %142, i64 %139
  %144 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %143, i32 0, i32 1
  %145 = load float, float* %144, align 4
  store float %145, float* %aB, align 4
  %146 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 19
  %147 = load i32, i32* %146, align 8
  %148 = sext i32 %147 to i64
  %149 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %150 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %149, i32 0, i32 2
  %151 = load %struct.b2Position*, %struct.b2Position** %150, align 8
  %152 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %151, i64 %148
  %153 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %152, i32 0, i32 0
  %154 = bitcast %struct.b2Vec2* %vB to i8*
  %155 = bitcast %struct.b2Vec2* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 8, i32 4, i1 false)
  %156 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 19
  %157 = load i32, i32* %156, align 8
  %158 = sext i32 %157 to i64
  %159 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %160 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %159, i32 0, i32 2
  %161 = load %struct.b2Position*, %struct.b2Position** %160, align 8
  %162 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %161, i64 %158
  %163 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %162, i32 0, i32 1
  %164 = load float, float* %163, align 4
  store float %164, float* %wB, align 4
  %165 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 20
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %169 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %168, i32 0, i32 1
  %170 = load %struct.b2Position*, %struct.b2Position** %169, align 8
  %171 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %170, i64 %167
  %172 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %171, i32 0, i32 1
  %173 = load float, float* %172, align 4
  store float %173, float* %aC, align 4
  %174 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 20
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %178 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %177, i32 0, i32 2
  %179 = load %struct.b2Position*, %struct.b2Position** %178, align 8
  %180 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %179, i64 %176
  %181 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %180, i32 0, i32 0
  %182 = bitcast %struct.b2Vec2* %vC to i8*
  %183 = bitcast %struct.b2Vec2* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %183, i64 8, i32 4, i1 false)
  %184 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 20
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %188 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %187, i32 0, i32 2
  %189 = load %struct.b2Position*, %struct.b2Position** %188, align 8
  %190 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %189, i64 %186
  %191 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %190, i32 0, i32 1
  %192 = load float, float* %191, align 4
  store float %192, float* %wC, align 4
  %193 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 21
  %194 = load i32, i32* %193, align 8
  %195 = sext i32 %194 to i64
  %196 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %197 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %196, i32 0, i32 1
  %198 = load %struct.b2Position*, %struct.b2Position** %197, align 8
  %199 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %198, i64 %195
  %200 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %199, i32 0, i32 1
  %201 = load float, float* %200, align 4
  store float %201, float* %aD, align 4
  %202 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 21
  %203 = load i32, i32* %202, align 8
  %204 = sext i32 %203 to i64
  %205 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %206 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %205, i32 0, i32 2
  %207 = load %struct.b2Position*, %struct.b2Position** %206, align 8
  %208 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %207, i64 %204
  %209 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %208, i32 0, i32 0
  %210 = bitcast %struct.b2Vec2* %vD to i8*
  %211 = bitcast %struct.b2Vec2* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 8, i32 4, i1 false)
  %212 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 21
  %213 = load i32, i32* %212, align 8
  %214 = sext i32 %213 to i64
  %215 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %216 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %215, i32 0, i32 2
  %217 = load %struct.b2Position*, %struct.b2Position** %216, align 8
  %218 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %217, i64 %214
  %219 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %218, i32 0, i32 1
  %220 = load float, float* %219, align 4
  store float %220, float* %wD, align 4
  %221 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %221)
  %222 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %222)
  %223 = load float, float* %aC, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qC, float %223)
  %224 = load float, float* %aD, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qD, float %224)
  %225 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  store float 0.000000e+00, float* %225, align 4
  %226 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 3
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %241

; <label>:229                                     ; preds = %0
  %230 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 34
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %230)
  %231 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 36
  store float 1.000000e+00, float* %231, align 4
  %232 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 38
  store float 1.000000e+00, float* %232, align 4
  %233 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 30
  %234 = load float, float* %233, align 4
  %235 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 32
  %236 = load float, float* %235, align 4
  %237 = fadd float %234, %236
  %238 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  %239 = load float, float* %238, align 4
  %240 = fadd float %239, %237
  store float %240, float* %238, align 4
  br label %290

; <label>:241                                     ; preds = %0
  %242 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 11
  %243 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qC, %struct.b2Vec2* dereferenceable(8) %242)
  %244 = bitcast %struct.b2Vec2* %u to <2 x float>*
  store <2 x float> %243, <2 x float>* %244, align 4
  %245 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 9
  %246 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 24
  %247 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %245, %struct.b2Vec2* dereferenceable(8) %246)
  %248 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %247, <2 x float>* %248, align 4
  %249 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qC, %struct.b2Vec2* dereferenceable(8) %3)
  %250 = bitcast %struct.b2Vec2* %rC to <2 x float>*
  store <2 x float> %249, <2 x float>* %250, align 4
  %251 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 7
  %252 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 22
  %253 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %251, %struct.b2Vec2* dereferenceable(8) %252)
  %254 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %253, <2 x float>* %254, align 4
  %255 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %256 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %255, <2 x float>* %256, align 4
  %257 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 34
  %258 = bitcast %struct.b2Vec2* %257 to i8*
  %259 = bitcast %struct.b2Vec2* %u to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %258, i8* %259, i64 8, i32 4, i1 false)
  %260 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rC, %struct.b2Vec2* dereferenceable(8) %u)
  %261 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 38
  store float %260, float* %261, align 4
  %262 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %u)
  %263 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 36
  store float %262, float* %263, align 4
  %264 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 28
  %265 = load float, float* %264, align 4
  %266 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 26
  %267 = load float, float* %266, align 4
  %268 = fadd float %265, %267
  %269 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 32
  %270 = load float, float* %269, align 4
  %271 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 38
  %272 = load float, float* %271, align 4
  %273 = fmul float %270, %272
  %274 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 38
  %275 = load float, float* %274, align 4
  %276 = fmul float %273, %275
  %277 = fadd float %268, %276
  %278 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 30
  %279 = load float, float* %278, align 4
  %280 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 36
  %281 = load float, float* %280, align 4
  %282 = fmul float %279, %281
  %283 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 36
  %284 = load float, float* %283, align 4
  %285 = fmul float %282, %284
  %286 = fadd float %277, %285
  %287 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  %288 = load float, float* %287, align 4
  %289 = fadd float %288, %286
  store float %289, float* %287, align 4
  br label %290

; <label>:290                                     ; preds = %241, %229
  %291 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 4
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 1
  br i1 %293, label %294, label %316

; <label>:294                                     ; preds = %290
  %295 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 35
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %295)
  %296 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 37
  store float %297, float* %298, align 8
  %299 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %300 = load float, float* %299, align 4
  %301 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 39
  store float %300, float* %301, align 8
  %302 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %305 = load float, float* %304, align 4
  %306 = fmul float %303, %305
  %307 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 31
  %308 = load float, float* %307, align 8
  %309 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 33
  %310 = load float, float* %309, align 8
  %311 = fadd float %308, %310
  %312 = fmul float %306, %311
  %313 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  %314 = load float, float* %313, align 4
  %315 = fadd float %314, %312
  store float %315, float* %313, align 4
  br label %381

; <label>:316                                     ; preds = %290
  %317 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 12
  %318 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qD, %struct.b2Vec2* dereferenceable(8) %317)
  %319 = bitcast %struct.b2Vec2* %u1 to <2 x float>*
  store <2 x float> %318, <2 x float>* %319, align 4
  %320 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 10
  %321 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 25
  %322 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %320, %struct.b2Vec2* dereferenceable(8) %321)
  %323 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %322, <2 x float>* %323, align 4
  %324 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qD, %struct.b2Vec2* dereferenceable(8) %5)
  %325 = bitcast %struct.b2Vec2* %rD to <2 x float>*
  store <2 x float> %324, <2 x float>* %325, align 4
  %326 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 8
  %327 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 23
  %328 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %326, %struct.b2Vec2* dereferenceable(8) %327)
  %329 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %328, <2 x float>* %329, align 4
  %330 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %331 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %330, <2 x float>* %331, align 4
  %332 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 35
  %333 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %334 = load float, float* %333, align 4
  %335 = call <2 x float> @_ZmlfRK6b2Vec2(float %334, %struct.b2Vec2* dereferenceable(8) %u1)
  %336 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %335, <2 x float>* %336, align 4
  %337 = bitcast %struct.b2Vec2* %332 to i8*
  %338 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %337, i8* %338, i64 8, i32 4, i1 false)
  %339 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %340 = load float, float* %339, align 4
  %341 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rD, %struct.b2Vec2* dereferenceable(8) %u1)
  %342 = fmul float %340, %341
  %343 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 39
  store float %342, float* %343, align 8
  %344 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %345 = load float, float* %344, align 4
  %346 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %u1)
  %347 = fmul float %345, %346
  %348 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 37
  store float %347, float* %348, align 8
  %349 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %350 = load float, float* %349, align 4
  %351 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 16
  %352 = load float, float* %351, align 4
  %353 = fmul float %350, %352
  %354 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 29
  %355 = load float, float* %354, align 8
  %356 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 27
  %357 = load float, float* %356, align 8
  %358 = fadd float %355, %357
  %359 = fmul float %353, %358
  %360 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 33
  %361 = load float, float* %360, align 8
  %362 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 39
  %363 = load float, float* %362, align 8
  %364 = fmul float %361, %363
  %365 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 39
  %366 = load float, float* %365, align 8
  %367 = fmul float %364, %366
  %368 = fadd float %359, %367
  %369 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 31
  %370 = load float, float* %369, align 8
  %371 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 37
  %372 = load float, float* %371, align 8
  %373 = fmul float %370, %372
  %374 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 37
  %375 = load float, float* %374, align 8
  %376 = fmul float %373, %375
  %377 = fadd float %368, %376
  %378 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  %379 = load float, float* %378, align 4
  %380 = fadd float %379, %377
  store float %380, float* %378, align 4
  br label %381

; <label>:381                                     ; preds = %316, %294
  %382 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  %383 = load float, float* %382, align 4
  %384 = fcmp ogt float %383, 0.000000e+00
  br i1 %384, label %385, label %389

; <label>:385                                     ; preds = %381
  %386 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  %387 = load float, float* %386, align 4
  %388 = fdiv float 1.000000e+00, %387
  br label %390

; <label>:389                                     ; preds = %381
  br label %390

; <label>:390                                     ; preds = %389, %385
  %391 = phi float [ %388, %385 ], [ 0.000000e+00, %389 ]
  %392 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 40
  store float %391, float* %392, align 4
  %393 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %394 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %393, i32 0, i32 0
  %395 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %394, i32 0, i32 5
  %396 = load i8, i8* %395, align 4
  %397 = trunc i8 %396 to i1
  br i1 %397, label %398, label %471

; <label>:398                                     ; preds = %390
  %399 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 26
  %400 = load float, float* %399, align 4
  %401 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %402 = load float, float* %401, align 8
  %403 = fmul float %400, %402
  %404 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 34
  %405 = call <2 x float> @_ZmlfRK6b2Vec2(float %403, %struct.b2Vec2* dereferenceable(8) %404)
  %406 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %405, <2 x float>* %406, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %8)
  %407 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 30
  %408 = load float, float* %407, align 4
  %409 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %410 = load float, float* %409, align 8
  %411 = fmul float %408, %410
  %412 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 36
  %413 = load float, float* %412, align 4
  %414 = fmul float %411, %413
  %415 = load float, float* %wA, align 4
  %416 = fadd float %415, %414
  store float %416, float* %wA, align 4
  %417 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 27
  %418 = load float, float* %417, align 8
  %419 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %420 = load float, float* %419, align 8
  %421 = fmul float %418, %420
  %422 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 35
  %423 = call <2 x float> @_ZmlfRK6b2Vec2(float %421, %struct.b2Vec2* dereferenceable(8) %422)
  %424 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %423, <2 x float>* %424, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %9)
  %425 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 31
  %426 = load float, float* %425, align 8
  %427 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %428 = load float, float* %427, align 8
  %429 = fmul float %426, %428
  %430 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 37
  %431 = load float, float* %430, align 8
  %432 = fmul float %429, %431
  %433 = load float, float* %wB, align 4
  %434 = fadd float %433, %432
  store float %434, float* %wB, align 4
  %435 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 28
  %436 = load float, float* %435, align 4
  %437 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %438 = load float, float* %437, align 8
  %439 = fmul float %436, %438
  %440 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 34
  %441 = call <2 x float> @_ZmlfRK6b2Vec2(float %439, %struct.b2Vec2* dereferenceable(8) %440)
  %442 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %441, <2 x float>* %442, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vC, %struct.b2Vec2* dereferenceable(8) %10)
  %443 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 32
  %444 = load float, float* %443, align 4
  %445 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %446 = load float, float* %445, align 8
  %447 = fmul float %444, %446
  %448 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 38
  %449 = load float, float* %448, align 4
  %450 = fmul float %447, %449
  %451 = load float, float* %wC, align 4
  %452 = fsub float %451, %450
  store float %452, float* %wC, align 4
  %453 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 29
  %454 = load float, float* %453, align 8
  %455 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %456 = load float, float* %455, align 8
  %457 = fmul float %454, %456
  %458 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 35
  %459 = call <2 x float> @_ZmlfRK6b2Vec2(float %457, %struct.b2Vec2* dereferenceable(8) %458)
  %460 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %459, <2 x float>* %460, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vD, %struct.b2Vec2* dereferenceable(8) %11)
  %461 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 33
  %462 = load float, float* %461, align 8
  %463 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  %464 = load float, float* %463, align 8
  %465 = fmul float %462, %464
  %466 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 39
  %467 = load float, float* %466, align 8
  %468 = fmul float %465, %467
  %469 = load float, float* %wD, align 4
  %470 = fsub float %469, %468
  store float %470, float* %wD, align 4
  br label %473

; <label>:471                                     ; preds = %390
  %472 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 17
  store float 0.000000e+00, float* %472, align 8
  br label %473

; <label>:473                                     ; preds = %471, %398
  %474 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 18
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %478 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %477, i32 0, i32 2
  %479 = load %struct.b2Position*, %struct.b2Position** %478, align 8
  %480 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %479, i64 %476
  %481 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %480, i32 0, i32 0
  %482 = bitcast %struct.b2Vec2* %481 to i8*
  %483 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %482, i8* %483, i64 8, i32 4, i1 false)
  %484 = load float, float* %wA, align 4
  %485 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 18
  %486 = load i32, i32* %485, align 4
  %487 = sext i32 %486 to i64
  %488 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %489 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %488, i32 0, i32 2
  %490 = load %struct.b2Position*, %struct.b2Position** %489, align 8
  %491 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %490, i64 %487
  %492 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %491, i32 0, i32 1
  store float %484, float* %492, align 4
  %493 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 19
  %494 = load i32, i32* %493, align 8
  %495 = sext i32 %494 to i64
  %496 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %497 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %496, i32 0, i32 2
  %498 = load %struct.b2Position*, %struct.b2Position** %497, align 8
  %499 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %498, i64 %495
  %500 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %499, i32 0, i32 0
  %501 = bitcast %struct.b2Vec2* %500 to i8*
  %502 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %501, i8* %502, i64 8, i32 4, i1 false)
  %503 = load float, float* %wB, align 4
  %504 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 19
  %505 = load i32, i32* %504, align 8
  %506 = sext i32 %505 to i64
  %507 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %508 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %507, i32 0, i32 2
  %509 = load %struct.b2Position*, %struct.b2Position** %508, align 8
  %510 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %509, i64 %506
  %511 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %510, i32 0, i32 1
  store float %503, float* %511, align 4
  %512 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 20
  %513 = load i32, i32* %512, align 4
  %514 = sext i32 %513 to i64
  %515 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %516 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %515, i32 0, i32 2
  %517 = load %struct.b2Position*, %struct.b2Position** %516, align 8
  %518 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %517, i64 %514
  %519 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %518, i32 0, i32 0
  %520 = bitcast %struct.b2Vec2* %519 to i8*
  %521 = bitcast %struct.b2Vec2* %vC to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %520, i8* %521, i64 8, i32 4, i1 false)
  %522 = load float, float* %wC, align 4
  %523 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 20
  %524 = load i32, i32* %523, align 4
  %525 = sext i32 %524 to i64
  %526 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %527 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %526, i32 0, i32 2
  %528 = load %struct.b2Position*, %struct.b2Position** %527, align 8
  %529 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %528, i64 %525
  %530 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %529, i32 0, i32 1
  store float %522, float* %530, align 4
  %531 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 21
  %532 = load i32, i32* %531, align 8
  %533 = sext i32 %532 to i64
  %534 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %535 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %534, i32 0, i32 2
  %536 = load %struct.b2Position*, %struct.b2Position** %535, align 8
  %537 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %536, i64 %533
  %538 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %537, i32 0, i32 0
  %539 = bitcast %struct.b2Vec2* %538 to i8*
  %540 = bitcast %struct.b2Vec2* %vD to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %539, i8* %540, i64 8, i32 4, i1 false)
  %541 = load float, float* %wD, align 4
  %542 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %12, i32 0, i32 21
  %543 = load i32, i32* %542, align 8
  %544 = sext i32 %543 to i64
  %545 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %546 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %545, i32 0, i32 2
  %547 = load %struct.b2Position*, %struct.b2Position** %546, align 8
  %548 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %547, i64 %544
  %549 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %548, i32 0, i32 1
  store float %541, float* %549, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2GearJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %vC = alloca %struct.b2Vec2, align 4
  %wC = alloca float, align 4
  %vD = alloca %struct.b2Vec2, align 4
  %wD = alloca float, align 4
  %Cdot = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %impulse = alloca float, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %10 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 18
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %14 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %13, i32 0, i32 2
  %15 = load %struct.b2Position*, %struct.b2Position** %14, align 8
  %16 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %15, i64 %12
  %17 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %16, i32 0, i32 0
  %18 = bitcast %struct.b2Vec2* %vA to i8*
  %19 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 18
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %24 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %23, i32 0, i32 2
  %25 = load %struct.b2Position*, %struct.b2Position** %24, align 8
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i64 %22
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i32 0, i32 1
  %28 = load float, float* %27, align 4
  store float %28, float* %wA, align 4
  %29 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 19
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %33 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %32, i32 0, i32 2
  %34 = load %struct.b2Position*, %struct.b2Position** %33, align 8
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i64 %31
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i32 0, i32 0
  %37 = bitcast %struct.b2Vec2* %vB to i8*
  %38 = bitcast %struct.b2Vec2* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 19
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %43 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %42, i32 0, i32 2
  %44 = load %struct.b2Position*, %struct.b2Position** %43, align 8
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i64 %41
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i32 0, i32 1
  %47 = load float, float* %46, align 4
  store float %47, float* %wB, align 4
  %48 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 20
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %52 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %51, i32 0, i32 2
  %53 = load %struct.b2Position*, %struct.b2Position** %52, align 8
  %54 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %53, i64 %50
  %55 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %54, i32 0, i32 0
  %56 = bitcast %struct.b2Vec2* %vC to i8*
  %57 = bitcast %struct.b2Vec2* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 4, i1 false)
  %58 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 20
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %62 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %61, i32 0, i32 2
  %63 = load %struct.b2Position*, %struct.b2Position** %62, align 8
  %64 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %63, i64 %60
  %65 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %64, i32 0, i32 1
  %66 = load float, float* %65, align 4
  store float %66, float* %wC, align 4
  %67 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 21
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  %70 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %71 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %70, i32 0, i32 2
  %72 = load %struct.b2Position*, %struct.b2Position** %71, align 8
  %73 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %72, i64 %69
  %74 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %73, i32 0, i32 0
  %75 = bitcast %struct.b2Vec2* %vD to i8*
  %76 = bitcast %struct.b2Vec2* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 4, i1 false)
  %77 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 21
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %81 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %80, i32 0, i32 2
  %82 = load %struct.b2Position*, %struct.b2Position** %81, align 8
  %83 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %82, i64 %79
  %84 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %83, i32 0, i32 1
  %85 = load float, float* %84, align 4
  store float %85, float* %wD, align 4
  %86 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 34
  %87 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vA, %struct.b2Vec2* dereferenceable(8) %vC)
  %88 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %87, <2 x float>* %88, align 4
  %89 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %86, %struct.b2Vec2* dereferenceable(8) %3)
  %90 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 35
  %91 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %vD)
  %92 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %91, <2 x float>* %92, align 4
  %93 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %90, %struct.b2Vec2* dereferenceable(8) %4)
  %94 = fadd float %89, %93
  store float %94, float* %Cdot, align 4
  %95 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 36
  %96 = load float, float* %95, align 4
  %97 = load float, float* %wA, align 4
  %98 = fmul float %96, %97
  %99 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 38
  %100 = load float, float* %99, align 4
  %101 = load float, float* %wC, align 4
  %102 = fmul float %100, %101
  %103 = fsub float %98, %102
  %104 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 37
  %105 = load float, float* %104, align 8
  %106 = load float, float* %wB, align 4
  %107 = fmul float %105, %106
  %108 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 39
  %109 = load float, float* %108, align 8
  %110 = load float, float* %wD, align 4
  %111 = fmul float %109, %110
  %112 = fsub float %107, %111
  %113 = fadd float %103, %112
  %114 = load float, float* %Cdot, align 4
  %115 = fadd float %114, %113
  store float %115, float* %Cdot, align 4
  %116 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 40
  %117 = load float, float* %116, align 4
  %118 = fsub float -0.000000e+00, %117
  %119 = load float, float* %Cdot, align 4
  %120 = fmul float %118, %119
  store float %120, float* %impulse, align 4
  %121 = load float, float* %impulse, align 4
  %122 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 17
  %123 = load float, float* %122, align 8
  %124 = fadd float %123, %121
  store float %124, float* %122, align 8
  %125 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 26
  %126 = load float, float* %125, align 4
  %127 = load float, float* %impulse, align 4
  %128 = fmul float %126, %127
  %129 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 34
  %130 = call <2 x float> @_ZmlfRK6b2Vec2(float %128, %struct.b2Vec2* dereferenceable(8) %129)
  %131 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %130, <2 x float>* %131, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %5)
  %132 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 30
  %133 = load float, float* %132, align 4
  %134 = load float, float* %impulse, align 4
  %135 = fmul float %133, %134
  %136 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 36
  %137 = load float, float* %136, align 4
  %138 = fmul float %135, %137
  %139 = load float, float* %wA, align 4
  %140 = fadd float %139, %138
  store float %140, float* %wA, align 4
  %141 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 27
  %142 = load float, float* %141, align 8
  %143 = load float, float* %impulse, align 4
  %144 = fmul float %142, %143
  %145 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 35
  %146 = call <2 x float> @_ZmlfRK6b2Vec2(float %144, %struct.b2Vec2* dereferenceable(8) %145)
  %147 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %6)
  %148 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 31
  %149 = load float, float* %148, align 8
  %150 = load float, float* %impulse, align 4
  %151 = fmul float %149, %150
  %152 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 37
  %153 = load float, float* %152, align 8
  %154 = fmul float %151, %153
  %155 = load float, float* %wB, align 4
  %156 = fadd float %155, %154
  store float %156, float* %wB, align 4
  %157 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 28
  %158 = load float, float* %157, align 4
  %159 = load float, float* %impulse, align 4
  %160 = fmul float %158, %159
  %161 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 34
  %162 = call <2 x float> @_ZmlfRK6b2Vec2(float %160, %struct.b2Vec2* dereferenceable(8) %161)
  %163 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vC, %struct.b2Vec2* dereferenceable(8) %7)
  %164 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 32
  %165 = load float, float* %164, align 4
  %166 = load float, float* %impulse, align 4
  %167 = fmul float %165, %166
  %168 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 38
  %169 = load float, float* %168, align 4
  %170 = fmul float %167, %169
  %171 = load float, float* %wC, align 4
  %172 = fsub float %171, %170
  store float %172, float* %wC, align 4
  %173 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 29
  %174 = load float, float* %173, align 8
  %175 = load float, float* %impulse, align 4
  %176 = fmul float %174, %175
  %177 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 35
  %178 = call <2 x float> @_ZmlfRK6b2Vec2(float %176, %struct.b2Vec2* dereferenceable(8) %177)
  %179 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %178, <2 x float>* %179, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vD, %struct.b2Vec2* dereferenceable(8) %8)
  %180 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 33
  %181 = load float, float* %180, align 8
  %182 = load float, float* %impulse, align 4
  %183 = fmul float %181, %182
  %184 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 39
  %185 = load float, float* %184, align 8
  %186 = fmul float %183, %185
  %187 = load float, float* %wD, align 4
  %188 = fsub float %187, %186
  store float %188, float* %wD, align 4
  %189 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 18
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %193 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %192, i32 0, i32 2
  %194 = load %struct.b2Position*, %struct.b2Position** %193, align 8
  %195 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %194, i64 %191
  %196 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %195, i32 0, i32 0
  %197 = bitcast %struct.b2Vec2* %196 to i8*
  %198 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 8, i32 4, i1 false)
  %199 = load float, float* %wA, align 4
  %200 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 18
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %204 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %203, i32 0, i32 2
  %205 = load %struct.b2Position*, %struct.b2Position** %204, align 8
  %206 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %205, i64 %202
  %207 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %206, i32 0, i32 1
  store float %199, float* %207, align 4
  %208 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 19
  %209 = load i32, i32* %208, align 8
  %210 = sext i32 %209 to i64
  %211 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %212 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %211, i32 0, i32 2
  %213 = load %struct.b2Position*, %struct.b2Position** %212, align 8
  %214 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %213, i64 %210
  %215 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %214, i32 0, i32 0
  %216 = bitcast %struct.b2Vec2* %215 to i8*
  %217 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %216, i8* %217, i64 8, i32 4, i1 false)
  %218 = load float, float* %wB, align 4
  %219 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 19
  %220 = load i32, i32* %219, align 8
  %221 = sext i32 %220 to i64
  %222 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %223 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %222, i32 0, i32 2
  %224 = load %struct.b2Position*, %struct.b2Position** %223, align 8
  %225 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %224, i64 %221
  %226 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %225, i32 0, i32 1
  store float %218, float* %226, align 4
  %227 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 20
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %231 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %230, i32 0, i32 2
  %232 = load %struct.b2Position*, %struct.b2Position** %231, align 8
  %233 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %232, i64 %229
  %234 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %233, i32 0, i32 0
  %235 = bitcast %struct.b2Vec2* %234 to i8*
  %236 = bitcast %struct.b2Vec2* %vC to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %236, i64 8, i32 4, i1 false)
  %237 = load float, float* %wC, align 4
  %238 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 20
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %239 to i64
  %241 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %242 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %241, i32 0, i32 2
  %243 = load %struct.b2Position*, %struct.b2Position** %242, align 8
  %244 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %243, i64 %240
  %245 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %244, i32 0, i32 1
  store float %237, float* %245, align 4
  %246 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 21
  %247 = load i32, i32* %246, align 8
  %248 = sext i32 %247 to i64
  %249 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %250 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %249, i32 0, i32 2
  %251 = load %struct.b2Position*, %struct.b2Position** %250, align 8
  %252 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %251, i64 %248
  %253 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %252, i32 0, i32 0
  %254 = bitcast %struct.b2Vec2* %253 to i8*
  %255 = bitcast %struct.b2Vec2* %vD to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %254, i8* %255, i64 8, i32 4, i1 false)
  %256 = load float, float* %wD, align 4
  %257 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %9, i32 0, i32 21
  %258 = load i32, i32* %257, align 8
  %259 = sext i32 %258 to i64
  %260 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %261 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %260, i32 0, i32 2
  %262 = load %struct.b2Position*, %struct.b2Position** %261, align 8
  %263 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %262, i64 %259
  %264 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %263, i32 0, i32 1
  store float %256, float* %264, align 4
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2GearJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %cC = alloca %struct.b2Vec2, align 4
  %aC = alloca float, align 4
  %cD = alloca %struct.b2Vec2, align 4
  %aD = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %qC = alloca %struct.b2Vec2, align 4
  %qD = alloca %struct.b2Vec2, align 4
  %linearError = alloca float, align 4
  %coordinateA = alloca float, align 4
  %coordinateB = alloca float, align 4
  %JvAC = alloca %struct.b2Vec2, align 4
  %JvBD = alloca %struct.b2Vec2, align 4
  %JwA = alloca float, align 4
  %JwB = alloca float, align 4
  %JwC = alloca float, align 4
  %JwD = alloca float, align 4
  %mass = alloca float, align 4
  %u = alloca %struct.b2Vec2, align 4
  %rC = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %pC = alloca %struct.b2Vec2, align 4
  %pA = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %u1 = alloca %struct.b2Vec2, align 4
  %rD = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %pD = alloca %struct.b2Vec2, align 4
  %pB = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %C = alloca float, align 4
  %impulse = alloca float, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %18 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %19 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 18
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %23 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %22, i32 0, i32 1
  %24 = load %struct.b2Position*, %struct.b2Position** %23, align 8
  %25 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %24, i64 %21
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i32 0, i32 0
  %27 = bitcast %struct.b2Vec2* %cA to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 18
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %33 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %32, i32 0, i32 1
  %34 = load %struct.b2Position*, %struct.b2Position** %33, align 8
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i64 %31
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i32 0, i32 1
  %37 = load float, float* %36, align 4
  store float %37, float* %aA, align 4
  %38 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 19
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %42 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %41, i32 0, i32 1
  %43 = load %struct.b2Position*, %struct.b2Position** %42, align 8
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i64 %40
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i32 0, i32 0
  %46 = bitcast %struct.b2Vec2* %cB to i8*
  %47 = bitcast %struct.b2Vec2* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false)
  %48 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 19
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %52 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %51, i32 0, i32 1
  %53 = load %struct.b2Position*, %struct.b2Position** %52, align 8
  %54 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %53, i64 %50
  %55 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %54, i32 0, i32 1
  %56 = load float, float* %55, align 4
  store float %56, float* %aB, align 4
  %57 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 20
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %61 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %60, i32 0, i32 1
  %62 = load %struct.b2Position*, %struct.b2Position** %61, align 8
  %63 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %62, i64 %59
  %64 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %63, i32 0, i32 0
  %65 = bitcast %struct.b2Vec2* %cC to i8*
  %66 = bitcast %struct.b2Vec2* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false)
  %67 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 20
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %71 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %70, i32 0, i32 1
  %72 = load %struct.b2Position*, %struct.b2Position** %71, align 8
  %73 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %72, i64 %69
  %74 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %73, i32 0, i32 1
  %75 = load float, float* %74, align 4
  store float %75, float* %aC, align 4
  %76 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 21
  %77 = load i32, i32* %76, align 8
  %78 = sext i32 %77 to i64
  %79 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %80 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %79, i32 0, i32 1
  %81 = load %struct.b2Position*, %struct.b2Position** %80, align 8
  %82 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %81, i64 %78
  %83 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %82, i32 0, i32 0
  %84 = bitcast %struct.b2Vec2* %cD to i8*
  %85 = bitcast %struct.b2Vec2* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 4, i1 false)
  %86 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 21
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %87 to i64
  %89 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %90 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %89, i32 0, i32 1
  %91 = load %struct.b2Position*, %struct.b2Position** %90, align 8
  %92 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %91, i64 %88
  %93 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %92, i32 0, i32 1
  %94 = load float, float* %93, align 4
  store float %94, float* %aD, align 4
  %95 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %95)
  %96 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %96)
  %97 = load float, float* %aC, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qC, float %97)
  %98 = load float, float* %aD, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qD, float %98)
  store float 0.000000e+00, float* %linearError, align 4
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %JvAC)
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %JvBD)
  store float 0.000000e+00, float* %mass, align 4
  %99 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %116

; <label>:102                                     ; preds = %0
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %JvAC)
  store float 1.000000e+00, float* %JwA, align 4
  store float 1.000000e+00, float* %JwC, align 4
  %103 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 30
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 32
  %106 = load float, float* %105, align 4
  %107 = fadd float %104, %106
  %108 = load float, float* %mass, align 4
  %109 = fadd float %108, %107
  store float %109, float* %mass, align 4
  %110 = load float, float* %aA, align 4
  %111 = load float, float* %aC, align 4
  %112 = fsub float %110, %111
  %113 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 13
  %114 = load float, float* %113, align 8
  %115 = fsub float %112, %114
  store float %115, float* %coordinateA, align 4
  br label %171

; <label>:116                                     ; preds = %0
  %117 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 11
  %118 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qC, %struct.b2Vec2* dereferenceable(8) %117)
  %119 = bitcast %struct.b2Vec2* %u to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 9
  %121 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 24
  %122 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %120, %struct.b2Vec2* dereferenceable(8) %121)
  %123 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %122, <2 x float>* %123, align 4
  %124 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qC, %struct.b2Vec2* dereferenceable(8) %3)
  %125 = bitcast %struct.b2Vec2* %rC to <2 x float>*
  store <2 x float> %124, <2 x float>* %125, align 4
  %126 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 7
  %127 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 22
  %128 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %126, %struct.b2Vec2* dereferenceable(8) %127)
  %129 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %128, <2 x float>* %129, align 4
  %130 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %131 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %130, <2 x float>* %131, align 4
  %132 = bitcast %struct.b2Vec2* %JvAC to i8*
  %133 = bitcast %struct.b2Vec2* %u to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 4, i1 false)
  %134 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rC, %struct.b2Vec2* dereferenceable(8) %u)
  store float %134, float* %JwC, align 4
  %135 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %u)
  store float %135, float* %JwA, align 4
  %136 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 28
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 26
  %139 = load float, float* %138, align 4
  %140 = fadd float %137, %139
  %141 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 32
  %142 = load float, float* %141, align 4
  %143 = load float, float* %JwC, align 4
  %144 = fmul float %142, %143
  %145 = load float, float* %JwC, align 4
  %146 = fmul float %144, %145
  %147 = fadd float %140, %146
  %148 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 30
  %149 = load float, float* %148, align 4
  %150 = load float, float* %JwA, align 4
  %151 = fmul float %149, %150
  %152 = load float, float* %JwA, align 4
  %153 = fmul float %151, %152
  %154 = fadd float %147, %153
  %155 = load float, float* %mass, align 4
  %156 = fadd float %155, %154
  store float %156, float* %mass, align 4
  %157 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 9
  %158 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 24
  %159 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %157, %struct.b2Vec2* dereferenceable(8) %158)
  %160 = bitcast %struct.b2Vec2* %pC to <2 x float>*
  store <2 x float> %159, <2 x float>* %160, align 4
  %161 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %cC)
  %162 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %161, <2 x float>* %162, align 4
  %163 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %6)
  %164 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %163, <2 x float>* %164, align 4
  %165 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qC, %struct.b2Vec2* dereferenceable(8) %5)
  %166 = bitcast %struct.b2Vec2* %pA to <2 x float>*
  store <2 x float> %165, <2 x float>* %166, align 4
  %167 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pA, %struct.b2Vec2* dereferenceable(8) %pC)
  %168 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %167, <2 x float>* %168, align 4
  %169 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 11
  %170 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %169)
  store float %170, float* %coordinateA, align 4
  br label %171

; <label>:171                                     ; preds = %116, %102
  %172 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 4
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %199

; <label>:175                                     ; preds = %171
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %JvBD)
  %176 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %177 = load float, float* %176, align 4
  store float %177, float* %JwB, align 4
  %178 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %179 = load float, float* %178, align 4
  store float %179, float* %JwD, align 4
  %180 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %181 = load float, float* %180, align 4
  %182 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %183 = load float, float* %182, align 4
  %184 = fmul float %181, %183
  %185 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 31
  %186 = load float, float* %185, align 8
  %187 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 33
  %188 = load float, float* %187, align 8
  %189 = fadd float %186, %188
  %190 = fmul float %184, %189
  %191 = load float, float* %mass, align 4
  %192 = fadd float %191, %190
  store float %192, float* %mass, align 4
  %193 = load float, float* %aB, align 4
  %194 = load float, float* %aD, align 4
  %195 = fsub float %193, %194
  %196 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 14
  %197 = load float, float* %196, align 4
  %198 = fsub float %195, %197
  store float %198, float* %coordinateB, align 4
  br label %270

; <label>:199                                     ; preds = %171
  %200 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 12
  %201 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qD, %struct.b2Vec2* dereferenceable(8) %200)
  %202 = bitcast %struct.b2Vec2* %u1 to <2 x float>*
  store <2 x float> %201, <2 x float>* %202, align 4
  %203 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 10
  %204 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 25
  %205 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %203, %struct.b2Vec2* dereferenceable(8) %204)
  %206 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %205, <2 x float>* %206, align 4
  %207 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qD, %struct.b2Vec2* dereferenceable(8) %8)
  %208 = bitcast %struct.b2Vec2* %rD to <2 x float>*
  store <2 x float> %207, <2 x float>* %208, align 4
  %209 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 8
  %210 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 23
  %211 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %209, %struct.b2Vec2* dereferenceable(8) %210)
  %212 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %211, <2 x float>* %212, align 4
  %213 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %9)
  %214 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %213, <2 x float>* %214, align 4
  %215 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %216 = load float, float* %215, align 4
  %217 = call <2 x float> @_ZmlfRK6b2Vec2(float %216, %struct.b2Vec2* dereferenceable(8) %u1)
  %218 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %217, <2 x float>* %218, align 4
  %219 = bitcast %struct.b2Vec2* %JvBD to i8*
  %220 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 8, i32 4, i1 false)
  %221 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %222 = load float, float* %221, align 4
  %223 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rD, %struct.b2Vec2* dereferenceable(8) %u1)
  %224 = fmul float %222, %223
  store float %224, float* %JwD, align 4
  %225 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %226 = load float, float* %225, align 4
  %227 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %u1)
  %228 = fmul float %226, %227
  store float %228, float* %JwB, align 4
  %229 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %230 = load float, float* %229, align 4
  %231 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %232 = load float, float* %231, align 4
  %233 = fmul float %230, %232
  %234 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 29
  %235 = load float, float* %234, align 8
  %236 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 27
  %237 = load float, float* %236, align 8
  %238 = fadd float %235, %237
  %239 = fmul float %233, %238
  %240 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 33
  %241 = load float, float* %240, align 8
  %242 = load float, float* %JwD, align 4
  %243 = fmul float %241, %242
  %244 = load float, float* %JwD, align 4
  %245 = fmul float %243, %244
  %246 = fadd float %239, %245
  %247 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 31
  %248 = load float, float* %247, align 8
  %249 = load float, float* %JwB, align 4
  %250 = fmul float %248, %249
  %251 = load float, float* %JwB, align 4
  %252 = fmul float %250, %251
  %253 = fadd float %246, %252
  %254 = load float, float* %mass, align 4
  %255 = fadd float %254, %253
  store float %255, float* %mass, align 4
  %256 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 10
  %257 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 25
  %258 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %256, %struct.b2Vec2* dereferenceable(8) %257)
  %259 = bitcast %struct.b2Vec2* %pD to <2 x float>*
  store <2 x float> %258, <2 x float>* %259, align 4
  %260 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %cD)
  %261 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %260, <2 x float>* %261, align 4
  %262 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %12)
  %263 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %262, <2 x float>* %263, align 4
  %264 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qD, %struct.b2Vec2* dereferenceable(8) %11)
  %265 = bitcast %struct.b2Vec2* %pB to <2 x float>*
  store <2 x float> %264, <2 x float>* %265, align 4
  %266 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pB, %struct.b2Vec2* dereferenceable(8) %pD)
  %267 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %266, <2 x float>* %267, align 4
  %268 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 12
  %269 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %13, %struct.b2Vec2* dereferenceable(8) %268)
  store float %269, float* %coordinateB, align 4
  br label %270

; <label>:270                                     ; preds = %199, %175
  %271 = load float, float* %coordinateA, align 4
  %272 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 16
  %273 = load float, float* %272, align 4
  %274 = load float, float* %coordinateB, align 4
  %275 = fmul float %273, %274
  %276 = fadd float %271, %275
  %277 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 15
  %278 = load float, float* %277, align 8
  %279 = fsub float %276, %278
  store float %279, float* %C, align 4
  store float 0.000000e+00, float* %impulse, align 4
  %280 = load float, float* %mass, align 4
  %281 = fcmp ogt float %280, 0.000000e+00
  br i1 %281, label %282, label %287

; <label>:282                                     ; preds = %270
  %283 = load float, float* %C, align 4
  %284 = fsub float -0.000000e+00, %283
  %285 = load float, float* %mass, align 4
  %286 = fdiv float %284, %285
  store float %286, float* %impulse, align 4
  br label %287

; <label>:287                                     ; preds = %282, %270
  %288 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 26
  %289 = load float, float* %288, align 4
  %290 = load float, float* %impulse, align 4
  %291 = fmul float %289, %290
  %292 = call <2 x float> @_ZmlfRK6b2Vec2(float %291, %struct.b2Vec2* dereferenceable(8) %JvAC)
  %293 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %292, <2 x float>* %293, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %14)
  %294 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 30
  %295 = load float, float* %294, align 4
  %296 = load float, float* %impulse, align 4
  %297 = fmul float %295, %296
  %298 = load float, float* %JwA, align 4
  %299 = fmul float %297, %298
  %300 = load float, float* %aA, align 4
  %301 = fadd float %300, %299
  store float %301, float* %aA, align 4
  %302 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 27
  %303 = load float, float* %302, align 8
  %304 = load float, float* %impulse, align 4
  %305 = fmul float %303, %304
  %306 = call <2 x float> @_ZmlfRK6b2Vec2(float %305, %struct.b2Vec2* dereferenceable(8) %JvBD)
  %307 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %306, <2 x float>* %307, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %15)
  %308 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 31
  %309 = load float, float* %308, align 8
  %310 = load float, float* %impulse, align 4
  %311 = fmul float %309, %310
  %312 = load float, float* %JwB, align 4
  %313 = fmul float %311, %312
  %314 = load float, float* %aB, align 4
  %315 = fadd float %314, %313
  store float %315, float* %aB, align 4
  %316 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 28
  %317 = load float, float* %316, align 4
  %318 = load float, float* %impulse, align 4
  %319 = fmul float %317, %318
  %320 = call <2 x float> @_ZmlfRK6b2Vec2(float %319, %struct.b2Vec2* dereferenceable(8) %JvAC)
  %321 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %320, <2 x float>* %321, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cC, %struct.b2Vec2* dereferenceable(8) %16)
  %322 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 32
  %323 = load float, float* %322, align 4
  %324 = load float, float* %impulse, align 4
  %325 = fmul float %323, %324
  %326 = load float, float* %JwC, align 4
  %327 = fmul float %325, %326
  %328 = load float, float* %aC, align 4
  %329 = fsub float %328, %327
  store float %329, float* %aC, align 4
  %330 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 29
  %331 = load float, float* %330, align 8
  %332 = load float, float* %impulse, align 4
  %333 = fmul float %331, %332
  %334 = call <2 x float> @_ZmlfRK6b2Vec2(float %333, %struct.b2Vec2* dereferenceable(8) %JvBD)
  %335 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %334, <2 x float>* %335, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cD, %struct.b2Vec2* dereferenceable(8) %17)
  %336 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 33
  %337 = load float, float* %336, align 8
  %338 = load float, float* %impulse, align 4
  %339 = fmul float %337, %338
  %340 = load float, float* %JwD, align 4
  %341 = fmul float %339, %340
  %342 = load float, float* %aD, align 4
  %343 = fsub float %342, %341
  store float %343, float* %aD, align 4
  %344 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 18
  %345 = load i32, i32* %344, align 4
  %346 = sext i32 %345 to i64
  %347 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %348 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %347, i32 0, i32 1
  %349 = load %struct.b2Position*, %struct.b2Position** %348, align 8
  %350 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %349, i64 %346
  %351 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %350, i32 0, i32 0
  %352 = bitcast %struct.b2Vec2* %351 to i8*
  %353 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %352, i8* %353, i64 8, i32 4, i1 false)
  %354 = load float, float* %aA, align 4
  %355 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 18
  %356 = load i32, i32* %355, align 4
  %357 = sext i32 %356 to i64
  %358 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %359 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %358, i32 0, i32 1
  %360 = load %struct.b2Position*, %struct.b2Position** %359, align 8
  %361 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %360, i64 %357
  %362 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %361, i32 0, i32 1
  store float %354, float* %362, align 4
  %363 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 19
  %364 = load i32, i32* %363, align 8
  %365 = sext i32 %364 to i64
  %366 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %367 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %366, i32 0, i32 1
  %368 = load %struct.b2Position*, %struct.b2Position** %367, align 8
  %369 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %368, i64 %365
  %370 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %369, i32 0, i32 0
  %371 = bitcast %struct.b2Vec2* %370 to i8*
  %372 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %371, i8* %372, i64 8, i32 4, i1 false)
  %373 = load float, float* %aB, align 4
  %374 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 19
  %375 = load i32, i32* %374, align 8
  %376 = sext i32 %375 to i64
  %377 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %378 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %377, i32 0, i32 1
  %379 = load %struct.b2Position*, %struct.b2Position** %378, align 8
  %380 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %379, i64 %376
  %381 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %380, i32 0, i32 1
  store float %373, float* %381, align 4
  %382 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 20
  %383 = load i32, i32* %382, align 4
  %384 = sext i32 %383 to i64
  %385 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %386 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %385, i32 0, i32 1
  %387 = load %struct.b2Position*, %struct.b2Position** %386, align 8
  %388 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %387, i64 %384
  %389 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %388, i32 0, i32 0
  %390 = bitcast %struct.b2Vec2* %389 to i8*
  %391 = bitcast %struct.b2Vec2* %cC to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %390, i8* %391, i64 8, i32 4, i1 false)
  %392 = load float, float* %aC, align 4
  %393 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 20
  %394 = load i32, i32* %393, align 4
  %395 = sext i32 %394 to i64
  %396 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %397 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %396, i32 0, i32 1
  %398 = load %struct.b2Position*, %struct.b2Position** %397, align 8
  %399 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %398, i64 %395
  %400 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %399, i32 0, i32 1
  store float %392, float* %400, align 4
  %401 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 21
  %402 = load i32, i32* %401, align 8
  %403 = sext i32 %402 to i64
  %404 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %405 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %404, i32 0, i32 1
  %406 = load %struct.b2Position*, %struct.b2Position** %405, align 8
  %407 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %406, i64 %403
  %408 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %407, i32 0, i32 0
  %409 = bitcast %struct.b2Vec2* %408 to i8*
  %410 = bitcast %struct.b2Vec2* %cD to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %409, i8* %410, i64 8, i32 4, i1 false)
  %411 = load float, float* %aD, align 4
  %412 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %18, i32 0, i32 21
  %413 = load i32, i32* %412, align 8
  %414 = sext i32 %413 to i64
  %415 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %416 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %415, i32 0, i32 1
  %417 = load %struct.b2Position*, %struct.b2Position** %416, align 8
  %418 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %417, i64 %414
  %419 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %418, i32 0, i32 1
  store float %411, float* %419, align 4
  %420 = load float, float* %linearError, align 4
  %421 = fcmp olt float %420, 0x3F747AE140000000
  ret i1 %421
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %q, %struct.b2Vec2* dereferenceable(8) %v) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %q, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %6, %9
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %13, %16
  %18 = fadd float %10, %17
  %19 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %20 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %19, i32 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = fsub float -0.000000e+00, %21
  %23 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %24 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %23, i32 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fmul float %22, %25
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %28 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %27, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %30, i32 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fmul float %29, %32
  %34 = fadd float %26, %33
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %18, float %34)
  %35 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  ret <2 x float> %36
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2MotorJoint10GetAnchorAEv(%class.b2MotorJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %2, align 8
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %2, align 8
  %4 = bitcast %class.b2MotorJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = call dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body11GetPositionEv(%class.b2Body* %6)
  %8 = bitcast %struct.b2Vec2* %1 to i8*
  %9 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false)
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body11GetPositionEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 3
  %4 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 0
  ret %struct.b2Vec2* %4
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2MotorJoint10GetAnchorBEv(%class.b2MotorJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %2, align 8
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %2, align 8
  %4 = bitcast %class.b2MotorJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = call dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body11GetPositionEv(%class.b2Body* %6)
  %8 = bitcast %struct.b2Vec2* %1 to i8*
  %9 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false)
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2MotorJoint16GetReactionForceEf(%class.b2MotorJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2MotorJoint*, align 8
  %3 = alloca float, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2MotorJoint*, %class.b2MotorJoint** %2, align 8
  %5 = load float, float* %3, align 4
  %6 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %4, i32 0, i32 3
  %7 = call <2 x float> @_ZmlfRK6b2Vec2(float %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  ret <2 x float> %10
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MotorJoint17GetReactionTorqueEf(%class.b2MotorJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 4
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  ret float %7
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint4DumpEv(%class.b2MotorJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = bitcast %class.b2MotorJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2MotorJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.33, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.34, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.35, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2MotorJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.36, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8.37, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 2
  %29 = load float, float* %28, align 8
  %30 = fpext float %29 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9.38, i32 0, i32 0), double %30)
  %31 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 5
  %32 = load float, float* %31, align 8
  %33 = fpext float %32 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10.39, i32 0, i32 0), double %33)
  %34 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 6
  %35 = load float, float* %34, align 4
  %36 = fpext float %35 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.40, i32 0, i32 0), double %36)
  %37 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 7
  %38 = load float, float* %37, align 8
  %39 = fpext float %38 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.41, i32 0, i32 0), double %39)
  %40 = bitcast %class.b2MotorJoint* %2 to %class.b2Joint*
  %41 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %40, i32 0, i32 8
  %42 = load i32, i32* %41, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i32 %42)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN12b2MotorJointD2Ev(%class.b2MotorJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = bitcast %class.b2MotorJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2MotorJointD0Ev(%class.b2MotorJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %4 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  invoke void @_ZN12b2MotorJointD2Ev(%class.b2MotorJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2MotorJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2MotorJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2MotorJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %K = alloca %struct.b2Transform, align 4
  %7 = alloca %struct.b2Transform, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %P = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %15 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %16 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %17 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %16, i32 0, i32 6
  %18 = load %class.b2Body*, %class.b2Body** %17, align 8
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  store i32 %20, i32* %21, align 4
  %22 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %22, i32 0, i32 7
  %24 = load %class.b2Body*, %class.b2Body** %23, align 8
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 12
  %29 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %30 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %29, i32 0, i32 6
  %31 = load %class.b2Body*, %class.b2Body** %30, align 8
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %31, i32 0, i32 4
  %33 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %32, i32 0, i32 0
  %34 = bitcast %struct.b2Vec2* %28 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 13
  %37 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %38 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %37, i32 0, i32 7
  %39 = load %class.b2Body*, %class.b2Body** %38, align 8
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %39, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %40, i32 0, i32 0
  %42 = bitcast %struct.b2Vec2* %36 to i8*
  %43 = bitcast %struct.b2Vec2* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %45 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %44, i32 0, i32 6
  %46 = load %class.b2Body*, %class.b2Body** %45, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 17
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 16
  store float %48, float* %49, align 8
  %50 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 7
  %52 = load %class.b2Body*, %class.b2Body** %51, align 8
  %53 = getelementptr inbounds %class.b2Body, %class.b2Body* %52, i32 0, i32 17
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 17
  store float %54, float* %55, align 4
  %56 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %57 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %56, i32 0, i32 6
  %58 = load %class.b2Body*, %class.b2Body** %57, align 8
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %58, i32 0, i32 19
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 18
  store float %60, float* %61, align 8
  %62 = bitcast %class.b2MotorJoint* %15 to %class.b2Joint*
  %63 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %62, i32 0, i32 7
  %64 = load %class.b2Body*, %class.b2Body** %63, align 8
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %64, i32 0, i32 19
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 19
  store float %66, float* %67, align 4
  %68 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %72 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %71, i32 0, i32 1
  %73 = load %struct.b2Position*, %struct.b2Position** %72, align 8
  %74 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %73, i64 %70
  %75 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %74, i32 0, i32 0
  %76 = bitcast %struct.b2Vec2* %cA to i8*
  %77 = bitcast %struct.b2Vec2* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false)
  %78 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %79 to i64
  %81 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %82 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %81, i32 0, i32 1
  %83 = load %struct.b2Position*, %struct.b2Position** %82, align 8
  %84 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %83, i64 %80
  %85 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %84, i32 0, i32 1
  %86 = load float, float* %85, align 4
  store float %86, float* %aA, align 4
  %87 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %91 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %90, i32 0, i32 2
  %92 = load %struct.b2Position*, %struct.b2Position** %91, align 8
  %93 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %92, i64 %89
  %94 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %93, i32 0, i32 0
  %95 = bitcast %struct.b2Vec2* %vA to i8*
  %96 = bitcast %struct.b2Vec2* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false)
  %97 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %101 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %100, i32 0, i32 2
  %102 = load %struct.b2Position*, %struct.b2Position** %101, align 8
  %103 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %102, i64 %99
  %104 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %103, i32 0, i32 1
  %105 = load float, float* %104, align 4
  store float %105, float* %wA, align 4
  %106 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  %107 = load i32, i32* %106, align 8
  %108 = sext i32 %107 to i64
  %109 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %110 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %109, i32 0, i32 1
  %111 = load %struct.b2Position*, %struct.b2Position** %110, align 8
  %112 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %111, i64 %108
  %113 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %112, i32 0, i32 0
  %114 = bitcast %struct.b2Vec2* %cB to i8*
  %115 = bitcast %struct.b2Vec2* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 4, i1 false)
  %116 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %120 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %119, i32 0, i32 1
  %121 = load %struct.b2Position*, %struct.b2Position** %120, align 8
  %122 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %121, i64 %118
  %123 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %122, i32 0, i32 1
  %124 = load float, float* %123, align 4
  store float %124, float* %aB, align 4
  %125 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  %126 = load i32, i32* %125, align 8
  %127 = sext i32 %126 to i64
  %128 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %129 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %128, i32 0, i32 2
  %130 = load %struct.b2Position*, %struct.b2Position** %129, align 8
  %131 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %130, i64 %127
  %132 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %131, i32 0, i32 0
  %133 = bitcast %struct.b2Vec2* %vB to i8*
  %134 = bitcast %struct.b2Vec2* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false)
  %135 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  %136 = load i32, i32* %135, align 8
  %137 = sext i32 %136 to i64
  %138 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %139 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %138, i32 0, i32 2
  %140 = load %struct.b2Position*, %struct.b2Position** %139, align 8
  %141 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %140, i64 %137
  %142 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %141, i32 0, i32 1
  %143 = load float, float* %142, align 4
  store float %143, float* %wB, align 4
  %144 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %144)
  %145 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %145)
  %146 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %147 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 12
  %148 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %147)
  %149 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  %150 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %151 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %150, <2 x float>* %151, align 4
  %152 = bitcast %struct.b2Vec2* %146 to i8*
  %153 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %153, i64 8, i32 4, i1 false)
  %154 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %155 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 13
  %156 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %155)
  %157 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %159 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %158, <2 x float>* %159, align 4
  %160 = bitcast %struct.b2Vec2* %154 to i8*
  %161 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 8, i32 4, i1 false)
  %162 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 16
  %163 = load float, float* %162, align 8
  store float %163, float* %mA, align 4
  %164 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 17
  %165 = load float, float* %164, align 4
  store float %165, float* %mB, align 4
  %166 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 18
  %167 = load float, float* %166, align 8
  store float %167, float* %iA, align 4
  %168 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 19
  %169 = load float, float* %168, align 4
  store float %169, float* %iB, align 4
  call void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %K)
  %170 = load float, float* %mA, align 4
  %171 = load float, float* %mB, align 4
  %172 = fadd float %170, %171
  %173 = load float, float* %iA, align 4
  %174 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %175 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %174, i32 0, i32 1
  %176 = load float, float* %175, align 4
  %177 = fmul float %173, %176
  %178 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %179 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %178, i32 0, i32 1
  %180 = load float, float* %179, align 4
  %181 = fmul float %177, %180
  %182 = fadd float %172, %181
  %183 = load float, float* %iB, align 4
  %184 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %185 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %184, i32 0, i32 1
  %186 = load float, float* %185, align 4
  %187 = fmul float %183, %186
  %188 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %189 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %188, i32 0, i32 1
  %190 = load float, float* %189, align 4
  %191 = fmul float %187, %190
  %192 = fadd float %182, %191
  %193 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %194 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %193, i32 0, i32 0
  store float %192, float* %194, align 4
  %195 = load float, float* %iA, align 4
  %196 = fsub float -0.000000e+00, %195
  %197 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %198 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %197, i32 0, i32 0
  %199 = load float, float* %198, align 4
  %200 = fmul float %196, %199
  %201 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %202 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %201, i32 0, i32 1
  %203 = load float, float* %202, align 4
  %204 = fmul float %200, %203
  %205 = load float, float* %iB, align 4
  %206 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %207 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %206, i32 0, i32 0
  %208 = load float, float* %207, align 4
  %209 = fmul float %205, %208
  %210 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %211 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %210, i32 0, i32 1
  %212 = load float, float* %211, align 4
  %213 = fmul float %209, %212
  %214 = fsub float %204, %213
  %215 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %216 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %215, i32 0, i32 1
  store float %214, float* %216, align 4
  %217 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %218 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %217, i32 0, i32 1
  %219 = load float, float* %218, align 4
  %220 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %221 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %220, i32 0, i32 0
  store float %219, float* %221, align 4
  %222 = load float, float* %mA, align 4
  %223 = load float, float* %mB, align 4
  %224 = fadd float %222, %223
  %225 = load float, float* %iA, align 4
  %226 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %227 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %226, i32 0, i32 0
  %228 = load float, float* %227, align 4
  %229 = fmul float %225, %228
  %230 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %231 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %230, i32 0, i32 0
  %232 = load float, float* %231, align 4
  %233 = fmul float %229, %232
  %234 = fadd float %224, %233
  %235 = load float, float* %iB, align 4
  %236 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %237 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %236, i32 0, i32 0
  %238 = load float, float* %237, align 4
  %239 = fmul float %235, %238
  %240 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %241 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %240, i32 0, i32 0
  %242 = load float, float* %241, align 4
  %243 = fmul float %239, %242
  %244 = fadd float %234, %243
  %245 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %246 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %245, i32 0, i32 1
  store float %244, float* %246, align 4
  %247 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 20
  %248 = call { <2 x float>, <2 x float> } @_ZNK7b2Mat2210GetInverseEv(%struct.b2Transform* %K)
  %249 = bitcast %struct.b2Transform* %7 to { <2 x float>, <2 x float> }*
  %250 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %249, i32 0, i32 0
  %251 = extractvalue { <2 x float>, <2 x float> } %248, 0
  store <2 x float> %251, <2 x float>* %250, align 4
  %252 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %249, i32 0, i32 1
  %253 = extractvalue { <2 x float>, <2 x float> } %248, 1
  store <2 x float> %253, <2 x float>* %252, align 4
  %254 = bitcast %struct.b2Transform* %247 to i8*
  %255 = bitcast %struct.b2Transform* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %254, i8* %255, i64 16, i32 4, i1 false)
  %256 = load float, float* %iA, align 4
  %257 = load float, float* %iB, align 4
  %258 = fadd float %256, %257
  %259 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 21
  store float %258, float* %259, align 8
  %260 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 21
  %261 = load float, float* %260, align 8
  %262 = fcmp ogt float %261, 0.000000e+00
  br i1 %262, label %263, label %268

; <label>:263                                     ; preds = %0
  %264 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 21
  %265 = load float, float* %264, align 8
  %266 = fdiv float 1.000000e+00, %265
  %267 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 21
  store float %266, float* %267, align 8
  br label %268

; <label>:268                                     ; preds = %263, %0
  %269 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 14
  %270 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %271 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %270)
  %272 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %271, <2 x float>* %272, align 4
  %273 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %cA)
  %274 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %273, <2 x float>* %274, align 4
  %275 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %276 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %275)
  %277 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %276, <2 x float>* %277, align 4
  %278 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 1
  %279 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %278)
  %280 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %279, <2 x float>* %280, align 4
  %281 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %12)
  %282 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %281, <2 x float>* %282, align 4
  %283 = bitcast %struct.b2Vec2* %269 to i8*
  %284 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %283, i8* %284, i64 8, i32 4, i1 false)
  %285 = load float, float* %aB, align 4
  %286 = load float, float* %aA, align 4
  %287 = fsub float %285, %286
  %288 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 2
  %289 = load float, float* %288, align 8
  %290 = fsub float %287, %289
  %291 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 15
  store float %290, float* %291, align 4
  %292 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %293 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %292, i32 0, i32 0
  %294 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %293, i32 0, i32 5
  %295 = load i8, i8* %294, align 4
  %296 = trunc i8 %295 to i1
  br i1 %296, label %297, label %340

; <label>:297                                     ; preds = %268
  %298 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 3
  %299 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %300 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %299, i32 0, i32 0
  %301 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %300, i32 0, i32 2
  %302 = load float, float* %301, align 8
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %298, float %302)
  %303 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %304 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %303, i32 0, i32 0
  %305 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %304, i32 0, i32 2
  %306 = load float, float* %305, align 8
  %307 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 4
  %308 = load float, float* %307, align 4
  %309 = fmul float %308, %306
  store float %309, float* %307, align 4
  %310 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 3
  %311 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %310, i32 0, i32 0
  %312 = load float, float* %311, align 4
  %313 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 3
  %314 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %313, i32 0, i32 1
  %315 = load float, float* %314, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %312, float %315)
  %316 = load float, float* %mA, align 4
  %317 = call <2 x float> @_ZmlfRK6b2Vec2(float %316, %struct.b2Vec2* dereferenceable(8) %P)
  %318 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %317, <2 x float>* %318, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %13)
  %319 = load float, float* %iA, align 4
  %320 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 10
  %321 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %320, %struct.b2Vec2* dereferenceable(8) %P)
  %322 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 4
  %323 = load float, float* %322, align 4
  %324 = fadd float %321, %323
  %325 = fmul float %319, %324
  %326 = load float, float* %wA, align 4
  %327 = fsub float %326, %325
  store float %327, float* %wA, align 4
  %328 = load float, float* %mB, align 4
  %329 = call <2 x float> @_ZmlfRK6b2Vec2(float %328, %struct.b2Vec2* dereferenceable(8) %P)
  %330 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %329, <2 x float>* %330, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %14)
  %331 = load float, float* %iB, align 4
  %332 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 11
  %333 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %332, %struct.b2Vec2* dereferenceable(8) %P)
  %334 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 4
  %335 = load float, float* %334, align 4
  %336 = fadd float %333, %335
  %337 = fmul float %331, %336
  %338 = load float, float* %wB, align 4
  %339 = fadd float %338, %337
  store float %339, float* %wB, align 4
  br label %343

; <label>:340                                     ; preds = %268
  %341 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 3
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %341)
  %342 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 4
  store float 0.000000e+00, float* %342, align 4
  br label %343

; <label>:343                                     ; preds = %340, %297
  %344 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  %345 = load i32, i32* %344, align 4
  %346 = sext i32 %345 to i64
  %347 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %348 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %347, i32 0, i32 2
  %349 = load %struct.b2Position*, %struct.b2Position** %348, align 8
  %350 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %349, i64 %346
  %351 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %350, i32 0, i32 0
  %352 = bitcast %struct.b2Vec2* %351 to i8*
  %353 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %352, i8* %353, i64 8, i32 4, i1 false)
  %354 = load float, float* %wA, align 4
  %355 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 8
  %356 = load i32, i32* %355, align 4
  %357 = sext i32 %356 to i64
  %358 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %359 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %358, i32 0, i32 2
  %360 = load %struct.b2Position*, %struct.b2Position** %359, align 8
  %361 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %360, i64 %357
  %362 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %361, i32 0, i32 1
  store float %354, float* %362, align 4
  %363 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  %364 = load i32, i32* %363, align 8
  %365 = sext i32 %364 to i64
  %366 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %367 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %366, i32 0, i32 2
  %368 = load %struct.b2Position*, %struct.b2Position** %367, align 8
  %369 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %368, i64 %365
  %370 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %369, i32 0, i32 0
  %371 = bitcast %struct.b2Vec2* %370 to i8*
  %372 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %371, i8* %372, i64 8, i32 4, i1 false)
  %373 = load float, float* %wB, align 4
  %374 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %15, i32 0, i32 9
  %375 = load i32, i32* %374, align 8
  %376 = sext i32 %375 to i64
  %377 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %378 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %377, i32 0, i32 2
  %379 = load %struct.b2Position*, %struct.b2Position** %378, align 8
  %380 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %379, i64 %376
  %381 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %380, i32 0, i32 1
  store float %373, float* %381, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2MotorJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %h = alloca float, align 4
  %inv_h = alloca float, align 4
  %Cdot = alloca float, align 4
  %impulse = alloca float, align 4
  %oldImpulse = alloca float, align 4
  %maxImpulse = alloca float, align 4
  %Cdot1 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %impulse2 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %oldImpulse3 = alloca %struct.b2Vec2, align 4
  %maxImpulse4 = alloca float, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %13 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %14 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %18 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %17, i32 0, i32 2
  %19 = load %struct.b2Position*, %struct.b2Position** %18, align 8
  %20 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %19, i64 %16
  %21 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %20, i32 0, i32 0
  %22 = bitcast %struct.b2Vec2* %vA to i8*
  %23 = bitcast %struct.b2Vec2* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  %24 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %28 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %27, i32 0, i32 2
  %29 = load %struct.b2Position*, %struct.b2Position** %28, align 8
  %30 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %29, i64 %26
  %31 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %30, i32 0, i32 1
  %32 = load float, float* %31, align 4
  store float %32, float* %wA, align 4
  %33 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 9
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %37 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %36, i32 0, i32 2
  %38 = load %struct.b2Position*, %struct.b2Position** %37, align 8
  %39 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %38, i64 %35
  %40 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %39, i32 0, i32 0
  %41 = bitcast %struct.b2Vec2* %vB to i8*
  %42 = bitcast %struct.b2Vec2* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  %43 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 9
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %47 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %46, i32 0, i32 2
  %48 = load %struct.b2Position*, %struct.b2Position** %47, align 8
  %49 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %48, i64 %45
  %50 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %49, i32 0, i32 1
  %51 = load float, float* %50, align 4
  store float %51, float* %wB, align 4
  %52 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 16
  %53 = load float, float* %52, align 8
  store float %53, float* %mA, align 4
  %54 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 17
  %55 = load float, float* %54, align 4
  store float %55, float* %mB, align 4
  %56 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 18
  %57 = load float, float* %56, align 8
  store float %57, float* %iA, align 4
  %58 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 19
  %59 = load float, float* %58, align 4
  store float %59, float* %iB, align 4
  %60 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %61 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %60, i32 0, i32 0
  %62 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %61, i32 0, i32 0
  %63 = load float, float* %62, align 8
  store float %63, float* %h, align 4
  %64 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %65 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %64, i32 0, i32 0
  %66 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %65, i32 0, i32 1
  %67 = load float, float* %66, align 4
  store float %67, float* %inv_h, align 4
  %68 = load float, float* %wB, align 4
  %69 = load float, float* %wA, align 4
  %70 = fsub float %68, %69
  %71 = load float, float* %inv_h, align 4
  %72 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 7
  %73 = load float, float* %72, align 8
  %74 = fmul float %71, %73
  %75 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 15
  %76 = load float, float* %75, align 4
  %77 = fmul float %74, %76
  %78 = fadd float %70, %77
  store float %78, float* %Cdot, align 4
  %79 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 21
  %80 = load float, float* %79, align 8
  %81 = fsub float -0.000000e+00, %80
  %82 = load float, float* %Cdot, align 4
  %83 = fmul float %81, %82
  store float %83, float* %impulse, align 4
  %84 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 4
  %85 = load float, float* %84, align 4
  store float %85, float* %oldImpulse, align 4
  %86 = load float, float* %h, align 4
  %87 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 6
  %88 = load float, float* %87, align 4
  %89 = fmul float %86, %88
  store float %89, float* %maxImpulse, align 4
  %90 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 4
  %91 = load float, float* %90, align 4
  %92 = load float, float* %impulse, align 4
  %93 = fadd float %91, %92
  %94 = load float, float* %maxImpulse, align 4
  %95 = fsub float -0.000000e+00, %94
  %96 = load float, float* %maxImpulse, align 4
  %97 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %93, float %95, float %96)
  %98 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 4
  store float %97, float* %98, align 4
  %99 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 4
  %100 = load float, float* %99, align 4
  %101 = load float, float* %oldImpulse, align 4
  %102 = fsub float %100, %101
  store float %102, float* %impulse, align 4
  %103 = load float, float* %iA, align 4
  %104 = load float, float* %impulse, align 4
  %105 = fmul float %103, %104
  %106 = load float, float* %wA, align 4
  %107 = fsub float %106, %105
  store float %107, float* %wA, align 4
  %108 = load float, float* %iB, align 4
  %109 = load float, float* %impulse, align 4
  %110 = fmul float %108, %109
  %111 = load float, float* %wB, align 4
  %112 = fadd float %111, %110
  store float %112, float* %wB, align 4
  %113 = load float, float* %wB, align 4
  %114 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 11
  %115 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %113, %struct.b2Vec2* dereferenceable(8) %114)
  %116 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %115, <2 x float>* %116, align 4
  %117 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %6)
  %118 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %117, <2 x float>* %118, align 4
  %119 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %vA)
  %120 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %119, <2 x float>* %120, align 4
  %121 = load float, float* %wA, align 4
  %122 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 10
  %123 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %121, %struct.b2Vec2* dereferenceable(8) %122)
  %124 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %123, <2 x float>* %124, align 4
  %125 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %4, %struct.b2Vec2* dereferenceable(8) %7)
  %126 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %125, <2 x float>* %126, align 4
  %127 = load float, float* %inv_h, align 4
  %128 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 7
  %129 = load float, float* %128, align 8
  %130 = fmul float %127, %129
  %131 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 14
  %132 = call <2 x float> @_ZmlfRK6b2Vec2(float %130, %struct.b2Vec2* dereferenceable(8) %131)
  %133 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %132, <2 x float>* %133, align 4
  %134 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %8)
  %135 = bitcast %struct.b2Vec2* %Cdot1 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 20
  %137 = call <2 x float> @_Z5b2MulRK7b2Mat22RK6b2Vec2(%struct.b2Transform* dereferenceable(16) %136, %struct.b2Vec2* dereferenceable(8) %Cdot1)
  %138 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %137, <2 x float>* %138, align 4
  %139 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %9)
  %140 = bitcast %struct.b2Vec2* %impulse2 to <2 x float>*
  store <2 x float> %139, <2 x float>* %140, align 4
  %141 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 3
  %142 = bitcast %struct.b2Vec2* %oldImpulse3 to i8*
  %143 = bitcast %struct.b2Vec2* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %143, i64 8, i32 4, i1 false)
  %144 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 3
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %144, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %145 = load float, float* %h, align 4
  %146 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 5
  %147 = load float, float* %146, align 8
  %148 = fmul float %145, %147
  store float %148, float* %maxImpulse4, align 4
  %149 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 3
  %150 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %149)
  %151 = load float, float* %maxImpulse4, align 4
  %152 = load float, float* %maxImpulse4, align 4
  %153 = fmul float %151, %152
  %154 = fcmp ogt float %150, %153
  br i1 %154, label %155, label %160

; <label>:155                                     ; preds = %0
  %156 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 3
  %157 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %156)
  %158 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 3
  %159 = load float, float* %maxImpulse4, align 4
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %158, float %159)
  br label %160

; <label>:160                                     ; preds = %155, %0
  %161 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 3
  %162 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %161, %struct.b2Vec2* dereferenceable(8) %oldImpulse3)
  %163 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 4
  %164 = bitcast %struct.b2Vec2* %impulse2 to i8*
  %165 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 8, i32 4, i1 false)
  %166 = load float, float* %mA, align 4
  %167 = call <2 x float> @_ZmlfRK6b2Vec2(float %166, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %168 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %167, <2 x float>* %168, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %11)
  %169 = load float, float* %iA, align 4
  %170 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 10
  %171 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %170, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %172 = fmul float %169, %171
  %173 = load float, float* %wA, align 4
  %174 = fsub float %173, %172
  store float %174, float* %wA, align 4
  %175 = load float, float* %mB, align 4
  %176 = call <2 x float> @_ZmlfRK6b2Vec2(float %175, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %177 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %176, <2 x float>* %177, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %12)
  %178 = load float, float* %iB, align 4
  %179 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 11
  %180 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %179, %struct.b2Vec2* dereferenceable(8) %impulse2)
  %181 = fmul float %178, %180
  %182 = load float, float* %wB, align 4
  %183 = fadd float %182, %181
  store float %183, float* %wB, align 4
  %184 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 8
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %188 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %187, i32 0, i32 2
  %189 = load %struct.b2Position*, %struct.b2Position** %188, align 8
  %190 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %189, i64 %186
  %191 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %190, i32 0, i32 0
  %192 = bitcast %struct.b2Vec2* %191 to i8*
  %193 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %193, i64 8, i32 4, i1 false)
  %194 = load float, float* %wA, align 4
  %195 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 8
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %199 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %198, i32 0, i32 2
  %200 = load %struct.b2Position*, %struct.b2Position** %199, align 8
  %201 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %200, i64 %197
  %202 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %201, i32 0, i32 1
  store float %194, float* %202, align 4
  %203 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 9
  %204 = load i32, i32* %203, align 8
  %205 = sext i32 %204 to i64
  %206 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %207 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %206, i32 0, i32 2
  %208 = load %struct.b2Position*, %struct.b2Position** %207, align 8
  %209 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %208, i64 %205
  %210 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %209, i32 0, i32 0
  %211 = bitcast %struct.b2Vec2* %210 to i8*
  %212 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %211, i8* %212, i64 8, i32 4, i1 false)
  %213 = load float, float* %wB, align 4
  %214 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %13, i32 0, i32 9
  %215 = load i32, i32* %214, align 8
  %216 = sext i32 %215 to i64
  %217 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %218 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %217, i32 0, i32 2
  %219 = load %struct.b2Position*, %struct.b2Position** %218, align 8
  %220 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %219, i64 %216
  %221 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %220, i32 0, i32 1
  store float %213, float* %221, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN12b2MotorJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2MotorJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  ret i1 true
}

; Function Attrs: nounwind uwtable
define <2 x float> @_ZNK12b2MouseJoint10GetAnchorAEv(%class.b2MouseJoint* %this) unnamed_addr #2 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %2, align 8
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %2, align 8
  %4 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 2
  %5 = bitcast %struct.b2Vec2* %1 to i8*
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false)
  %7 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  ret <2 x float> %8
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2MouseJoint10GetAnchorBEv(%class.b2MouseJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %2, align 8
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %2, align 8
  %4 = bitcast %class.b2MouseJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 1
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2MouseJoint16GetReactionForceEf(%class.b2MouseJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2MouseJoint*, align 8
  %3 = alloca float, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2MouseJoint*, %class.b2MouseJoint** %2, align 8
  %5 = load float, float* %3, align 4
  %6 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %4, i32 0, i32 6
  %7 = call <2 x float> @_ZmlfRK6b2Vec2(float %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  ret <2 x float> %10
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MouseJoint17GetReactionTorqueEf(%class.b2MouseJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = fmul float %4, 0.000000e+00
  ret float %5
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN12b2MouseJoint4DumpEv(%class.b2MouseJoint* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %2 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6.48, i32 0, i32 0))
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2MouseJoint11ShiftOriginERK6b2Vec2(%class.b2MouseJoint* %this, %struct.b2Vec2* dereferenceable(8) %newOrigin) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store %struct.b2Vec2* %newOrigin, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 2
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %4, %struct.b2Vec2* dereferenceable(8) %5)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN12b2MouseJointD2Ev(%class.b2MouseJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %2 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %3 = bitcast %class.b2MouseJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2MouseJointD0Ev(%class.b2MouseJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %4 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  invoke void @_ZN12b2MouseJointD2Ev(%class.b2MouseJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2MouseJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2MouseJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2MouseJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %mass = alloca float, align 4
  %omega = alloca float, align 4
  %d = alloca float, align 4
  %k = alloca float, align 4
  %h = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %K = alloca %struct.b2Transform, align 4
  %5 = alloca %struct.b2Transform, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %10 = bitcast %class.b2MouseJoint* %9 to %class.b2Joint*
  %11 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %10, i32 0, i32 7
  %12 = load %class.b2Body*, %class.b2Body** %11, align 8
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 12
  %17 = bitcast %class.b2MouseJoint* %9 to %class.b2Joint*
  %18 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %17, i32 0, i32 7
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  %20 = getelementptr inbounds %class.b2Body, %class.b2Body* %19, i32 0, i32 4
  %21 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %20, i32 0, i32 0
  %22 = bitcast %struct.b2Vec2* %16 to i8*
  %23 = bitcast %struct.b2Vec2* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  %24 = bitcast %class.b2MouseJoint* %9 to %class.b2Joint*
  %25 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %24, i32 0, i32 7
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %26, i32 0, i32 17
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 13
  store float %28, float* %29, align 4
  %30 = bitcast %class.b2MouseJoint* %9 to %class.b2Joint*
  %31 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %30, i32 0, i32 7
  %32 = load %class.b2Body*, %class.b2Body** %31, align 8
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %32, i32 0, i32 19
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 14
  store float %34, float* %35, align 8
  %36 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %40 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %39, i32 0, i32 1
  %41 = load %struct.b2Position*, %struct.b2Position** %40, align 8
  %42 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %41, i64 %38
  %43 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %42, i32 0, i32 0
  %44 = bitcast %struct.b2Vec2* %cB to i8*
  %45 = bitcast %struct.b2Vec2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 4, i1 false)
  %46 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  %49 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %50 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %49, i32 0, i32 1
  %51 = load %struct.b2Position*, %struct.b2Position** %50, align 8
  %52 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %51, i64 %48
  %53 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %52, i32 0, i32 1
  %54 = load float, float* %53, align 4
  store float %54, float* %aB, align 4
  %55 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %59 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %58, i32 0, i32 2
  %60 = load %struct.b2Position*, %struct.b2Position** %59, align 8
  %61 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %60, i64 %57
  %62 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %61, i32 0, i32 0
  %63 = bitcast %struct.b2Vec2* %vB to i8*
  %64 = bitcast %struct.b2Vec2* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 4, i1 false)
  %65 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  %68 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %69 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %68, i32 0, i32 2
  %70 = load %struct.b2Position*, %struct.b2Position** %69, align 8
  %71 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %70, i64 %67
  %72 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %71, i32 0, i32 1
  %73 = load float, float* %72, align 4
  store float %73, float* %wB, align 4
  %74 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %74)
  %75 = bitcast %class.b2MouseJoint* %9 to %class.b2Joint*
  %76 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %75, i32 0, i32 7
  %77 = load %class.b2Body*, %class.b2Body** %76, align 8
  %78 = call float @_ZNK6b2Body7GetMassEv(%class.b2Body* %77)
  store float %78, float* %mass, align 4
  %79 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fmul float 0x401921FB60000000, %80
  store float %81, float* %omega, align 4
  %82 = load float, float* %mass, align 4
  %83 = fmul float 2.000000e+00, %82
  %84 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 4
  %85 = load float, float* %84, align 4
  %86 = fmul float %83, %85
  %87 = load float, float* %omega, align 4
  %88 = fmul float %86, %87
  store float %88, float* %d, align 4
  %89 = load float, float* %mass, align 4
  %90 = load float, float* %omega, align 4
  %91 = load float, float* %omega, align 4
  %92 = fmul float %90, %91
  %93 = fmul float %89, %92
  store float %93, float* %k, align 4
  %94 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %95 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %94, i32 0, i32 0
  %96 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %95, i32 0, i32 0
  %97 = load float, float* %96, align 8
  store float %97, float* %h, align 4
  %98 = load float, float* %d, align 4
  %99 = load float, float* %h, align 4
  %100 = load float, float* %k, align 4
  %101 = fmul float %99, %100
  %102 = fadd float %98, %101
  %103 = fcmp ogt float %102, 0x3E80000000000000
  br i1 %103, label %104, label %105

; <label>:104                                     ; preds = %0
  br label %107

; <label>:105                                     ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.49, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.50, i32 0, i32 0), i32 125, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %107

; <label>:107                                     ; preds = %106, %104
  %108 = load float, float* %h, align 4
  %109 = load float, float* %d, align 4
  %110 = load float, float* %h, align 4
  %111 = load float, float* %k, align 4
  %112 = fmul float %110, %111
  %113 = fadd float %109, %112
  %114 = fmul float %108, %113
  %115 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  store float %114, float* %115, align 8
  %116 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  %117 = load float, float* %116, align 8
  %118 = fcmp une float %117, 0.000000e+00
  br i1 %118, label %119, label %124

; <label>:119                                     ; preds = %107
  %120 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  %121 = load float, float* %120, align 8
  %122 = fdiv float 1.000000e+00, %121
  %123 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  store float %122, float* %123, align 8
  br label %124

; <label>:124                                     ; preds = %119, %107
  %125 = load float, float* %h, align 4
  %126 = load float, float* %k, align 4
  %127 = fmul float %125, %126
  %128 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  %129 = load float, float* %128, align 8
  %130 = fmul float %127, %129
  %131 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 5
  store float %130, float* %131, align 8
  %132 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %133 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 1
  %134 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 12
  %135 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %133, %struct.b2Vec2* dereferenceable(8) %134)
  %136 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %135, <2 x float>* %136, align 4
  %137 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %138 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %137, <2 x float>* %138, align 4
  %139 = bitcast %struct.b2Vec2* %132 to i8*
  %140 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 8, i32 4, i1 false)
  call void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %K)
  %141 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 13
  %142 = load float, float* %141, align 4
  %143 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 14
  %144 = load float, float* %143, align 8
  %145 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %146 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %145, i32 0, i32 1
  %147 = load float, float* %146, align 4
  %148 = fmul float %144, %147
  %149 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %150 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %149, i32 0, i32 1
  %151 = load float, float* %150, align 4
  %152 = fmul float %148, %151
  %153 = fadd float %142, %152
  %154 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  %155 = load float, float* %154, align 8
  %156 = fadd float %153, %155
  %157 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %158 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %157, i32 0, i32 0
  store float %156, float* %158, align 4
  %159 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 14
  %160 = load float, float* %159, align 8
  %161 = fsub float -0.000000e+00, %160
  %162 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %163 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %162, i32 0, i32 0
  %164 = load float, float* %163, align 4
  %165 = fmul float %161, %164
  %166 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %167 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %166, i32 0, i32 1
  %168 = load float, float* %167, align 4
  %169 = fmul float %165, %168
  %170 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %171 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %170, i32 0, i32 1
  store float %169, float* %171, align 4
  %172 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %173 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %172, i32 0, i32 1
  %174 = load float, float* %173, align 4
  %175 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %176 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %175, i32 0, i32 0
  store float %174, float* %176, align 4
  %177 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 13
  %178 = load float, float* %177, align 4
  %179 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 14
  %180 = load float, float* %179, align 8
  %181 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %182 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %181, i32 0, i32 0
  %183 = load float, float* %182, align 4
  %184 = fmul float %180, %183
  %185 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %186 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %185, i32 0, i32 0
  %187 = load float, float* %186, align 4
  %188 = fmul float %184, %187
  %189 = fadd float %178, %188
  %190 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 8
  %191 = load float, float* %190, align 8
  %192 = fadd float %189, %191
  %193 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %194 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %193, i32 0, i32 1
  store float %192, float* %194, align 4
  %195 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 15
  %196 = call { <2 x float>, <2 x float> } @_ZNK7b2Mat2210GetInverseEv(%struct.b2Transform* %K)
  %197 = bitcast %struct.b2Transform* %5 to { <2 x float>, <2 x float> }*
  %198 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %197, i32 0, i32 0
  %199 = extractvalue { <2 x float>, <2 x float> } %196, 0
  store <2 x float> %199, <2 x float>* %198, align 4
  %200 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %197, i32 0, i32 1
  %201 = extractvalue { <2 x float>, <2 x float> } %196, 1
  store <2 x float> %201, <2 x float>* %200, align 4
  %202 = bitcast %struct.b2Transform* %195 to i8*
  %203 = bitcast %struct.b2Transform* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %202, i8* %203, i64 16, i32 4, i1 false)
  %204 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 16
  %205 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %206 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %205)
  %207 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %206, <2 x float>* %207, align 4
  %208 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 2
  %209 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %208)
  %210 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %209, <2 x float>* %210, align 4
  %211 = bitcast %struct.b2Vec2* %204 to i8*
  %212 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %211, i8* %212, i64 8, i32 4, i1 false)
  %213 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 16
  %214 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 5
  %215 = load float, float* %214, align 8
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %213, float %215)
  %216 = load float, float* %wB, align 4
  %217 = fmul float %216, 0x3FEF5C2900000000
  store float %217, float* %wB, align 4
  %218 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %219 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %218, i32 0, i32 0
  %220 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %219, i32 0, i32 5
  %221 = load i8, i8* %220, align 4
  %222 = trunc i8 %221 to i1
  br i1 %222, label %223, label %242

; <label>:223                                     ; preds = %124
  %224 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 6
  %225 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %226 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %225, i32 0, i32 0
  %227 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %226, i32 0, i32 2
  %228 = load float, float* %227, align 8
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %224, float %228)
  %229 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 13
  %230 = load float, float* %229, align 4
  %231 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 6
  %232 = call <2 x float> @_ZmlfRK6b2Vec2(float %230, %struct.b2Vec2* dereferenceable(8) %231)
  %233 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %232, <2 x float>* %233, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %8)
  %234 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 14
  %235 = load float, float* %234, align 8
  %236 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 11
  %237 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 6
  %238 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %236, %struct.b2Vec2* dereferenceable(8) %237)
  %239 = fmul float %235, %238
  %240 = load float, float* %wB, align 4
  %241 = fadd float %240, %239
  store float %241, float* %wB, align 4
  br label %244

; <label>:242                                     ; preds = %124
  %243 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 6
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %243)
  br label %244

; <label>:244                                     ; preds = %242, %223
  %245 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  %246 = load i32, i32* %245, align 8
  %247 = sext i32 %246 to i64
  %248 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %249 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %248, i32 0, i32 2
  %250 = load %struct.b2Position*, %struct.b2Position** %249, align 8
  %251 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %250, i64 %247
  %252 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %251, i32 0, i32 0
  %253 = bitcast %struct.b2Vec2* %252 to i8*
  %254 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %253, i8* %254, i64 8, i32 4, i1 false)
  %255 = load float, float* %wB, align 4
  %256 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %9, i32 0, i32 10
  %257 = load i32, i32* %256, align 8
  %258 = sext i32 %257 to i64
  %259 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %260 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %259, i32 0, i32 2
  %261 = load %struct.b2Position*, %struct.b2Position** %260, align 8
  %262 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %261, i64 %258
  %263 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %262, i32 0, i32 1
  store float %255, float* %263, align 4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_ZNK6b2Body7GetMassEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 16
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #9

; Function Attrs: uwtable
define void @_ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2MouseJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %Cdot = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %impulse = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %oldImpulse = alloca %struct.b2Vec2, align 4
  %maxImpulse = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %10 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %11 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 10
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %15 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %14, i32 0, i32 2
  %16 = load %struct.b2Position*, %struct.b2Position** %15, align 8
  %17 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %16, i64 %13
  %18 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %17, i32 0, i32 0
  %19 = bitcast %struct.b2Vec2* %vB to i8*
  %20 = bitcast %struct.b2Vec2* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false)
  %21 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 10
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %25 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %24, i32 0, i32 2
  %26 = load %struct.b2Position*, %struct.b2Position** %25, align 8
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i64 %23
  %28 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %27, i32 0, i32 1
  %29 = load float, float* %28, align 4
  store float %29, float* %wB, align 4
  %30 = load float, float* %wB, align 4
  %31 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 11
  %32 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %30, %struct.b2Vec2* dereferenceable(8) %31)
  %33 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  %34 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %3)
  %35 = bitcast %struct.b2Vec2* %Cdot to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 15
  %37 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 16
  %38 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Cdot, %struct.b2Vec2* dereferenceable(8) %37)
  %39 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %38, <2 x float>* %39, align 4
  %40 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 8
  %41 = load float, float* %40, align 8
  %42 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  %43 = call <2 x float> @_ZmlfRK6b2Vec2(float %41, %struct.b2Vec2* dereferenceable(8) %42)
  %44 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 4
  %45 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %46 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %45, <2 x float>* %46, align 4
  %47 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %7)
  %48 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %47, <2 x float>* %48, align 4
  %49 = call <2 x float> @_Z5b2MulRK7b2Mat22RK6b2Vec2(%struct.b2Transform* dereferenceable(16) %36, %struct.b2Vec2* dereferenceable(8) %4)
  %50 = bitcast %struct.b2Vec2* %impulse to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  %52 = bitcast %struct.b2Vec2* %oldImpulse to i8*
  %53 = bitcast %struct.b2Vec2* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 4, i1 false)
  %54 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %54, %struct.b2Vec2* dereferenceable(8) %impulse)
  %55 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %56 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %55, i32 0, i32 0
  %57 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %56, i32 0, i32 0
  %58 = load float, float* %57, align 8
  %59 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 7
  %60 = load float, float* %59, align 4
  %61 = fmul float %58, %60
  store float %61, float* %maxImpulse, align 4
  %62 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  %63 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %62)
  %64 = load float, float* %maxImpulse, align 4
  %65 = load float, float* %maxImpulse, align 4
  %66 = fmul float %64, %65
  %67 = fcmp ogt float %63, %66
  br i1 %67, label %68, label %74

; <label>:68                                      ; preds = %0
  %69 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  %70 = load float, float* %maxImpulse, align 4
  %71 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  %72 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %71)
  %73 = fdiv float %70, %72
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %69, float %73)
  br label %74

; <label>:74                                      ; preds = %68, %0
  %75 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 6
  %76 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %75, %struct.b2Vec2* dereferenceable(8) %oldImpulse)
  %77 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = bitcast %struct.b2Vec2* %impulse to i8*
  %79 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 4, i1 false)
  %80 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 13
  %81 = load float, float* %80, align 4
  %82 = call <2 x float> @_ZmlfRK6b2Vec2(float %81, %struct.b2Vec2* dereferenceable(8) %impulse)
  %83 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %82, <2 x float>* %83, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %9)
  %84 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 14
  %85 = load float, float* %84, align 8
  %86 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 11
  %87 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %86, %struct.b2Vec2* dereferenceable(8) %impulse)
  %88 = fmul float %85, %87
  %89 = load float, float* %wB, align 4
  %90 = fadd float %89, %88
  store float %90, float* %wB, align 4
  %91 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 10
  %92 = load i32, i32* %91, align 8
  %93 = sext i32 %92 to i64
  %94 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %95 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %94, i32 0, i32 2
  %96 = load %struct.b2Position*, %struct.b2Position** %95, align 8
  %97 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %96, i64 %93
  %98 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %97, i32 0, i32 0
  %99 = bitcast %struct.b2Vec2* %98 to i8*
  %100 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 4, i1 false)
  %101 = load float, float* %wB, align 4
  %102 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %10, i32 0, i32 10
  %103 = load i32, i32* %102, align 8
  %104 = sext i32 %103 to i64
  %105 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %106 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %105, i32 0, i32 2
  %107 = load %struct.b2Position*, %struct.b2Position** %106, align 8
  %108 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %107, i64 %104
  %109 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %108, i32 0, i32 1
  store float %101, float* %109, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2MouseJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  ret i1 true
}

; Function Attrs: uwtable
define <2 x float> @_ZNK16b2PrismaticJoint10GetAnchorAEv(%class.b2PrismaticJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %2, align 8
  %3 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %2, align 8
  %4 = bitcast %class.b2PrismaticJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %3, i32 0, i32 1
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK16b2PrismaticJoint10GetAnchorBEv(%class.b2PrismaticJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %2, align 8
  %3 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %2, align 8
  %4 = bitcast %class.b2PrismaticJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %3, i32 0, i32 2
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK16b2PrismaticJoint16GetReactionForceEf(%class.b2PrismaticJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PrismaticJoint*, align 8
  %3 = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %7 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %2, align 8
  %8 = load float, float* %3, align 4
  %9 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %7, i32 0, i32 6
  %10 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %9, i32 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %7, i32 0, i32 25
  %13 = call <2 x float> @_ZmlfRK6b2Vec2(float %11, %struct.b2Vec2* dereferenceable(8) %12)
  %14 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 4
  %15 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %7, i32 0, i32 7
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %7, i32 0, i32 6
  %18 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %17, i32 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fadd float %16, %19
  %21 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %7, i32 0, i32 24
  %22 = call <2 x float> @_ZmlfRK6b2Vec2(float %20, %struct.b2Vec2* dereferenceable(8) %21)
  %23 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %25 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %24, <2 x float>* %25, align 4
  %26 = call <2 x float> @_ZmlfRK6b2Vec2(float %8, %struct.b2Vec2* dereferenceable(8) %4)
  %27 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %26, <2 x float>* %27, align 4
  %28 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  ret <2 x float> %29
}

; Function Attrs: nounwind uwtable
define float @_ZNK16b2PrismaticJoint17GetReactionTorqueEf(%class.b2PrismaticJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %3, i32 0, i32 6
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fmul float %4, %7
  ret float %8
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint4DumpEv(%class.b2PrismaticJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.57, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.58, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.59, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5.60, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.61, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 2
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 2
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.62, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 3
  %37 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %36, i32 0, i32 0
  %38 = load float, float* %37, align 8
  %39 = fpext float %38 to double
  %40 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 3
  %41 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %40, i32 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fpext float %42 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.63, i32 0, i32 0), double %39, double %43)
  %44 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 5
  %45 = load float, float* %44, align 8
  %46 = fpext float %45 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.64, i32 0, i32 0), double %46)
  %47 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 12
  %48 = load i8, i8* %47, align 4
  %49 = trunc i8 %48 to i1
  %50 = zext i1 %49 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10.65, i32 0, i32 0), i32 %50)
  %51 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 8
  %52 = load float, float* %51, align 4
  %53 = fpext float %52 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11.66, i32 0, i32 0), double %53)
  %54 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 9
  %55 = load float, float* %54, align 8
  %56 = fpext float %55 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.67, i32 0, i32 0), double %56)
  %57 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 13
  %58 = load i8, i8* %57, align 1
  %59 = trunc i8 %58 to i1
  %60 = zext i1 %59 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.68, i32 0, i32 0), i32 %60)
  %61 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 11
  %62 = load float, float* %61, align 8
  %63 = fpext float %62 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0), double %63)
  %64 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 10
  %65 = load float, float* %64, align 4
  %66 = fpext float %65 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), double %66)
  %67 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %68 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %67, i32 0, i32 8
  %69 = load i32, i32* %68, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16, i32 0, i32 0), i32 %69)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16b2PrismaticJointD2Ev(%class.b2PrismaticJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN16b2PrismaticJointD0Ev(%class.b2PrismaticJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %4 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  invoke void @_ZN16b2PrismaticJointD2Ev(%class.b2PrismaticJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2PrismaticJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2PrismaticJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2PrismaticJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %k11 = alloca float, align 4
  %k12 = alloca float, align 4
  %k13 = alloca float, align 4
  %k22 = alloca float, align 4
  %k23 = alloca float, align 4
  %k33 = alloca float, align 4
  %jointTranslation = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %LA = alloca float, align 4
  %LB = alloca float, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %15 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %16 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %17 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %16, i32 0, i32 6
  %18 = load %class.b2Body*, %class.b2Body** %17, align 8
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  store i32 %20, i32* %21, align 4
  %22 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %22, i32 0, i32 7
  %24 = load %class.b2Body*, %class.b2Body** %23, align 8
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 18
  %29 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %30 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %29, i32 0, i32 6
  %31 = load %class.b2Body*, %class.b2Body** %30, align 8
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %31, i32 0, i32 4
  %33 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %32, i32 0, i32 0
  %34 = bitcast %struct.b2Vec2* %28 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 19
  %37 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %38 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %37, i32 0, i32 7
  %39 = load %class.b2Body*, %class.b2Body** %38, align 8
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %39, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %40, i32 0, i32 0
  %42 = bitcast %struct.b2Vec2* %36 to i8*
  %43 = bitcast %struct.b2Vec2* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %45 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %44, i32 0, i32 6
  %46 = load %class.b2Body*, %class.b2Body** %45, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 17
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 20
  store float %48, float* %49, align 4
  %50 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 7
  %52 = load %class.b2Body*, %class.b2Body** %51, align 8
  %53 = getelementptr inbounds %class.b2Body, %class.b2Body* %52, i32 0, i32 17
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 21
  store float %54, float* %55, align 8
  %56 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %57 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %56, i32 0, i32 6
  %58 = load %class.b2Body*, %class.b2Body** %57, align 8
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %58, i32 0, i32 19
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 22
  store float %60, float* %61, align 4
  %62 = bitcast %class.b2PrismaticJoint* %15 to %class.b2Joint*
  %63 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %62, i32 0, i32 7
  %64 = load %class.b2Body*, %class.b2Body** %63, align 8
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %64, i32 0, i32 19
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 23
  store float %66, float* %67, align 8
  %68 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %72 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %71, i32 0, i32 1
  %73 = load %struct.b2Position*, %struct.b2Position** %72, align 8
  %74 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %73, i64 %70
  %75 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %74, i32 0, i32 0
  %76 = bitcast %struct.b2Vec2* %cA to i8*
  %77 = bitcast %struct.b2Vec2* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false)
  %78 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %79 to i64
  %81 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %82 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %81, i32 0, i32 1
  %83 = load %struct.b2Position*, %struct.b2Position** %82, align 8
  %84 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %83, i64 %80
  %85 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %84, i32 0, i32 1
  %86 = load float, float* %85, align 4
  store float %86, float* %aA, align 4
  %87 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %91 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %90, i32 0, i32 2
  %92 = load %struct.b2Position*, %struct.b2Position** %91, align 8
  %93 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %92, i64 %89
  %94 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %93, i32 0, i32 0
  %95 = bitcast %struct.b2Vec2* %vA to i8*
  %96 = bitcast %struct.b2Vec2* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false)
  %97 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %101 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %100, i32 0, i32 2
  %102 = load %struct.b2Position*, %struct.b2Position** %101, align 8
  %103 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %102, i64 %99
  %104 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %103, i32 0, i32 1
  %105 = load float, float* %104, align 4
  store float %105, float* %wA, align 4
  %106 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  %107 = load i32, i32* %106, align 8
  %108 = sext i32 %107 to i64
  %109 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %110 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %109, i32 0, i32 1
  %111 = load %struct.b2Position*, %struct.b2Position** %110, align 8
  %112 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %111, i64 %108
  %113 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %112, i32 0, i32 0
  %114 = bitcast %struct.b2Vec2* %cB to i8*
  %115 = bitcast %struct.b2Vec2* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 4, i1 false)
  %116 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %120 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %119, i32 0, i32 1
  %121 = load %struct.b2Position*, %struct.b2Position** %120, align 8
  %122 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %121, i64 %118
  %123 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %122, i32 0, i32 1
  %124 = load float, float* %123, align 4
  store float %124, float* %aB, align 4
  %125 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  %126 = load i32, i32* %125, align 8
  %127 = sext i32 %126 to i64
  %128 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %129 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %128, i32 0, i32 2
  %130 = load %struct.b2Position*, %struct.b2Position** %129, align 8
  %131 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %130, i64 %127
  %132 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %131, i32 0, i32 0
  %133 = bitcast %struct.b2Vec2* %vB to i8*
  %134 = bitcast %struct.b2Vec2* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false)
  %135 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  %136 = load i32, i32* %135, align 8
  %137 = sext i32 %136 to i64
  %138 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %139 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %138, i32 0, i32 2
  %140 = load %struct.b2Position*, %struct.b2Position** %139, align 8
  %141 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %140, i64 %137
  %142 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %141, i32 0, i32 1
  %143 = load float, float* %142, align 4
  store float %143, float* %wB, align 4
  %144 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %144)
  %145 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %145)
  %146 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 1
  %147 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 18
  %148 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %146, %struct.b2Vec2* dereferenceable(8) %147)
  %149 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  %150 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %151 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %150, <2 x float>* %151, align 4
  %152 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 2
  %153 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 19
  %154 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %152, %struct.b2Vec2* dereferenceable(8) %153)
  %155 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %154, <2 x float>* %155, align 4
  %156 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %157 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %cA)
  %159 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %158, <2 x float>* %159, align 4
  %160 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %rB)
  %161 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %160, <2 x float>* %161, align 4
  %162 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %163 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 4
  %164 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 20
  %165 = load float, float* %164, align 4
  store float %165, float* %mA, align 4
  %166 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 21
  %167 = load float, float* %166, align 8
  store float %167, float* %mB, align 4
  %168 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 22
  %169 = load float, float* %168, align 4
  store float %169, float* %iA, align 4
  %170 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 23
  %171 = load float, float* %170, align 8
  store float %171, float* %iB, align 4
  %172 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 24
  %173 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 3
  %174 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %173)
  %175 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %174, <2 x float>* %175, align 4
  %176 = bitcast %struct.b2Vec2* %172 to i8*
  %177 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %176, i8* %177, i64 8, i32 4, i1 false)
  %178 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %179 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %178, <2 x float>* %179, align 4
  %180 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 24
  %181 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %180)
  %182 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  store float %181, float* %182, align 4
  %183 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 24
  %184 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %183)
  %185 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  store float %184, float* %185, align 8
  %186 = load float, float* %mA, align 4
  %187 = load float, float* %mB, align 4
  %188 = fadd float %186, %187
  %189 = load float, float* %iA, align 4
  %190 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %191 = load float, float* %190, align 4
  %192 = fmul float %189, %191
  %193 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %194 = load float, float* %193, align 4
  %195 = fmul float %192, %194
  %196 = fadd float %188, %195
  %197 = load float, float* %iB, align 4
  %198 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %199 = load float, float* %198, align 8
  %200 = fmul float %197, %199
  %201 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %202 = load float, float* %201, align 8
  %203 = fmul float %200, %202
  %204 = fadd float %196, %203
  %205 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 31
  store float %204, float* %205, align 8
  %206 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 31
  %207 = load float, float* %206, align 8
  %208 = fcmp ogt float %207, 0.000000e+00
  br i1 %208, label %209, label %214

; <label>:209                                     ; preds = %0
  %210 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 31
  %211 = load float, float* %210, align 8
  %212 = fdiv float 1.000000e+00, %211
  %213 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 31
  store float %212, float* %213, align 8
  br label %214

; <label>:214                                     ; preds = %209, %0
  %215 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 25
  %216 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 4
  %217 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %216)
  %218 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %217, <2 x float>* %218, align 4
  %219 = bitcast %struct.b2Vec2* %215 to i8*
  %220 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 8, i32 4, i1 false)
  %221 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %222 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %221, <2 x float>* %222, align 4
  %223 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 25
  %224 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %223)
  %225 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 26
  store float %224, float* %225, align 4
  %226 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 25
  %227 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %226)
  %228 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 27
  store float %227, float* %228, align 8
  %229 = load float, float* %mA, align 4
  %230 = load float, float* %mB, align 4
  %231 = fadd float %229, %230
  %232 = load float, float* %iA, align 4
  %233 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 26
  %234 = load float, float* %233, align 4
  %235 = fmul float %232, %234
  %236 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 26
  %237 = load float, float* %236, align 4
  %238 = fmul float %235, %237
  %239 = fadd float %231, %238
  %240 = load float, float* %iB, align 4
  %241 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 27
  %242 = load float, float* %241, align 8
  %243 = fmul float %240, %242
  %244 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 27
  %245 = load float, float* %244, align 8
  %246 = fmul float %243, %245
  %247 = fadd float %239, %246
  store float %247, float* %k11, align 4
  %248 = load float, float* %iA, align 4
  %249 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 26
  %250 = load float, float* %249, align 4
  %251 = fmul float %248, %250
  %252 = load float, float* %iB, align 4
  %253 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 27
  %254 = load float, float* %253, align 8
  %255 = fmul float %252, %254
  %256 = fadd float %251, %255
  store float %256, float* %k12, align 4
  %257 = load float, float* %iA, align 4
  %258 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 26
  %259 = load float, float* %258, align 4
  %260 = fmul float %257, %259
  %261 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %262 = load float, float* %261, align 4
  %263 = fmul float %260, %262
  %264 = load float, float* %iB, align 4
  %265 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 27
  %266 = load float, float* %265, align 8
  %267 = fmul float %264, %266
  %268 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %269 = load float, float* %268, align 8
  %270 = fmul float %267, %269
  %271 = fadd float %263, %270
  store float %271, float* %k13, align 4
  %272 = load float, float* %iA, align 4
  %273 = load float, float* %iB, align 4
  %274 = fadd float %272, %273
  store float %274, float* %k22, align 4
  %275 = load float, float* %k22, align 4
  %276 = fcmp oeq float %275, 0.000000e+00
  br i1 %276, label %277, label %278

; <label>:277                                     ; preds = %214
  store float 1.000000e+00, float* %k22, align 4
  br label %278

; <label>:278                                     ; preds = %277, %214
  %279 = load float, float* %iA, align 4
  %280 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %281 = load float, float* %280, align 4
  %282 = fmul float %279, %281
  %283 = load float, float* %iB, align 4
  %284 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %285 = load float, float* %284, align 8
  %286 = fmul float %283, %285
  %287 = fadd float %282, %286
  store float %287, float* %k23, align 4
  %288 = load float, float* %mA, align 4
  %289 = load float, float* %mB, align 4
  %290 = fadd float %288, %289
  %291 = load float, float* %iA, align 4
  %292 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %293 = load float, float* %292, align 4
  %294 = fmul float %291, %293
  %295 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %296 = load float, float* %295, align 4
  %297 = fmul float %294, %296
  %298 = fadd float %290, %297
  %299 = load float, float* %iB, align 4
  %300 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %301 = load float, float* %300, align 8
  %302 = fmul float %299, %301
  %303 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %304 = load float, float* %303, align 8
  %305 = fmul float %302, %304
  %306 = fadd float %298, %305
  store float %306, float* %k33, align 4
  %307 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 30
  %308 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %307, i32 0, i32 0
  %309 = load float, float* %k11, align 4
  %310 = load float, float* %k12, align 4
  %311 = load float, float* %k13, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %308, float %309, float %310, float %311)
  %312 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 30
  %313 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %312, i32 0, i32 1
  %314 = load float, float* %k12, align 4
  %315 = load float, float* %k22, align 4
  %316 = load float, float* %k23, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %313, float %314, float %315, float %316)
  %317 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 30
  %318 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %317, i32 0, i32 2
  %319 = load float, float* %k13, align 4
  %320 = load float, float* %k23, align 4
  %321 = load float, float* %k33, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %318, float %319, float %320, float %321)
  %322 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 12
  %323 = load i8, i8* %322, align 4
  %324 = trunc i8 %323 to i1
  br i1 %324, label %325, label %372

; <label>:325                                     ; preds = %278
  %326 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 24
  %327 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %326, %struct.b2Vec2* dereferenceable(8) %d)
  store float %327, float* %jointTranslation, align 4
  %328 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 9
  %329 = load float, float* %328, align 8
  %330 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 8
  %331 = load float, float* %330, align 4
  %332 = fsub float %329, %331
  %333 = call float @_Z5b2AbsIfET_S0_(float %332)
  %334 = fcmp olt float %333, 0x3F847AE140000000
  br i1 %334, label %335, label %337

; <label>:335                                     ; preds = %325
  %336 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  store i32 3, i32* %336, align 8
  br label %371

; <label>:337                                     ; preds = %325
  %338 = load float, float* %jointTranslation, align 4
  %339 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 8
  %340 = load float, float* %339, align 4
  %341 = fcmp ole float %338, %340
  br i1 %341, label %342, label %351

; <label>:342                                     ; preds = %337
  %343 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  %344 = load i32, i32* %343, align 8
  %345 = icmp ne i32 %344, 1
  br i1 %345, label %346, label %350

; <label>:346                                     ; preds = %342
  %347 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  store i32 1, i32* %347, align 8
  %348 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %349 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %348, i32 0, i32 2
  store float 0.000000e+00, float* %349, align 4
  br label %350

; <label>:350                                     ; preds = %346, %342
  br label %370

; <label>:351                                     ; preds = %337
  %352 = load float, float* %jointTranslation, align 4
  %353 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 9
  %354 = load float, float* %353, align 8
  %355 = fcmp oge float %352, %354
  br i1 %355, label %356, label %365

; <label>:356                                     ; preds = %351
  %357 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  %358 = load i32, i32* %357, align 8
  %359 = icmp ne i32 %358, 2
  br i1 %359, label %360, label %364

; <label>:360                                     ; preds = %356
  %361 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  store i32 2, i32* %361, align 8
  %362 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %363 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %362, i32 0, i32 2
  store float 0.000000e+00, float* %363, align 4
  br label %364

; <label>:364                                     ; preds = %360, %356
  br label %369

; <label>:365                                     ; preds = %351
  %366 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  store i32 0, i32* %366, align 8
  %367 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %368 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %367, i32 0, i32 2
  store float 0.000000e+00, float* %368, align 4
  br label %369

; <label>:369                                     ; preds = %365, %364
  br label %370

; <label>:370                                     ; preds = %369, %350
  br label %371

; <label>:371                                     ; preds = %370, %335
  br label %376

; <label>:372                                     ; preds = %278
  %373 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 15
  store i32 0, i32* %373, align 8
  %374 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %375 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %374, i32 0, i32 2
  store float 0.000000e+00, float* %375, align 4
  br label %376

; <label>:376                                     ; preds = %372, %371
  %377 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 13
  %378 = load i8, i8* %377, align 1
  %379 = trunc i8 %378 to i1
  %380 = zext i1 %379 to i32
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %384

; <label>:382                                     ; preds = %376
  %383 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 7
  store float 0.000000e+00, float* %383, align 8
  br label %384

; <label>:384                                     ; preds = %382, %376
  %385 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %386 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %385, i32 0, i32 0
  %387 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %386, i32 0, i32 5
  %388 = load i8, i8* %387, align 4
  %389 = trunc i8 %388 to i1
  br i1 %389, label %390, label %476

; <label>:390                                     ; preds = %384
  %391 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %392 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %393 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %392, i32 0, i32 0
  %394 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %393, i32 0, i32 2
  %395 = load float, float* %394, align 8
  call void @_ZN6b2Vec3mLEf(%struct.b2Vec3* %391, float %395)
  %396 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %397 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %396, i32 0, i32 0
  %398 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %397, i32 0, i32 2
  %399 = load float, float* %398, align 8
  %400 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 7
  %401 = load float, float* %400, align 8
  %402 = fmul float %401, %399
  store float %402, float* %400, align 8
  %403 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %404 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %403, i32 0, i32 0
  %405 = load float, float* %404, align 4
  %406 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 25
  %407 = call <2 x float> @_ZmlfRK6b2Vec2(float %405, %struct.b2Vec2* dereferenceable(8) %406)
  %408 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %407, <2 x float>* %408, align 4
  %409 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 7
  %410 = load float, float* %409, align 8
  %411 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %412 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %411, i32 0, i32 2
  %413 = load float, float* %412, align 4
  %414 = fadd float %410, %413
  %415 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 24
  %416 = call <2 x float> @_ZmlfRK6b2Vec2(float %414, %struct.b2Vec2* dereferenceable(8) %415)
  %417 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %416, <2 x float>* %417, align 4
  %418 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %12)
  %419 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %418, <2 x float>* %419, align 4
  %420 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %421 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %420, i32 0, i32 0
  %422 = load float, float* %421, align 4
  %423 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 26
  %424 = load float, float* %423, align 4
  %425 = fmul float %422, %424
  %426 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %427 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %426, i32 0, i32 1
  %428 = load float, float* %427, align 4
  %429 = fadd float %425, %428
  %430 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 7
  %431 = load float, float* %430, align 8
  %432 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %433 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %432, i32 0, i32 2
  %434 = load float, float* %433, align 4
  %435 = fadd float %431, %434
  %436 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 28
  %437 = load float, float* %436, align 4
  %438 = fmul float %435, %437
  %439 = fadd float %429, %438
  store float %439, float* %LA, align 4
  %440 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %441 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %440, i32 0, i32 0
  %442 = load float, float* %441, align 4
  %443 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 27
  %444 = load float, float* %443, align 8
  %445 = fmul float %442, %444
  %446 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %447 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %446, i32 0, i32 1
  %448 = load float, float* %447, align 4
  %449 = fadd float %445, %448
  %450 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 7
  %451 = load float, float* %450, align 8
  %452 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  %453 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %452, i32 0, i32 2
  %454 = load float, float* %453, align 4
  %455 = fadd float %451, %454
  %456 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 29
  %457 = load float, float* %456, align 8
  %458 = fmul float %455, %457
  %459 = fadd float %449, %458
  store float %459, float* %LB, align 4
  %460 = load float, float* %mA, align 4
  %461 = call <2 x float> @_ZmlfRK6b2Vec2(float %460, %struct.b2Vec2* dereferenceable(8) %P)
  %462 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %461, <2 x float>* %462, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %13)
  %463 = load float, float* %iA, align 4
  %464 = load float, float* %LA, align 4
  %465 = fmul float %463, %464
  %466 = load float, float* %wA, align 4
  %467 = fsub float %466, %465
  store float %467, float* %wA, align 4
  %468 = load float, float* %mB, align 4
  %469 = call <2 x float> @_ZmlfRK6b2Vec2(float %468, %struct.b2Vec2* dereferenceable(8) %P)
  %470 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %469, <2 x float>* %470, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %14)
  %471 = load float, float* %iB, align 4
  %472 = load float, float* %LB, align 4
  %473 = fmul float %471, %472
  %474 = load float, float* %wB, align 4
  %475 = fadd float %474, %473
  store float %475, float* %wB, align 4
  br label %479

; <label>:476                                     ; preds = %384
  %477 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 6
  call void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %477)
  %478 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 7
  store float 0.000000e+00, float* %478, align 8
  br label %479

; <label>:479                                     ; preds = %476, %390
  %480 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  %481 = load i32, i32* %480, align 4
  %482 = sext i32 %481 to i64
  %483 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %484 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %483, i32 0, i32 2
  %485 = load %struct.b2Position*, %struct.b2Position** %484, align 8
  %486 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %485, i64 %482
  %487 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %486, i32 0, i32 0
  %488 = bitcast %struct.b2Vec2* %487 to i8*
  %489 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %488, i8* %489, i64 8, i32 4, i1 false)
  %490 = load float, float* %wA, align 4
  %491 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 16
  %492 = load i32, i32* %491, align 4
  %493 = sext i32 %492 to i64
  %494 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %495 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %494, i32 0, i32 2
  %496 = load %struct.b2Position*, %struct.b2Position** %495, align 8
  %497 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %496, i64 %493
  %498 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %497, i32 0, i32 1
  store float %490, float* %498, align 4
  %499 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  %500 = load i32, i32* %499, align 8
  %501 = sext i32 %500 to i64
  %502 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %503 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %502, i32 0, i32 2
  %504 = load %struct.b2Position*, %struct.b2Position** %503, align 8
  %505 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %504, i64 %501
  %506 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %505, i32 0, i32 0
  %507 = bitcast %struct.b2Vec2* %506 to i8*
  %508 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %507, i8* %508, i64 8, i32 4, i1 false)
  %509 = load float, float* %wB, align 4
  %510 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %15, i32 0, i32 17
  %511 = load i32, i32* %510, align 8
  %512 = sext i32 %511 to i64
  %513 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %514 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %513, i32 0, i32 2
  %515 = load %struct.b2Position*, %struct.b2Position** %514, align 8
  %516 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %515, i64 %512
  %517 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %516, i32 0, i32 1
  store float %509, float* %517, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %this, float %x_, float %y_, float %z_) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec3*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  store %struct.b2Vec3* %this, %struct.b2Vec3** %1, align 8
  store float %x_, float* %2, align 4
  store float %y_, float* %3, align 4
  store float %z_, float* %4, align 4
  %5 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %6 = load float, float* %2, align 4
  %7 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  store float %6, float* %7, align 4
  %8 = load float, float* %3, align 4
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 1
  store float %8, float* %9, align 4
  %10 = load float, float* %4, align 4
  %11 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 2
  store float %10, float* %11, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec3mLEf(%struct.b2Vec3* %this, float %s) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec3*, align 8
  %2 = alloca float, align 4
  store %struct.b2Vec3* %this, %struct.b2Vec3** %1, align 8
  store float %s, float* %2, align 4
  %3 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, %4
  store float %7, float* %5, align 4
  %8 = load float, float* %2, align 4
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, %8
  store float %11, float* %9, align 4
  %12 = load float, float* %2, align 4
  %13 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = fmul float %14, %12
  store float %15, float* %13, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec3*, align 8
  store %struct.b2Vec3* %this, %struct.b2Vec3** %1, align 8
  %2 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %3 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %2, i32 0, i32 0
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %2, i32 0, i32 1
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %2, i32 0, i32 2
  store float 0.000000e+00, float* %5, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2PrismaticJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %Cdot = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %impulse = alloca float, align 4
  %oldImpulse = alloca float, align 4
  %maxImpulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %LA = alloca float, align 4
  %LB = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %Cdot1 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %Cdot2 = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %Cdot3 = alloca %struct.b2Vec3, align 4
  %f1 = alloca %struct.b2Vec3, align 4
  %df = alloca %struct.b2Vec3, align 4
  %8 = alloca %struct.b2Vec3, align 4
  %9 = alloca { <2 x float>, float }, align 8
  %10 = alloca { <2 x float>, float }, align 8
  %b = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %f2r = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec3, align 4
  %17 = alloca { <2 x float>, float }, align 8
  %P4 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  %19 = alloca %struct.b2Vec2, align 4
  %LA5 = alloca float, align 4
  %LB6 = alloca float, align 4
  %20 = alloca %struct.b2Vec2, align 4
  %21 = alloca %struct.b2Vec2, align 4
  %df7 = alloca %struct.b2Vec2, align 4
  %22 = alloca %struct.b2Vec2, align 4
  %P8 = alloca %struct.b2Vec2, align 4
  %LA9 = alloca float, align 4
  %LB10 = alloca float, align 4
  %23 = alloca %struct.b2Vec2, align 4
  %24 = alloca %struct.b2Vec2, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %25 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %26 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 16
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %30 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %29, i32 0, i32 2
  %31 = load %struct.b2Position*, %struct.b2Position** %30, align 8
  %32 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %31, i64 %28
  %33 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %32, i32 0, i32 0
  %34 = bitcast %struct.b2Vec2* %vA to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %40 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %39, i32 0, i32 2
  %41 = load %struct.b2Position*, %struct.b2Position** %40, align 8
  %42 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %41, i64 %38
  %43 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %42, i32 0, i32 1
  %44 = load float, float* %43, align 4
  store float %44, float* %wA, align 4
  %45 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 17
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %49 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %48, i32 0, i32 2
  %50 = load %struct.b2Position*, %struct.b2Position** %49, align 8
  %51 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %50, i64 %47
  %52 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %51, i32 0, i32 0
  %53 = bitcast %struct.b2Vec2* %vB to i8*
  %54 = bitcast %struct.b2Vec2* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 4, i1 false)
  %55 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 17
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %59 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %58, i32 0, i32 2
  %60 = load %struct.b2Position*, %struct.b2Position** %59, align 8
  %61 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %60, i64 %57
  %62 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %61, i32 0, i32 1
  %63 = load float, float* %62, align 4
  store float %63, float* %wB, align 4
  %64 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 20
  %65 = load float, float* %64, align 4
  store float %65, float* %mA, align 4
  %66 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 21
  %67 = load float, float* %66, align 8
  store float %67, float* %mB, align 4
  %68 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 22
  %69 = load float, float* %68, align 4
  store float %69, float* %iA, align 4
  %70 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 23
  %71 = load float, float* %70, align 8
  store float %71, float* %iB, align 4
  %72 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 13
  %73 = load i8, i8* %72, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %151

; <label>:75                                      ; preds = %0
  %76 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 15
  %77 = load i32, i32* %76, align 8
  %78 = icmp ne i32 %77, 3
  br i1 %78, label %79, label %151

; <label>:79                                      ; preds = %75
  %80 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 24
  %81 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %vA)
  %82 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %81, <2 x float>* %82, align 4
  %83 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %80, %struct.b2Vec2* dereferenceable(8) %3)
  %84 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 29
  %85 = load float, float* %84, align 8
  %86 = load float, float* %wB, align 4
  %87 = fmul float %85, %86
  %88 = fadd float %83, %87
  %89 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 28
  %90 = load float, float* %89, align 4
  %91 = load float, float* %wA, align 4
  %92 = fmul float %90, %91
  %93 = fsub float %88, %92
  store float %93, float* %Cdot, align 4
  %94 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 31
  %95 = load float, float* %94, align 8
  %96 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 11
  %97 = load float, float* %96, align 8
  %98 = load float, float* %Cdot, align 4
  %99 = fsub float %97, %98
  %100 = fmul float %95, %99
  store float %100, float* %impulse, align 4
  %101 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 7
  %102 = load float, float* %101, align 8
  store float %102, float* %oldImpulse, align 4
  %103 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %104 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %103, i32 0, i32 0
  %105 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %104, i32 0, i32 0
  %106 = load float, float* %105, align 8
  %107 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 10
  %108 = load float, float* %107, align 4
  %109 = fmul float %106, %108
  store float %109, float* %maxImpulse, align 4
  %110 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 7
  %111 = load float, float* %110, align 8
  %112 = load float, float* %impulse, align 4
  %113 = fadd float %111, %112
  %114 = load float, float* %maxImpulse, align 4
  %115 = fsub float -0.000000e+00, %114
  %116 = load float, float* %maxImpulse, align 4
  %117 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %113, float %115, float %116)
  %118 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 7
  store float %117, float* %118, align 8
  %119 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 7
  %120 = load float, float* %119, align 8
  %121 = load float, float* %oldImpulse, align 4
  %122 = fsub float %120, %121
  store float %122, float* %impulse, align 4
  %123 = load float, float* %impulse, align 4
  %124 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 24
  %125 = call <2 x float> @_ZmlfRK6b2Vec2(float %123, %struct.b2Vec2* dereferenceable(8) %124)
  %126 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %125, <2 x float>* %126, align 4
  %127 = load float, float* %impulse, align 4
  %128 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 28
  %129 = load float, float* %128, align 4
  %130 = fmul float %127, %129
  store float %130, float* %LA, align 4
  %131 = load float, float* %impulse, align 4
  %132 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 29
  %133 = load float, float* %132, align 8
  %134 = fmul float %131, %133
  store float %134, float* %LB, align 4
  %135 = load float, float* %mA, align 4
  %136 = call <2 x float> @_ZmlfRK6b2Vec2(float %135, %struct.b2Vec2* dereferenceable(8) %P)
  %137 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %136, <2 x float>* %137, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %4)
  %138 = load float, float* %iA, align 4
  %139 = load float, float* %LA, align 4
  %140 = fmul float %138, %139
  %141 = load float, float* %wA, align 4
  %142 = fsub float %141, %140
  store float %142, float* %wA, align 4
  %143 = load float, float* %mB, align 4
  %144 = call <2 x float> @_ZmlfRK6b2Vec2(float %143, %struct.b2Vec2* dereferenceable(8) %P)
  %145 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %144, <2 x float>* %145, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %5)
  %146 = load float, float* %iB, align 4
  %147 = load float, float* %LB, align 4
  %148 = fmul float %146, %147
  %149 = load float, float* %wB, align 4
  %150 = fadd float %149, %148
  store float %150, float* %wB, align 4
  br label %151

; <label>:151                                     ; preds = %79, %75, %0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %Cdot1)
  %152 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 25
  %153 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %vA)
  %154 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %153, <2 x float>* %154, align 4
  %155 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %152, %struct.b2Vec2* dereferenceable(8) %6)
  %156 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 27
  %157 = load float, float* %156, align 8
  %158 = load float, float* %wB, align 4
  %159 = fmul float %157, %158
  %160 = fadd float %155, %159
  %161 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 26
  %162 = load float, float* %161, align 4
  %163 = load float, float* %wA, align 4
  %164 = fmul float %162, %163
  %165 = fsub float %160, %164
  %166 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot1, i32 0, i32 0
  store float %165, float* %166, align 4
  %167 = load float, float* %wB, align 4
  %168 = load float, float* %wA, align 4
  %169 = fsub float %167, %168
  %170 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot1, i32 0, i32 1
  store float %169, float* %170, align 4
  %171 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 12
  %172 = load i8, i8* %171, align 4
  %173 = trunc i8 %172 to i1
  br i1 %173, label %174, label %331

; <label>:174                                     ; preds = %151
  %175 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 15
  %176 = load i32, i32* %175, align 8
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %331

; <label>:178                                     ; preds = %174
  %179 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 24
  %180 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %vA)
  %181 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %180, <2 x float>* %181, align 4
  %182 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %179, %struct.b2Vec2* dereferenceable(8) %7)
  %183 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 29
  %184 = load float, float* %183, align 8
  %185 = load float, float* %wB, align 4
  %186 = fmul float %184, %185
  %187 = fadd float %182, %186
  %188 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 28
  %189 = load float, float* %188, align 4
  %190 = load float, float* %wA, align 4
  %191 = fmul float %189, %190
  %192 = fsub float %187, %191
  store float %192, float* %Cdot2, align 4
  %193 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot1, i32 0, i32 0
  %194 = load float, float* %193, align 4
  %195 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot1, i32 0, i32 1
  %196 = load float, float* %195, align 4
  %197 = load float, float* %Cdot2, align 4
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %Cdot3, float %194, float %196, float %197)
  %198 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %199 = bitcast %struct.b2Vec3* %f1 to i8*
  %200 = bitcast %struct.b2Vec3* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* %200, i64 12, i32 4, i1 false)
  %201 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 30
  %202 = call { <2 x float>, float } @_ZNK6b2Vec3ngEv(%struct.b2Vec3* %Cdot3)
  store { <2 x float>, float } %202, { <2 x float>, float }* %9, align 8
  %203 = bitcast { <2 x float>, float }* %9 to i8*
  %204 = bitcast %struct.b2Vec3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %204, i8* %203, i64 12, i32 4, i1 false)
  %205 = call { <2 x float>, float } @_ZNK7b2Mat337Solve33ERK6b2Vec3(%struct.b2Mat33* %201, %struct.b2Vec3* dereferenceable(12) %8)
  store { <2 x float>, float } %205, { <2 x float>, float }* %10, align 8
  %206 = bitcast { <2 x float>, float }* %10 to i8*
  %207 = bitcast %struct.b2Vec3* %df to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %206, i64 12, i32 4, i1 false)
  %208 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  call void @_ZN6b2Vec3pLERKS_(%struct.b2Vec3* %208, %struct.b2Vec3* dereferenceable(12) %df)
  %209 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 15
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %212, label %219

; <label>:212                                     ; preds = %178
  %213 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %214 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %213, i32 0, i32 2
  %215 = load float, float* %214, align 4
  %216 = call float @_Z5b2MaxIfET_S0_S0_(float %215, float 0.000000e+00)
  %217 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %218 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %217, i32 0, i32 2
  store float %216, float* %218, align 4
  br label %231

; <label>:219                                     ; preds = %178
  %220 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 15
  %221 = load i32, i32* %220, align 8
  %222 = icmp eq i32 %221, 2
  br i1 %222, label %223, label %230

; <label>:223                                     ; preds = %219
  %224 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %225 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %224, i32 0, i32 2
  %226 = load float, float* %225, align 4
  %227 = call float @_Z5b2MinIfET_S0_S0_(float %226, float 0.000000e+00)
  %228 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %229 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %228, i32 0, i32 2
  store float %227, float* %229, align 4
  br label %230

; <label>:230                                     ; preds = %223, %219
  br label %231

; <label>:231                                     ; preds = %230, %212
  %232 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %Cdot1)
  %233 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %232, <2 x float>* %233, align 4
  %234 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %235 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %234, i32 0, i32 2
  %236 = load float, float* %235, align 4
  %237 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %f1, i32 0, i32 2
  %238 = load float, float* %237, align 4
  %239 = fsub float %236, %238
  %240 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 30
  %241 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %240, i32 0, i32 2
  %242 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %241, i32 0, i32 0
  %243 = load float, float* %242, align 4
  %244 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 30
  %245 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %244, i32 0, i32 2
  %246 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %245, i32 0, i32 1
  %247 = load float, float* %246, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %13, float %243, float %247)
  %248 = call <2 x float> @_ZmlfRK6b2Vec2(float %239, %struct.b2Vec2* dereferenceable(8) %13)
  %249 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %248, <2 x float>* %249, align 4
  %250 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %12)
  %251 = bitcast %struct.b2Vec2* %b to <2 x float>*
  store <2 x float> %250, <2 x float>* %251, align 4
  %252 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 30
  %253 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %252, %struct.b2Vec2* dereferenceable(8) %b)
  %254 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %253, <2 x float>* %254, align 4
  %255 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %f1, i32 0, i32 0
  %256 = load float, float* %255, align 4
  %257 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %f1, i32 0, i32 1
  %258 = load float, float* %257, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %15, float %256, float %258)
  %259 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %14, %struct.b2Vec2* dereferenceable(8) %15)
  %260 = bitcast %struct.b2Vec2* %f2r to <2 x float>*
  store <2 x float> %259, <2 x float>* %260, align 4
  %261 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %f2r, i32 0, i32 0
  %262 = load float, float* %261, align 4
  %263 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %264 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %263, i32 0, i32 0
  store float %262, float* %264, align 4
  %265 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %f2r, i32 0, i32 1
  %266 = load float, float* %265, align 4
  %267 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %268 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %267, i32 0, i32 1
  store float %266, float* %268, align 4
  %269 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %270 = call { <2 x float>, float } @_ZmiRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %269, %struct.b2Vec3* dereferenceable(12) %f1)
  store { <2 x float>, float } %270, { <2 x float>, float }* %17, align 8
  %271 = bitcast { <2 x float>, float }* %17 to i8*
  %272 = bitcast %struct.b2Vec3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %272, i8* %271, i64 12, i32 4, i1 false)
  %273 = bitcast %struct.b2Vec3* %df to i8*
  %274 = bitcast %struct.b2Vec3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %273, i8* %274, i64 12, i32 4, i1 false)
  %275 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 0
  %276 = load float, float* %275, align 4
  %277 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 25
  %278 = call <2 x float> @_ZmlfRK6b2Vec2(float %276, %struct.b2Vec2* dereferenceable(8) %277)
  %279 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %278, <2 x float>* %279, align 4
  %280 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 2
  %281 = load float, float* %280, align 4
  %282 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 24
  %283 = call <2 x float> @_ZmlfRK6b2Vec2(float %281, %struct.b2Vec2* dereferenceable(8) %282)
  %284 = bitcast %struct.b2Vec2* %19 to <2 x float>*
  store <2 x float> %283, <2 x float>* %284, align 4
  %285 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %18, %struct.b2Vec2* dereferenceable(8) %19)
  %286 = bitcast %struct.b2Vec2* %P4 to <2 x float>*
  store <2 x float> %285, <2 x float>* %286, align 4
  %287 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 0
  %288 = load float, float* %287, align 4
  %289 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 26
  %290 = load float, float* %289, align 4
  %291 = fmul float %288, %290
  %292 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 1
  %293 = load float, float* %292, align 4
  %294 = fadd float %291, %293
  %295 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 2
  %296 = load float, float* %295, align 4
  %297 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 28
  %298 = load float, float* %297, align 4
  %299 = fmul float %296, %298
  %300 = fadd float %294, %299
  store float %300, float* %LA5, align 4
  %301 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 0
  %302 = load float, float* %301, align 4
  %303 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 27
  %304 = load float, float* %303, align 8
  %305 = fmul float %302, %304
  %306 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 1
  %307 = load float, float* %306, align 4
  %308 = fadd float %305, %307
  %309 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %df, i32 0, i32 2
  %310 = load float, float* %309, align 4
  %311 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 29
  %312 = load float, float* %311, align 8
  %313 = fmul float %310, %312
  %314 = fadd float %308, %313
  store float %314, float* %LB6, align 4
  %315 = load float, float* %mA, align 4
  %316 = call <2 x float> @_ZmlfRK6b2Vec2(float %315, %struct.b2Vec2* dereferenceable(8) %P4)
  %317 = bitcast %struct.b2Vec2* %20 to <2 x float>*
  store <2 x float> %316, <2 x float>* %317, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %20)
  %318 = load float, float* %iA, align 4
  %319 = load float, float* %LA5, align 4
  %320 = fmul float %318, %319
  %321 = load float, float* %wA, align 4
  %322 = fsub float %321, %320
  store float %322, float* %wA, align 4
  %323 = load float, float* %mB, align 4
  %324 = call <2 x float> @_ZmlfRK6b2Vec2(float %323, %struct.b2Vec2* dereferenceable(8) %P4)
  %325 = bitcast %struct.b2Vec2* %21 to <2 x float>*
  store <2 x float> %324, <2 x float>* %325, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %21)
  %326 = load float, float* %iB, align 4
  %327 = load float, float* %LB6, align 4
  %328 = fmul float %326, %327
  %329 = load float, float* %wB, align 4
  %330 = fadd float %329, %328
  store float %330, float* %wB, align 4
  br label %386

; <label>:331                                     ; preds = %174, %151
  %332 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 30
  %333 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %Cdot1)
  %334 = bitcast %struct.b2Vec2* %22 to <2 x float>*
  store <2 x float> %333, <2 x float>* %334, align 4
  %335 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %332, %struct.b2Vec2* dereferenceable(8) %22)
  %336 = bitcast %struct.b2Vec2* %df7 to <2 x float>*
  store <2 x float> %335, <2 x float>* %336, align 4
  %337 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 0
  %338 = load float, float* %337, align 4
  %339 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %340 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %339, i32 0, i32 0
  %341 = load float, float* %340, align 4
  %342 = fadd float %341, %338
  store float %342, float* %340, align 4
  %343 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 1
  %344 = load float, float* %343, align 4
  %345 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 6
  %346 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %345, i32 0, i32 1
  %347 = load float, float* %346, align 4
  %348 = fadd float %347, %344
  store float %348, float* %346, align 4
  %349 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 0
  %350 = load float, float* %349, align 4
  %351 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 25
  %352 = call <2 x float> @_ZmlfRK6b2Vec2(float %350, %struct.b2Vec2* dereferenceable(8) %351)
  %353 = bitcast %struct.b2Vec2* %P8 to <2 x float>*
  store <2 x float> %352, <2 x float>* %353, align 4
  %354 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 0
  %355 = load float, float* %354, align 4
  %356 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 26
  %357 = load float, float* %356, align 4
  %358 = fmul float %355, %357
  %359 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 1
  %360 = load float, float* %359, align 4
  %361 = fadd float %358, %360
  store float %361, float* %LA9, align 4
  %362 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 0
  %363 = load float, float* %362, align 4
  %364 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 27
  %365 = load float, float* %364, align 8
  %366 = fmul float %363, %365
  %367 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %df7, i32 0, i32 1
  %368 = load float, float* %367, align 4
  %369 = fadd float %366, %368
  store float %369, float* %LB10, align 4
  %370 = load float, float* %mA, align 4
  %371 = call <2 x float> @_ZmlfRK6b2Vec2(float %370, %struct.b2Vec2* dereferenceable(8) %P8)
  %372 = bitcast %struct.b2Vec2* %23 to <2 x float>*
  store <2 x float> %371, <2 x float>* %372, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %23)
  %373 = load float, float* %iA, align 4
  %374 = load float, float* %LA9, align 4
  %375 = fmul float %373, %374
  %376 = load float, float* %wA, align 4
  %377 = fsub float %376, %375
  store float %377, float* %wA, align 4
  %378 = load float, float* %mB, align 4
  %379 = call <2 x float> @_ZmlfRK6b2Vec2(float %378, %struct.b2Vec2* dereferenceable(8) %P8)
  %380 = bitcast %struct.b2Vec2* %24 to <2 x float>*
  store <2 x float> %379, <2 x float>* %380, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %24)
  %381 = load float, float* %iB, align 4
  %382 = load float, float* %LB10, align 4
  %383 = fmul float %381, %382
  %384 = load float, float* %wB, align 4
  %385 = fadd float %384, %383
  store float %385, float* %wB, align 4
  br label %386

; <label>:386                                     ; preds = %331, %231
  %387 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 16
  %388 = load i32, i32* %387, align 4
  %389 = sext i32 %388 to i64
  %390 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %391 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %390, i32 0, i32 2
  %392 = load %struct.b2Position*, %struct.b2Position** %391, align 8
  %393 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %392, i64 %389
  %394 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %393, i32 0, i32 0
  %395 = bitcast %struct.b2Vec2* %394 to i8*
  %396 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %395, i8* %396, i64 8, i32 4, i1 false)
  %397 = load float, float* %wA, align 4
  %398 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 16
  %399 = load i32, i32* %398, align 4
  %400 = sext i32 %399 to i64
  %401 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %402 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %401, i32 0, i32 2
  %403 = load %struct.b2Position*, %struct.b2Position** %402, align 8
  %404 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %403, i64 %400
  %405 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %404, i32 0, i32 1
  store float %397, float* %405, align 4
  %406 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 17
  %407 = load i32, i32* %406, align 8
  %408 = sext i32 %407 to i64
  %409 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %410 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %409, i32 0, i32 2
  %411 = load %struct.b2Position*, %struct.b2Position** %410, align 8
  %412 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %411, i64 %408
  %413 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %412, i32 0, i32 0
  %414 = bitcast %struct.b2Vec2* %413 to i8*
  %415 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %414, i8* %415, i64 8, i32 4, i1 false)
  %416 = load float, float* %wB, align 4
  %417 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %25, i32 0, i32 17
  %418 = load i32, i32* %417, align 8
  %419 = sext i32 %418 to i64
  %420 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %421 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %420, i32 0, i32 2
  %422 = load %struct.b2Position*, %struct.b2Position** %421, align 8
  %423 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %422, i64 %419
  %424 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %423, i32 0, i32 1
  store float %416, float* %424, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %this, float %xIn, float %yIn, float %zIn) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Vec3*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  store %struct.b2Vec3* %this, %struct.b2Vec3** %1, align 8
  store float %xIn, float* %2, align 4
  store float %yIn, float* %3, align 4
  store float %zIn, float* %4, align 4
  %5 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %2, align 4
  store float %7, float* %6, align 4
  %8 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 1
  %9 = load float, float* %3, align 4
  store float %9, float* %8, align 4
  %10 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 2
  %11 = load float, float* %4, align 4
  store float %11, float* %10, align 4
  ret void
}

; Function Attrs: uwtable
define linkonce_odr { <2 x float>, float } @_ZNK6b2Vec3ngEv(%struct.b2Vec3* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca %struct.b2Vec3*, align 8
  %3 = alloca { <2 x float>, float }, align 8
  store %struct.b2Vec3* %this, %struct.b2Vec3** %2, align 8
  %4 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %1)
  %5 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fsub float -0.000000e+00, %6
  %8 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %4, i32 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fsub float -0.000000e+00, %9
  %11 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %4, i32 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = fsub float -0.000000e+00, %12
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %1, float %7, float %10, float %13)
  %14 = bitcast { <2 x float>, float }* %3 to i8*
  %15 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 12, i32 4, i1 false)
  %16 = load { <2 x float>, float }, { <2 x float>, float }* %3, align 8
  ret { <2 x float>, float } %16
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Vec3*, align 8
  store %struct.b2Vec3* %this, %struct.b2Vec3** %1, align 8
  %2 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  ret void
}

; Function Attrs: uwtable
define { <2 x float>, float } @_ZNK7b2Mat337Solve33ERK6b2Vec3(%struct.b2Mat33* %this, %struct.b2Vec3* dereferenceable(12) %b) #0 align 2 {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca %struct.b2Mat33*, align 8
  %3 = alloca %struct.b2Vec3*, align 8
  %det = alloca float, align 4
  %4 = alloca %struct.b2Vec3, align 4
  %5 = alloca { <2 x float>, float }, align 8
  %6 = alloca %struct.b2Vec3, align 4
  %7 = alloca { <2 x float>, float }, align 8
  %8 = alloca %struct.b2Vec3, align 4
  %9 = alloca { <2 x float>, float }, align 8
  %10 = alloca %struct.b2Vec3, align 4
  %11 = alloca { <2 x float>, float }, align 8
  %12 = alloca { <2 x float>, float }, align 8
  store %struct.b2Mat33* %this, %struct.b2Mat33** %2, align 8
  store %struct.b2Vec3* %b, %struct.b2Vec3** %3, align 8
  %13 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %14 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 1
  %16 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 2
  %17 = call { <2 x float>, float } @_Z7b2CrossRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %15, %struct.b2Vec3* dereferenceable(12) %16)
  store { <2 x float>, float } %17, { <2 x float>, float }* %5, align 8
  %18 = bitcast { <2 x float>, float }* %5 to i8*
  %19 = bitcast %struct.b2Vec3* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %18, i64 12, i32 4, i1 false)
  %20 = call float @_Z5b2DotRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %14, %struct.b2Vec3* dereferenceable(12) %4)
  store float %20, float* %det, align 4
  %21 = load float, float* %det, align 4
  %22 = fcmp une float %21, 0.000000e+00
  br i1 %22, label %23, label %26

; <label>:23                                      ; preds = %0
  %24 = load float, float* %det, align 4
  %25 = fdiv float 1.000000e+00, %24
  store float %25, float* %det, align 4
  br label %26

; <label>:26                                      ; preds = %23, %0
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %1)
  %27 = load float, float* %det, align 4
  %28 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %29 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 1
  %30 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 2
  %31 = call { <2 x float>, float } @_Z7b2CrossRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %29, %struct.b2Vec3* dereferenceable(12) %30)
  store { <2 x float>, float } %31, { <2 x float>, float }* %7, align 8
  %32 = bitcast { <2 x float>, float }* %7 to i8*
  %33 = bitcast %struct.b2Vec3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %32, i64 12, i32 4, i1 false)
  %34 = call float @_Z5b2DotRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %28, %struct.b2Vec3* dereferenceable(12) %6)
  %35 = fmul float %27, %34
  %36 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %1, i32 0, i32 0
  store float %35, float* %36, align 4
  %37 = load float, float* %det, align 4
  %38 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 0
  %39 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %40 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 2
  %41 = call { <2 x float>, float } @_Z7b2CrossRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %39, %struct.b2Vec3* dereferenceable(12) %40)
  store { <2 x float>, float } %41, { <2 x float>, float }* %9, align 8
  %42 = bitcast { <2 x float>, float }* %9 to i8*
  %43 = bitcast %struct.b2Vec3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %42, i64 12, i32 4, i1 false)
  %44 = call float @_Z5b2DotRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %38, %struct.b2Vec3* dereferenceable(12) %8)
  %45 = fmul float %37, %44
  %46 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %1, i32 0, i32 1
  store float %45, float* %46, align 4
  %47 = load float, float* %det, align 4
  %48 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 0
  %49 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %13, i32 0, i32 1
  %50 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %51 = call { <2 x float>, float } @_Z7b2CrossRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %49, %struct.b2Vec3* dereferenceable(12) %50)
  store { <2 x float>, float } %51, { <2 x float>, float }* %11, align 8
  %52 = bitcast { <2 x float>, float }* %11 to i8*
  %53 = bitcast %struct.b2Vec3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %52, i64 12, i32 4, i1 false)
  %54 = call float @_Z5b2DotRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %48, %struct.b2Vec3* dereferenceable(12) %10)
  %55 = fmul float %47, %54
  %56 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %1, i32 0, i32 2
  store float %55, float* %56, align 4
  %57 = bitcast { <2 x float>, float }* %12 to i8*
  %58 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 12, i32 4, i1 false)
  %59 = load { <2 x float>, float }, { <2 x float>, float }* %12, align 8
  ret { <2 x float>, float } %59
}

; Function Attrs: inlinehint uwtable
define linkonce_odr { <2 x float>, float } @_Z7b2CrossRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %a, %struct.b2Vec3* dereferenceable(12) %b) #1 comdat {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca %struct.b2Vec3*, align 8
  %3 = alloca %struct.b2Vec3*, align 8
  %4 = alloca { <2 x float>, float }, align 8
  store %struct.b2Vec3* %a, %struct.b2Vec3** %2, align 8
  store %struct.b2Vec3* %b, %struct.b2Vec3** %3, align 8
  %5 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %8, i32 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = fmul float %7, %10
  %12 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %13 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %12, i32 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %16 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %15, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fmul float %14, %17
  %19 = fsub float %11, %18
  %20 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %21 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %20, i32 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %24 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %23, i32 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fmul float %22, %25
  %27 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %28 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %27, i32 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %31 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %30, i32 0, i32 2
  %32 = load float, float* %31, align 4
  %33 = fmul float %29, %32
  %34 = fsub float %26, %33
  %35 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %36 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %35, i32 0, i32 0
  %37 = load float, float* %36, align 4
  %38 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %39 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %38, i32 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fmul float %37, %40
  %42 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %43 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %42, i32 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %46 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %45, i32 0, i32 0
  %47 = load float, float* %46, align 4
  %48 = fmul float %44, %47
  %49 = fsub float %41, %48
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %1, float %19, float %34, float %49)
  %50 = bitcast { <2 x float>, float }* %4 to i8*
  %51 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 12, i32 4, i1 false)
  %52 = load { <2 x float>, float }, { <2 x float>, float }* %4, align 8
  ret { <2 x float>, float } %52
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z5b2DotRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %a, %struct.b2Vec3* dereferenceable(12) %b) #5 comdat {
  %1 = alloca %struct.b2Vec3*, align 8
  %2 = alloca %struct.b2Vec3*, align 8
  store %struct.b2Vec3* %a, %struct.b2Vec3** %1, align 8
  store %struct.b2Vec3* %b, %struct.b2Vec3** %2, align 8
  %3 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %4 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %7 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %6, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fmul float %5, %8
  %10 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %11 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %14 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fmul float %12, %15
  %17 = fadd float %9, %16
  %18 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %19 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %18, i32 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %22 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %21, i32 0, i32 2
  %23 = load float, float* %22, align 4
  %24 = fmul float %20, %23
  %25 = fadd float %17, %24
  ret float %25
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2Vec3pLERKS_(%struct.b2Vec3* %this, %struct.b2Vec3* dereferenceable(12) %v) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec3*, align 8
  %2 = alloca %struct.b2Vec3*, align 8
  store %struct.b2Vec3* %this, %struct.b2Vec3** %1, align 8
  store %struct.b2Vec3* %v, %struct.b2Vec3** %2, align 8
  %3 = load %struct.b2Vec3*, %struct.b2Vec3** %1, align 8
  %4 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fadd float %8, %6
  store float %9, float* %7, align 4
  %10 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %11 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fadd float %14, %12
  store float %15, float* %13, align 4
  %16 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %17 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %16, i32 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %3, i32 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = fadd float %20, %18
  store float %21, float* %19, align 4
  ret void
}

; Function Attrs: uwtable
define <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %this, %struct.b2Vec2* dereferenceable(8) %b) #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Mat33*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %a11 = alloca float, align 4
  %a12 = alloca float, align 4
  %a21 = alloca float, align 4
  %a22 = alloca float, align 4
  %det = alloca float, align 4
  store %struct.b2Mat33* %this, %struct.b2Mat33** %2, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %5 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  store float %7, float* %a11, align 4
  %8 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %4, i32 0, i32 1
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  store float %10, float* %a12, align 4
  %11 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %4, i32 0, i32 0
  %12 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  store float %13, float* %a21, align 4
  %14 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %4, i32 0, i32 1
  %15 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  store float %16, float* %a22, align 4
  %17 = load float, float* %a11, align 4
  %18 = load float, float* %a22, align 4
  %19 = fmul float %17, %18
  %20 = load float, float* %a12, align 4
  %21 = load float, float* %a21, align 4
  %22 = fmul float %20, %21
  %23 = fsub float %19, %22
  store float %23, float* %det, align 4
  %24 = load float, float* %det, align 4
  %25 = fcmp une float %24, 0.000000e+00
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %0
  %27 = load float, float* %det, align 4
  %28 = fdiv float 1.000000e+00, %27
  store float %28, float* %det, align 4
  br label %29

; <label>:29                                      ; preds = %26, %0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %1)
  %30 = load float, float* %det, align 4
  %31 = load float, float* %a22, align 4
  %32 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 0
  %34 = load float, float* %33, align 4
  %35 = fmul float %31, %34
  %36 = load float, float* %a12, align 4
  %37 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %38 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %37, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fmul float %36, %39
  %41 = fsub float %35, %40
  %42 = fmul float %30, %41
  %43 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %1, i32 0, i32 0
  store float %42, float* %43, align 4
  %44 = load float, float* %det, align 4
  %45 = load float, float* %a11, align 4
  %46 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %47 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %46, i32 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fmul float %45, %48
  %50 = load float, float* %a21, align 4
  %51 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %52 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %51, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = fmul float %50, %53
  %55 = fsub float %49, %54
  %56 = fmul float %44, %55
  %57 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %1, i32 0, i32 1
  store float %56, float* %57, align 4
  %58 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  ret <2 x float> %59
}

; Function Attrs: inlinehint uwtable
define linkonce_odr { <2 x float>, float } @_ZmiRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %a, %struct.b2Vec3* dereferenceable(12) %b) #1 comdat {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca %struct.b2Vec3*, align 8
  %3 = alloca %struct.b2Vec3*, align 8
  %4 = alloca { <2 x float>, float }, align 8
  store %struct.b2Vec3* %a, %struct.b2Vec3** %2, align 8
  store %struct.b2Vec3* %b, %struct.b2Vec3** %3, align 8
  %5 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fsub float %7, %10
  %12 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %13 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %12, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %16 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %15, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fsub float %14, %17
  %19 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %20 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %19, i32 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %23 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %22, i32 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fsub float %21, %24
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %1, float %11, float %18, float %25)
  %26 = bitcast { <2 x float>, float }* %4 to i8*
  %27 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 12, i32 4, i1 false)
  %28 = load { <2 x float>, float }, { <2 x float>, float }* %4, align 8
  ret { <2 x float>, float } %28
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2PrismaticJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %axis = alloca %struct.b2Vec2, align 4
  %a1 = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %a2 = alloca float, align 4
  %perp = alloca %struct.b2Vec2, align 4
  %s1 = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %s2 = alloca float, align 4
  %impulse = alloca %struct.b2Vec3, align 4
  %C1 = alloca %struct.b2Vec2, align 4
  %linearError = alloca float, align 4
  %angularError = alloca float, align 4
  %active = alloca i8, align 1
  %C2 = alloca float, align 4
  %translation = alloca float, align 4
  %k11 = alloca float, align 4
  %k12 = alloca float, align 4
  %k13 = alloca float, align 4
  %k22 = alloca float, align 4
  %k23 = alloca float, align 4
  %k33 = alloca float, align 4
  %K = alloca %struct.b2Mat33, align 4
  %C = alloca %struct.b2Vec3, align 4
  %9 = alloca %struct.b2Vec3, align 4
  %10 = alloca %struct.b2Vec3, align 4
  %11 = alloca { <2 x float>, float }, align 8
  %12 = alloca { <2 x float>, float }, align 8
  %k111 = alloca float, align 4
  %k122 = alloca float, align 4
  %k223 = alloca float, align 4
  %K4 = alloca %struct.b2Transform, align 4
  %impulse1 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %P = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %LA = alloca float, align 4
  %LB = alloca float, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %18 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %19 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 16
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %23 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %22, i32 0, i32 1
  %24 = load %struct.b2Position*, %struct.b2Position** %23, align 8
  %25 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %24, i64 %21
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i32 0, i32 0
  %27 = bitcast %struct.b2Vec2* %cA to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 16
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %33 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %32, i32 0, i32 1
  %34 = load %struct.b2Position*, %struct.b2Position** %33, align 8
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i64 %31
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i32 0, i32 1
  %37 = load float, float* %36, align 4
  store float %37, float* %aA, align 4
  %38 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 17
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %42 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %41, i32 0, i32 1
  %43 = load %struct.b2Position*, %struct.b2Position** %42, align 8
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i64 %40
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i32 0, i32 0
  %46 = bitcast %struct.b2Vec2* %cB to i8*
  %47 = bitcast %struct.b2Vec2* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false)
  %48 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 17
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %52 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %51, i32 0, i32 1
  %53 = load %struct.b2Position*, %struct.b2Position** %52, align 8
  %54 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %53, i64 %50
  %55 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %54, i32 0, i32 1
  %56 = load float, float* %55, align 4
  store float %56, float* %aB, align 4
  %57 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %57)
  %58 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %58)
  %59 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 20
  %60 = load float, float* %59, align 4
  store float %60, float* %mA, align 4
  %61 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 21
  %62 = load float, float* %61, align 8
  store float %62, float* %mB, align 4
  %63 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 22
  %64 = load float, float* %63, align 4
  store float %64, float* %iA, align 4
  %65 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 23
  %66 = load float, float* %65, align 8
  store float %66, float* %iB, align 4
  %67 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 1
  %68 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 18
  %69 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %67, %struct.b2Vec2* dereferenceable(8) %68)
  %70 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %69, <2 x float>* %70, align 4
  %71 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %72 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %71, <2 x float>* %72, align 4
  %73 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 2
  %74 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 19
  %75 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %73, %struct.b2Vec2* dereferenceable(8) %74)
  %76 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %75, <2 x float>* %76, align 4
  %77 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %78 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %77, <2 x float>* %78, align 4
  %79 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %80 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %79, <2 x float>* %80, align 4
  %81 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %cA)
  %82 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %81, <2 x float>* %82, align 4
  %83 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %84 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %83, <2 x float>* %84, align 4
  %85 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 3
  %86 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %85)
  %87 = bitcast %struct.b2Vec2* %axis to <2 x float>*
  store <2 x float> %86, <2 x float>* %87, align 4
  %88 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %89 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %88, <2 x float>* %89, align 4
  %90 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %axis)
  store float %90, float* %a1, align 4
  %91 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %axis)
  store float %91, float* %a2, align 4
  %92 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 4
  %93 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %92)
  %94 = bitcast %struct.b2Vec2* %perp to <2 x float>*
  store <2 x float> %93, <2 x float>* %94, align 4
  %95 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %96 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %95, <2 x float>* %96, align 4
  %97 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %perp)
  store float %97, float* %s1, align 4
  %98 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %perp)
  store float %98, float* %s2, align 4
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %impulse)
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %C1)
  %99 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %perp, %struct.b2Vec2* dereferenceable(8) %d)
  %100 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C1, i32 0, i32 0
  store float %99, float* %100, align 4
  %101 = load float, float* %aB, align 4
  %102 = load float, float* %aA, align 4
  %103 = fsub float %101, %102
  %104 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 5
  %105 = load float, float* %104, align 8
  %106 = fsub float %103, %105
  %107 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C1, i32 0, i32 1
  store float %106, float* %107, align 4
  %108 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C1, i32 0, i32 0
  %109 = load float, float* %108, align 4
  %110 = call float @_Z5b2AbsIfET_S0_(float %109)
  store float %110, float* %linearError, align 4
  %111 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C1, i32 0, i32 1
  %112 = load float, float* %111, align 4
  %113 = call float @_Z5b2AbsIfET_S0_(float %112)
  store float %113, float* %angularError, align 4
  store i8 0, i8* %active, align 1
  store float 0.000000e+00, float* %C2, align 4
  %114 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 12
  %115 = load i8, i8* %114, align 4
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %172

; <label>:117                                     ; preds = %0
  %118 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %axis, %struct.b2Vec2* dereferenceable(8) %d)
  store float %118, float* %translation, align 4
  %119 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 9
  %120 = load float, float* %119, align 8
  %121 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 8
  %122 = load float, float* %121, align 4
  %123 = fsub float %120, %122
  %124 = call float @_Z5b2AbsIfET_S0_(float %123)
  %125 = fcmp olt float %124, 0x3F847AE140000000
  br i1 %125, label %126, label %133

; <label>:126                                     ; preds = %117
  %127 = load float, float* %translation, align 4
  %128 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %127, float 0xBFC99999A0000000, float 0x3FC99999A0000000)
  store float %128, float* %C2, align 4
  %129 = load float, float* %linearError, align 4
  %130 = load float, float* %translation, align 4
  %131 = call float @_Z5b2AbsIfET_S0_(float %130)
  %132 = call float @_Z5b2MaxIfET_S0_S0_(float %129, float %131)
  store float %132, float* %linearError, align 4
  store i8 1, i8* %active, align 1
  br label %171

; <label>:133                                     ; preds = %117
  %134 = load float, float* %translation, align 4
  %135 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 8
  %136 = load float, float* %135, align 4
  %137 = fcmp ole float %134, %136
  br i1 %137, label %138, label %151

; <label>:138                                     ; preds = %133
  %139 = load float, float* %translation, align 4
  %140 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 8
  %141 = load float, float* %140, align 4
  %142 = fsub float %139, %141
  %143 = fadd float %142, 0x3F747AE140000000
  %144 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %143, float 0xBFC99999A0000000, float 0.000000e+00)
  store float %144, float* %C2, align 4
  %145 = load float, float* %linearError, align 4
  %146 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 8
  %147 = load float, float* %146, align 4
  %148 = load float, float* %translation, align 4
  %149 = fsub float %147, %148
  %150 = call float @_Z5b2MaxIfET_S0_S0_(float %145, float %149)
  store float %150, float* %linearError, align 4
  store i8 1, i8* %active, align 1
  br label %170

; <label>:151                                     ; preds = %133
  %152 = load float, float* %translation, align 4
  %153 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 9
  %154 = load float, float* %153, align 8
  %155 = fcmp oge float %152, %154
  br i1 %155, label %156, label %169

; <label>:156                                     ; preds = %151
  %157 = load float, float* %translation, align 4
  %158 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 9
  %159 = load float, float* %158, align 8
  %160 = fsub float %157, %159
  %161 = fsub float %160, 0x3F747AE140000000
  %162 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %161, float 0.000000e+00, float 0x3FC99999A0000000)
  store float %162, float* %C2, align 4
  %163 = load float, float* %linearError, align 4
  %164 = load float, float* %translation, align 4
  %165 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 9
  %166 = load float, float* %165, align 8
  %167 = fsub float %164, %166
  %168 = call float @_Z5b2MaxIfET_S0_S0_(float %163, float %167)
  store float %168, float* %linearError, align 4
  store i8 1, i8* %active, align 1
  br label %169

; <label>:169                                     ; preds = %156, %151
  br label %170

; <label>:170                                     ; preds = %169, %138
  br label %171

; <label>:171                                     ; preds = %170, %126
  br label %172

; <label>:172                                     ; preds = %171, %0
  %173 = load i8, i8* %active, align 1
  %174 = trunc i8 %173 to i1
  br i1 %174, label %175, label %266

; <label>:175                                     ; preds = %172
  %176 = load float, float* %mA, align 4
  %177 = load float, float* %mB, align 4
  %178 = fadd float %176, %177
  %179 = load float, float* %iA, align 4
  %180 = load float, float* %s1, align 4
  %181 = fmul float %179, %180
  %182 = load float, float* %s1, align 4
  %183 = fmul float %181, %182
  %184 = fadd float %178, %183
  %185 = load float, float* %iB, align 4
  %186 = load float, float* %s2, align 4
  %187 = fmul float %185, %186
  %188 = load float, float* %s2, align 4
  %189 = fmul float %187, %188
  %190 = fadd float %184, %189
  store float %190, float* %k11, align 4
  %191 = load float, float* %iA, align 4
  %192 = load float, float* %s1, align 4
  %193 = fmul float %191, %192
  %194 = load float, float* %iB, align 4
  %195 = load float, float* %s2, align 4
  %196 = fmul float %194, %195
  %197 = fadd float %193, %196
  store float %197, float* %k12, align 4
  %198 = load float, float* %iA, align 4
  %199 = load float, float* %s1, align 4
  %200 = fmul float %198, %199
  %201 = load float, float* %a1, align 4
  %202 = fmul float %200, %201
  %203 = load float, float* %iB, align 4
  %204 = load float, float* %s2, align 4
  %205 = fmul float %203, %204
  %206 = load float, float* %a2, align 4
  %207 = fmul float %205, %206
  %208 = fadd float %202, %207
  store float %208, float* %k13, align 4
  %209 = load float, float* %iA, align 4
  %210 = load float, float* %iB, align 4
  %211 = fadd float %209, %210
  store float %211, float* %k22, align 4
  %212 = load float, float* %k22, align 4
  %213 = fcmp oeq float %212, 0.000000e+00
  br i1 %213, label %214, label %215

; <label>:214                                     ; preds = %175
  store float 1.000000e+00, float* %k22, align 4
  br label %215

; <label>:215                                     ; preds = %214, %175
  %216 = load float, float* %iA, align 4
  %217 = load float, float* %a1, align 4
  %218 = fmul float %216, %217
  %219 = load float, float* %iB, align 4
  %220 = load float, float* %a2, align 4
  %221 = fmul float %219, %220
  %222 = fadd float %218, %221
  store float %222, float* %k23, align 4
  %223 = load float, float* %mA, align 4
  %224 = load float, float* %mB, align 4
  %225 = fadd float %223, %224
  %226 = load float, float* %iA, align 4
  %227 = load float, float* %a1, align 4
  %228 = fmul float %226, %227
  %229 = load float, float* %a1, align 4
  %230 = fmul float %228, %229
  %231 = fadd float %225, %230
  %232 = load float, float* %iB, align 4
  %233 = load float, float* %a2, align 4
  %234 = fmul float %232, %233
  %235 = load float, float* %a2, align 4
  %236 = fmul float %234, %235
  %237 = fadd float %231, %236
  store float %237, float* %k33, align 4
  call void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %K)
  %238 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %239 = load float, float* %k11, align 4
  %240 = load float, float* %k12, align 4
  %241 = load float, float* %k13, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %238, float %239, float %240, float %241)
  %242 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %243 = load float, float* %k12, align 4
  %244 = load float, float* %k22, align 4
  %245 = load float, float* %k23, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %242, float %243, float %244, float %245)
  %246 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %247 = load float, float* %k13, align 4
  %248 = load float, float* %k23, align 4
  %249 = load float, float* %k33, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %246, float %247, float %248, float %249)
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %C)
  %250 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C1, i32 0, i32 0
  %251 = load float, float* %250, align 4
  %252 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %C, i32 0, i32 0
  store float %251, float* %252, align 4
  %253 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C1, i32 0, i32 1
  %254 = load float, float* %253, align 4
  %255 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %C, i32 0, i32 1
  store float %254, float* %255, align 4
  %256 = load float, float* %C2, align 4
  %257 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %C, i32 0, i32 2
  store float %256, float* %257, align 4
  %258 = call { <2 x float>, float } @_ZNK6b2Vec3ngEv(%struct.b2Vec3* %C)
  store { <2 x float>, float } %258, { <2 x float>, float }* %11, align 8
  %259 = bitcast { <2 x float>, float }* %11 to i8*
  %260 = bitcast %struct.b2Vec3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %260, i8* %259, i64 12, i32 4, i1 false)
  %261 = call { <2 x float>, float } @_ZNK7b2Mat337Solve33ERK6b2Vec3(%struct.b2Mat33* %K, %struct.b2Vec3* dereferenceable(12) %10)
  store { <2 x float>, float } %261, { <2 x float>, float }* %12, align 8
  %262 = bitcast { <2 x float>, float }* %12 to i8*
  %263 = bitcast %struct.b2Vec3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %263, i8* %262, i64 12, i32 4, i1 false)
  %264 = bitcast %struct.b2Vec3* %impulse to i8*
  %265 = bitcast %struct.b2Vec3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %264, i8* %265, i64 12, i32 4, i1 false)
  br label %313

; <label>:266                                     ; preds = %172
  %267 = load float, float* %mA, align 4
  %268 = load float, float* %mB, align 4
  %269 = fadd float %267, %268
  %270 = load float, float* %iA, align 4
  %271 = load float, float* %s1, align 4
  %272 = fmul float %270, %271
  %273 = load float, float* %s1, align 4
  %274 = fmul float %272, %273
  %275 = fadd float %269, %274
  %276 = load float, float* %iB, align 4
  %277 = load float, float* %s2, align 4
  %278 = fmul float %276, %277
  %279 = load float, float* %s2, align 4
  %280 = fmul float %278, %279
  %281 = fadd float %275, %280
  store float %281, float* %k111, align 4
  %282 = load float, float* %iA, align 4
  %283 = load float, float* %s1, align 4
  %284 = fmul float %282, %283
  %285 = load float, float* %iB, align 4
  %286 = load float, float* %s2, align 4
  %287 = fmul float %285, %286
  %288 = fadd float %284, %287
  store float %288, float* %k122, align 4
  %289 = load float, float* %iA, align 4
  %290 = load float, float* %iB, align 4
  %291 = fadd float %289, %290
  store float %291, float* %k223, align 4
  %292 = load float, float* %k223, align 4
  %293 = fcmp oeq float %292, 0.000000e+00
  br i1 %293, label %294, label %295

; <label>:294                                     ; preds = %266
  store float 1.000000e+00, float* %k223, align 4
  br label %295

; <label>:295                                     ; preds = %294, %266
  call void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %K4)
  %296 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K4, i32 0, i32 0
  %297 = load float, float* %k111, align 4
  %298 = load float, float* %k122, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %296, float %297, float %298)
  %299 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K4, i32 0, i32 1
  %300 = load float, float* %k122, align 4
  %301 = load float, float* %k223, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %299, float %300, float %301)
  %302 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %C1)
  %303 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %302, <2 x float>* %303, align 4
  %304 = call <2 x float> @_ZNK7b2Mat225SolveERK6b2Vec2(%struct.b2Transform* %K4, %struct.b2Vec2* dereferenceable(8) %13)
  %305 = bitcast %struct.b2Vec2* %impulse1 to <2 x float>*
  store <2 x float> %304, <2 x float>* %305, align 4
  %306 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse1, i32 0, i32 0
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 0
  store float %307, float* %308, align 4
  %309 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse1, i32 0, i32 1
  %310 = load float, float* %309, align 4
  %311 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 1
  store float %310, float* %311, align 4
  %312 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  store float 0.000000e+00, float* %312, align 4
  br label %313

; <label>:313                                     ; preds = %295, %215
  %314 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 0
  %315 = load float, float* %314, align 4
  %316 = call <2 x float> @_ZmlfRK6b2Vec2(float %315, %struct.b2Vec2* dereferenceable(8) %perp)
  %317 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %316, <2 x float>* %317, align 4
  %318 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %319 = load float, float* %318, align 4
  %320 = call <2 x float> @_ZmlfRK6b2Vec2(float %319, %struct.b2Vec2* dereferenceable(8) %axis)
  %321 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %320, <2 x float>* %321, align 4
  %322 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %14, %struct.b2Vec2* dereferenceable(8) %15)
  %323 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %322, <2 x float>* %323, align 4
  %324 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 0
  %325 = load float, float* %324, align 4
  %326 = load float, float* %s1, align 4
  %327 = fmul float %325, %326
  %328 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 1
  %329 = load float, float* %328, align 4
  %330 = fadd float %327, %329
  %331 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %332 = load float, float* %331, align 4
  %333 = load float, float* %a1, align 4
  %334 = fmul float %332, %333
  %335 = fadd float %330, %334
  store float %335, float* %LA, align 4
  %336 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 0
  %337 = load float, float* %336, align 4
  %338 = load float, float* %s2, align 4
  %339 = fmul float %337, %338
  %340 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 1
  %341 = load float, float* %340, align 4
  %342 = fadd float %339, %341
  %343 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %344 = load float, float* %343, align 4
  %345 = load float, float* %a2, align 4
  %346 = fmul float %344, %345
  %347 = fadd float %342, %346
  store float %347, float* %LB, align 4
  %348 = load float, float* %mA, align 4
  %349 = call <2 x float> @_ZmlfRK6b2Vec2(float %348, %struct.b2Vec2* dereferenceable(8) %P)
  %350 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %349, <2 x float>* %350, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %16)
  %351 = load float, float* %iA, align 4
  %352 = load float, float* %LA, align 4
  %353 = fmul float %351, %352
  %354 = load float, float* %aA, align 4
  %355 = fsub float %354, %353
  store float %355, float* %aA, align 4
  %356 = load float, float* %mB, align 4
  %357 = call <2 x float> @_ZmlfRK6b2Vec2(float %356, %struct.b2Vec2* dereferenceable(8) %P)
  %358 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %357, <2 x float>* %358, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %17)
  %359 = load float, float* %iB, align 4
  %360 = load float, float* %LB, align 4
  %361 = fmul float %359, %360
  %362 = load float, float* %aB, align 4
  %363 = fadd float %362, %361
  store float %363, float* %aB, align 4
  %364 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 16
  %365 = load i32, i32* %364, align 4
  %366 = sext i32 %365 to i64
  %367 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %368 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %367, i32 0, i32 1
  %369 = load %struct.b2Position*, %struct.b2Position** %368, align 8
  %370 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %369, i64 %366
  %371 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %370, i32 0, i32 0
  %372 = bitcast %struct.b2Vec2* %371 to i8*
  %373 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %372, i8* %373, i64 8, i32 4, i1 false)
  %374 = load float, float* %aA, align 4
  %375 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 16
  %376 = load i32, i32* %375, align 4
  %377 = sext i32 %376 to i64
  %378 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %379 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %378, i32 0, i32 1
  %380 = load %struct.b2Position*, %struct.b2Position** %379, align 8
  %381 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %380, i64 %377
  %382 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %381, i32 0, i32 1
  store float %374, float* %382, align 4
  %383 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 17
  %384 = load i32, i32* %383, align 8
  %385 = sext i32 %384 to i64
  %386 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %387 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %386, i32 0, i32 1
  %388 = load %struct.b2Position*, %struct.b2Position** %387, align 8
  %389 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %388, i64 %385
  %390 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %389, i32 0, i32 0
  %391 = bitcast %struct.b2Vec2* %390 to i8*
  %392 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %391, i8* %392, i64 8, i32 4, i1 false)
  %393 = load float, float* %aB, align 4
  %394 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %18, i32 0, i32 17
  %395 = load i32, i32* %394, align 8
  %396 = sext i32 %395 to i64
  %397 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %398 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %397, i32 0, i32 1
  %399 = load %struct.b2Position*, %struct.b2Position** %398, align 8
  %400 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %399, i64 %396
  %401 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %400, i32 0, i32 1
  store float %393, float* %401, align 4
  %402 = load float, float* %linearError, align 4
  %403 = fcmp ole float %402, 0x3F747AE140000000
  br i1 %403, label %404, label %407

; <label>:404                                     ; preds = %313
  %405 = load float, float* %angularError, align 4
  %406 = fcmp ole float %405, 0x3FA1DF46C0000000
  br label %407

; <label>:407                                     ; preds = %404, %313
  %408 = phi i1 [ false, %313 ], [ %406, %404 ]
  ret i1 %408
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.b2Mat33*, align 8
  store %struct.b2Mat33* %this, %struct.b2Mat33** %1, align 8
  %2 = load %struct.b2Mat33*, %struct.b2Mat33** %1, align 8
  %3 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %2, i32 0, i32 0
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %3)
  %4 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %2, i32 0, i32 1
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %4)
  %5 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %2, i32 0, i32 2
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %5)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK7b2Mat225SolveERK6b2Vec2(%struct.b2Transform* %this, %struct.b2Vec2* dereferenceable(8) %b) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %a11 = alloca float, align 4
  %a12 = alloca float, align 4
  %a21 = alloca float, align 4
  %a22 = alloca float, align 4
  %det = alloca float, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  store float %7, float* %a11, align 4
  %8 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 1
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  store float %10, float* %a12, align 4
  %11 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 0
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  store float %13, float* %a21, align 4
  %14 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 1
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  store float %16, float* %a22, align 4
  %17 = load float, float* %a11, align 4
  %18 = load float, float* %a22, align 4
  %19 = fmul float %17, %18
  %20 = load float, float* %a12, align 4
  %21 = load float, float* %a21, align 4
  %22 = fmul float %20, %21
  %23 = fsub float %19, %22
  store float %23, float* %det, align 4
  %24 = load float, float* %det, align 4
  %25 = fcmp une float %24, 0.000000e+00
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %0
  %27 = load float, float* %det, align 4
  %28 = fdiv float 1.000000e+00, %27
  store float %28, float* %det, align 4
  br label %29

; <label>:29                                      ; preds = %26, %0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %1)
  %30 = load float, float* %det, align 4
  %31 = load float, float* %a22, align 4
  %32 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 0
  %34 = load float, float* %33, align 4
  %35 = fmul float %31, %34
  %36 = load float, float* %a12, align 4
  %37 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %38 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %37, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fmul float %36, %39
  %41 = fsub float %35, %40
  %42 = fmul float %30, %41
  %43 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %1, i32 0, i32 0
  store float %42, float* %43, align 4
  %44 = load float, float* %det, align 4
  %45 = load float, float* %a11, align 4
  %46 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %47 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %46, i32 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fmul float %45, %48
  %50 = load float, float* %a21, align 4
  %51 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %52 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %51, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = fmul float %50, %53
  %55 = fsub float %49, %54
  %56 = fmul float %44, %55
  %57 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %1, i32 0, i32 1
  store float %56, float* %57, align 4
  %58 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  ret <2 x float> %59
}

; Function Attrs: uwtable
define <2 x float> @_ZNK13b2PulleyJoint10GetAnchorAEv(%class.b2PulleyJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %2, align 8
  %3 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %2, align 8
  %4 = bitcast %class.b2PulleyJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %3, i32 0, i32 5
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK13b2PulleyJoint10GetAnchorBEv(%class.b2PulleyJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %2, align 8
  %3 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %2, align 8
  %4 = bitcast %class.b2PulleyJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %3, i32 0, i32 6
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK13b2PulleyJoint16GetReactionForceEf(%class.b2PulleyJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PulleyJoint*, align 8
  %3 = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %2, align 8
  %5 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %4, i32 0, i32 9
  %6 = load float, float* %5, align 8
  %7 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %4, i32 0, i32 13
  %8 = call <2 x float> @_ZmlfRK6b2Vec2(float %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = load float, float* %3, align 4
  %11 = call <2 x float> @_ZmlfRK6b2Vec2(float %10, %struct.b2Vec2* dereferenceable(8) %P)
  %12 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %11, <2 x float>* %12, align 4
  %13 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  ret <2 x float> %14
}

; Function Attrs: nounwind uwtable
define float @_ZNK13b2PulleyJoint17GetReactionTorqueEf(%class.b2PulleyJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  ret float 0.000000e+00
}

; Function Attrs: uwtable
define void @_ZN13b2PulleyJoint4DumpEv(%class.b2PulleyJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.73, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.74, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.75, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6.76, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7.77, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 2
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 2
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8.78, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 5
  %37 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %36, i32 0, i32 0
  %38 = load float, float* %37, align 8
  %39 = fpext float %38 to double
  %40 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 5
  %41 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %40, i32 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fpext float %42 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9.79, i32 0, i32 0), double %39, double %43)
  %44 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 6
  %45 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %44, i32 0, i32 0
  %46 = load float, float* %45, align 8
  %47 = fpext float %46 to double
  %48 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 6
  %49 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %48, i32 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = fpext float %50 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10.80, i32 0, i32 0), double %47, double %51)
  %52 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 3
  %53 = load float, float* %52, align 8
  %54 = fpext float %53 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.81, i32 0, i32 0), double %54)
  %55 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 4
  %56 = load float, float* %55, align 4
  %57 = fpext float %56 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.82, i32 0, i32 0), double %57)
  %58 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 8
  %59 = load float, float* %58, align 4
  %60 = fpext float %59 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13.83, i32 0, i32 0), double %60)
  %61 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  %62 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %61, i32 0, i32 8
  %63 = load i32, i32* %62, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14.84, i32 0, i32 0), i32 %63)
  ret void
}

; Function Attrs: uwtable
define void @_ZN13b2PulleyJoint11ShiftOriginERK6b2Vec2(%class.b2PulleyJoint* %this, %struct.b2Vec2* dereferenceable(8) %newOrigin) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  store %struct.b2Vec2* %newOrigin, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %4 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %3, i32 0, i32 1
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %4, %struct.b2Vec2* dereferenceable(8) %5)
  %6 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %3, i32 0, i32 2
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %6, %struct.b2Vec2* dereferenceable(8) %7)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN13b2PulleyJointD2Ev(%class.b2PulleyJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN13b2PulleyJointD0Ev(%class.b2PulleyJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %4 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  invoke void @_ZN13b2PulleyJointD2Ev(%class.b2PulleyJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2PulleyJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2PulleyJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2PulleyJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %lengthA = alloca float, align 4
  %lengthB = alloca float, align 4
  %ruA = alloca float, align 4
  %ruB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %PA = alloca %struct.b2Vec2, align 4
  %PB = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %13 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %14 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 6
  %16 = load %class.b2Body*, %class.b2Body** %15, align 8
  %17 = getelementptr inbounds %class.b2Body, %class.b2Body* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  store i32 %18, i32* %19, align 4
  %20 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %21 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %20, i32 0, i32 7
  %22 = load %class.b2Body*, %class.b2Body** %21, align 8
  %23 = getelementptr inbounds %class.b2Body, %class.b2Body* %22, i32 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 16
  %27 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %28 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %27, i32 0, i32 6
  %29 = load %class.b2Body*, %class.b2Body** %28, align 8
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %29, i32 0, i32 4
  %31 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %30, i32 0, i32 0
  %32 = bitcast %struct.b2Vec2* %26 to i8*
  %33 = bitcast %struct.b2Vec2* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 17
  %35 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %36 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %35, i32 0, i32 7
  %37 = load %class.b2Body*, %class.b2Body** %36, align 8
  %38 = getelementptr inbounds %class.b2Body, %class.b2Body* %37, i32 0, i32 4
  %39 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %38, i32 0, i32 0
  %40 = bitcast %struct.b2Vec2* %34 to i8*
  %41 = bitcast %struct.b2Vec2* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 4, i1 false)
  %42 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %43 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %42, i32 0, i32 6
  %44 = load %class.b2Body*, %class.b2Body** %43, align 8
  %45 = getelementptr inbounds %class.b2Body, %class.b2Body* %44, i32 0, i32 17
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 18
  store float %46, float* %47, align 4
  %48 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %49 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %48, i32 0, i32 7
  %50 = load %class.b2Body*, %class.b2Body** %49, align 8
  %51 = getelementptr inbounds %class.b2Body, %class.b2Body* %50, i32 0, i32 17
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 19
  store float %52, float* %53, align 8
  %54 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %55 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %54, i32 0, i32 6
  %56 = load %class.b2Body*, %class.b2Body** %55, align 8
  %57 = getelementptr inbounds %class.b2Body, %class.b2Body* %56, i32 0, i32 19
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 20
  store float %58, float* %59, align 4
  %60 = bitcast %class.b2PulleyJoint* %13 to %class.b2Joint*
  %61 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %60, i32 0, i32 7
  %62 = load %class.b2Body*, %class.b2Body** %61, align 8
  %63 = getelementptr inbounds %class.b2Body, %class.b2Body* %62, i32 0, i32 19
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 21
  store float %64, float* %65, align 8
  %66 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %70 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %69, i32 0, i32 1
  %71 = load %struct.b2Position*, %struct.b2Position** %70, align 8
  %72 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %71, i64 %68
  %73 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %72, i32 0, i32 0
  %74 = bitcast %struct.b2Vec2* %cA to i8*
  %75 = bitcast %struct.b2Vec2* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 4, i1 false)
  %76 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %80 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %79, i32 0, i32 1
  %81 = load %struct.b2Position*, %struct.b2Position** %80, align 8
  %82 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %81, i64 %78
  %83 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %82, i32 0, i32 1
  %84 = load float, float* %83, align 4
  store float %84, float* %aA, align 4
  %85 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %89 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %88, i32 0, i32 2
  %90 = load %struct.b2Position*, %struct.b2Position** %89, align 8
  %91 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %90, i64 %87
  %92 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %91, i32 0, i32 0
  %93 = bitcast %struct.b2Vec2* %vA to i8*
  %94 = bitcast %struct.b2Vec2* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 4, i1 false)
  %95 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %99 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %98, i32 0, i32 2
  %100 = load %struct.b2Position*, %struct.b2Position** %99, align 8
  %101 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %100, i64 %97
  %102 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %101, i32 0, i32 1
  %103 = load float, float* %102, align 4
  store float %103, float* %wA, align 4
  %104 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  %105 = load i32, i32* %104, align 8
  %106 = sext i32 %105 to i64
  %107 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %108 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %107, i32 0, i32 1
  %109 = load %struct.b2Position*, %struct.b2Position** %108, align 8
  %110 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %109, i64 %106
  %111 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %110, i32 0, i32 0
  %112 = bitcast %struct.b2Vec2* %cB to i8*
  %113 = bitcast %struct.b2Vec2* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 8, i32 4, i1 false)
  %114 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  %115 = load i32, i32* %114, align 8
  %116 = sext i32 %115 to i64
  %117 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %118 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %117, i32 0, i32 1
  %119 = load %struct.b2Position*, %struct.b2Position** %118, align 8
  %120 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %119, i64 %116
  %121 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %120, i32 0, i32 1
  %122 = load float, float* %121, align 4
  store float %122, float* %aB, align 4
  %123 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  %124 = load i32, i32* %123, align 8
  %125 = sext i32 %124 to i64
  %126 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %127 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %126, i32 0, i32 2
  %128 = load %struct.b2Position*, %struct.b2Position** %127, align 8
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i64 %125
  %130 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %129, i32 0, i32 0
  %131 = bitcast %struct.b2Vec2* %vB to i8*
  %132 = bitcast %struct.b2Vec2* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 8, i32 4, i1 false)
  %133 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  %134 = load i32, i32* %133, align 8
  %135 = sext i32 %134 to i64
  %136 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %137 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %136, i32 0, i32 2
  %138 = load %struct.b2Position*, %struct.b2Position** %137, align 8
  %139 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %138, i64 %135
  %140 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %139, i32 0, i32 1
  %141 = load float, float* %140, align 4
  store float %141, float* %wB, align 4
  %142 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %142)
  %143 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %143)
  %144 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 14
  %145 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 5
  %146 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 16
  %147 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %145, %struct.b2Vec2* dereferenceable(8) %146)
  %148 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %147, <2 x float>* %148, align 4
  %149 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %150 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %149, <2 x float>* %150, align 4
  %151 = bitcast %struct.b2Vec2* %144 to i8*
  %152 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %152, i64 8, i32 4, i1 false)
  %153 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 15
  %154 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 6
  %155 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 17
  %156 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %154, %struct.b2Vec2* dereferenceable(8) %155)
  %157 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %159 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %158, <2 x float>* %159, align 4
  %160 = bitcast %struct.b2Vec2* %153 to i8*
  %161 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 8, i32 4, i1 false)
  %162 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 12
  %163 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 14
  %164 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %163)
  %165 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %164, <2 x float>* %165, align 4
  %166 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 1
  %167 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %166)
  %168 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %167, <2 x float>* %168, align 4
  %169 = bitcast %struct.b2Vec2* %162 to i8*
  %170 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 8, i32 4, i1 false)
  %171 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 13
  %172 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 15
  %173 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %172)
  %174 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %173, <2 x float>* %174, align 4
  %175 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 2
  %176 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %175)
  %177 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %176, <2 x float>* %177, align 4
  %178 = bitcast %struct.b2Vec2* %171 to i8*
  %179 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %178, i8* %179, i64 8, i32 4, i1 false)
  %180 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 12
  %181 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %180)
  store float %181, float* %lengthA, align 4
  %182 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 13
  %183 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %182)
  store float %183, float* %lengthB, align 4
  %184 = load float, float* %lengthA, align 4
  %185 = fcmp ogt float %184, 0x3FA9999980000000
  br i1 %185, label %186, label %190

; <label>:186                                     ; preds = %0
  %187 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 12
  %188 = load float, float* %lengthA, align 4
  %189 = fdiv float 1.000000e+00, %188
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %187, float %189)
  br label %192

; <label>:190                                     ; preds = %0
  %191 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 12
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %191)
  br label %192

; <label>:192                                     ; preds = %190, %186
  %193 = load float, float* %lengthB, align 4
  %194 = fcmp ogt float %193, 0x3FA9999980000000
  br i1 %194, label %195, label %199

; <label>:195                                     ; preds = %192
  %196 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 13
  %197 = load float, float* %lengthB, align 4
  %198 = fdiv float 1.000000e+00, %197
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %196, float %198)
  br label %201

; <label>:199                                     ; preds = %192
  %200 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 13
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %200)
  br label %201

; <label>:201                                     ; preds = %199, %195
  %202 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 14
  %203 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 12
  %204 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %202, %struct.b2Vec2* dereferenceable(8) %203)
  store float %204, float* %ruA, align 4
  %205 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 15
  %206 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 13
  %207 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %205, %struct.b2Vec2* dereferenceable(8) %206)
  store float %207, float* %ruB, align 4
  %208 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 18
  %209 = load float, float* %208, align 4
  %210 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 20
  %211 = load float, float* %210, align 4
  %212 = load float, float* %ruA, align 4
  %213 = fmul float %211, %212
  %214 = load float, float* %ruA, align 4
  %215 = fmul float %213, %214
  %216 = fadd float %209, %215
  store float %216, float* %mA, align 4
  %217 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 19
  %218 = load float, float* %217, align 8
  %219 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 21
  %220 = load float, float* %219, align 8
  %221 = load float, float* %ruB, align 4
  %222 = fmul float %220, %221
  %223 = load float, float* %ruB, align 4
  %224 = fmul float %222, %223
  %225 = fadd float %218, %224
  store float %225, float* %mB, align 4
  %226 = load float, float* %mA, align 4
  %227 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 8
  %228 = load float, float* %227, align 4
  %229 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 8
  %230 = load float, float* %229, align 4
  %231 = fmul float %228, %230
  %232 = load float, float* %mB, align 4
  %233 = fmul float %231, %232
  %234 = fadd float %226, %233
  %235 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 22
  store float %234, float* %235, align 4
  %236 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 22
  %237 = load float, float* %236, align 4
  %238 = fcmp ogt float %237, 0.000000e+00
  br i1 %238, label %239, label %244

; <label>:239                                     ; preds = %201
  %240 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 22
  %241 = load float, float* %240, align 4
  %242 = fdiv float 1.000000e+00, %241
  %243 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 22
  store float %242, float* %243, align 4
  br label %244

; <label>:244                                     ; preds = %239, %201
  %245 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %246 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %245, i32 0, i32 0
  %247 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %246, i32 0, i32 5
  %248 = load i8, i8* %247, align 4
  %249 = trunc i8 %248 to i1
  br i1 %249, label %250, label %295

; <label>:250                                     ; preds = %244
  %251 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %252 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %251, i32 0, i32 0
  %253 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %252, i32 0, i32 2
  %254 = load float, float* %253, align 8
  %255 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 9
  %256 = load float, float* %255, align 8
  %257 = fmul float %256, %254
  store float %257, float* %255, align 8
  %258 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 9
  %259 = load float, float* %258, align 8
  %260 = fsub float -0.000000e+00, %259
  %261 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 12
  %262 = call <2 x float> @_ZmlfRK6b2Vec2(float %260, %struct.b2Vec2* dereferenceable(8) %261)
  %263 = bitcast %struct.b2Vec2* %PA to <2 x float>*
  store <2 x float> %262, <2 x float>* %263, align 4
  %264 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 8
  %265 = load float, float* %264, align 4
  %266 = fsub float -0.000000e+00, %265
  %267 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 9
  %268 = load float, float* %267, align 8
  %269 = fmul float %266, %268
  %270 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 13
  %271 = call <2 x float> @_ZmlfRK6b2Vec2(float %269, %struct.b2Vec2* dereferenceable(8) %270)
  %272 = bitcast %struct.b2Vec2* %PB to <2 x float>*
  store <2 x float> %271, <2 x float>* %272, align 4
  %273 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 18
  %274 = load float, float* %273, align 4
  %275 = call <2 x float> @_ZmlfRK6b2Vec2(float %274, %struct.b2Vec2* dereferenceable(8) %PA)
  %276 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %275, <2 x float>* %276, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %11)
  %277 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 20
  %278 = load float, float* %277, align 4
  %279 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 14
  %280 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %279, %struct.b2Vec2* dereferenceable(8) %PA)
  %281 = fmul float %278, %280
  %282 = load float, float* %wA, align 4
  %283 = fadd float %282, %281
  store float %283, float* %wA, align 4
  %284 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 19
  %285 = load float, float* %284, align 8
  %286 = call <2 x float> @_ZmlfRK6b2Vec2(float %285, %struct.b2Vec2* dereferenceable(8) %PB)
  %287 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %286, <2 x float>* %287, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %12)
  %288 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 21
  %289 = load float, float* %288, align 8
  %290 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 15
  %291 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %290, %struct.b2Vec2* dereferenceable(8) %PB)
  %292 = fmul float %289, %291
  %293 = load float, float* %wB, align 4
  %294 = fadd float %293, %292
  store float %294, float* %wB, align 4
  br label %297

; <label>:295                                     ; preds = %244
  %296 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 9
  store float 0.000000e+00, float* %296, align 8
  br label %297

; <label>:297                                     ; preds = %295, %250
  %298 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %302 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %301, i32 0, i32 2
  %303 = load %struct.b2Position*, %struct.b2Position** %302, align 8
  %304 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %303, i64 %300
  %305 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %304, i32 0, i32 0
  %306 = bitcast %struct.b2Vec2* %305 to i8*
  %307 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %306, i8* %307, i64 8, i32 4, i1 false)
  %308 = load float, float* %wA, align 4
  %309 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 10
  %310 = load i32, i32* %309, align 4
  %311 = sext i32 %310 to i64
  %312 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %313 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %312, i32 0, i32 2
  %314 = load %struct.b2Position*, %struct.b2Position** %313, align 8
  %315 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %314, i64 %311
  %316 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %315, i32 0, i32 1
  store float %308, float* %316, align 4
  %317 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  %318 = load i32, i32* %317, align 8
  %319 = sext i32 %318 to i64
  %320 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %321 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %320, i32 0, i32 2
  %322 = load %struct.b2Position*, %struct.b2Position** %321, align 8
  %323 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %322, i64 %319
  %324 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %323, i32 0, i32 0
  %325 = bitcast %struct.b2Vec2* %324 to i8*
  %326 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 8, i32 4, i1 false)
  %327 = load float, float* %wB, align 4
  %328 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %13, i32 0, i32 11
  %329 = load i32, i32* %328, align 8
  %330 = sext i32 %329 to i64
  %331 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %332 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %331, i32 0, i32 2
  %333 = load %struct.b2Position*, %struct.b2Position** %332, align 8
  %334 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %333, i64 %330
  %335 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %334, i32 0, i32 1
  store float %327, float* %335, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2PulleyJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %vpA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %vpB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %Cdot = alloca float, align 4
  %impulse = alloca float, align 4
  %PA = alloca %struct.b2Vec2, align 4
  %PB = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %7 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %8 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 10
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %12 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %11, i32 0, i32 2
  %13 = load %struct.b2Position*, %struct.b2Position** %12, align 8
  %14 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %13, i64 %10
  %15 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %14, i32 0, i32 0
  %16 = bitcast %struct.b2Vec2* %vA to i8*
  %17 = bitcast %struct.b2Vec2* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false)
  %18 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 10
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %22 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %21, i32 0, i32 2
  %23 = load %struct.b2Position*, %struct.b2Position** %22, align 8
  %24 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %23, i64 %20
  %25 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  store float %26, float* %wA, align 4
  %27 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 11
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %31 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %30, i32 0, i32 2
  %32 = load %struct.b2Position*, %struct.b2Position** %31, align 8
  %33 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %32, i64 %29
  %34 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %33, i32 0, i32 0
  %35 = bitcast %struct.b2Vec2* %vB to i8*
  %36 = bitcast %struct.b2Vec2* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 4, i1 false)
  %37 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %41 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %40, i32 0, i32 2
  %42 = load %struct.b2Position*, %struct.b2Position** %41, align 8
  %43 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %42, i64 %39
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i32 0, i32 1
  %45 = load float, float* %44, align 4
  store float %45, float* %wB, align 4
  %46 = load float, float* %wA, align 4
  %47 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 14
  %48 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %46, %struct.b2Vec2* dereferenceable(8) %47)
  %49 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %48, <2 x float>* %49, align 4
  %50 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vA, %struct.b2Vec2* dereferenceable(8) %3)
  %51 = bitcast %struct.b2Vec2* %vpA to <2 x float>*
  store <2 x float> %50, <2 x float>* %51, align 4
  %52 = load float, float* %wB, align 4
  %53 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 15
  %54 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %52, %struct.b2Vec2* dereferenceable(8) %53)
  %55 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 4
  %56 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %4)
  %57 = bitcast %struct.b2Vec2* %vpB to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  %58 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 12
  %59 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %58, %struct.b2Vec2* dereferenceable(8) %vpA)
  %60 = fsub float -0.000000e+00, %59
  %61 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 8
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 13
  %64 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %63, %struct.b2Vec2* dereferenceable(8) %vpB)
  %65 = fmul float %62, %64
  %66 = fsub float %60, %65
  store float %66, float* %Cdot, align 4
  %67 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 22
  %68 = load float, float* %67, align 4
  %69 = fsub float -0.000000e+00, %68
  %70 = load float, float* %Cdot, align 4
  %71 = fmul float %69, %70
  store float %71, float* %impulse, align 4
  %72 = load float, float* %impulse, align 4
  %73 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 9
  %74 = load float, float* %73, align 8
  %75 = fadd float %74, %72
  store float %75, float* %73, align 8
  %76 = load float, float* %impulse, align 4
  %77 = fsub float -0.000000e+00, %76
  %78 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 12
  %79 = call <2 x float> @_ZmlfRK6b2Vec2(float %77, %struct.b2Vec2* dereferenceable(8) %78)
  %80 = bitcast %struct.b2Vec2* %PA to <2 x float>*
  store <2 x float> %79, <2 x float>* %80, align 4
  %81 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 8
  %82 = load float, float* %81, align 4
  %83 = fsub float -0.000000e+00, %82
  %84 = load float, float* %impulse, align 4
  %85 = fmul float %83, %84
  %86 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 13
  %87 = call <2 x float> @_ZmlfRK6b2Vec2(float %85, %struct.b2Vec2* dereferenceable(8) %86)
  %88 = bitcast %struct.b2Vec2* %PB to <2 x float>*
  store <2 x float> %87, <2 x float>* %88, align 4
  %89 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 18
  %90 = load float, float* %89, align 4
  %91 = call <2 x float> @_ZmlfRK6b2Vec2(float %90, %struct.b2Vec2* dereferenceable(8) %PA)
  %92 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %91, <2 x float>* %92, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %5)
  %93 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 20
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 14
  %96 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %95, %struct.b2Vec2* dereferenceable(8) %PA)
  %97 = fmul float %94, %96
  %98 = load float, float* %wA, align 4
  %99 = fadd float %98, %97
  store float %99, float* %wA, align 4
  %100 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 19
  %101 = load float, float* %100, align 8
  %102 = call <2 x float> @_ZmlfRK6b2Vec2(float %101, %struct.b2Vec2* dereferenceable(8) %PB)
  %103 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %102, <2 x float>* %103, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %6)
  %104 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 21
  %105 = load float, float* %104, align 8
  %106 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 15
  %107 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %106, %struct.b2Vec2* dereferenceable(8) %PB)
  %108 = fmul float %105, %107
  %109 = load float, float* %wB, align 4
  %110 = fadd float %109, %108
  store float %110, float* %wB, align 4
  %111 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 10
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %115 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %114, i32 0, i32 2
  %116 = load %struct.b2Position*, %struct.b2Position** %115, align 8
  %117 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %116, i64 %113
  %118 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %117, i32 0, i32 0
  %119 = bitcast %struct.b2Vec2* %118 to i8*
  %120 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 8, i32 4, i1 false)
  %121 = load float, float* %wA, align 4
  %122 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 10
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %126 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %125, i32 0, i32 2
  %127 = load %struct.b2Position*, %struct.b2Position** %126, align 8
  %128 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %127, i64 %124
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i32 0, i32 1
  store float %121, float* %129, align 4
  %130 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 11
  %131 = load i32, i32* %130, align 8
  %132 = sext i32 %131 to i64
  %133 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %134 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %133, i32 0, i32 2
  %135 = load %struct.b2Position*, %struct.b2Position** %134, align 8
  %136 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %135, i64 %132
  %137 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %136, i32 0, i32 0
  %138 = bitcast %struct.b2Vec2* %137 to i8*
  %139 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 4, i1 false)
  %140 = load float, float* %wB, align 4
  %141 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %7, i32 0, i32 11
  %142 = load i32, i32* %141, align 8
  %143 = sext i32 %142 to i64
  %144 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %145 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %144, i32 0, i32 2
  %146 = load %struct.b2Position*, %struct.b2Position** %145, align 8
  %147 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %146, i64 %143
  %148 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %147, i32 0, i32 1
  store float %140, float* %148, align 4
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2PulleyJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %uA = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %uB = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %lengthA = alloca float, align 4
  %lengthB = alloca float, align 4
  %ruA = alloca float, align 4
  %ruB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %mass = alloca float, align 4
  %C = alloca float, align 4
  %linearError = alloca float, align 4
  %impulse = alloca float, align 4
  %PA = alloca %struct.b2Vec2, align 4
  %PB = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %10 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %14 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %13, i32 0, i32 1
  %15 = load %struct.b2Position*, %struct.b2Position** %14, align 8
  %16 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %15, i64 %12
  %17 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %16, i32 0, i32 0
  %18 = bitcast %struct.b2Vec2* %cA to i8*
  %19 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 10
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %24 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %23, i32 0, i32 1
  %25 = load %struct.b2Position*, %struct.b2Position** %24, align 8
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i64 %22
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i32 0, i32 1
  %28 = load float, float* %27, align 4
  store float %28, float* %aA, align 4
  %29 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %33 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %32, i32 0, i32 1
  %34 = load %struct.b2Position*, %struct.b2Position** %33, align 8
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i64 %31
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i32 0, i32 0
  %37 = bitcast %struct.b2Vec2* %cB to i8*
  %38 = bitcast %struct.b2Vec2* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %43 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %42, i32 0, i32 1
  %44 = load %struct.b2Position*, %struct.b2Position** %43, align 8
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i64 %41
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i32 0, i32 1
  %47 = load float, float* %46, align 4
  store float %47, float* %aB, align 4
  %48 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %48)
  %49 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %49)
  %50 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 5
  %51 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 16
  %52 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %50, %struct.b2Vec2* dereferenceable(8) %51)
  %53 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %55 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 4
  %56 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 6
  %57 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 17
  %58 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %56, %struct.b2Vec2* dereferenceable(8) %57)
  %59 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %58, <2 x float>* %59, align 4
  %60 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %61 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %60, <2 x float>* %61, align 4
  %62 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %rA)
  %63 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %62, <2 x float>* %63, align 4
  %64 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 1
  %65 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %64)
  %66 = bitcast %struct.b2Vec2* %uA to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 4
  %67 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %68 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %67, <2 x float>* %68, align 4
  %69 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 2
  %70 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %69)
  %71 = bitcast %struct.b2Vec2* %uB to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 4
  %72 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %uA)
  store float %72, float* %lengthA, align 4
  %73 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %uB)
  store float %73, float* %lengthB, align 4
  %74 = load float, float* %lengthA, align 4
  %75 = fcmp ogt float %74, 0x3FA9999980000000
  br i1 %75, label %76, label %79

; <label>:76                                      ; preds = %0
  %77 = load float, float* %lengthA, align 4
  %78 = fdiv float 1.000000e+00, %77
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %uA, float %78)
  br label %80

; <label>:79                                      ; preds = %0
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %uA)
  br label %80

; <label>:80                                      ; preds = %79, %76
  %81 = load float, float* %lengthB, align 4
  %82 = fcmp ogt float %81, 0x3FA9999980000000
  br i1 %82, label %83, label %86

; <label>:83                                      ; preds = %80
  %84 = load float, float* %lengthB, align 4
  %85 = fdiv float 1.000000e+00, %84
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %uB, float %85)
  br label %87

; <label>:86                                      ; preds = %80
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %uB)
  br label %87

; <label>:87                                      ; preds = %86, %83
  %88 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %uA)
  store float %88, float* %ruA, align 4
  %89 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %uB)
  store float %89, float* %ruB, align 4
  %90 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 18
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 20
  %93 = load float, float* %92, align 4
  %94 = load float, float* %ruA, align 4
  %95 = fmul float %93, %94
  %96 = load float, float* %ruA, align 4
  %97 = fmul float %95, %96
  %98 = fadd float %91, %97
  store float %98, float* %mA, align 4
  %99 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 19
  %100 = load float, float* %99, align 8
  %101 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 21
  %102 = load float, float* %101, align 8
  %103 = load float, float* %ruB, align 4
  %104 = fmul float %102, %103
  %105 = load float, float* %ruB, align 4
  %106 = fmul float %104, %105
  %107 = fadd float %100, %106
  store float %107, float* %mB, align 4
  %108 = load float, float* %mA, align 4
  %109 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 8
  %110 = load float, float* %109, align 4
  %111 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 8
  %112 = load float, float* %111, align 4
  %113 = fmul float %110, %112
  %114 = load float, float* %mB, align 4
  %115 = fmul float %113, %114
  %116 = fadd float %108, %115
  store float %116, float* %mass, align 4
  %117 = load float, float* %mass, align 4
  %118 = fcmp ogt float %117, 0.000000e+00
  br i1 %118, label %119, label %122

; <label>:119                                     ; preds = %87
  %120 = load float, float* %mass, align 4
  %121 = fdiv float 1.000000e+00, %120
  store float %121, float* %mass, align 4
  br label %122

; <label>:122                                     ; preds = %119, %87
  %123 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 7
  %124 = load float, float* %123, align 8
  %125 = load float, float* %lengthA, align 4
  %126 = fsub float %124, %125
  %127 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 8
  %128 = load float, float* %127, align 4
  %129 = load float, float* %lengthB, align 4
  %130 = fmul float %128, %129
  %131 = fsub float %126, %130
  store float %131, float* %C, align 4
  %132 = load float, float* %C, align 4
  %133 = call float @_Z5b2AbsIfET_S0_(float %132)
  store float %133, float* %linearError, align 4
  %134 = load float, float* %mass, align 4
  %135 = fsub float -0.000000e+00, %134
  %136 = load float, float* %C, align 4
  %137 = fmul float %135, %136
  store float %137, float* %impulse, align 4
  %138 = load float, float* %impulse, align 4
  %139 = fsub float -0.000000e+00, %138
  %140 = call <2 x float> @_ZmlfRK6b2Vec2(float %139, %struct.b2Vec2* dereferenceable(8) %uA)
  %141 = bitcast %struct.b2Vec2* %PA to <2 x float>*
  store <2 x float> %140, <2 x float>* %141, align 4
  %142 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 8
  %143 = load float, float* %142, align 4
  %144 = fsub float -0.000000e+00, %143
  %145 = load float, float* %impulse, align 4
  %146 = fmul float %144, %145
  %147 = call <2 x float> @_ZmlfRK6b2Vec2(float %146, %struct.b2Vec2* dereferenceable(8) %uB)
  %148 = bitcast %struct.b2Vec2* %PB to <2 x float>*
  store <2 x float> %147, <2 x float>* %148, align 4
  %149 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 18
  %150 = load float, float* %149, align 4
  %151 = call <2 x float> @_ZmlfRK6b2Vec2(float %150, %struct.b2Vec2* dereferenceable(8) %PA)
  %152 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %151, <2 x float>* %152, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %7)
  %153 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 20
  %154 = load float, float* %153, align 4
  %155 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %PA)
  %156 = fmul float %154, %155
  %157 = load float, float* %aA, align 4
  %158 = fadd float %157, %156
  store float %158, float* %aA, align 4
  %159 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 19
  %160 = load float, float* %159, align 8
  %161 = call <2 x float> @_ZmlfRK6b2Vec2(float %160, %struct.b2Vec2* dereferenceable(8) %PB)
  %162 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %161, <2 x float>* %162, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %8)
  %163 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 21
  %164 = load float, float* %163, align 8
  %165 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %PB)
  %166 = fmul float %164, %165
  %167 = load float, float* %aB, align 4
  %168 = fadd float %167, %166
  store float %168, float* %aB, align 4
  %169 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 10
  %170 = load i32, i32* %169, align 4
  %171 = sext i32 %170 to i64
  %172 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %173 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %172, i32 0, i32 1
  %174 = load %struct.b2Position*, %struct.b2Position** %173, align 8
  %175 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %174, i64 %171
  %176 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %175, i32 0, i32 0
  %177 = bitcast %struct.b2Vec2* %176 to i8*
  %178 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %177, i8* %178, i64 8, i32 4, i1 false)
  %179 = load float, float* %aA, align 4
  %180 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 10
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %184 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %183, i32 0, i32 1
  %185 = load %struct.b2Position*, %struct.b2Position** %184, align 8
  %186 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %185, i64 %182
  %187 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %186, i32 0, i32 1
  store float %179, float* %187, align 4
  %188 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 11
  %189 = load i32, i32* %188, align 8
  %190 = sext i32 %189 to i64
  %191 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %192 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %191, i32 0, i32 1
  %193 = load %struct.b2Position*, %struct.b2Position** %192, align 8
  %194 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %193, i64 %190
  %195 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %194, i32 0, i32 0
  %196 = bitcast %struct.b2Vec2* %195 to i8*
  %197 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %197, i64 8, i32 4, i1 false)
  %198 = load float, float* %aB, align 4
  %199 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %9, i32 0, i32 11
  %200 = load i32, i32* %199, align 8
  %201 = sext i32 %200 to i64
  %202 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %203 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %202, i32 0, i32 1
  %204 = load %struct.b2Position*, %struct.b2Position** %203, align 8
  %205 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %204, i64 %201
  %206 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %205, i32 0, i32 1
  store float %198, float* %206, align 4
  %207 = load float, float* %linearError, align 4
  %208 = fcmp olt float %207, 0x3F747AE140000000
  ret i1 %208
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2RevoluteJoint10GetAnchorAEv(%class.b2RevoluteJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %2, align 8
  %3 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %2, align 8
  %4 = bitcast %class.b2RevoluteJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %3, i32 0, i32 1
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2RevoluteJoint10GetAnchorBEv(%class.b2RevoluteJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %2, align 8
  %3 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %2, align 8
  %4 = bitcast %class.b2RevoluteJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %3, i32 0, i32 2
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK15b2RevoluteJoint16GetReactionForceEf(%class.b2RevoluteJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2RevoluteJoint*, align 8
  %3 = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %2, align 8
  %5 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 3
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %6, align 8
  %8 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 3
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %8, i32 0, i32 1
  %10 = load float, float* %9, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %7, float %10)
  %11 = load float, float* %3, align 4
  %12 = call <2 x float> @_ZmlfRK6b2Vec2(float %11, %struct.b2Vec2* dereferenceable(8) %P)
  %13 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  ret <2 x float> %15
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2RevoluteJoint17GetReactionTorqueEf(%class.b2RevoluteJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %3, i32 0, i32 3
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 2
  %7 = load float, float* %6, align 8
  %8 = fmul float %4, %7
  ret float %8
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint4DumpEv(%class.b2RevoluteJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.90, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.91, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.92, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5.93, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.94, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 2
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 2
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.95, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 9
  %37 = load float, float* %36, align 8
  %38 = fpext float %37 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8.96, i32 0, i32 0), double %38)
  %39 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 8
  %40 = load i8, i8* %39, align 4
  %41 = trunc i8 %40 to i1
  %42 = zext i1 %41 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9.97, i32 0, i32 0), i32 %42)
  %43 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 10
  %44 = load float, float* %43, align 4
  %45 = fpext float %44 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10.98, i32 0, i32 0), double %45)
  %46 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 11
  %47 = load float, float* %46, align 8
  %48 = fpext float %47 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.99, i32 0, i32 0), double %48)
  %49 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 5
  %50 = load i8, i8* %49, align 8
  %51 = trunc i8 %50 to i1
  %52 = zext i1 %51 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.100, i32 0, i32 0), i32 %52)
  %53 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 7
  %54 = load float, float* %53, align 8
  %55 = fpext float %54 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13.101, i32 0, i32 0), double %55)
  %56 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 6
  %57 = load float, float* %56, align 4
  %58 = fpext float %57 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14.102, i32 0, i32 0), double %58)
  %59 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %60 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %59, i32 0, i32 8
  %61 = load i32, i32* %60, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15.103, i32 0, i32 0), i32 %61)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN15b2RevoluteJointD2Ev(%class.b2RevoluteJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2RevoluteJointD0Ev(%class.b2RevoluteJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %4 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  invoke void @_ZN15b2RevoluteJointD2Ev(%class.b2RevoluteJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2RevoluteJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2RevoluteJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2RevoluteJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %fixedRotation = alloca i8, align 1
  %jointAngle = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %10 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %11 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %10, i32 0, i32 6
  %12 = load %class.b2Body*, %class.b2Body** %11, align 8
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 12
  store i32 %14, i32* %15, align 4
  %16 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %17 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %16, i32 0, i32 7
  %18 = load %class.b2Body*, %class.b2Body** %17, align 8
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 13
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 16
  %23 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %24 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %23, i32 0, i32 6
  %25 = load %class.b2Body*, %class.b2Body** %24, align 8
  %26 = getelementptr inbounds %class.b2Body, %class.b2Body* %25, i32 0, i32 4
  %27 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %26, i32 0, i32 0
  %28 = bitcast %struct.b2Vec2* %22 to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 17
  %31 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %32 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %31, i32 0, i32 7
  %33 = load %class.b2Body*, %class.b2Body** %32, align 8
  %34 = getelementptr inbounds %class.b2Body, %class.b2Body* %33, i32 0, i32 4
  %35 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %34, i32 0, i32 0
  %36 = bitcast %struct.b2Vec2* %30 to i8*
  %37 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  %38 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %39 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %38, i32 0, i32 6
  %40 = load %class.b2Body*, %class.b2Body** %39, align 8
  %41 = getelementptr inbounds %class.b2Body, %class.b2Body* %40, i32 0, i32 17
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 18
  store float %42, float* %43, align 4
  %44 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %45 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %44, i32 0, i32 7
  %46 = load %class.b2Body*, %class.b2Body** %45, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 17
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 19
  store float %48, float* %49, align 8
  %50 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 6
  %52 = load %class.b2Body*, %class.b2Body** %51, align 8
  %53 = getelementptr inbounds %class.b2Body, %class.b2Body* %52, i32 0, i32 19
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 20
  store float %54, float* %55, align 4
  %56 = bitcast %class.b2RevoluteJoint* %9 to %class.b2Joint*
  %57 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %56, i32 0, i32 7
  %58 = load %class.b2Body*, %class.b2Body** %57, align 8
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %58, i32 0, i32 19
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 21
  store float %60, float* %61, align 8
  %62 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 12
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %66 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %65, i32 0, i32 1
  %67 = load %struct.b2Position*, %struct.b2Position** %66, align 8
  %68 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %67, i64 %64
  %69 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %68, i32 0, i32 1
  %70 = load float, float* %69, align 4
  store float %70, float* %aA, align 4
  %71 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 12
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %75 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %74, i32 0, i32 2
  %76 = load %struct.b2Position*, %struct.b2Position** %75, align 8
  %77 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %76, i64 %73
  %78 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %77, i32 0, i32 0
  %79 = bitcast %struct.b2Vec2* %vA to i8*
  %80 = bitcast %struct.b2Vec2* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false)
  %81 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 12
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %85 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %84, i32 0, i32 2
  %86 = load %struct.b2Position*, %struct.b2Position** %85, align 8
  %87 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %86, i64 %83
  %88 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %87, i32 0, i32 1
  %89 = load float, float* %88, align 4
  store float %89, float* %wA, align 4
  %90 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 13
  %91 = load i32, i32* %90, align 8
  %92 = sext i32 %91 to i64
  %93 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %94 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %93, i32 0, i32 1
  %95 = load %struct.b2Position*, %struct.b2Position** %94, align 8
  %96 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %95, i64 %92
  %97 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %96, i32 0, i32 1
  %98 = load float, float* %97, align 4
  store float %98, float* %aB, align 4
  %99 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 13
  %100 = load i32, i32* %99, align 8
  %101 = sext i32 %100 to i64
  %102 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %103 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %102, i32 0, i32 2
  %104 = load %struct.b2Position*, %struct.b2Position** %103, align 8
  %105 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %104, i64 %101
  %106 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %105, i32 0, i32 0
  %107 = bitcast %struct.b2Vec2* %vB to i8*
  %108 = bitcast %struct.b2Vec2* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 4, i1 false)
  %109 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 13
  %110 = load i32, i32* %109, align 8
  %111 = sext i32 %110 to i64
  %112 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %113 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %112, i32 0, i32 2
  %114 = load %struct.b2Position*, %struct.b2Position** %113, align 8
  %115 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %114, i64 %111
  %116 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %115, i32 0, i32 1
  %117 = load float, float* %116, align 4
  store float %117, float* %wB, align 4
  %118 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %118)
  %119 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %119)
  %120 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %121 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 1
  %122 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 16
  %123 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %121, %struct.b2Vec2* dereferenceable(8) %122)
  %124 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %123, <2 x float>* %124, align 4
  %125 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %126 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %125, <2 x float>* %126, align 4
  %127 = bitcast %struct.b2Vec2* %120 to i8*
  %128 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 4, i1 false)
  %129 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %130 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 2
  %131 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 17
  %132 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %130, %struct.b2Vec2* dereferenceable(8) %131)
  %133 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %132, <2 x float>* %133, align 4
  %134 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %135 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = bitcast %struct.b2Vec2* %129 to i8*
  %137 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 8, i32 4, i1 false)
  %138 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 18
  %139 = load float, float* %138, align 4
  store float %139, float* %mA, align 4
  %140 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 19
  %141 = load float, float* %140, align 8
  store float %141, float* %mB, align 4
  %142 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 20
  %143 = load float, float* %142, align 4
  store float %143, float* %iA, align 4
  %144 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 21
  %145 = load float, float* %144, align 8
  store float %145, float* %iB, align 4
  %146 = load float, float* %iA, align 4
  %147 = load float, float* %iB, align 4
  %148 = fadd float %146, %147
  %149 = fcmp oeq float %148, 0.000000e+00
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %fixedRotation, align 1
  %151 = load float, float* %mA, align 4
  %152 = load float, float* %mB, align 4
  %153 = fadd float %151, %152
  %154 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %155 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %154, i32 0, i32 1
  %156 = load float, float* %155, align 4
  %157 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %158 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %157, i32 0, i32 1
  %159 = load float, float* %158, align 4
  %160 = fmul float %156, %159
  %161 = load float, float* %iA, align 4
  %162 = fmul float %160, %161
  %163 = fadd float %153, %162
  %164 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %165 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %164, i32 0, i32 1
  %166 = load float, float* %165, align 4
  %167 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %168 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %167, i32 0, i32 1
  %169 = load float, float* %168, align 4
  %170 = fmul float %166, %169
  %171 = load float, float* %iB, align 4
  %172 = fmul float %170, %171
  %173 = fadd float %163, %172
  %174 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %175 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %174, i32 0, i32 0
  %176 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %175, i32 0, i32 0
  store float %173, float* %176, align 4
  %177 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %178 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %177, i32 0, i32 1
  %179 = load float, float* %178, align 4
  %180 = fsub float -0.000000e+00, %179
  %181 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %182 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %181, i32 0, i32 0
  %183 = load float, float* %182, align 4
  %184 = fmul float %180, %183
  %185 = load float, float* %iA, align 4
  %186 = fmul float %184, %185
  %187 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %188 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %187, i32 0, i32 1
  %189 = load float, float* %188, align 4
  %190 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %191 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %190, i32 0, i32 0
  %192 = load float, float* %191, align 4
  %193 = fmul float %189, %192
  %194 = load float, float* %iB, align 4
  %195 = fmul float %193, %194
  %196 = fsub float %186, %195
  %197 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %198 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %197, i32 0, i32 1
  %199 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %198, i32 0, i32 0
  store float %196, float* %199, align 4
  %200 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %201 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %200, i32 0, i32 1
  %202 = load float, float* %201, align 4
  %203 = fsub float -0.000000e+00, %202
  %204 = load float, float* %iA, align 4
  %205 = fmul float %203, %204
  %206 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %207 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %206, i32 0, i32 1
  %208 = load float, float* %207, align 4
  %209 = load float, float* %iB, align 4
  %210 = fmul float %208, %209
  %211 = fsub float %205, %210
  %212 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %213 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %212, i32 0, i32 2
  %214 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %213, i32 0, i32 0
  store float %211, float* %214, align 4
  %215 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %216 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %215, i32 0, i32 1
  %217 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %216, i32 0, i32 0
  %218 = load float, float* %217, align 4
  %219 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %220 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %219, i32 0, i32 0
  %221 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %220, i32 0, i32 1
  store float %218, float* %221, align 4
  %222 = load float, float* %mA, align 4
  %223 = load float, float* %mB, align 4
  %224 = fadd float %222, %223
  %225 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %226 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %225, i32 0, i32 0
  %227 = load float, float* %226, align 4
  %228 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %229 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %228, i32 0, i32 0
  %230 = load float, float* %229, align 4
  %231 = fmul float %227, %230
  %232 = load float, float* %iA, align 4
  %233 = fmul float %231, %232
  %234 = fadd float %224, %233
  %235 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %236 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %235, i32 0, i32 0
  %237 = load float, float* %236, align 4
  %238 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %239 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %238, i32 0, i32 0
  %240 = load float, float* %239, align 4
  %241 = fmul float %237, %240
  %242 = load float, float* %iB, align 4
  %243 = fmul float %241, %242
  %244 = fadd float %234, %243
  %245 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %246 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %245, i32 0, i32 1
  %247 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %246, i32 0, i32 1
  store float %244, float* %247, align 4
  %248 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %249 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %248, i32 0, i32 0
  %250 = load float, float* %249, align 4
  %251 = load float, float* %iA, align 4
  %252 = fmul float %250, %251
  %253 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %254 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %253, i32 0, i32 0
  %255 = load float, float* %254, align 4
  %256 = load float, float* %iB, align 4
  %257 = fmul float %255, %256
  %258 = fadd float %252, %257
  %259 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %260 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %259, i32 0, i32 2
  %261 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %260, i32 0, i32 1
  store float %258, float* %261, align 4
  %262 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %263 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %262, i32 0, i32 2
  %264 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %263, i32 0, i32 0
  %265 = load float, float* %264, align 4
  %266 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %267 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %266, i32 0, i32 0
  %268 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %267, i32 0, i32 2
  store float %265, float* %268, align 4
  %269 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %270 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %269, i32 0, i32 2
  %271 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %270, i32 0, i32 1
  %272 = load float, float* %271, align 4
  %273 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %274 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %273, i32 0, i32 1
  %275 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %274, i32 0, i32 2
  store float %272, float* %275, align 4
  %276 = load float, float* %iA, align 4
  %277 = load float, float* %iB, align 4
  %278 = fadd float %276, %277
  %279 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 22
  %280 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %279, i32 0, i32 2
  %281 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %280, i32 0, i32 2
  store float %278, float* %281, align 4
  %282 = load float, float* %iA, align 4
  %283 = load float, float* %iB, align 4
  %284 = fadd float %282, %283
  %285 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 23
  store float %284, float* %285, align 8
  %286 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 23
  %287 = load float, float* %286, align 8
  %288 = fcmp ogt float %287, 0.000000e+00
  br i1 %288, label %289, label %294

; <label>:289                                     ; preds = %0
  %290 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 23
  %291 = load float, float* %290, align 8
  %292 = fdiv float 1.000000e+00, %291
  %293 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 23
  store float %292, float* %293, align 8
  br label %294

; <label>:294                                     ; preds = %289, %0
  %295 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 5
  %296 = load i8, i8* %295, align 8
  %297 = trunc i8 %296 to i1
  %298 = zext i1 %297 to i32
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %303, label %300

; <label>:300                                     ; preds = %294
  %301 = load i8, i8* %fixedRotation, align 1
  %302 = trunc i8 %301 to i1
  br i1 %302, label %303, label %305

; <label>:303                                     ; preds = %300, %294
  %304 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 4
  store float 0.000000e+00, float* %304, align 4
  br label %305

; <label>:305                                     ; preds = %303, %300
  %306 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 8
  %307 = load i8, i8* %306, align 4
  %308 = trunc i8 %307 to i1
  br i1 %308, label %309, label %365

; <label>:309                                     ; preds = %305
  %310 = load i8, i8* %fixedRotation, align 1
  %311 = trunc i8 %310 to i1
  %312 = zext i1 %311 to i32
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %365

; <label>:314                                     ; preds = %309
  %315 = load float, float* %aB, align 4
  %316 = load float, float* %aA, align 4
  %317 = fsub float %315, %316
  %318 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 9
  %319 = load float, float* %318, align 8
  %320 = fsub float %317, %319
  store float %320, float* %jointAngle, align 4
  %321 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 11
  %322 = load float, float* %321, align 8
  %323 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 10
  %324 = load float, float* %323, align 4
  %325 = fsub float %322, %324
  %326 = call float @_Z5b2AbsIfET_S0_(float %325)
  %327 = fcmp olt float %326, 0x3FB1DF46C0000000
  br i1 %327, label %328, label %330

; <label>:328                                     ; preds = %314
  %329 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  store i32 3, i32* %329, align 4
  br label %364

; <label>:330                                     ; preds = %314
  %331 = load float, float* %jointAngle, align 4
  %332 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 10
  %333 = load float, float* %332, align 4
  %334 = fcmp ole float %331, %333
  br i1 %334, label %335, label %344

; <label>:335                                     ; preds = %330
  %336 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  %337 = load i32, i32* %336, align 4
  %338 = icmp ne i32 %337, 1
  br i1 %338, label %339, label %342

; <label>:339                                     ; preds = %335
  %340 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %341 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %340, i32 0, i32 2
  store float 0.000000e+00, float* %341, align 8
  br label %342

; <label>:342                                     ; preds = %339, %335
  %343 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  store i32 1, i32* %343, align 4
  br label %363

; <label>:344                                     ; preds = %330
  %345 = load float, float* %jointAngle, align 4
  %346 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 11
  %347 = load float, float* %346, align 8
  %348 = fcmp oge float %345, %347
  br i1 %348, label %349, label %358

; <label>:349                                     ; preds = %344
  %350 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  %351 = load i32, i32* %350, align 4
  %352 = icmp ne i32 %351, 2
  br i1 %352, label %353, label %356

; <label>:353                                     ; preds = %349
  %354 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %355 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %354, i32 0, i32 2
  store float 0.000000e+00, float* %355, align 8
  br label %356

; <label>:356                                     ; preds = %353, %349
  %357 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  store i32 2, i32* %357, align 4
  br label %362

; <label>:358                                     ; preds = %344
  %359 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  store i32 0, i32* %359, align 4
  %360 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %361 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %360, i32 0, i32 2
  store float 0.000000e+00, float* %361, align 8
  br label %362

; <label>:362                                     ; preds = %358, %356
  br label %363

; <label>:363                                     ; preds = %362, %342
  br label %364

; <label>:364                                     ; preds = %363, %328
  br label %367

; <label>:365                                     ; preds = %309, %305
  %366 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 24
  store i32 0, i32* %366, align 4
  br label %367

; <label>:367                                     ; preds = %365, %364
  %368 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %369 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %368, i32 0, i32 0
  %370 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %369, i32 0, i32 5
  %371 = load i8, i8* %370, align 4
  %372 = trunc i8 %371 to i1
  br i1 %372, label %373, label %424

; <label>:373                                     ; preds = %367
  %374 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %375 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %376 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %375, i32 0, i32 0
  %377 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %376, i32 0, i32 2
  %378 = load float, float* %377, align 8
  call void @_ZN6b2Vec3mLEf(%struct.b2Vec3* %374, float %378)
  %379 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %380 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %379, i32 0, i32 0
  %381 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %380, i32 0, i32 2
  %382 = load float, float* %381, align 8
  %383 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 4
  %384 = load float, float* %383, align 4
  %385 = fmul float %384, %382
  store float %385, float* %383, align 4
  %386 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %387 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %386, i32 0, i32 0
  %388 = load float, float* %387, align 8
  %389 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %390 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %389, i32 0, i32 1
  %391 = load float, float* %390, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %388, float %391)
  %392 = load float, float* %mA, align 4
  %393 = call <2 x float> @_ZmlfRK6b2Vec2(float %392, %struct.b2Vec2* dereferenceable(8) %P)
  %394 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %393, <2 x float>* %394, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %7)
  %395 = load float, float* %iA, align 4
  %396 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 14
  %397 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %396, %struct.b2Vec2* dereferenceable(8) %P)
  %398 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 4
  %399 = load float, float* %398, align 4
  %400 = fadd float %397, %399
  %401 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %402 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %401, i32 0, i32 2
  %403 = load float, float* %402, align 8
  %404 = fadd float %400, %403
  %405 = fmul float %395, %404
  %406 = load float, float* %wA, align 4
  %407 = fsub float %406, %405
  store float %407, float* %wA, align 4
  %408 = load float, float* %mB, align 4
  %409 = call <2 x float> @_ZmlfRK6b2Vec2(float %408, %struct.b2Vec2* dereferenceable(8) %P)
  %410 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %409, <2 x float>* %410, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %8)
  %411 = load float, float* %iB, align 4
  %412 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 15
  %413 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %412, %struct.b2Vec2* dereferenceable(8) %P)
  %414 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 4
  %415 = load float, float* %414, align 4
  %416 = fadd float %413, %415
  %417 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  %418 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %417, i32 0, i32 2
  %419 = load float, float* %418, align 8
  %420 = fadd float %416, %419
  %421 = fmul float %411, %420
  %422 = load float, float* %wB, align 4
  %423 = fadd float %422, %421
  store float %423, float* %wB, align 4
  br label %427

; <label>:424                                     ; preds = %367
  %425 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 3
  call void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %425)
  %426 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 4
  store float 0.000000e+00, float* %426, align 4
  br label %427

; <label>:427                                     ; preds = %424, %373
  %428 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 12
  %429 = load i32, i32* %428, align 4
  %430 = sext i32 %429 to i64
  %431 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %432 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %431, i32 0, i32 2
  %433 = load %struct.b2Position*, %struct.b2Position** %432, align 8
  %434 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %433, i64 %430
  %435 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %434, i32 0, i32 0
  %436 = bitcast %struct.b2Vec2* %435 to i8*
  %437 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %436, i8* %437, i64 8, i32 4, i1 false)
  %438 = load float, float* %wA, align 4
  %439 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 12
  %440 = load i32, i32* %439, align 4
  %441 = sext i32 %440 to i64
  %442 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %443 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %442, i32 0, i32 2
  %444 = load %struct.b2Position*, %struct.b2Position** %443, align 8
  %445 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %444, i64 %441
  %446 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %445, i32 0, i32 1
  store float %438, float* %446, align 4
  %447 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 13
  %448 = load i32, i32* %447, align 8
  %449 = sext i32 %448 to i64
  %450 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %451 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %450, i32 0, i32 2
  %452 = load %struct.b2Position*, %struct.b2Position** %451, align 8
  %453 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %452, i64 %449
  %454 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %453, i32 0, i32 0
  %455 = bitcast %struct.b2Vec2* %454 to i8*
  %456 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %455, i8* %456, i64 8, i32 4, i1 false)
  %457 = load float, float* %wB, align 4
  %458 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %9, i32 0, i32 13
  %459 = load i32, i32* %458, align 8
  %460 = sext i32 %459 to i64
  %461 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %462 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %461, i32 0, i32 2
  %463 = load %struct.b2Position*, %struct.b2Position** %462, align 8
  %464 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %463, i64 %460
  %465 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %464, i32 0, i32 1
  store float %457, float* %465, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2RevoluteJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %fixedRotation = alloca i8, align 1
  %Cdot = alloca float, align 4
  %impulse = alloca float, align 4
  %oldImpulse = alloca float, align 4
  %maxImpulse = alloca float, align 4
  %Cdot1 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %Cdot2 = alloca float, align 4
  %Cdot3 = alloca %struct.b2Vec3, align 4
  %impulse4 = alloca %struct.b2Vec3, align 4
  %7 = alloca %struct.b2Vec3, align 4
  %8 = alloca { <2 x float>, float }, align 8
  %9 = alloca { <2 x float>, float }, align 8
  %newImpulse = alloca float, align 4
  %rhs = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %reduced = alloca %struct.b2Vec2, align 4
  %newImpulse5 = alloca float, align 4
  %rhs6 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %reduced7 = alloca %struct.b2Vec2, align 4
  %P = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %Cdot8 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  %19 = alloca %struct.b2Vec2, align 4
  %20 = alloca %struct.b2Vec2, align 4
  %21 = alloca %struct.b2Vec2, align 4
  %impulse9 = alloca %struct.b2Vec2, align 4
  %22 = alloca %struct.b2Vec2, align 4
  %23 = alloca %struct.b2Vec2, align 4
  %24 = alloca %struct.b2Vec2, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %25 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %26 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 12
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %30 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %29, i32 0, i32 2
  %31 = load %struct.b2Position*, %struct.b2Position** %30, align 8
  %32 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %31, i64 %28
  %33 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %32, i32 0, i32 0
  %34 = bitcast %struct.b2Vec2* %vA to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 12
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %40 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %39, i32 0, i32 2
  %41 = load %struct.b2Position*, %struct.b2Position** %40, align 8
  %42 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %41, i64 %38
  %43 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %42, i32 0, i32 1
  %44 = load float, float* %43, align 4
  store float %44, float* %wA, align 4
  %45 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 13
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %49 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %48, i32 0, i32 2
  %50 = load %struct.b2Position*, %struct.b2Position** %49, align 8
  %51 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %50, i64 %47
  %52 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %51, i32 0, i32 0
  %53 = bitcast %struct.b2Vec2* %vB to i8*
  %54 = bitcast %struct.b2Vec2* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 4, i1 false)
  %55 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 13
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %59 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %58, i32 0, i32 2
  %60 = load %struct.b2Position*, %struct.b2Position** %59, align 8
  %61 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %60, i64 %57
  %62 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %61, i32 0, i32 1
  %63 = load float, float* %62, align 4
  store float %63, float* %wB, align 4
  %64 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 18
  %65 = load float, float* %64, align 4
  store float %65, float* %mA, align 4
  %66 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 19
  %67 = load float, float* %66, align 8
  store float %67, float* %mB, align 4
  %68 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 20
  %69 = load float, float* %68, align 4
  store float %69, float* %iA, align 4
  %70 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 21
  %71 = load float, float* %70, align 8
  store float %71, float* %iB, align 4
  %72 = load float, float* %iA, align 4
  %73 = load float, float* %iB, align 4
  %74 = fadd float %72, %73
  %75 = fcmp oeq float %74, 0.000000e+00
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %fixedRotation, align 1
  %77 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 5
  %78 = load i8, i8* %77, align 8
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %133

; <label>:80                                      ; preds = %0
  %81 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 24
  %82 = load i32, i32* %81, align 4
  %83 = icmp ne i32 %82, 3
  br i1 %83, label %84, label %133

; <label>:84                                      ; preds = %80
  %85 = load i8, i8* %fixedRotation, align 1
  %86 = trunc i8 %85 to i1
  %87 = zext i1 %86 to i32
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %133

; <label>:89                                      ; preds = %84
  %90 = load float, float* %wB, align 4
  %91 = load float, float* %wA, align 4
  %92 = fsub float %90, %91
  %93 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 7
  %94 = load float, float* %93, align 8
  %95 = fsub float %92, %94
  store float %95, float* %Cdot, align 4
  %96 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 23
  %97 = load float, float* %96, align 8
  %98 = fsub float -0.000000e+00, %97
  %99 = load float, float* %Cdot, align 4
  %100 = fmul float %98, %99
  store float %100, float* %impulse, align 4
  %101 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 4
  %102 = load float, float* %101, align 4
  store float %102, float* %oldImpulse, align 4
  %103 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %104 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %103, i32 0, i32 0
  %105 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %104, i32 0, i32 0
  %106 = load float, float* %105, align 8
  %107 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 6
  %108 = load float, float* %107, align 4
  %109 = fmul float %106, %108
  store float %109, float* %maxImpulse, align 4
  %110 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 4
  %111 = load float, float* %110, align 4
  %112 = load float, float* %impulse, align 4
  %113 = fadd float %111, %112
  %114 = load float, float* %maxImpulse, align 4
  %115 = fsub float -0.000000e+00, %114
  %116 = load float, float* %maxImpulse, align 4
  %117 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %113, float %115, float %116)
  %118 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 4
  store float %117, float* %118, align 4
  %119 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 4
  %120 = load float, float* %119, align 4
  %121 = load float, float* %oldImpulse, align 4
  %122 = fsub float %120, %121
  store float %122, float* %impulse, align 4
  %123 = load float, float* %iA, align 4
  %124 = load float, float* %impulse, align 4
  %125 = fmul float %123, %124
  %126 = load float, float* %wA, align 4
  %127 = fsub float %126, %125
  store float %127, float* %wA, align 4
  %128 = load float, float* %iB, align 4
  %129 = load float, float* %impulse, align 4
  %130 = fmul float %128, %129
  %131 = load float, float* %wB, align 4
  %132 = fadd float %131, %130
  store float %132, float* %wB, align 4
  br label %133

; <label>:133                                     ; preds = %89, %84, %80, %0
  %134 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 8
  %135 = load i8, i8* %134, align 4
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %336

; <label>:137                                     ; preds = %133
  %138 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 24
  %139 = load i32, i32* %138, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %336

; <label>:141                                     ; preds = %137
  %142 = load i8, i8* %fixedRotation, align 1
  %143 = trunc i8 %142 to i1
  %144 = zext i1 %143 to i32
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %336

; <label>:146                                     ; preds = %141
  %147 = load float, float* %wB, align 4
  %148 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 15
  %149 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %147, %struct.b2Vec2* dereferenceable(8) %148)
  %150 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %149, <2 x float>* %150, align 4
  %151 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %5)
  %152 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %151, <2 x float>* %152, align 4
  %153 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %4, %struct.b2Vec2* dereferenceable(8) %vA)
  %154 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %153, <2 x float>* %154, align 4
  %155 = load float, float* %wA, align 4
  %156 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 14
  %157 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %155, %struct.b2Vec2* dereferenceable(8) %156)
  %158 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %157, <2 x float>* %158, align 4
  %159 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %6)
  %160 = bitcast %struct.b2Vec2* %Cdot1 to <2 x float>*
  store <2 x float> %159, <2 x float>* %160, align 4
  %161 = load float, float* %wB, align 4
  %162 = load float, float* %wA, align 4
  %163 = fsub float %161, %162
  store float %163, float* %Cdot2, align 4
  %164 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot1, i32 0, i32 0
  %165 = load float, float* %164, align 4
  %166 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot1, i32 0, i32 1
  %167 = load float, float* %166, align 4
  %168 = load float, float* %Cdot2, align 4
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %Cdot3, float %165, float %167, float %168)
  %169 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %170 = call { <2 x float>, float } @_ZNK7b2Mat337Solve33ERK6b2Vec3(%struct.b2Mat33* %169, %struct.b2Vec3* dereferenceable(12) %Cdot3)
  store { <2 x float>, float } %170, { <2 x float>, float }* %8, align 8
  %171 = bitcast { <2 x float>, float }* %8 to i8*
  %172 = bitcast %struct.b2Vec3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %171, i64 12, i32 4, i1 false)
  %173 = call { <2 x float>, float } @_ZNK6b2Vec3ngEv(%struct.b2Vec3* %7)
  store { <2 x float>, float } %173, { <2 x float>, float }* %9, align 8
  %174 = bitcast { <2 x float>, float }* %9 to i8*
  %175 = bitcast %struct.b2Vec3* %impulse4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %174, i64 12, i32 4, i1 false)
  %176 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 24
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 3
  br i1 %178, label %179, label %181

; <label>:179                                     ; preds = %146
  %180 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  call void @_ZN6b2Vec3pLERKS_(%struct.b2Vec3* %180, %struct.b2Vec3* dereferenceable(12) %impulse4)
  br label %307

; <label>:181                                     ; preds = %146
  %182 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 24
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %243

; <label>:185                                     ; preds = %181
  %186 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %187 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %186, i32 0, i32 2
  %188 = load float, float* %187, align 8
  %189 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 2
  %190 = load float, float* %189, align 4
  %191 = fadd float %188, %190
  store float %191, float* %newImpulse, align 4
  %192 = load float, float* %newImpulse, align 4
  %193 = fcmp olt float %192, 0.000000e+00
  br i1 %193, label %194, label %240

; <label>:194                                     ; preds = %185
  %195 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %Cdot1)
  %196 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %195, <2 x float>* %196, align 4
  %197 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %198 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %197, i32 0, i32 2
  %199 = load float, float* %198, align 8
  %200 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %201 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %200, i32 0, i32 2
  %202 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %201, i32 0, i32 0
  %203 = load float, float* %202, align 4
  %204 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %205 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %204, i32 0, i32 2
  %206 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %205, i32 0, i32 1
  %207 = load float, float* %206, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %12, float %203, float %207)
  %208 = call <2 x float> @_ZmlfRK6b2Vec2(float %199, %struct.b2Vec2* dereferenceable(8) %12)
  %209 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %208, <2 x float>* %209, align 4
  %210 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %11)
  %211 = bitcast %struct.b2Vec2* %rhs to <2 x float>*
  store <2 x float> %210, <2 x float>* %211, align 4
  %212 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %213 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %212, %struct.b2Vec2* dereferenceable(8) %rhs)
  %214 = bitcast %struct.b2Vec2* %reduced to <2 x float>*
  store <2 x float> %213, <2 x float>* %214, align 4
  %215 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced, i32 0, i32 0
  %216 = load float, float* %215, align 4
  %217 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 0
  store float %216, float* %217, align 4
  %218 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced, i32 0, i32 1
  %219 = load float, float* %218, align 4
  %220 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 1
  store float %219, float* %220, align 4
  %221 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %222 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %221, i32 0, i32 2
  %223 = load float, float* %222, align 8
  %224 = fsub float -0.000000e+00, %223
  %225 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 2
  store float %224, float* %225, align 4
  %226 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced, i32 0, i32 0
  %227 = load float, float* %226, align 4
  %228 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %229 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %228, i32 0, i32 0
  %230 = load float, float* %229, align 8
  %231 = fadd float %230, %227
  store float %231, float* %229, align 8
  %232 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced, i32 0, i32 1
  %233 = load float, float* %232, align 4
  %234 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %235 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %234, i32 0, i32 1
  %236 = load float, float* %235, align 4
  %237 = fadd float %236, %233
  store float %237, float* %235, align 4
  %238 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %239 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %238, i32 0, i32 2
  store float 0.000000e+00, float* %239, align 8
  br label %242

; <label>:240                                     ; preds = %185
  %241 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  call void @_ZN6b2Vec3pLERKS_(%struct.b2Vec3* %241, %struct.b2Vec3* dereferenceable(12) %impulse4)
  br label %242

; <label>:242                                     ; preds = %240, %194
  br label %306

; <label>:243                                     ; preds = %181
  %244 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 24
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %305

; <label>:247                                     ; preds = %243
  %248 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %249 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %248, i32 0, i32 2
  %250 = load float, float* %249, align 8
  %251 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 2
  %252 = load float, float* %251, align 4
  %253 = fadd float %250, %252
  store float %253, float* %newImpulse5, align 4
  %254 = load float, float* %newImpulse5, align 4
  %255 = fcmp ogt float %254, 0.000000e+00
  br i1 %255, label %256, label %302

; <label>:256                                     ; preds = %247
  %257 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %Cdot1)
  %258 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %257, <2 x float>* %258, align 4
  %259 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %260 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %259, i32 0, i32 2
  %261 = load float, float* %260, align 8
  %262 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %263 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %262, i32 0, i32 2
  %264 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %263, i32 0, i32 0
  %265 = load float, float* %264, align 4
  %266 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %267 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %266, i32 0, i32 2
  %268 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %267, i32 0, i32 1
  %269 = load float, float* %268, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %15, float %265, float %269)
  %270 = call <2 x float> @_ZmlfRK6b2Vec2(float %261, %struct.b2Vec2* dereferenceable(8) %15)
  %271 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %270, <2 x float>* %271, align 4
  %272 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %13, %struct.b2Vec2* dereferenceable(8) %14)
  %273 = bitcast %struct.b2Vec2* %rhs6 to <2 x float>*
  store <2 x float> %272, <2 x float>* %273, align 4
  %274 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %275 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %274, %struct.b2Vec2* dereferenceable(8) %rhs6)
  %276 = bitcast %struct.b2Vec2* %reduced7 to <2 x float>*
  store <2 x float> %275, <2 x float>* %276, align 4
  %277 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced7, i32 0, i32 0
  %278 = load float, float* %277, align 4
  %279 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 0
  store float %278, float* %279, align 4
  %280 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced7, i32 0, i32 1
  %281 = load float, float* %280, align 4
  %282 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 1
  store float %281, float* %282, align 4
  %283 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %284 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %283, i32 0, i32 2
  %285 = load float, float* %284, align 8
  %286 = fsub float -0.000000e+00, %285
  %287 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 2
  store float %286, float* %287, align 4
  %288 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced7, i32 0, i32 0
  %289 = load float, float* %288, align 4
  %290 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %291 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %290, i32 0, i32 0
  %292 = load float, float* %291, align 8
  %293 = fadd float %292, %289
  store float %293, float* %291, align 8
  %294 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %reduced7, i32 0, i32 1
  %295 = load float, float* %294, align 4
  %296 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %297 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %296, i32 0, i32 1
  %298 = load float, float* %297, align 4
  %299 = fadd float %298, %295
  store float %299, float* %297, align 4
  %300 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %301 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %300, i32 0, i32 2
  store float 0.000000e+00, float* %301, align 8
  br label %304

; <label>:302                                     ; preds = %247
  %303 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  call void @_ZN6b2Vec3pLERKS_(%struct.b2Vec3* %303, %struct.b2Vec3* dereferenceable(12) %impulse4)
  br label %304

; <label>:304                                     ; preds = %302, %256
  br label %305

; <label>:305                                     ; preds = %304, %243
  br label %306

; <label>:306                                     ; preds = %305, %242
  br label %307

; <label>:307                                     ; preds = %306, %179
  %308 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 0
  %309 = load float, float* %308, align 4
  %310 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 1
  %311 = load float, float* %310, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %309, float %311)
  %312 = load float, float* %mA, align 4
  %313 = call <2 x float> @_ZmlfRK6b2Vec2(float %312, %struct.b2Vec2* dereferenceable(8) %P)
  %314 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %313, <2 x float>* %314, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %16)
  %315 = load float, float* %iA, align 4
  %316 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 14
  %317 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %316, %struct.b2Vec2* dereferenceable(8) %P)
  %318 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 2
  %319 = load float, float* %318, align 4
  %320 = fadd float %317, %319
  %321 = fmul float %315, %320
  %322 = load float, float* %wA, align 4
  %323 = fsub float %322, %321
  store float %323, float* %wA, align 4
  %324 = load float, float* %mB, align 4
  %325 = call <2 x float> @_ZmlfRK6b2Vec2(float %324, %struct.b2Vec2* dereferenceable(8) %P)
  %326 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %325, <2 x float>* %326, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %17)
  %327 = load float, float* %iB, align 4
  %328 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 15
  %329 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %328, %struct.b2Vec2* dereferenceable(8) %P)
  %330 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse4, i32 0, i32 2
  %331 = load float, float* %330, align 4
  %332 = fadd float %329, %331
  %333 = fmul float %327, %332
  %334 = load float, float* %wB, align 4
  %335 = fadd float %334, %333
  store float %335, float* %wB, align 4
  br label %386

; <label>:336                                     ; preds = %141, %137, %133
  %337 = load float, float* %wB, align 4
  %338 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 15
  %339 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %337, %struct.b2Vec2* dereferenceable(8) %338)
  %340 = bitcast %struct.b2Vec2* %20 to <2 x float>*
  store <2 x float> %339, <2 x float>* %340, align 4
  %341 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %20)
  %342 = bitcast %struct.b2Vec2* %19 to <2 x float>*
  store <2 x float> %341, <2 x float>* %342, align 4
  %343 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %vA)
  %344 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %343, <2 x float>* %344, align 4
  %345 = load float, float* %wA, align 4
  %346 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 14
  %347 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %345, %struct.b2Vec2* dereferenceable(8) %346)
  %348 = bitcast %struct.b2Vec2* %21 to <2 x float>*
  store <2 x float> %347, <2 x float>* %348, align 4
  %349 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %18, %struct.b2Vec2* dereferenceable(8) %21)
  %350 = bitcast %struct.b2Vec2* %Cdot8 to <2 x float>*
  store <2 x float> %349, <2 x float>* %350, align 4
  %351 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 22
  %352 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %Cdot8)
  %353 = bitcast %struct.b2Vec2* %22 to <2 x float>*
  store <2 x float> %352, <2 x float>* %353, align 4
  %354 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %351, %struct.b2Vec2* dereferenceable(8) %22)
  %355 = bitcast %struct.b2Vec2* %impulse9 to <2 x float>*
  store <2 x float> %354, <2 x float>* %355, align 4
  %356 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse9, i32 0, i32 0
  %357 = load float, float* %356, align 4
  %358 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %359 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %358, i32 0, i32 0
  %360 = load float, float* %359, align 8
  %361 = fadd float %360, %357
  store float %361, float* %359, align 8
  %362 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse9, i32 0, i32 1
  %363 = load float, float* %362, align 4
  %364 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 3
  %365 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %364, i32 0, i32 1
  %366 = load float, float* %365, align 4
  %367 = fadd float %366, %363
  store float %367, float* %365, align 4
  %368 = load float, float* %mA, align 4
  %369 = call <2 x float> @_ZmlfRK6b2Vec2(float %368, %struct.b2Vec2* dereferenceable(8) %impulse9)
  %370 = bitcast %struct.b2Vec2* %23 to <2 x float>*
  store <2 x float> %369, <2 x float>* %370, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %23)
  %371 = load float, float* %iA, align 4
  %372 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 14
  %373 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %372, %struct.b2Vec2* dereferenceable(8) %impulse9)
  %374 = fmul float %371, %373
  %375 = load float, float* %wA, align 4
  %376 = fsub float %375, %374
  store float %376, float* %wA, align 4
  %377 = load float, float* %mB, align 4
  %378 = call <2 x float> @_ZmlfRK6b2Vec2(float %377, %struct.b2Vec2* dereferenceable(8) %impulse9)
  %379 = bitcast %struct.b2Vec2* %24 to <2 x float>*
  store <2 x float> %378, <2 x float>* %379, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %24)
  %380 = load float, float* %iB, align 4
  %381 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 15
  %382 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %381, %struct.b2Vec2* dereferenceable(8) %impulse9)
  %383 = fmul float %380, %382
  %384 = load float, float* %wB, align 4
  %385 = fadd float %384, %383
  store float %385, float* %wB, align 4
  br label %386

; <label>:386                                     ; preds = %336, %307
  %387 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 12
  %388 = load i32, i32* %387, align 4
  %389 = sext i32 %388 to i64
  %390 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %391 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %390, i32 0, i32 2
  %392 = load %struct.b2Position*, %struct.b2Position** %391, align 8
  %393 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %392, i64 %389
  %394 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %393, i32 0, i32 0
  %395 = bitcast %struct.b2Vec2* %394 to i8*
  %396 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %395, i8* %396, i64 8, i32 4, i1 false)
  %397 = load float, float* %wA, align 4
  %398 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 12
  %399 = load i32, i32* %398, align 4
  %400 = sext i32 %399 to i64
  %401 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %402 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %401, i32 0, i32 2
  %403 = load %struct.b2Position*, %struct.b2Position** %402, align 8
  %404 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %403, i64 %400
  %405 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %404, i32 0, i32 1
  store float %397, float* %405, align 4
  %406 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 13
  %407 = load i32, i32* %406, align 8
  %408 = sext i32 %407 to i64
  %409 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %410 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %409, i32 0, i32 2
  %411 = load %struct.b2Position*, %struct.b2Position** %410, align 8
  %412 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %411, i64 %408
  %413 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %412, i32 0, i32 0
  %414 = bitcast %struct.b2Vec2* %413 to i8*
  %415 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %414, i8* %415, i64 8, i32 4, i1 false)
  %416 = load float, float* %wB, align 4
  %417 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %25, i32 0, i32 13
  %418 = load i32, i32* %417, align 8
  %419 = sext i32 %418 to i64
  %420 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %421 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %420, i32 0, i32 2
  %422 = load %struct.b2Position*, %struct.b2Position** %421, align 8
  %423 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %422, i64 %419
  %424 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %423, i32 0, i32 1
  store float %416, float* %424, align 4
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2RevoluteJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %angularError = alloca float, align 4
  %positionError = alloca float, align 4
  %fixedRotation = alloca i8, align 1
  %angle = alloca float, align 4
  %limitImpulse = alloca float, align 4
  %C = alloca float, align 4
  %C1 = alloca float, align 4
  %C2 = alloca float, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %C3 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %K = alloca %struct.b2Transform, align 4
  %impulse = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %10 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %11 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 12
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %15 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %14, i32 0, i32 1
  %16 = load %struct.b2Position*, %struct.b2Position** %15, align 8
  %17 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %16, i64 %13
  %18 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %17, i32 0, i32 0
  %19 = bitcast %struct.b2Vec2* %cA to i8*
  %20 = bitcast %struct.b2Vec2* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false)
  %21 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 12
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %25 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %24, i32 0, i32 1
  %26 = load %struct.b2Position*, %struct.b2Position** %25, align 8
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i64 %23
  %28 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %27, i32 0, i32 1
  %29 = load float, float* %28, align 4
  store float %29, float* %aA, align 4
  %30 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 13
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %34 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %33, i32 0, i32 1
  %35 = load %struct.b2Position*, %struct.b2Position** %34, align 8
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i64 %32
  %37 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %36, i32 0, i32 0
  %38 = bitcast %struct.b2Vec2* %cB to i8*
  %39 = bitcast %struct.b2Vec2* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  %40 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 13
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %44 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %43, i32 0, i32 1
  %45 = load %struct.b2Position*, %struct.b2Position** %44, align 8
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i64 %42
  %47 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %46, i32 0, i32 1
  %48 = load float, float* %47, align 4
  store float %48, float* %aB, align 4
  %49 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %49)
  %50 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %50)
  store float 0.000000e+00, float* %angularError, align 4
  store float 0.000000e+00, float* %positionError, align 4
  %51 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 20
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 21
  %54 = load float, float* %53, align 8
  %55 = fadd float %52, %54
  %56 = fcmp oeq float %55, 0.000000e+00
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %fixedRotation, align 1
  %58 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 8
  %59 = load i8, i8* %58, align 4
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %145

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 24
  %63 = load i32, i32* %62, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %145

; <label>:65                                      ; preds = %61
  %66 = load i8, i8* %fixedRotation, align 1
  %67 = trunc i8 %66 to i1
  %68 = zext i1 %67 to i32
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %145

; <label>:70                                      ; preds = %65
  %71 = load float, float* %aB, align 4
  %72 = load float, float* %aA, align 4
  %73 = fsub float %71, %72
  %74 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 9
  %75 = load float, float* %74, align 8
  %76 = fsub float %73, %75
  store float %76, float* %angle, align 4
  store float 0.000000e+00, float* %limitImpulse, align 4
  %77 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 24
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 3
  br i1 %79, label %80, label %93

; <label>:80                                      ; preds = %70
  %81 = load float, float* %angle, align 4
  %82 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 10
  %83 = load float, float* %82, align 4
  %84 = fsub float %81, %83
  %85 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %84, float 0xBFC1DF46C0000000, float 0x3FC1DF46C0000000)
  store float %85, float* %C, align 4
  %86 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 23
  %87 = load float, float* %86, align 8
  %88 = fsub float -0.000000e+00, %87
  %89 = load float, float* %C, align 4
  %90 = fmul float %88, %89
  store float %90, float* %limitImpulse, align 4
  %91 = load float, float* %C, align 4
  %92 = call float @_Z5b2AbsIfET_S0_(float %91)
  store float %92, float* %angularError, align 4
  br label %132

; <label>:93                                      ; preds = %70
  %94 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 24
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %112

; <label>:97                                      ; preds = %93
  %98 = load float, float* %angle, align 4
  %99 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 10
  %100 = load float, float* %99, align 4
  %101 = fsub float %98, %100
  store float %101, float* %C1, align 4
  %102 = load float, float* %C1, align 4
  %103 = fsub float -0.000000e+00, %102
  store float %103, float* %angularError, align 4
  %104 = load float, float* %C1, align 4
  %105 = fadd float %104, 0x3FA1DF46C0000000
  %106 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %105, float 0xBFC1DF46C0000000, float 0.000000e+00)
  store float %106, float* %C1, align 4
  %107 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 23
  %108 = load float, float* %107, align 8
  %109 = fsub float -0.000000e+00, %108
  %110 = load float, float* %C1, align 4
  %111 = fmul float %109, %110
  store float %111, float* %limitImpulse, align 4
  br label %131

; <label>:112                                     ; preds = %93
  %113 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 24
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 2
  br i1 %115, label %116, label %130

; <label>:116                                     ; preds = %112
  %117 = load float, float* %angle, align 4
  %118 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 11
  %119 = load float, float* %118, align 8
  %120 = fsub float %117, %119
  store float %120, float* %C2, align 4
  %121 = load float, float* %C2, align 4
  store float %121, float* %angularError, align 4
  %122 = load float, float* %C2, align 4
  %123 = fsub float %122, 0x3FA1DF46C0000000
  %124 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %123, float 0.000000e+00, float 0x3FC1DF46C0000000)
  store float %124, float* %C2, align 4
  %125 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 23
  %126 = load float, float* %125, align 8
  %127 = fsub float -0.000000e+00, %126
  %128 = load float, float* %C2, align 4
  %129 = fmul float %127, %128
  store float %129, float* %limitImpulse, align 4
  br label %130

; <label>:130                                     ; preds = %116, %112
  br label %131

; <label>:131                                     ; preds = %130, %97
  br label %132

; <label>:132                                     ; preds = %131, %80
  %133 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 20
  %134 = load float, float* %133, align 4
  %135 = load float, float* %limitImpulse, align 4
  %136 = fmul float %134, %135
  %137 = load float, float* %aA, align 4
  %138 = fsub float %137, %136
  store float %138, float* %aA, align 4
  %139 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 21
  %140 = load float, float* %139, align 8
  %141 = load float, float* %limitImpulse, align 4
  %142 = fmul float %140, %141
  %143 = load float, float* %aB, align 4
  %144 = fadd float %143, %142
  store float %144, float* %aB, align 4
  br label %145

; <label>:145                                     ; preds = %132, %65, %61, %0
  %146 = load float, float* %aA, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %qA, float %146)
  %147 = load float, float* %aB, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %qB, float %147)
  %148 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 1
  %149 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 16
  %150 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %148, %struct.b2Vec2* dereferenceable(8) %149)
  %151 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %150, <2 x float>* %151, align 4
  %152 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %153 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %152, <2 x float>* %153, align 4
  %154 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 2
  %155 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 17
  %156 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %154, %struct.b2Vec2* dereferenceable(8) %155)
  %157 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %159 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %158, <2 x float>* %159, align 4
  %160 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %161 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %160, <2 x float>* %161, align 4
  %162 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %cA)
  %163 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 4
  %164 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %165 = bitcast %struct.b2Vec2* %C3 to <2 x float>*
  store <2 x float> %164, <2 x float>* %165, align 4
  %166 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %C3)
  store float %166, float* %positionError, align 4
  %167 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 18
  %168 = load float, float* %167, align 4
  store float %168, float* %mA, align 4
  %169 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 19
  %170 = load float, float* %169, align 8
  store float %170, float* %mB, align 4
  %171 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 20
  %172 = load float, float* %171, align 4
  store float %172, float* %iA, align 4
  %173 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 21
  %174 = load float, float* %173, align 8
  store float %174, float* %iB, align 4
  call void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %K)
  %175 = load float, float* %mA, align 4
  %176 = load float, float* %mB, align 4
  %177 = fadd float %175, %176
  %178 = load float, float* %iA, align 4
  %179 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %180 = load float, float* %179, align 4
  %181 = fmul float %178, %180
  %182 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %183 = load float, float* %182, align 4
  %184 = fmul float %181, %183
  %185 = fadd float %177, %184
  %186 = load float, float* %iB, align 4
  %187 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %188 = load float, float* %187, align 4
  %189 = fmul float %186, %188
  %190 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %191 = load float, float* %190, align 4
  %192 = fmul float %189, %191
  %193 = fadd float %185, %192
  %194 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %195 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %194, i32 0, i32 0
  store float %193, float* %195, align 4
  %196 = load float, float* %iA, align 4
  %197 = fsub float -0.000000e+00, %196
  %198 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %199 = load float, float* %198, align 4
  %200 = fmul float %197, %199
  %201 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %202 = load float, float* %201, align 4
  %203 = fmul float %200, %202
  %204 = load float, float* %iB, align 4
  %205 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %206 = load float, float* %205, align 4
  %207 = fmul float %204, %206
  %208 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %209 = load float, float* %208, align 4
  %210 = fmul float %207, %209
  %211 = fsub float %203, %210
  %212 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %213 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %212, i32 0, i32 1
  store float %211, float* %213, align 4
  %214 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 0
  %215 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %214, i32 0, i32 1
  %216 = load float, float* %215, align 4
  %217 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %218 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %217, i32 0, i32 0
  store float %216, float* %218, align 4
  %219 = load float, float* %mA, align 4
  %220 = load float, float* %mB, align 4
  %221 = fadd float %219, %220
  %222 = load float, float* %iA, align 4
  %223 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %224 = load float, float* %223, align 4
  %225 = fmul float %222, %224
  %226 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %227 = load float, float* %226, align 4
  %228 = fmul float %225, %227
  %229 = fadd float %221, %228
  %230 = load float, float* %iB, align 4
  %231 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %232 = load float, float* %231, align 4
  %233 = fmul float %230, %232
  %234 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %235 = load float, float* %234, align 4
  %236 = fmul float %233, %235
  %237 = fadd float %229, %236
  %238 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %K, i32 0, i32 1
  %239 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %238, i32 0, i32 1
  store float %237, float* %239, align 4
  %240 = call <2 x float> @_ZNK7b2Mat225SolveERK6b2Vec2(%struct.b2Transform* %K, %struct.b2Vec2* dereferenceable(8) %C3)
  %241 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %240, <2 x float>* %241, align 4
  %242 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %7)
  %243 = bitcast %struct.b2Vec2* %impulse to <2 x float>*
  store <2 x float> %242, <2 x float>* %243, align 4
  %244 = load float, float* %mA, align 4
  %245 = call <2 x float> @_ZmlfRK6b2Vec2(float %244, %struct.b2Vec2* dereferenceable(8) %impulse)
  %246 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %245, <2 x float>* %246, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %8)
  %247 = load float, float* %iA, align 4
  %248 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %impulse)
  %249 = fmul float %247, %248
  %250 = load float, float* %aA, align 4
  %251 = fsub float %250, %249
  store float %251, float* %aA, align 4
  %252 = load float, float* %mB, align 4
  %253 = call <2 x float> @_ZmlfRK6b2Vec2(float %252, %struct.b2Vec2* dereferenceable(8) %impulse)
  %254 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %253, <2 x float>* %254, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %9)
  %255 = load float, float* %iB, align 4
  %256 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %impulse)
  %257 = fmul float %255, %256
  %258 = load float, float* %aB, align 4
  %259 = fadd float %258, %257
  store float %259, float* %aB, align 4
  %260 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 12
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %264 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %263, i32 0, i32 1
  %265 = load %struct.b2Position*, %struct.b2Position** %264, align 8
  %266 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %265, i64 %262
  %267 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %266, i32 0, i32 0
  %268 = bitcast %struct.b2Vec2* %267 to i8*
  %269 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %268, i8* %269, i64 8, i32 4, i1 false)
  %270 = load float, float* %aA, align 4
  %271 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 12
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %272 to i64
  %274 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %275 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %274, i32 0, i32 1
  %276 = load %struct.b2Position*, %struct.b2Position** %275, align 8
  %277 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %276, i64 %273
  %278 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %277, i32 0, i32 1
  store float %270, float* %278, align 4
  %279 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 13
  %280 = load i32, i32* %279, align 8
  %281 = sext i32 %280 to i64
  %282 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %283 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %282, i32 0, i32 1
  %284 = load %struct.b2Position*, %struct.b2Position** %283, align 8
  %285 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %284, i64 %281
  %286 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %285, i32 0, i32 0
  %287 = bitcast %struct.b2Vec2* %286 to i8*
  %288 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %287, i8* %288, i64 8, i32 4, i1 false)
  %289 = load float, float* %aB, align 4
  %290 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %10, i32 0, i32 13
  %291 = load i32, i32* %290, align 8
  %292 = sext i32 %291 to i64
  %293 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %294 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %293, i32 0, i32 1
  %295 = load %struct.b2Position*, %struct.b2Position** %294, align 8
  %296 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %295, i64 %292
  %297 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %296, i32 0, i32 1
  store float %289, float* %297, align 4
  %298 = load float, float* %positionError, align 4
  %299 = fcmp ole float %298, 0x3F747AE140000000
  br i1 %299, label %300, label %303

; <label>:300                                     ; preds = %145
  %301 = load float, float* %angularError, align 4
  %302 = fcmp ole float %301, 0x3FA1DF46C0000000
  br label %303

; <label>:303                                     ; preds = %300, %145
  %304 = phi i1 [ false, %145 ], [ %302, %300 ]
  ret i1 %304
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %this, float %angle) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca float, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store float %angle, float* %2, align 4
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call float @sinf(float %4) #3
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  store float %5, float* %6, align 4
  %7 = load float, float* %2, align 4
  %8 = call float @cosf(float %7) #3
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  store float %8, float* %9, align 4
  ret void
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2RopeJoint10GetAnchorAEv(%class.b2RopeJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2RopeJoint*, align 8
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %2, align 8
  %3 = load %class.b2RopeJoint*, %class.b2RopeJoint** %2, align 8
  %4 = bitcast %class.b2RopeJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %3, i32 0, i32 1
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2RopeJoint10GetAnchorBEv(%class.b2RopeJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2RopeJoint*, align 8
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %2, align 8
  %3 = load %class.b2RopeJoint*, %class.b2RopeJoint** %2, align 8
  %4 = bitcast %class.b2RopeJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %3, i32 0, i32 2
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2RopeJoint16GetReactionForceEf(%class.b2RopeJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2RopeJoint*, align 8
  %3 = alloca float, align 4
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2RopeJoint*, %class.b2RopeJoint** %2, align 8
  %5 = load float, float* %3, align 4
  %6 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %4, i32 0, i32 5
  %7 = load float, float* %6, align 8
  %8 = fmul float %5, %7
  %9 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %4, i32 0, i32 8
  %10 = call <2 x float> @_ZmlfRK6b2Vec2(float %8, %struct.b2Vec2* dereferenceable(8) %9)
  %11 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %10, <2 x float>* %11, align 4
  %12 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  ret <2 x float> %13
}

; Function Attrs: nounwind uwtable
define float @_ZNK11b2RopeJoint17GetReactionTorqueEf(%class.b2RopeJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  ret float 0.000000e+00
}

; Function Attrs: uwtable
define void @_ZN11b2RopeJoint4DumpEv(%class.b2RopeJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  %2 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %3 = bitcast %class.b2RopeJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2RopeJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.108, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.109, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.110, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2RopeJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.111, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.112, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 2
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 2
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5.113, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 3
  %37 = load float, float* %36, align 8
  %38 = fpext float %37 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.114, i32 0, i32 0), double %38)
  %39 = bitcast %class.b2RopeJoint* %2 to %class.b2Joint*
  %40 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %39, i32 0, i32 8
  %41 = load i32, i32* %40, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7.115, i32 0, i32 0), i32 %41)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN11b2RopeJointD2Ev(%class.b2RopeJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  %2 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %3 = bitcast %class.b2RopeJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN11b2RopeJointD0Ev(%class.b2RopeJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2RopeJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  %4 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  invoke void @_ZN11b2RopeJointD2Ev(%class.b2RopeJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2RopeJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2RopeJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2RopeJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %C = alloca float, align 4
  %crA = alloca float, align 4
  %crB = alloca float, align 4
  %invMass = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %12 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %13 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %14 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %13, i32 0, i32 6
  %15 = load %class.b2Body*, %class.b2Body** %14, align 8
  %16 = getelementptr inbounds %class.b2Body, %class.b2Body* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  store i32 %17, i32* %18, align 4
  %19 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %20 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %19, i32 0, i32 7
  %21 = load %class.b2Body*, %class.b2Body** %20, align 8
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 11
  %26 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %27 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %26, i32 0, i32 6
  %28 = load %class.b2Body*, %class.b2Body** %27, align 8
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %28, i32 0, i32 4
  %30 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %29, i32 0, i32 0
  %31 = bitcast %struct.b2Vec2* %25 to i8*
  %32 = bitcast %struct.b2Vec2* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 4, i1 false)
  %33 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 12
  %34 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %35 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %34, i32 0, i32 7
  %36 = load %class.b2Body*, %class.b2Body** %35, align 8
  %37 = getelementptr inbounds %class.b2Body, %class.b2Body* %36, i32 0, i32 4
  %38 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %37, i32 0, i32 0
  %39 = bitcast %struct.b2Vec2* %33 to i8*
  %40 = bitcast %struct.b2Vec2* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false)
  %41 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %42 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %41, i32 0, i32 6
  %43 = load %class.b2Body*, %class.b2Body** %42, align 8
  %44 = getelementptr inbounds %class.b2Body, %class.b2Body* %43, i32 0, i32 17
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 13
  store float %45, float* %46, align 4
  %47 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %48 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %47, i32 0, i32 7
  %49 = load %class.b2Body*, %class.b2Body** %48, align 8
  %50 = getelementptr inbounds %class.b2Body, %class.b2Body* %49, i32 0, i32 17
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 14
  store float %51, float* %52, align 8
  %53 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %54 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %53, i32 0, i32 6
  %55 = load %class.b2Body*, %class.b2Body** %54, align 8
  %56 = getelementptr inbounds %class.b2Body, %class.b2Body* %55, i32 0, i32 19
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 15
  store float %57, float* %58, align 4
  %59 = bitcast %class.b2RopeJoint* %12 to %class.b2Joint*
  %60 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %59, i32 0, i32 7
  %61 = load %class.b2Body*, %class.b2Body** %60, align 8
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %61, i32 0, i32 19
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 16
  store float %63, float* %64, align 8
  %65 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %69 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %68, i32 0, i32 1
  %70 = load %struct.b2Position*, %struct.b2Position** %69, align 8
  %71 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %70, i64 %67
  %72 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %71, i32 0, i32 0
  %73 = bitcast %struct.b2Vec2* %cA to i8*
  %74 = bitcast %struct.b2Vec2* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 4, i1 false)
  %75 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %79 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %78, i32 0, i32 1
  %80 = load %struct.b2Position*, %struct.b2Position** %79, align 8
  %81 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %80, i64 %77
  %82 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %81, i32 0, i32 1
  %83 = load float, float* %82, align 4
  store float %83, float* %aA, align 4
  %84 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %88 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %87, i32 0, i32 2
  %89 = load %struct.b2Position*, %struct.b2Position** %88, align 8
  %90 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %89, i64 %86
  %91 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %90, i32 0, i32 0
  %92 = bitcast %struct.b2Vec2* %vA to i8*
  %93 = bitcast %struct.b2Vec2* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 8, i32 4, i1 false)
  %94 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %98 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %97, i32 0, i32 2
  %99 = load %struct.b2Position*, %struct.b2Position** %98, align 8
  %100 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %99, i64 %96
  %101 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %100, i32 0, i32 1
  %102 = load float, float* %101, align 4
  store float %102, float* %wA, align 4
  %103 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  %104 = load i32, i32* %103, align 8
  %105 = sext i32 %104 to i64
  %106 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %107 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %106, i32 0, i32 1
  %108 = load %struct.b2Position*, %struct.b2Position** %107, align 8
  %109 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %108, i64 %105
  %110 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %109, i32 0, i32 0
  %111 = bitcast %struct.b2Vec2* %cB to i8*
  %112 = bitcast %struct.b2Vec2* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 4, i1 false)
  %113 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  %114 = load i32, i32* %113, align 8
  %115 = sext i32 %114 to i64
  %116 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %117 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %116, i32 0, i32 1
  %118 = load %struct.b2Position*, %struct.b2Position** %117, align 8
  %119 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %118, i64 %115
  %120 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %119, i32 0, i32 1
  %121 = load float, float* %120, align 4
  store float %121, float* %aB, align 4
  %122 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  %123 = load i32, i32* %122, align 8
  %124 = sext i32 %123 to i64
  %125 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %126 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %125, i32 0, i32 2
  %127 = load %struct.b2Position*, %struct.b2Position** %126, align 8
  %128 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %127, i64 %124
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i32 0, i32 0
  %130 = bitcast %struct.b2Vec2* %vB to i8*
  %131 = bitcast %struct.b2Vec2* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 4, i1 false)
  %132 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  %133 = load i32, i32* %132, align 8
  %134 = sext i32 %133 to i64
  %135 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %136 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %135, i32 0, i32 2
  %137 = load %struct.b2Position*, %struct.b2Position** %136, align 8
  %138 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %137, i64 %134
  %139 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %138, i32 0, i32 1
  %140 = load float, float* %139, align 4
  store float %140, float* %wB, align 4
  %141 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %141)
  %142 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %142)
  %143 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 9
  %144 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 1
  %145 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 11
  %146 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %144, %struct.b2Vec2* dereferenceable(8) %145)
  %147 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  %148 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %149 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  %150 = bitcast %struct.b2Vec2* %143 to i8*
  %151 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 4, i1 false)
  %152 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 10
  %153 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 2
  %154 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 12
  %155 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %153, %struct.b2Vec2* dereferenceable(8) %154)
  %156 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %155, <2 x float>* %156, align 4
  %157 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %158 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %157, <2 x float>* %158, align 4
  %159 = bitcast %struct.b2Vec2* %152 to i8*
  %160 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 8, i32 4, i1 false)
  %161 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  %162 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 10
  %163 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %162)
  %164 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %163, <2 x float>* %164, align 4
  %165 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %cA)
  %166 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %165, <2 x float>* %166, align 4
  %167 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 9
  %168 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %167)
  %169 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %168, <2 x float>* %169, align 4
  %170 = bitcast %struct.b2Vec2* %161 to i8*
  %171 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %170, i8* %171, i64 8, i32 4, i1 false)
  %172 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  %173 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %172)
  %174 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 4
  store float %173, float* %174, align 4
  %175 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 4
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 3
  %178 = load float, float* %177, align 8
  %179 = fsub float %176, %178
  store float %179, float* %C, align 4
  %180 = load float, float* %C, align 4
  %181 = fcmp ogt float %180, 0.000000e+00
  br i1 %181, label %182, label %184

; <label>:182                                     ; preds = %0
  %183 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 18
  store i32 2, i32* %183, align 8
  br label %186

; <label>:184                                     ; preds = %0
  %185 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 18
  store i32 0, i32* %185, align 8
  br label %186

; <label>:186                                     ; preds = %184, %182
  %187 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 4
  %188 = load float, float* %187, align 4
  %189 = fcmp ogt float %188, 0x3F747AE140000000
  br i1 %189, label %190, label %195

; <label>:190                                     ; preds = %186
  %191 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  %192 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 4
  %193 = load float, float* %192, align 4
  %194 = fdiv float 1.000000e+00, %193
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %191, float %194)
  br label %199

; <label>:195                                     ; preds = %186
  %196 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %196)
  %197 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 17
  store float 0.000000e+00, float* %197, align 4
  %198 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 5
  store float 0.000000e+00, float* %198, align 8
  br label %315

; <label>:199                                     ; preds = %190
  %200 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 9
  %201 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  %202 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %200, %struct.b2Vec2* dereferenceable(8) %201)
  store float %202, float* %crA, align 4
  %203 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 10
  %204 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  %205 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %203, %struct.b2Vec2* dereferenceable(8) %204)
  store float %205, float* %crB, align 4
  %206 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 13
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 15
  %209 = load float, float* %208, align 4
  %210 = load float, float* %crA, align 4
  %211 = fmul float %209, %210
  %212 = load float, float* %crA, align 4
  %213 = fmul float %211, %212
  %214 = fadd float %207, %213
  %215 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 14
  %216 = load float, float* %215, align 8
  %217 = fadd float %214, %216
  %218 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 16
  %219 = load float, float* %218, align 8
  %220 = load float, float* %crB, align 4
  %221 = fmul float %219, %220
  %222 = load float, float* %crB, align 4
  %223 = fmul float %221, %222
  %224 = fadd float %217, %223
  store float %224, float* %invMass, align 4
  %225 = load float, float* %invMass, align 4
  %226 = fcmp une float %225, 0.000000e+00
  br i1 %226, label %227, label %230

; <label>:227                                     ; preds = %199
  %228 = load float, float* %invMass, align 4
  %229 = fdiv float 1.000000e+00, %228
  br label %231

; <label>:230                                     ; preds = %199
  br label %231

; <label>:231                                     ; preds = %230, %227
  %232 = phi float [ %229, %227 ], [ 0.000000e+00, %230 ]
  %233 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 17
  store float %232, float* %233, align 4
  %234 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %235 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %234, i32 0, i32 0
  %236 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %235, i32 0, i32 5
  %237 = load i8, i8* %236, align 4
  %238 = trunc i8 %237 to i1
  br i1 %238, label %239, label %274

; <label>:239                                     ; preds = %231
  %240 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %241 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %240, i32 0, i32 0
  %242 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %241, i32 0, i32 2
  %243 = load float, float* %242, align 8
  %244 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 5
  %245 = load float, float* %244, align 8
  %246 = fmul float %245, %243
  store float %246, float* %244, align 8
  %247 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 5
  %248 = load float, float* %247, align 8
  %249 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 8
  %250 = call <2 x float> @_ZmlfRK6b2Vec2(float %248, %struct.b2Vec2* dereferenceable(8) %249)
  %251 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %250, <2 x float>* %251, align 4
  %252 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 13
  %253 = load float, float* %252, align 4
  %254 = call <2 x float> @_ZmlfRK6b2Vec2(float %253, %struct.b2Vec2* dereferenceable(8) %P)
  %255 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %254, <2 x float>* %255, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %10)
  %256 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 15
  %257 = load float, float* %256, align 4
  %258 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 9
  %259 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %258, %struct.b2Vec2* dereferenceable(8) %P)
  %260 = fmul float %257, %259
  %261 = load float, float* %wA, align 4
  %262 = fsub float %261, %260
  store float %262, float* %wA, align 4
  %263 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 14
  %264 = load float, float* %263, align 8
  %265 = call <2 x float> @_ZmlfRK6b2Vec2(float %264, %struct.b2Vec2* dereferenceable(8) %P)
  %266 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %265, <2 x float>* %266, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %11)
  %267 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 16
  %268 = load float, float* %267, align 8
  %269 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 10
  %270 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %269, %struct.b2Vec2* dereferenceable(8) %P)
  %271 = fmul float %268, %270
  %272 = load float, float* %wB, align 4
  %273 = fadd float %272, %271
  store float %273, float* %wB, align 4
  br label %276

; <label>:274                                     ; preds = %231
  %275 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 5
  store float 0.000000e+00, float* %275, align 8
  br label %276

; <label>:276                                     ; preds = %274, %239
  %277 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %278 to i64
  %280 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %281 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %280, i32 0, i32 2
  %282 = load %struct.b2Position*, %struct.b2Position** %281, align 8
  %283 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %282, i64 %279
  %284 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %283, i32 0, i32 0
  %285 = bitcast %struct.b2Vec2* %284 to i8*
  %286 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %286, i64 8, i32 4, i1 false)
  %287 = load float, float* %wA, align 4
  %288 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 6
  %289 = load i32, i32* %288, align 4
  %290 = sext i32 %289 to i64
  %291 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %292 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %291, i32 0, i32 2
  %293 = load %struct.b2Position*, %struct.b2Position** %292, align 8
  %294 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %293, i64 %290
  %295 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %294, i32 0, i32 1
  store float %287, float* %295, align 4
  %296 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  %297 = load i32, i32* %296, align 8
  %298 = sext i32 %297 to i64
  %299 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %300 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %299, i32 0, i32 2
  %301 = load %struct.b2Position*, %struct.b2Position** %300, align 8
  %302 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %301, i64 %298
  %303 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %302, i32 0, i32 0
  %304 = bitcast %struct.b2Vec2* %303 to i8*
  %305 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %304, i8* %305, i64 8, i32 4, i1 false)
  %306 = load float, float* %wB, align 4
  %307 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %12, i32 0, i32 7
  %308 = load i32, i32* %307, align 8
  %309 = sext i32 %308 to i64
  %310 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %311 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %310, i32 0, i32 2
  %312 = load %struct.b2Position*, %struct.b2Position** %311, align 8
  %313 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %312, i64 %309
  %314 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %313, i32 0, i32 1
  store float %306, float* %314, align 4
  br label %315

; <label>:315                                     ; preds = %276, %195
  ret void
}

; Function Attrs: uwtable
define void @_ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2RopeJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %vpA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %vpB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %C = alloca float, align 4
  %Cdot = alloca float, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %impulse = alloca float, align 4
  %oldImpulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %8 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %9 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %13 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %12, i32 0, i32 2
  %14 = load %struct.b2Position*, %struct.b2Position** %13, align 8
  %15 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %14, i64 %11
  %16 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %15, i32 0, i32 0
  %17 = bitcast %struct.b2Vec2* %vA to i8*
  %18 = bitcast %struct.b2Vec2* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  %19 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %23 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %22, i32 0, i32 2
  %24 = load %struct.b2Position*, %struct.b2Position** %23, align 8
  %25 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %24, i64 %21
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i32 0, i32 1
  %27 = load float, float* %26, align 4
  store float %27, float* %wA, align 4
  %28 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %32 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %31, i32 0, i32 2
  %33 = load %struct.b2Position*, %struct.b2Position** %32, align 8
  %34 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %33, i64 %30
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i32 0, i32 0
  %36 = bitcast %struct.b2Vec2* %vB to i8*
  %37 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  %38 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %42 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %41, i32 0, i32 2
  %43 = load %struct.b2Position*, %struct.b2Position** %42, align 8
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i64 %40
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i32 0, i32 1
  %46 = load float, float* %45, align 4
  store float %46, float* %wB, align 4
  %47 = load float, float* %wA, align 4
  %48 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 9
  %49 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %47, %struct.b2Vec2* dereferenceable(8) %48)
  %50 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vA, %struct.b2Vec2* dereferenceable(8) %3)
  %52 = bitcast %struct.b2Vec2* %vpA to <2 x float>*
  store <2 x float> %51, <2 x float>* %52, align 4
  %53 = load float, float* %wB, align 4
  %54 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 10
  %55 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %53, %struct.b2Vec2* dereferenceable(8) %54)
  %56 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 4
  %57 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %4)
  %58 = bitcast %struct.b2Vec2* %vpB to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 4
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 3
  %62 = load float, float* %61, align 8
  %63 = fsub float %60, %62
  store float %63, float* %C, align 4
  %64 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 8
  %65 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vpB, %struct.b2Vec2* dereferenceable(8) %vpA)
  %66 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 4
  %67 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %64, %struct.b2Vec2* dereferenceable(8) %5)
  store float %67, float* %Cdot, align 4
  %68 = load float, float* %C, align 4
  %69 = fcmp olt float %68, 0.000000e+00
  br i1 %69, label %70, label %79

; <label>:70                                      ; preds = %0
  %71 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %72 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %72, i32 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = load float, float* %C, align 4
  %76 = fmul float %74, %75
  %77 = load float, float* %Cdot, align 4
  %78 = fadd float %77, %76
  store float %78, float* %Cdot, align 4
  br label %79

; <label>:79                                      ; preds = %70, %0
  %80 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 17
  %81 = load float, float* %80, align 4
  %82 = fsub float -0.000000e+00, %81
  %83 = load float, float* %Cdot, align 4
  %84 = fmul float %82, %83
  store float %84, float* %impulse, align 4
  %85 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 5
  %86 = load float, float* %85, align 8
  store float %86, float* %oldImpulse, align 4
  %87 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 5
  %88 = load float, float* %87, align 8
  %89 = load float, float* %impulse, align 4
  %90 = fadd float %88, %89
  %91 = call float @_Z5b2MinIfET_S0_S0_(float 0.000000e+00, float %90)
  %92 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 5
  store float %91, float* %92, align 8
  %93 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 5
  %94 = load float, float* %93, align 8
  %95 = load float, float* %oldImpulse, align 4
  %96 = fsub float %94, %95
  store float %96, float* %impulse, align 4
  %97 = load float, float* %impulse, align 4
  %98 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 8
  %99 = call <2 x float> @_ZmlfRK6b2Vec2(float %97, %struct.b2Vec2* dereferenceable(8) %98)
  %100 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %99, <2 x float>* %100, align 4
  %101 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 13
  %102 = load float, float* %101, align 4
  %103 = call <2 x float> @_ZmlfRK6b2Vec2(float %102, %struct.b2Vec2* dereferenceable(8) %P)
  %104 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %103, <2 x float>* %104, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %6)
  %105 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 15
  %106 = load float, float* %105, align 4
  %107 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 9
  %108 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %107, %struct.b2Vec2* dereferenceable(8) %P)
  %109 = fmul float %106, %108
  %110 = load float, float* %wA, align 4
  %111 = fsub float %110, %109
  store float %111, float* %wA, align 4
  %112 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 14
  %113 = load float, float* %112, align 8
  %114 = call <2 x float> @_ZmlfRK6b2Vec2(float %113, %struct.b2Vec2* dereferenceable(8) %P)
  %115 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %114, <2 x float>* %115, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %7)
  %116 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 16
  %117 = load float, float* %116, align 8
  %118 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 10
  %119 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %118, %struct.b2Vec2* dereferenceable(8) %P)
  %120 = fmul float %117, %119
  %121 = load float, float* %wB, align 4
  %122 = fadd float %121, %120
  store float %122, float* %wB, align 4
  %123 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 6
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %127 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %126, i32 0, i32 2
  %128 = load %struct.b2Position*, %struct.b2Position** %127, align 8
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i64 %125
  %130 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %129, i32 0, i32 0
  %131 = bitcast %struct.b2Vec2* %130 to i8*
  %132 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 8, i32 4, i1 false)
  %133 = load float, float* %wA, align 4
  %134 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 6
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %138 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %137, i32 0, i32 2
  %139 = load %struct.b2Position*, %struct.b2Position** %138, align 8
  %140 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %139, i64 %136
  %141 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %140, i32 0, i32 1
  store float %133, float* %141, align 4
  %142 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 7
  %143 = load i32, i32* %142, align 8
  %144 = sext i32 %143 to i64
  %145 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %146 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %145, i32 0, i32 2
  %147 = load %struct.b2Position*, %struct.b2Position** %146, align 8
  %148 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %147, i64 %144
  %149 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %148, i32 0, i32 0
  %150 = bitcast %struct.b2Vec2* %149 to i8*
  %151 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 4, i1 false)
  %152 = load float, float* %wB, align 4
  %153 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %8, i32 0, i32 7
  %154 = load i32, i32* %153, align 8
  %155 = sext i32 %154 to i64
  %156 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %157 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %156, i32 0, i32 2
  %158 = load %struct.b2Position*, %struct.b2Position** %157, align 8
  %159 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %158, i64 %155
  %160 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %159, i32 0, i32 1
  store float %152, float* %160, align 4
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2RopeJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %u = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %length = alloca float, align 4
  %C = alloca float, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %10 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %14 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %13, i32 0, i32 1
  %15 = load %struct.b2Position*, %struct.b2Position** %14, align 8
  %16 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %15, i64 %12
  %17 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %16, i32 0, i32 0
  %18 = bitcast %struct.b2Vec2* %cA to i8*
  %19 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 6
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %24 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %23, i32 0, i32 1
  %25 = load %struct.b2Position*, %struct.b2Position** %24, align 8
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i64 %22
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i32 0, i32 1
  %28 = load float, float* %27, align 4
  store float %28, float* %aA, align 4
  %29 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 7
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %33 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %32, i32 0, i32 1
  %34 = load %struct.b2Position*, %struct.b2Position** %33, align 8
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i64 %31
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i32 0, i32 0
  %37 = bitcast %struct.b2Vec2* %cB to i8*
  %38 = bitcast %struct.b2Vec2* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 7
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %43 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %42, i32 0, i32 1
  %44 = load %struct.b2Position*, %struct.b2Position** %43, align 8
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i64 %41
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i32 0, i32 1
  %47 = load float, float* %46, align 4
  store float %47, float* %aB, align 4
  %48 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %48)
  %49 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %49)
  %50 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 1
  %51 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 11
  %52 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %50, %struct.b2Vec2* dereferenceable(8) %51)
  %53 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %55 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 4
  %56 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 2
  %57 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 12
  %58 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %56, %struct.b2Vec2* dereferenceable(8) %57)
  %59 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %58, <2 x float>* %59, align 4
  %60 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %61 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %60, <2 x float>* %61, align 4
  %62 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %63 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %62, <2 x float>* %63, align 4
  %64 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %cA)
  %65 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %64, <2 x float>* %65, align 4
  %66 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %67 = bitcast %struct.b2Vec2* %u to <2 x float>*
  store <2 x float> %66, <2 x float>* %67, align 4
  %68 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %u)
  store float %68, float* %length, align 4
  %69 = load float, float* %length, align 4
  %70 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 3
  %71 = load float, float* %70, align 8
  %72 = fsub float %69, %71
  store float %72, float* %C, align 4
  %73 = load float, float* %C, align 4
  %74 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %73, float 0.000000e+00, float 0x3FC99999A0000000)
  store float %74, float* %C, align 4
  %75 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 17
  %76 = load float, float* %75, align 4
  %77 = fsub float -0.000000e+00, %76
  %78 = load float, float* %C, align 4
  %79 = fmul float %77, %78
  store float %79, float* %impulse, align 4
  %80 = load float, float* %impulse, align 4
  %81 = call <2 x float> @_ZmlfRK6b2Vec2(float %80, %struct.b2Vec2* dereferenceable(8) %u)
  %82 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %81, <2 x float>* %82, align 4
  %83 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 13
  %84 = load float, float* %83, align 4
  %85 = call <2 x float> @_ZmlfRK6b2Vec2(float %84, %struct.b2Vec2* dereferenceable(8) %P)
  %86 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %7)
  %87 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 15
  %88 = load float, float* %87, align 4
  %89 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %P)
  %90 = fmul float %88, %89
  %91 = load float, float* %aA, align 4
  %92 = fsub float %91, %90
  store float %92, float* %aA, align 4
  %93 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 14
  %94 = load float, float* %93, align 8
  %95 = call <2 x float> @_ZmlfRK6b2Vec2(float %94, %struct.b2Vec2* dereferenceable(8) %P)
  %96 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %95, <2 x float>* %96, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %8)
  %97 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 16
  %98 = load float, float* %97, align 8
  %99 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %P)
  %100 = fmul float %98, %99
  %101 = load float, float* %aB, align 4
  %102 = fadd float %101, %100
  store float %102, float* %aB, align 4
  %103 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %107 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %106, i32 0, i32 1
  %108 = load %struct.b2Position*, %struct.b2Position** %107, align 8
  %109 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %108, i64 %105
  %110 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %109, i32 0, i32 0
  %111 = bitcast %struct.b2Vec2* %110 to i8*
  %112 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 4, i1 false)
  %113 = load float, float* %aA, align 4
  %114 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 6
  %115 = load i32, i32* %114, align 4
  %116 = sext i32 %115 to i64
  %117 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %118 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %117, i32 0, i32 1
  %119 = load %struct.b2Position*, %struct.b2Position** %118, align 8
  %120 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %119, i64 %116
  %121 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %120, i32 0, i32 1
  store float %113, float* %121, align 4
  %122 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 7
  %123 = load i32, i32* %122, align 8
  %124 = sext i32 %123 to i64
  %125 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %126 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %125, i32 0, i32 1
  %127 = load %struct.b2Position*, %struct.b2Position** %126, align 8
  %128 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %127, i64 %124
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i32 0, i32 0
  %130 = bitcast %struct.b2Vec2* %129 to i8*
  %131 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 4, i1 false)
  %132 = load float, float* %aB, align 4
  %133 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 7
  %134 = load i32, i32* %133, align 8
  %135 = sext i32 %134 to i64
  %136 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %137 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %136, i32 0, i32 1
  %138 = load %struct.b2Position*, %struct.b2Position** %137, align 8
  %139 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %138, i64 %135
  %140 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %139, i32 0, i32 1
  store float %132, float* %140, align 4
  %141 = load float, float* %length, align 4
  %142 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %9, i32 0, i32 3
  %143 = load float, float* %142, align 8
  %144 = fsub float %141, %143
  %145 = fcmp olt float %144, 0x3F747AE140000000
  ret i1 %145
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2WeldJoint10GetAnchorAEv(%class.b2WeldJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2WeldJoint*, align 8
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %2, align 8
  %3 = load %class.b2WeldJoint*, %class.b2WeldJoint** %2, align 8
  %4 = bitcast %class.b2WeldJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %3, i32 0, i32 4
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2WeldJoint10GetAnchorBEv(%class.b2WeldJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2WeldJoint*, align 8
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %2, align 8
  %3 = load %class.b2WeldJoint*, %class.b2WeldJoint** %2, align 8
  %4 = bitcast %class.b2WeldJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %3, i32 0, i32 5
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK11b2WeldJoint16GetReactionForceEf(%class.b2WeldJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2WeldJoint*, align 8
  %3 = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %4 = load %class.b2WeldJoint*, %class.b2WeldJoint** %2, align 8
  %5 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %4, i32 0, i32 8
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %4, i32 0, i32 8
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %8, i32 0, i32 1
  %10 = load float, float* %9, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %7, float %10)
  %11 = load float, float* %3, align 4
  %12 = call <2 x float> @_ZmlfRK6b2Vec2(float %11, %struct.b2Vec2* dereferenceable(8) %P)
  %13 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  ret <2 x float> %15
}

; Function Attrs: nounwind uwtable
define float @_ZNK11b2WeldJoint17GetReactionTorqueEf(%class.b2WeldJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2WeldJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %3, i32 0, i32 8
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 2
  %7 = load float, float* %6, align 4
  %8 = fmul float %4, %7
  ret float %8
}

; Function Attrs: uwtable
define void @_ZN11b2WeldJoint4DumpEv(%class.b2WeldJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WeldJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  %2 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %3 = bitcast %class.b2WeldJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2WeldJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.118, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.119, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.120, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2WeldJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.121, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 4
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 4
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.122, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 5
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 5
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5.123, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 6
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.124, i32 0, i32 0), double %38)
  %39 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 1
  %40 = load float, float* %39, align 8
  %41 = fpext float %40 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.125, i32 0, i32 0), double %41)
  %42 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %2, i32 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = fpext float %43 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8.126, i32 0, i32 0), double %44)
  %45 = bitcast %class.b2WeldJoint* %2 to %class.b2Joint*
  %46 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %45, i32 0, i32 8
  %47 = load i32, i32* %46, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.127, i32 0, i32 0), i32 %47)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN11b2WeldJointD2Ev(%class.b2WeldJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2WeldJoint*, align 8
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  %2 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %3 = bitcast %class.b2WeldJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN11b2WeldJointD0Ev(%class.b2WeldJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2WeldJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  %4 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  invoke void @_ZN11b2WeldJointD2Ev(%class.b2WeldJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2WeldJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2WeldJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2WeldJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WeldJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %K = alloca %struct.b2Mat33, align 4
  %invM = alloca float, align 4
  %m = alloca float, align 4
  %C = alloca float, align 4
  %omega = alloca float, align 4
  %d = alloca float, align 4
  %k = alloca float, align 4
  %h = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %10 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %11 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %10, i32 0, i32 6
  %12 = load %class.b2Body*, %class.b2Body** %11, align 8
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 9
  store i32 %14, i32* %15, align 8
  %16 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %17 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %16, i32 0, i32 7
  %18 = load %class.b2Body*, %class.b2Body** %17, align 8
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 10
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 13
  %23 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %24 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %23, i32 0, i32 6
  %25 = load %class.b2Body*, %class.b2Body** %24, align 8
  %26 = getelementptr inbounds %class.b2Body, %class.b2Body* %25, i32 0, i32 4
  %27 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %26, i32 0, i32 0
  %28 = bitcast %struct.b2Vec2* %22 to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 14
  %31 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %32 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %31, i32 0, i32 7
  %33 = load %class.b2Body*, %class.b2Body** %32, align 8
  %34 = getelementptr inbounds %class.b2Body, %class.b2Body* %33, i32 0, i32 4
  %35 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %34, i32 0, i32 0
  %36 = bitcast %struct.b2Vec2* %30 to i8*
  %37 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  %38 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %39 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %38, i32 0, i32 6
  %40 = load %class.b2Body*, %class.b2Body** %39, align 8
  %41 = getelementptr inbounds %class.b2Body, %class.b2Body* %40, i32 0, i32 17
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 15
  store float %42, float* %43, align 8
  %44 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %45 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %44, i32 0, i32 7
  %46 = load %class.b2Body*, %class.b2Body** %45, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 17
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 16
  store float %48, float* %49, align 4
  %50 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 6
  %52 = load %class.b2Body*, %class.b2Body** %51, align 8
  %53 = getelementptr inbounds %class.b2Body, %class.b2Body* %52, i32 0, i32 19
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 17
  store float %54, float* %55, align 8
  %56 = bitcast %class.b2WeldJoint* %9 to %class.b2Joint*
  %57 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %56, i32 0, i32 7
  %58 = load %class.b2Body*, %class.b2Body** %57, align 8
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %58, i32 0, i32 19
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 18
  store float %60, float* %61, align 4
  %62 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 9
  %63 = load i32, i32* %62, align 8
  %64 = sext i32 %63 to i64
  %65 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %66 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %65, i32 0, i32 1
  %67 = load %struct.b2Position*, %struct.b2Position** %66, align 8
  %68 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %67, i64 %64
  %69 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %68, i32 0, i32 1
  %70 = load float, float* %69, align 4
  store float %70, float* %aA, align 4
  %71 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 9
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  %74 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %75 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %74, i32 0, i32 2
  %76 = load %struct.b2Position*, %struct.b2Position** %75, align 8
  %77 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %76, i64 %73
  %78 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %77, i32 0, i32 0
  %79 = bitcast %struct.b2Vec2* %vA to i8*
  %80 = bitcast %struct.b2Vec2* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false)
  %81 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 9
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  %84 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %85 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %84, i32 0, i32 2
  %86 = load %struct.b2Position*, %struct.b2Position** %85, align 8
  %87 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %86, i64 %83
  %88 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %87, i32 0, i32 1
  %89 = load float, float* %88, align 4
  store float %89, float* %wA, align 4
  %90 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 10
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %94 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %93, i32 0, i32 1
  %95 = load %struct.b2Position*, %struct.b2Position** %94, align 8
  %96 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %95, i64 %92
  %97 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %96, i32 0, i32 1
  %98 = load float, float* %97, align 4
  store float %98, float* %aB, align 4
  %99 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 10
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %103 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %102, i32 0, i32 2
  %104 = load %struct.b2Position*, %struct.b2Position** %103, align 8
  %105 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %104, i64 %101
  %106 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %105, i32 0, i32 0
  %107 = bitcast %struct.b2Vec2* %vB to i8*
  %108 = bitcast %struct.b2Vec2* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 4, i1 false)
  %109 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 10
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %113 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %112, i32 0, i32 2
  %114 = load %struct.b2Position*, %struct.b2Position** %113, align 8
  %115 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %114, i64 %111
  %116 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %115, i32 0, i32 1
  %117 = load float, float* %116, align 4
  store float %117, float* %wB, align 4
  %118 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %118)
  %119 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %119)
  %120 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %121 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 4
  %122 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 13
  %123 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %121, %struct.b2Vec2* dereferenceable(8) %122)
  %124 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %123, <2 x float>* %124, align 4
  %125 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %4)
  %126 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %125, <2 x float>* %126, align 4
  %127 = bitcast %struct.b2Vec2* %120 to i8*
  %128 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 4, i1 false)
  %129 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %130 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 5
  %131 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 14
  %132 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %130, %struct.b2Vec2* dereferenceable(8) %131)
  %133 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %132, <2 x float>* %133, align 4
  %134 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %6)
  %135 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = bitcast %struct.b2Vec2* %129 to i8*
  %137 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 8, i32 4, i1 false)
  %138 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 15
  %139 = load float, float* %138, align 8
  store float %139, float* %mA, align 4
  %140 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 16
  %141 = load float, float* %140, align 4
  store float %141, float* %mB, align 4
  %142 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 17
  %143 = load float, float* %142, align 8
  store float %143, float* %iA, align 4
  %144 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 18
  %145 = load float, float* %144, align 4
  store float %145, float* %iB, align 4
  call void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %K)
  %146 = load float, float* %mA, align 4
  %147 = load float, float* %mB, align 4
  %148 = fadd float %146, %147
  %149 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %150 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %149, i32 0, i32 1
  %151 = load float, float* %150, align 4
  %152 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %153 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %152, i32 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = fmul float %151, %154
  %156 = load float, float* %iA, align 4
  %157 = fmul float %155, %156
  %158 = fadd float %148, %157
  %159 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %160 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %159, i32 0, i32 1
  %161 = load float, float* %160, align 4
  %162 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %163 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %162, i32 0, i32 1
  %164 = load float, float* %163, align 4
  %165 = fmul float %161, %164
  %166 = load float, float* %iB, align 4
  %167 = fmul float %165, %166
  %168 = fadd float %158, %167
  %169 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %170 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %169, i32 0, i32 0
  store float %168, float* %170, align 4
  %171 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %172 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %171, i32 0, i32 1
  %173 = load float, float* %172, align 4
  %174 = fsub float -0.000000e+00, %173
  %175 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %176 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %175, i32 0, i32 0
  %177 = load float, float* %176, align 8
  %178 = fmul float %174, %177
  %179 = load float, float* %iA, align 4
  %180 = fmul float %178, %179
  %181 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %182 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %181, i32 0, i32 1
  %183 = load float, float* %182, align 4
  %184 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %185 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %184, i32 0, i32 0
  %186 = load float, float* %185, align 8
  %187 = fmul float %183, %186
  %188 = load float, float* %iB, align 4
  %189 = fmul float %187, %188
  %190 = fsub float %180, %189
  %191 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %192 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %191, i32 0, i32 0
  store float %190, float* %192, align 4
  %193 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %194 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %193, i32 0, i32 1
  %195 = load float, float* %194, align 4
  %196 = fsub float -0.000000e+00, %195
  %197 = load float, float* %iA, align 4
  %198 = fmul float %196, %197
  %199 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %200 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %199, i32 0, i32 1
  %201 = load float, float* %200, align 4
  %202 = load float, float* %iB, align 4
  %203 = fmul float %201, %202
  %204 = fsub float %198, %203
  %205 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %206 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %205, i32 0, i32 0
  store float %204, float* %206, align 4
  %207 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %208 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %207, i32 0, i32 0
  %209 = load float, float* %208, align 4
  %210 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %211 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %210, i32 0, i32 1
  store float %209, float* %211, align 4
  %212 = load float, float* %mA, align 4
  %213 = load float, float* %mB, align 4
  %214 = fadd float %212, %213
  %215 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %216 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %215, i32 0, i32 0
  %217 = load float, float* %216, align 8
  %218 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %219 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %218, i32 0, i32 0
  %220 = load float, float* %219, align 8
  %221 = fmul float %217, %220
  %222 = load float, float* %iA, align 4
  %223 = fmul float %221, %222
  %224 = fadd float %214, %223
  %225 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %226 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %225, i32 0, i32 0
  %227 = load float, float* %226, align 8
  %228 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %229 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %228, i32 0, i32 0
  %230 = load float, float* %229, align 8
  %231 = fmul float %227, %230
  %232 = load float, float* %iB, align 4
  %233 = fmul float %231, %232
  %234 = fadd float %224, %233
  %235 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %236 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %235, i32 0, i32 1
  store float %234, float* %236, align 4
  %237 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %238 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %237, i32 0, i32 0
  %239 = load float, float* %238, align 8
  %240 = load float, float* %iA, align 4
  %241 = fmul float %239, %240
  %242 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %243 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %242, i32 0, i32 0
  %244 = load float, float* %243, align 8
  %245 = load float, float* %iB, align 4
  %246 = fmul float %244, %245
  %247 = fadd float %241, %246
  %248 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %249 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %248, i32 0, i32 1
  store float %247, float* %249, align 4
  %250 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %251 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %250, i32 0, i32 0
  %252 = load float, float* %251, align 4
  %253 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %254 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %253, i32 0, i32 2
  store float %252, float* %254, align 4
  %255 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %256 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %255, i32 0, i32 1
  %257 = load float, float* %256, align 4
  %258 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %259 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %258, i32 0, i32 2
  store float %257, float* %259, align 4
  %260 = load float, float* %iA, align 4
  %261 = load float, float* %iB, align 4
  %262 = fadd float %260, %261
  %263 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %264 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %263, i32 0, i32 2
  store float %262, float* %264, align 4
  %265 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 1
  %266 = load float, float* %265, align 8
  %267 = fcmp ogt float %266, 0.000000e+00
  br i1 %267, label %268, label %349

; <label>:268                                     ; preds = %0
  %269 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 19
  call void @_ZNK7b2Mat3312GetInverse22EPS_(%struct.b2Mat33* %K, %struct.b2Mat33* %269)
  %270 = load float, float* %iA, align 4
  %271 = load float, float* %iB, align 4
  %272 = fadd float %270, %271
  store float %272, float* %invM, align 4
  %273 = load float, float* %invM, align 4
  %274 = fcmp ogt float %273, 0.000000e+00
  br i1 %274, label %275, label %278

; <label>:275                                     ; preds = %268
  %276 = load float, float* %invM, align 4
  %277 = fdiv float 1.000000e+00, %276
  br label %279

; <label>:278                                     ; preds = %268
  br label %279

; <label>:279                                     ; preds = %278, %275
  %280 = phi float [ %277, %275 ], [ 0.000000e+00, %278 ]
  store float %280, float* %m, align 4
  %281 = load float, float* %aB, align 4
  %282 = load float, float* %aA, align 4
  %283 = fsub float %281, %282
  %284 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 6
  %285 = load float, float* %284, align 4
  %286 = fsub float %283, %285
  store float %286, float* %C, align 4
  %287 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 1
  %288 = load float, float* %287, align 8
  %289 = fmul float 0x401921FB60000000, %288
  store float %289, float* %omega, align 4
  %290 = load float, float* %m, align 4
  %291 = fmul float 2.000000e+00, %290
  %292 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 2
  %293 = load float, float* %292, align 4
  %294 = fmul float %291, %293
  %295 = load float, float* %omega, align 4
  %296 = fmul float %294, %295
  store float %296, float* %d, align 4
  %297 = load float, float* %m, align 4
  %298 = load float, float* %omega, align 4
  %299 = fmul float %297, %298
  %300 = load float, float* %omega, align 4
  %301 = fmul float %299, %300
  store float %301, float* %k, align 4
  %302 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %303 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %302, i32 0, i32 0
  %304 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %303, i32 0, i32 0
  %305 = load float, float* %304, align 8
  store float %305, float* %h, align 4
  %306 = load float, float* %h, align 4
  %307 = load float, float* %d, align 4
  %308 = load float, float* %h, align 4
  %309 = load float, float* %k, align 4
  %310 = fmul float %308, %309
  %311 = fadd float %307, %310
  %312 = fmul float %306, %311
  %313 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  store float %312, float* %313, align 8
  %314 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  %315 = load float, float* %314, align 8
  %316 = fcmp une float %315, 0.000000e+00
  br i1 %316, label %317, label %321

; <label>:317                                     ; preds = %279
  %318 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  %319 = load float, float* %318, align 8
  %320 = fdiv float 1.000000e+00, %319
  br label %322

; <label>:321                                     ; preds = %279
  br label %322

; <label>:322                                     ; preds = %321, %317
  %323 = phi float [ %320, %317 ], [ 0.000000e+00, %321 ]
  %324 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  store float %323, float* %324, align 8
  %325 = load float, float* %C, align 4
  %326 = load float, float* %h, align 4
  %327 = fmul float %325, %326
  %328 = load float, float* %k, align 4
  %329 = fmul float %327, %328
  %330 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  %331 = load float, float* %330, align 8
  %332 = fmul float %329, %331
  %333 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 3
  store float %332, float* %333, align 8
  %334 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  %335 = load float, float* %334, align 8
  %336 = load float, float* %invM, align 4
  %337 = fadd float %336, %335
  store float %337, float* %invM, align 4
  %338 = load float, float* %invM, align 4
  %339 = fcmp une float %338, 0.000000e+00
  br i1 %339, label %340, label %343

; <label>:340                                     ; preds = %322
  %341 = load float, float* %invM, align 4
  %342 = fdiv float 1.000000e+00, %341
  br label %344

; <label>:343                                     ; preds = %322
  br label %344

; <label>:344                                     ; preds = %343, %340
  %345 = phi float [ %342, %340 ], [ 0.000000e+00, %343 ]
  %346 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 19
  %347 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %346, i32 0, i32 2
  %348 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %347, i32 0, i32 2
  store float %345, float* %348, align 8
  br label %363

; <label>:349                                     ; preds = %0
  %350 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %351 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %350, i32 0, i32 2
  %352 = load float, float* %351, align 4
  %353 = fcmp oeq float %352, 0.000000e+00
  br i1 %353, label %354, label %358

; <label>:354                                     ; preds = %349
  %355 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 19
  call void @_ZNK7b2Mat3312GetInverse22EPS_(%struct.b2Mat33* %K, %struct.b2Mat33* %355)
  %356 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  store float 0.000000e+00, float* %356, align 8
  %357 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 3
  store float 0.000000e+00, float* %357, align 8
  br label %362

; <label>:358                                     ; preds = %349
  %359 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 19
  call void @_ZNK7b2Mat3315GetSymInverse33EPS_(%struct.b2Mat33* %K, %struct.b2Mat33* %359)
  %360 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 7
  store float 0.000000e+00, float* %360, align 8
  %361 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 3
  store float 0.000000e+00, float* %361, align 8
  br label %362

; <label>:362                                     ; preds = %358, %354
  br label %363

; <label>:363                                     ; preds = %362, %344
  %364 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %365 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %364, i32 0, i32 0
  %366 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %365, i32 0, i32 5
  %367 = load i8, i8* %366, align 4
  %368 = trunc i8 %367 to i1
  br i1 %368, label %369, label %407

; <label>:369                                     ; preds = %363
  %370 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 8
  %371 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %372 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %371, i32 0, i32 0
  %373 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %372, i32 0, i32 2
  %374 = load float, float* %373, align 8
  call void @_ZN6b2Vec3mLEf(%struct.b2Vec3* %370, float %374)
  %375 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 8
  %376 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %375, i32 0, i32 0
  %377 = load float, float* %376, align 4
  %378 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 8
  %379 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %378, i32 0, i32 1
  %380 = load float, float* %379, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P, float %377, float %380)
  %381 = load float, float* %mA, align 4
  %382 = call <2 x float> @_ZmlfRK6b2Vec2(float %381, %struct.b2Vec2* dereferenceable(8) %P)
  %383 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %382, <2 x float>* %383, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %7)
  %384 = load float, float* %iA, align 4
  %385 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 11
  %386 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %385, %struct.b2Vec2* dereferenceable(8) %P)
  %387 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 8
  %388 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %387, i32 0, i32 2
  %389 = load float, float* %388, align 4
  %390 = fadd float %386, %389
  %391 = fmul float %384, %390
  %392 = load float, float* %wA, align 4
  %393 = fsub float %392, %391
  store float %393, float* %wA, align 4
  %394 = load float, float* %mB, align 4
  %395 = call <2 x float> @_ZmlfRK6b2Vec2(float %394, %struct.b2Vec2* dereferenceable(8) %P)
  %396 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %395, <2 x float>* %396, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %8)
  %397 = load float, float* %iB, align 4
  %398 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 12
  %399 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %398, %struct.b2Vec2* dereferenceable(8) %P)
  %400 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 8
  %401 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %400, i32 0, i32 2
  %402 = load float, float* %401, align 4
  %403 = fadd float %399, %402
  %404 = fmul float %397, %403
  %405 = load float, float* %wB, align 4
  %406 = fadd float %405, %404
  store float %406, float* %wB, align 4
  br label %409

; <label>:407                                     ; preds = %363
  %408 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 8
  call void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %408)
  br label %409

; <label>:409                                     ; preds = %407, %369
  %410 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 9
  %411 = load i32, i32* %410, align 8
  %412 = sext i32 %411 to i64
  %413 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %414 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %413, i32 0, i32 2
  %415 = load %struct.b2Position*, %struct.b2Position** %414, align 8
  %416 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %415, i64 %412
  %417 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %416, i32 0, i32 0
  %418 = bitcast %struct.b2Vec2* %417 to i8*
  %419 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %418, i8* %419, i64 8, i32 4, i1 false)
  %420 = load float, float* %wA, align 4
  %421 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 9
  %422 = load i32, i32* %421, align 8
  %423 = sext i32 %422 to i64
  %424 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %425 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %424, i32 0, i32 2
  %426 = load %struct.b2Position*, %struct.b2Position** %425, align 8
  %427 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %426, i64 %423
  %428 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %427, i32 0, i32 1
  store float %420, float* %428, align 4
  %429 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 10
  %430 = load i32, i32* %429, align 4
  %431 = sext i32 %430 to i64
  %432 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %433 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %432, i32 0, i32 2
  %434 = load %struct.b2Position*, %struct.b2Position** %433, align 8
  %435 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %434, i64 %431
  %436 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %435, i32 0, i32 0
  %437 = bitcast %struct.b2Vec2* %436 to i8*
  %438 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %437, i8* %438, i64 8, i32 4, i1 false)
  %439 = load float, float* %wB, align 4
  %440 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %9, i32 0, i32 10
  %441 = load i32, i32* %440, align 4
  %442 = sext i32 %441 to i64
  %443 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %444 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %443, i32 0, i32 2
  %445 = load %struct.b2Position*, %struct.b2Position** %444, align 8
  %446 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %445, i64 %442
  %447 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %446, i32 0, i32 1
  store float %439, float* %447, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZNK7b2Mat3312GetInverse22EPS_(%struct.b2Mat33* %this, %struct.b2Mat33* %M) #2 align 2 {
  %1 = alloca %struct.b2Mat33*, align 8
  %2 = alloca %struct.b2Mat33*, align 8
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %d = alloca float, align 4
  %det = alloca float, align 4
  store %struct.b2Mat33* %this, %struct.b2Mat33** %1, align 8
  store %struct.b2Mat33* %M, %struct.b2Mat33** %2, align 8
  %3 = load %struct.b2Mat33*, %struct.b2Mat33** %1, align 8
  %4 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  store float %6, float* %a, align 4
  %7 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %3, i32 0, i32 1
  %8 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  store float %9, float* %b, align 4
  %10 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %3, i32 0, i32 0
  %11 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  store float %12, float* %c, align 4
  %13 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %3, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  store float %15, float* %d, align 4
  %16 = load float, float* %a, align 4
  %17 = load float, float* %d, align 4
  %18 = fmul float %16, %17
  %19 = load float, float* %b, align 4
  %20 = load float, float* %c, align 4
  %21 = fmul float %19, %20
  %22 = fsub float %18, %21
  store float %22, float* %det, align 4
  %23 = load float, float* %det, align 4
  %24 = fcmp une float %23, 0.000000e+00
  br i1 %24, label %25, label %28

; <label>:25                                      ; preds = %0
  %26 = load float, float* %det, align 4
  %27 = fdiv float 1.000000e+00, %26
  store float %27, float* %det, align 4
  br label %28

; <label>:28                                      ; preds = %25, %0
  %29 = load float, float* %det, align 4
  %30 = load float, float* %d, align 4
  %31 = fmul float %29, %30
  %32 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %33 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %33, i32 0, i32 0
  store float %31, float* %34, align 4
  %35 = load float, float* %det, align 4
  %36 = fsub float -0.000000e+00, %35
  %37 = load float, float* %b, align 4
  %38 = fmul float %36, %37
  %39 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %40 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %39, i32 0, i32 1
  %41 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %40, i32 0, i32 0
  store float %38, float* %41, align 4
  %42 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %43 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %42, i32 0, i32 0
  %44 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %43, i32 0, i32 2
  store float 0.000000e+00, float* %44, align 4
  %45 = load float, float* %det, align 4
  %46 = fsub float -0.000000e+00, %45
  %47 = load float, float* %c, align 4
  %48 = fmul float %46, %47
  %49 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %50 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %50, i32 0, i32 1
  store float %48, float* %51, align 4
  %52 = load float, float* %det, align 4
  %53 = load float, float* %a, align 4
  %54 = fmul float %52, %53
  %55 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %56 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %55, i32 0, i32 1
  %57 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %56, i32 0, i32 1
  store float %54, float* %57, align 4
  %58 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %59 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %58, i32 0, i32 1
  %60 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %59, i32 0, i32 2
  store float 0.000000e+00, float* %60, align 4
  %61 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %62 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %61, i32 0, i32 2
  %63 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %62, i32 0, i32 0
  store float 0.000000e+00, float* %63, align 4
  %64 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %65 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %64, i32 0, i32 2
  %66 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %65, i32 0, i32 1
  store float 0.000000e+00, float* %66, align 4
  %67 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %68 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %67, i32 0, i32 2
  %69 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %68, i32 0, i32 2
  store float 0.000000e+00, float* %69, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZNK7b2Mat3315GetSymInverse33EPS_(%struct.b2Mat33* %this, %struct.b2Mat33* %M) #0 align 2 {
  %1 = alloca %struct.b2Mat33*, align 8
  %2 = alloca %struct.b2Mat33*, align 8
  %det = alloca float, align 4
  %3 = alloca %struct.b2Vec3, align 4
  %4 = alloca { <2 x float>, float }, align 8
  %a11 = alloca float, align 4
  %a12 = alloca float, align 4
  %a13 = alloca float, align 4
  %a22 = alloca float, align 4
  %a23 = alloca float, align 4
  %a33 = alloca float, align 4
  store %struct.b2Mat33* %this, %struct.b2Mat33** %1, align 8
  store %struct.b2Mat33* %M, %struct.b2Mat33** %2, align 8
  %5 = load %struct.b2Mat33*, %struct.b2Mat33** %1, align 8
  %6 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 1
  %8 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 2
  %9 = call { <2 x float>, float } @_Z7b2CrossRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %7, %struct.b2Vec3* dereferenceable(12) %8)
  store { <2 x float>, float } %9, { <2 x float>, float }* %4, align 8
  %10 = bitcast { <2 x float>, float }* %4 to i8*
  %11 = bitcast %struct.b2Vec3* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %10, i64 12, i32 4, i1 false)
  %12 = call float @_Z5b2DotRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %6, %struct.b2Vec3* dereferenceable(12) %3)
  store float %12, float* %det, align 4
  %13 = load float, float* %det, align 4
  %14 = fcmp une float %13, 0.000000e+00
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %0
  %16 = load float, float* %det, align 4
  %17 = fdiv float 1.000000e+00, %16
  store float %17, float* %det, align 4
  br label %18

; <label>:18                                      ; preds = %15, %0
  %19 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 0
  %20 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %19, i32 0, i32 0
  %21 = load float, float* %20, align 4
  store float %21, float* %a11, align 4
  %22 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 1
  %23 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %22, i32 0, i32 0
  %24 = load float, float* %23, align 4
  store float %24, float* %a12, align 4
  %25 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 2
  %26 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %25, i32 0, i32 0
  %27 = load float, float* %26, align 4
  store float %27, float* %a13, align 4
  %28 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 1
  %29 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %28, i32 0, i32 1
  %30 = load float, float* %29, align 4
  store float %30, float* %a22, align 4
  %31 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 2
  %32 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %31, i32 0, i32 1
  %33 = load float, float* %32, align 4
  store float %33, float* %a23, align 4
  %34 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %5, i32 0, i32 2
  %35 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %34, i32 0, i32 2
  %36 = load float, float* %35, align 4
  store float %36, float* %a33, align 4
  %37 = load float, float* %det, align 4
  %38 = load float, float* %a22, align 4
  %39 = load float, float* %a33, align 4
  %40 = fmul float %38, %39
  %41 = load float, float* %a23, align 4
  %42 = load float, float* %a23, align 4
  %43 = fmul float %41, %42
  %44 = fsub float %40, %43
  %45 = fmul float %37, %44
  %46 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %47 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %46, i32 0, i32 0
  %48 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %47, i32 0, i32 0
  store float %45, float* %48, align 4
  %49 = load float, float* %det, align 4
  %50 = load float, float* %a13, align 4
  %51 = load float, float* %a23, align 4
  %52 = fmul float %50, %51
  %53 = load float, float* %a12, align 4
  %54 = load float, float* %a33, align 4
  %55 = fmul float %53, %54
  %56 = fsub float %52, %55
  %57 = fmul float %49, %56
  %58 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %59 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %58, i32 0, i32 0
  %60 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %59, i32 0, i32 1
  store float %57, float* %60, align 4
  %61 = load float, float* %det, align 4
  %62 = load float, float* %a12, align 4
  %63 = load float, float* %a23, align 4
  %64 = fmul float %62, %63
  %65 = load float, float* %a13, align 4
  %66 = load float, float* %a22, align 4
  %67 = fmul float %65, %66
  %68 = fsub float %64, %67
  %69 = fmul float %61, %68
  %70 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %71 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %70, i32 0, i32 0
  %72 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %71, i32 0, i32 2
  store float %69, float* %72, align 4
  %73 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %74 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %73, i32 0, i32 0
  %75 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %74, i32 0, i32 1
  %76 = load float, float* %75, align 4
  %77 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %78 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %77, i32 0, i32 1
  %79 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %78, i32 0, i32 0
  store float %76, float* %79, align 4
  %80 = load float, float* %det, align 4
  %81 = load float, float* %a11, align 4
  %82 = load float, float* %a33, align 4
  %83 = fmul float %81, %82
  %84 = load float, float* %a13, align 4
  %85 = load float, float* %a13, align 4
  %86 = fmul float %84, %85
  %87 = fsub float %83, %86
  %88 = fmul float %80, %87
  %89 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %90 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %89, i32 0, i32 1
  %91 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %90, i32 0, i32 1
  store float %88, float* %91, align 4
  %92 = load float, float* %det, align 4
  %93 = load float, float* %a13, align 4
  %94 = load float, float* %a12, align 4
  %95 = fmul float %93, %94
  %96 = load float, float* %a11, align 4
  %97 = load float, float* %a23, align 4
  %98 = fmul float %96, %97
  %99 = fsub float %95, %98
  %100 = fmul float %92, %99
  %101 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %102 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %101, i32 0, i32 1
  %103 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %102, i32 0, i32 2
  store float %100, float* %103, align 4
  %104 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %105 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %104, i32 0, i32 0
  %106 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %105, i32 0, i32 2
  %107 = load float, float* %106, align 4
  %108 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %109 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %108, i32 0, i32 2
  %110 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %109, i32 0, i32 0
  store float %107, float* %110, align 4
  %111 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %112 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %111, i32 0, i32 1
  %113 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %112, i32 0, i32 2
  %114 = load float, float* %113, align 4
  %115 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %116 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %115, i32 0, i32 2
  %117 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %116, i32 0, i32 1
  store float %114, float* %117, align 4
  %118 = load float, float* %det, align 4
  %119 = load float, float* %a11, align 4
  %120 = load float, float* %a22, align 4
  %121 = fmul float %119, %120
  %122 = load float, float* %a12, align 4
  %123 = load float, float* %a12, align 4
  %124 = fmul float %122, %123
  %125 = fsub float %121, %124
  %126 = fmul float %118, %125
  %127 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %128 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %127, i32 0, i32 2
  %129 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %128, i32 0, i32 2
  store float %126, float* %129, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2WeldJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WeldJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %Cdot2 = alloca float, align 4
  %impulse2 = alloca float, align 4
  %Cdot1 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %impulse1 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %P = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %Cdot11 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %Cdot22 = alloca float, align 4
  %Cdot = alloca %struct.b2Vec3, align 4
  %impulse = alloca %struct.b2Vec3, align 4
  %14 = alloca %struct.b2Vec3, align 4
  %15 = alloca { <2 x float>, float }, align 8
  %16 = alloca { <2 x float>, float }, align 8
  %P3 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %19 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %20 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %24 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %23, i32 0, i32 2
  %25 = load %struct.b2Position*, %struct.b2Position** %24, align 8
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i64 %22
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i32 0, i32 0
  %28 = bitcast %struct.b2Vec2* %vA to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %34 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %33, i32 0, i32 2
  %35 = load %struct.b2Position*, %struct.b2Position** %34, align 8
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i64 %32
  %37 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %36, i32 0, i32 1
  %38 = load float, float* %37, align 4
  store float %38, float* %wA, align 4
  %39 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %43 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %42, i32 0, i32 2
  %44 = load %struct.b2Position*, %struct.b2Position** %43, align 8
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i64 %41
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i32 0, i32 0
  %47 = bitcast %struct.b2Vec2* %vB to i8*
  %48 = bitcast %struct.b2Vec2* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 4, i1 false)
  %49 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %53 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %52, i32 0, i32 2
  %54 = load %struct.b2Position*, %struct.b2Position** %53, align 8
  %55 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %54, i64 %51
  %56 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %55, i32 0, i32 1
  %57 = load float, float* %56, align 4
  store float %57, float* %wB, align 4
  %58 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 15
  %59 = load float, float* %58, align 8
  store float %59, float* %mA, align 4
  %60 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 16
  %61 = load float, float* %60, align 4
  store float %61, float* %mB, align 4
  %62 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 17
  %63 = load float, float* %62, align 8
  store float %63, float* %iA, align 4
  %64 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 18
  %65 = load float, float* %64, align 4
  store float %65, float* %iB, align 4
  %66 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 1
  %67 = load float, float* %66, align 8
  %68 = fcmp ogt float %67, 0.000000e+00
  br i1 %68, label %69, label %156

; <label>:69                                      ; preds = %0
  %70 = load float, float* %wB, align 4
  %71 = load float, float* %wA, align 4
  %72 = fsub float %70, %71
  store float %72, float* %Cdot2, align 4
  %73 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 19
  %74 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %73, i32 0, i32 2
  %75 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %74, i32 0, i32 2
  %76 = load float, float* %75, align 8
  %77 = fsub float -0.000000e+00, %76
  %78 = load float, float* %Cdot2, align 4
  %79 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fadd float %78, %80
  %82 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 7
  %83 = load float, float* %82, align 8
  %84 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 8
  %85 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %84, i32 0, i32 2
  %86 = load float, float* %85, align 4
  %87 = fmul float %83, %86
  %88 = fadd float %81, %87
  %89 = fmul float %77, %88
  store float %89, float* %impulse2, align 4
  %90 = load float, float* %impulse2, align 4
  %91 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 8
  %92 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %91, i32 0, i32 2
  %93 = load float, float* %92, align 4
  %94 = fadd float %93, %90
  store float %94, float* %92, align 4
  %95 = load float, float* %iA, align 4
  %96 = load float, float* %impulse2, align 4
  %97 = fmul float %95, %96
  %98 = load float, float* %wA, align 4
  %99 = fsub float %98, %97
  store float %99, float* %wA, align 4
  %100 = load float, float* %iB, align 4
  %101 = load float, float* %impulse2, align 4
  %102 = fmul float %100, %101
  %103 = load float, float* %wB, align 4
  %104 = fadd float %103, %102
  store float %104, float* %wB, align 4
  %105 = load float, float* %wB, align 4
  %106 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 12
  %107 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %105, %struct.b2Vec2* dereferenceable(8) %106)
  %108 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %107, <2 x float>* %108, align 4
  %109 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %5)
  %110 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %109, <2 x float>* %110, align 4
  %111 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %4, %struct.b2Vec2* dereferenceable(8) %vA)
  %112 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %111, <2 x float>* %112, align 4
  %113 = load float, float* %wA, align 4
  %114 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 11
  %115 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %113, %struct.b2Vec2* dereferenceable(8) %114)
  %116 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %115, <2 x float>* %116, align 4
  %117 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %6)
  %118 = bitcast %struct.b2Vec2* %Cdot1 to <2 x float>*
  store <2 x float> %117, <2 x float>* %118, align 4
  %119 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 19
  %120 = call <2 x float> @_Z7b2Mul22RK7b2Mat33RK6b2Vec2(%struct.b2Mat33* dereferenceable(36) %119, %struct.b2Vec2* dereferenceable(8) %Cdot1)
  %121 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %120, <2 x float>* %121, align 4
  %122 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %7)
  %123 = bitcast %struct.b2Vec2* %impulse1 to <2 x float>*
  store <2 x float> %122, <2 x float>* %123, align 4
  %124 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse1, i32 0, i32 0
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 8
  %127 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %126, i32 0, i32 0
  %128 = load float, float* %127, align 4
  %129 = fadd float %128, %125
  store float %129, float* %127, align 4
  %130 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse1, i32 0, i32 1
  %131 = load float, float* %130, align 4
  %132 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 8
  %133 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %132, i32 0, i32 1
  %134 = load float, float* %133, align 4
  %135 = fadd float %134, %131
  store float %135, float* %133, align 4
  %136 = bitcast %struct.b2Vec2* %P to i8*
  %137 = bitcast %struct.b2Vec2* %impulse1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 8, i32 4, i1 false)
  %138 = load float, float* %mA, align 4
  %139 = call <2 x float> @_ZmlfRK6b2Vec2(float %138, %struct.b2Vec2* dereferenceable(8) %P)
  %140 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %139, <2 x float>* %140, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %8)
  %141 = load float, float* %iA, align 4
  %142 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 11
  %143 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %142, %struct.b2Vec2* dereferenceable(8) %P)
  %144 = fmul float %141, %143
  %145 = load float, float* %wA, align 4
  %146 = fsub float %145, %144
  store float %146, float* %wA, align 4
  %147 = load float, float* %mB, align 4
  %148 = call <2 x float> @_ZmlfRK6b2Vec2(float %147, %struct.b2Vec2* dereferenceable(8) %P)
  %149 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %9)
  %150 = load float, float* %iB, align 4
  %151 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 12
  %152 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %151, %struct.b2Vec2* dereferenceable(8) %P)
  %153 = fmul float %150, %152
  %154 = load float, float* %wB, align 4
  %155 = fadd float %154, %153
  store float %155, float* %wB, align 4
  br label %215

; <label>:156                                     ; preds = %0
  %157 = load float, float* %wB, align 4
  %158 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 12
  %159 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %157, %struct.b2Vec2* dereferenceable(8) %158)
  %160 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %159, <2 x float>* %160, align 4
  %161 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %12)
  %162 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %161, <2 x float>* %162, align 4
  %163 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %vA)
  %164 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %163, <2 x float>* %164, align 4
  %165 = load float, float* %wA, align 4
  %166 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 11
  %167 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %165, %struct.b2Vec2* dereferenceable(8) %166)
  %168 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %167, <2 x float>* %168, align 4
  %169 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %13)
  %170 = bitcast %struct.b2Vec2* %Cdot11 to <2 x float>*
  store <2 x float> %169, <2 x float>* %170, align 4
  %171 = load float, float* %wB, align 4
  %172 = load float, float* %wA, align 4
  %173 = fsub float %171, %172
  store float %173, float* %Cdot22, align 4
  %174 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot11, i32 0, i32 0
  %175 = load float, float* %174, align 4
  %176 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %Cdot11, i32 0, i32 1
  %177 = load float, float* %176, align 4
  %178 = load float, float* %Cdot22, align 4
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %Cdot, float %175, float %177, float %178)
  %179 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 19
  %180 = call { <2 x float>, float } @_Z5b2MulRK7b2Mat33RK6b2Vec3(%struct.b2Mat33* dereferenceable(36) %179, %struct.b2Vec3* dereferenceable(12) %Cdot)
  store { <2 x float>, float } %180, { <2 x float>, float }* %15, align 8
  %181 = bitcast { <2 x float>, float }* %15 to i8*
  %182 = bitcast %struct.b2Vec3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %181, i64 12, i32 4, i1 false)
  %183 = call { <2 x float>, float } @_ZNK6b2Vec3ngEv(%struct.b2Vec3* %14)
  store { <2 x float>, float } %183, { <2 x float>, float }* %16, align 8
  %184 = bitcast { <2 x float>, float }* %16 to i8*
  %185 = bitcast %struct.b2Vec3* %impulse to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %184, i64 12, i32 4, i1 false)
  %186 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 8
  call void @_ZN6b2Vec3pLERKS_(%struct.b2Vec3* %186, %struct.b2Vec3* dereferenceable(12) %impulse)
  %187 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 0
  %188 = load float, float* %187, align 4
  %189 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 1
  %190 = load float, float* %189, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P3, float %188, float %190)
  %191 = load float, float* %mA, align 4
  %192 = call <2 x float> @_ZmlfRK6b2Vec2(float %191, %struct.b2Vec2* dereferenceable(8) %P3)
  %193 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %192, <2 x float>* %193, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %17)
  %194 = load float, float* %iA, align 4
  %195 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 11
  %196 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %195, %struct.b2Vec2* dereferenceable(8) %P3)
  %197 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %198 = load float, float* %197, align 4
  %199 = fadd float %196, %198
  %200 = fmul float %194, %199
  %201 = load float, float* %wA, align 4
  %202 = fsub float %201, %200
  store float %202, float* %wA, align 4
  %203 = load float, float* %mB, align 4
  %204 = call <2 x float> @_ZmlfRK6b2Vec2(float %203, %struct.b2Vec2* dereferenceable(8) %P3)
  %205 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %204, <2 x float>* %205, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %18)
  %206 = load float, float* %iB, align 4
  %207 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 12
  %208 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %207, %struct.b2Vec2* dereferenceable(8) %P3)
  %209 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %210 = load float, float* %209, align 4
  %211 = fadd float %208, %210
  %212 = fmul float %206, %211
  %213 = load float, float* %wB, align 4
  %214 = fadd float %213, %212
  store float %214, float* %wB, align 4
  br label %215

; <label>:215                                     ; preds = %156, %69
  %216 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %217 = load i32, i32* %216, align 8
  %218 = sext i32 %217 to i64
  %219 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %220 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %219, i32 0, i32 2
  %221 = load %struct.b2Position*, %struct.b2Position** %220, align 8
  %222 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %221, i64 %218
  %223 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %222, i32 0, i32 0
  %224 = bitcast %struct.b2Vec2* %223 to i8*
  %225 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %224, i8* %225, i64 8, i32 4, i1 false)
  %226 = load float, float* %wA, align 4
  %227 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %228 = load i32, i32* %227, align 8
  %229 = sext i32 %228 to i64
  %230 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %231 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %230, i32 0, i32 2
  %232 = load %struct.b2Position*, %struct.b2Position** %231, align 8
  %233 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %232, i64 %229
  %234 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %233, i32 0, i32 1
  store float %226, float* %234, align 4
  %235 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %236 to i64
  %238 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %239 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %238, i32 0, i32 2
  %240 = load %struct.b2Position*, %struct.b2Position** %239, align 8
  %241 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %240, i64 %237
  %242 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %241, i32 0, i32 0
  %243 = bitcast %struct.b2Vec2* %242 to i8*
  %244 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %243, i8* %244, i64 8, i32 4, i1 false)
  %245 = load float, float* %wB, align 4
  %246 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %247 = load i32, i32* %246, align 4
  %248 = sext i32 %247 to i64
  %249 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %250 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %249, i32 0, i32 2
  %251 = load %struct.b2Position*, %struct.b2Position** %250, align 8
  %252 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %251, i64 %248
  %253 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %252, i32 0, i32 1
  store float %245, float* %253, align 4
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z7b2Mul22RK7b2Mat33RK6b2Vec2(%struct.b2Mat33* dereferenceable(36) %A, %struct.b2Vec2* dereferenceable(8) %v) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Mat33*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Mat33* %A, %struct.b2Mat33** %2, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %5 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fmul float %7, %10
  %12 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %13 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %13, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %17 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %16, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fmul float %15, %18
  %20 = fadd float %11, %19
  %21 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %22 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %22, i32 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i32 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = fmul float %24, %27
  %29 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %30 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %29, i32 0, i32 1
  %31 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %30, i32 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %34 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %33, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fmul float %32, %35
  %37 = fadd float %28, %36
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %20, float %37)
  %38 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  ret <2 x float> %39
}

; Function Attrs: inlinehint uwtable
define linkonce_odr { <2 x float>, float } @_Z5b2MulRK7b2Mat33RK6b2Vec3(%struct.b2Mat33* dereferenceable(36) %A, %struct.b2Vec3* dereferenceable(12) %v) #1 comdat {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca %struct.b2Mat33*, align 8
  %3 = alloca %struct.b2Vec3*, align 8
  %4 = alloca %struct.b2Vec3, align 4
  %5 = alloca %struct.b2Vec3, align 4
  %6 = alloca { <2 x float>, float }, align 8
  %7 = alloca %struct.b2Vec3, align 4
  %8 = alloca { <2 x float>, float }, align 8
  %9 = alloca { <2 x float>, float }, align 8
  %10 = alloca %struct.b2Vec3, align 4
  %11 = alloca { <2 x float>, float }, align 8
  %12 = alloca { <2 x float>, float }, align 8
  %13 = alloca { <2 x float>, float }, align 8
  store %struct.b2Mat33* %A, %struct.b2Mat33** %2, align 8
  store %struct.b2Vec3* %v, %struct.b2Vec3** %3, align 8
  %14 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %14, i32 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %18 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %17, i32 0, i32 0
  %19 = call { <2 x float>, float } @_ZmlfRK6b2Vec3(float %16, %struct.b2Vec3* dereferenceable(12) %18)
  store { <2 x float>, float } %19, { <2 x float>, float }* %6, align 8
  %20 = bitcast { <2 x float>, float }* %6 to i8*
  %21 = bitcast %struct.b2Vec3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %20, i64 12, i32 4, i1 false)
  %22 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %23 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %22, i32 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %26 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %25, i32 0, i32 1
  %27 = call { <2 x float>, float } @_ZmlfRK6b2Vec3(float %24, %struct.b2Vec3* dereferenceable(12) %26)
  store { <2 x float>, float } %27, { <2 x float>, float }* %8, align 8
  %28 = bitcast { <2 x float>, float }* %8 to i8*
  %29 = bitcast %struct.b2Vec3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %28, i64 12, i32 4, i1 false)
  %30 = call { <2 x float>, float } @_ZplRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %5, %struct.b2Vec3* dereferenceable(12) %7)
  store { <2 x float>, float } %30, { <2 x float>, float }* %9, align 8
  %31 = bitcast { <2 x float>, float }* %9 to i8*
  %32 = bitcast %struct.b2Vec3* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %31, i64 12, i32 4, i1 false)
  %33 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %34 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %33, i32 0, i32 2
  %35 = load float, float* %34, align 4
  %36 = load %struct.b2Mat33*, %struct.b2Mat33** %2, align 8
  %37 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %36, i32 0, i32 2
  %38 = call { <2 x float>, float } @_ZmlfRK6b2Vec3(float %35, %struct.b2Vec3* dereferenceable(12) %37)
  store { <2 x float>, float } %38, { <2 x float>, float }* %11, align 8
  %39 = bitcast { <2 x float>, float }* %11 to i8*
  %40 = bitcast %struct.b2Vec3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %39, i64 12, i32 4, i1 false)
  %41 = call { <2 x float>, float } @_ZplRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %4, %struct.b2Vec3* dereferenceable(12) %10)
  store { <2 x float>, float } %41, { <2 x float>, float }* %12, align 8
  %42 = bitcast { <2 x float>, float }* %12 to i8*
  %43 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %42, i64 12, i32 4, i1 false)
  %44 = bitcast { <2 x float>, float }* %13 to i8*
  %45 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 12, i32 4, i1 false)
  %46 = load { <2 x float>, float }, { <2 x float>, float }* %13, align 8
  ret { <2 x float>, float } %46
}

; Function Attrs: inlinehint uwtable
define linkonce_odr { <2 x float>, float } @_ZmlfRK6b2Vec3(float %s, %struct.b2Vec3* dereferenceable(12) %a) #1 comdat {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca float, align 4
  %3 = alloca %struct.b2Vec3*, align 8
  %4 = alloca { <2 x float>, float }, align 8
  store float %s, float* %2, align 4
  store %struct.b2Vec3* %a, %struct.b2Vec3** %3, align 8
  %5 = load float, float* %2, align 4
  %6 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %7 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %6, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fmul float %5, %8
  %10 = load float, float* %2, align 4
  %11 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %12 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fmul float %10, %13
  %15 = load float, float* %2, align 4
  %16 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %17 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %16, i32 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = fmul float %15, %18
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %1, float %9, float %14, float %19)
  %20 = bitcast { <2 x float>, float }* %4 to i8*
  %21 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 12, i32 4, i1 false)
  %22 = load { <2 x float>, float }, { <2 x float>, float }* %4, align 8
  ret { <2 x float>, float } %22
}

; Function Attrs: inlinehint uwtable
define linkonce_odr { <2 x float>, float } @_ZplRK6b2Vec3S1_(%struct.b2Vec3* dereferenceable(12) %a, %struct.b2Vec3* dereferenceable(12) %b) #1 comdat {
  %1 = alloca %struct.b2Vec3, align 4
  %2 = alloca %struct.b2Vec3*, align 8
  %3 = alloca %struct.b2Vec3*, align 8
  %4 = alloca { <2 x float>, float }, align 8
  store %struct.b2Vec3* %a, %struct.b2Vec3** %2, align 8
  store %struct.b2Vec3* %b, %struct.b2Vec3** %3, align 8
  %5 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %6 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %5, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %9 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fadd float %7, %10
  %12 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %13 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %12, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %16 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %15, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fadd float %14, %17
  %19 = load %struct.b2Vec3*, %struct.b2Vec3** %2, align 8
  %20 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %19, i32 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = load %struct.b2Vec3*, %struct.b2Vec3** %3, align 8
  %23 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %22, i32 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fadd float %21, %24
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %1, float %11, float %18, float %25)
  %26 = bitcast { <2 x float>, float }* %4 to i8*
  %27 = bitcast %struct.b2Vec3* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 12, i32 4, i1 false)
  %28 = load { <2 x float>, float }, { <2 x float>, float }* %4, align 8
  ret { <2 x float>, float } %28
}

; Function Attrs: uwtable
define zeroext i1 @_ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2WeldJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WeldJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %positionError = alloca float, align 4
  %angularError = alloca float, align 4
  %K = alloca %struct.b2Mat33, align 4
  %C1 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %P = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %C11 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %C2 = alloca float, align 4
  %C = alloca %struct.b2Vec3, align 4
  %impulse = alloca %struct.b2Vec3, align 4
  %12 = alloca %struct.b2Vec3, align 4
  %13 = alloca %struct.b2Vec3, align 4
  %14 = alloca { <2 x float>, float }, align 8
  %15 = alloca { <2 x float>, float }, align 8
  %impulse2 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %P2 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %19 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %20 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %24 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %23, i32 0, i32 1
  %25 = load %struct.b2Position*, %struct.b2Position** %24, align 8
  %26 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %25, i64 %22
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i32 0, i32 0
  %28 = bitcast %struct.b2Vec2* %cA to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %34 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %33, i32 0, i32 1
  %35 = load %struct.b2Position*, %struct.b2Position** %34, align 8
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i64 %32
  %37 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %36, i32 0, i32 1
  %38 = load float, float* %37, align 4
  store float %38, float* %aA, align 4
  %39 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %43 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %42, i32 0, i32 1
  %44 = load %struct.b2Position*, %struct.b2Position** %43, align 8
  %45 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %44, i64 %41
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i32 0, i32 0
  %47 = bitcast %struct.b2Vec2* %cB to i8*
  %48 = bitcast %struct.b2Vec2* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 4, i1 false)
  %49 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %53 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %52, i32 0, i32 1
  %54 = load %struct.b2Position*, %struct.b2Position** %53, align 8
  %55 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %54, i64 %51
  %56 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %55, i32 0, i32 1
  %57 = load float, float* %56, align 4
  store float %57, float* %aB, align 4
  %58 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %58)
  %59 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %59)
  %60 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 15
  %61 = load float, float* %60, align 8
  store float %61, float* %mA, align 4
  %62 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 16
  %63 = load float, float* %62, align 4
  store float %63, float* %mB, align 4
  %64 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 17
  %65 = load float, float* %64, align 8
  store float %65, float* %iA, align 4
  %66 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 18
  %67 = load float, float* %66, align 4
  store float %67, float* %iB, align 4
  %68 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 4
  %69 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 13
  %70 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %68, %struct.b2Vec2* dereferenceable(8) %69)
  %71 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 4
  %72 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %73 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 5
  %75 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 14
  %76 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %74, %struct.b2Vec2* dereferenceable(8) %75)
  %77 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %79 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  call void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %K)
  %80 = load float, float* %mA, align 4
  %81 = load float, float* %mB, align 4
  %82 = fadd float %80, %81
  %83 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %86 = load float, float* %85, align 4
  %87 = fmul float %84, %86
  %88 = load float, float* %iA, align 4
  %89 = fmul float %87, %88
  %90 = fadd float %82, %89
  %91 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %94 = load float, float* %93, align 4
  %95 = fmul float %92, %94
  %96 = load float, float* %iB, align 4
  %97 = fmul float %95, %96
  %98 = fadd float %90, %97
  %99 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %100 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %99, i32 0, i32 0
  store float %98, float* %100, align 4
  %101 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %102 = load float, float* %101, align 4
  %103 = fsub float -0.000000e+00, %102
  %104 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %105 = load float, float* %104, align 4
  %106 = fmul float %103, %105
  %107 = load float, float* %iA, align 4
  %108 = fmul float %106, %107
  %109 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %110 = load float, float* %109, align 4
  %111 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %112 = load float, float* %111, align 4
  %113 = fmul float %110, %112
  %114 = load float, float* %iB, align 4
  %115 = fmul float %113, %114
  %116 = fsub float %108, %115
  %117 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %118 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %117, i32 0, i32 0
  store float %116, float* %118, align 4
  %119 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 1
  %120 = load float, float* %119, align 4
  %121 = fsub float -0.000000e+00, %120
  %122 = load float, float* %iA, align 4
  %123 = fmul float %121, %122
  %124 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 1
  %125 = load float, float* %124, align 4
  %126 = load float, float* %iB, align 4
  %127 = fmul float %125, %126
  %128 = fsub float %123, %127
  %129 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %130 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %129, i32 0, i32 0
  store float %128, float* %130, align 4
  %131 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %132 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %131, i32 0, i32 0
  %133 = load float, float* %132, align 4
  %134 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %135 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %134, i32 0, i32 1
  store float %133, float* %135, align 4
  %136 = load float, float* %mA, align 4
  %137 = load float, float* %mB, align 4
  %138 = fadd float %136, %137
  %139 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %140 = load float, float* %139, align 4
  %141 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %142 = load float, float* %141, align 4
  %143 = fmul float %140, %142
  %144 = load float, float* %iA, align 4
  %145 = fmul float %143, %144
  %146 = fadd float %138, %145
  %147 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %148 = load float, float* %147, align 4
  %149 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %150 = load float, float* %149, align 4
  %151 = fmul float %148, %150
  %152 = load float, float* %iB, align 4
  %153 = fmul float %151, %152
  %154 = fadd float %146, %153
  %155 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %156 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %155, i32 0, i32 1
  store float %154, float* %156, align 4
  %157 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rA, i32 0, i32 0
  %158 = load float, float* %157, align 4
  %159 = load float, float* %iA, align 4
  %160 = fmul float %158, %159
  %161 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %rB, i32 0, i32 0
  %162 = load float, float* %161, align 4
  %163 = load float, float* %iB, align 4
  %164 = fmul float %162, %163
  %165 = fadd float %160, %164
  %166 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %167 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %166, i32 0, i32 1
  store float %165, float* %167, align 4
  %168 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %169 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %168, i32 0, i32 0
  %170 = load float, float* %169, align 4
  %171 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 0
  %172 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %171, i32 0, i32 2
  store float %170, float* %172, align 4
  %173 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %174 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %173, i32 0, i32 1
  %175 = load float, float* %174, align 4
  %176 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 1
  %177 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %176, i32 0, i32 2
  store float %175, float* %177, align 4
  %178 = load float, float* %iA, align 4
  %179 = load float, float* %iB, align 4
  %180 = fadd float %178, %179
  %181 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %182 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %181, i32 0, i32 2
  store float %180, float* %182, align 4
  %183 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 1
  %184 = load float, float* %183, align 8
  %185 = fcmp ogt float %184, 0.000000e+00
  br i1 %185, label %186, label %214

; <label>:186                                     ; preds = %0
  %187 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %188 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %187, <2 x float>* %188, align 4
  %189 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %cA)
  %190 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %189, <2 x float>* %190, align 4
  %191 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %192 = bitcast %struct.b2Vec2* %C1 to <2 x float>*
  store <2 x float> %191, <2 x float>* %192, align 4
  %193 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %C1)
  store float %193, float* %positionError, align 4
  store float 0.000000e+00, float* %angularError, align 4
  %194 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %K, %struct.b2Vec2* dereferenceable(8) %C1)
  %195 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %194, <2 x float>* %195, align 4
  %196 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %7)
  %197 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %196, <2 x float>* %197, align 4
  %198 = load float, float* %mA, align 4
  %199 = call <2 x float> @_ZmlfRK6b2Vec2(float %198, %struct.b2Vec2* dereferenceable(8) %P)
  %200 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %199, <2 x float>* %200, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %8)
  %201 = load float, float* %iA, align 4
  %202 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %P)
  %203 = fmul float %201, %202
  %204 = load float, float* %aA, align 4
  %205 = fsub float %204, %203
  store float %205, float* %aA, align 4
  %206 = load float, float* %mB, align 4
  %207 = call <2 x float> @_ZmlfRK6b2Vec2(float %206, %struct.b2Vec2* dereferenceable(8) %P)
  %208 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %207, <2 x float>* %208, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %9)
  %209 = load float, float* %iB, align 4
  %210 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %P)
  %211 = fmul float %209, %210
  %212 = load float, float* %aB, align 4
  %213 = fadd float %212, %211
  store float %213, float* %aB, align 4
  br label %284

; <label>:214                                     ; preds = %0
  %215 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %216 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %215, <2 x float>* %216, align 4
  %217 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %cA)
  %218 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %217, <2 x float>* %218, align 4
  %219 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %rA)
  %220 = bitcast %struct.b2Vec2* %C11 to <2 x float>*
  store <2 x float> %219, <2 x float>* %220, align 4
  %221 = load float, float* %aB, align 4
  %222 = load float, float* %aA, align 4
  %223 = fsub float %221, %222
  %224 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 6
  %225 = load float, float* %224, align 4
  %226 = fsub float %223, %225
  store float %226, float* %C2, align 4
  %227 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %C11)
  store float %227, float* %positionError, align 4
  %228 = load float, float* %C2, align 4
  %229 = call float @_Z5b2AbsIfET_S0_(float %228)
  store float %229, float* %angularError, align 4
  %230 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C11, i32 0, i32 0
  %231 = load float, float* %230, align 4
  %232 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %C11, i32 0, i32 1
  %233 = load float, float* %232, align 4
  %234 = load float, float* %C2, align 4
  call void @_ZN6b2Vec3C2Efff(%struct.b2Vec3* %C, float %231, float %233, float %234)
  call void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %impulse)
  %235 = getelementptr inbounds %struct.b2Mat33, %struct.b2Mat33* %K, i32 0, i32 2
  %236 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %235, i32 0, i32 2
  %237 = load float, float* %236, align 4
  %238 = fcmp ogt float %237, 0.000000e+00
  br i1 %238, label %239, label %248

; <label>:239                                     ; preds = %214
  %240 = call { <2 x float>, float } @_ZNK7b2Mat337Solve33ERK6b2Vec3(%struct.b2Mat33* %K, %struct.b2Vec3* dereferenceable(12) %C)
  store { <2 x float>, float } %240, { <2 x float>, float }* %14, align 8
  %241 = bitcast { <2 x float>, float }* %14 to i8*
  %242 = bitcast %struct.b2Vec3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %242, i8* %241, i64 12, i32 4, i1 false)
  %243 = call { <2 x float>, float } @_ZNK6b2Vec3ngEv(%struct.b2Vec3* %13)
  store { <2 x float>, float } %243, { <2 x float>, float }* %15, align 8
  %244 = bitcast { <2 x float>, float }* %15 to i8*
  %245 = bitcast %struct.b2Vec3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %244, i64 12, i32 4, i1 false)
  %246 = bitcast %struct.b2Vec3* %impulse to i8*
  %247 = bitcast %struct.b2Vec3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %246, i8* %247, i64 12, i32 4, i1 false)
  br label %257

; <label>:248                                     ; preds = %214
  %249 = call <2 x float> @_ZNK7b2Mat337Solve22ERK6b2Vec2(%struct.b2Mat33* %K, %struct.b2Vec2* dereferenceable(8) %C11)
  %250 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %249, <2 x float>* %250, align 4
  %251 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %16)
  %252 = bitcast %struct.b2Vec2* %impulse2 to <2 x float>*
  store <2 x float> %251, <2 x float>* %252, align 4
  %253 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse2, i32 0, i32 0
  %254 = load float, float* %253, align 4
  %255 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %impulse2, i32 0, i32 1
  %256 = load float, float* %255, align 4
  call void @_ZN6b2Vec33SetEfff(%struct.b2Vec3* %impulse, float %254, float %256, float 0.000000e+00)
  br label %257

; <label>:257                                     ; preds = %248, %239
  %258 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 0
  %259 = load float, float* %258, align 4
  %260 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 1
  %261 = load float, float* %260, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %P2, float %259, float %261)
  %262 = load float, float* %mA, align 4
  %263 = call <2 x float> @_ZmlfRK6b2Vec2(float %262, %struct.b2Vec2* dereferenceable(8) %P2)
  %264 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %263, <2 x float>* %264, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %17)
  %265 = load float, float* %iA, align 4
  %266 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %P2)
  %267 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %268 = load float, float* %267, align 4
  %269 = fadd float %266, %268
  %270 = fmul float %265, %269
  %271 = load float, float* %aA, align 4
  %272 = fsub float %271, %270
  store float %272, float* %aA, align 4
  %273 = load float, float* %mB, align 4
  %274 = call <2 x float> @_ZmlfRK6b2Vec2(float %273, %struct.b2Vec2* dereferenceable(8) %P2)
  %275 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %274, <2 x float>* %275, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %18)
  %276 = load float, float* %iB, align 4
  %277 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %P2)
  %278 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %impulse, i32 0, i32 2
  %279 = load float, float* %278, align 4
  %280 = fadd float %277, %279
  %281 = fmul float %276, %280
  %282 = load float, float* %aB, align 4
  %283 = fadd float %282, %281
  store float %283, float* %aB, align 4
  br label %284

; <label>:284                                     ; preds = %257, %186
  %285 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %286 = load i32, i32* %285, align 8
  %287 = sext i32 %286 to i64
  %288 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %289 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %288, i32 0, i32 1
  %290 = load %struct.b2Position*, %struct.b2Position** %289, align 8
  %291 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %290, i64 %287
  %292 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %291, i32 0, i32 0
  %293 = bitcast %struct.b2Vec2* %292 to i8*
  %294 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %293, i8* %294, i64 8, i32 4, i1 false)
  %295 = load float, float* %aA, align 4
  %296 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 9
  %297 = load i32, i32* %296, align 8
  %298 = sext i32 %297 to i64
  %299 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %300 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %299, i32 0, i32 1
  %301 = load %struct.b2Position*, %struct.b2Position** %300, align 8
  %302 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %301, i64 %298
  %303 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %302, i32 0, i32 1
  store float %295, float* %303, align 4
  %304 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %305 = load i32, i32* %304, align 4
  %306 = sext i32 %305 to i64
  %307 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %308 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %307, i32 0, i32 1
  %309 = load %struct.b2Position*, %struct.b2Position** %308, align 8
  %310 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %309, i64 %306
  %311 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %310, i32 0, i32 0
  %312 = bitcast %struct.b2Vec2* %311 to i8*
  %313 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %312, i8* %313, i64 8, i32 4, i1 false)
  %314 = load float, float* %aB, align 4
  %315 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %19, i32 0, i32 10
  %316 = load i32, i32* %315, align 4
  %317 = sext i32 %316 to i64
  %318 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %319 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %318, i32 0, i32 1
  %320 = load %struct.b2Position*, %struct.b2Position** %319, align 8
  %321 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %320, i64 %317
  %322 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %321, i32 0, i32 1
  store float %314, float* %322, align 4
  %323 = load float, float* %positionError, align 4
  %324 = fcmp ole float %323, 0x3F747AE140000000
  br i1 %324, label %325, label %328

; <label>:325                                     ; preds = %284
  %326 = load float, float* %angularError, align 4
  %327 = fcmp ole float %326, 0x3FA1DF46C0000000
  br label %328

; <label>:328                                     ; preds = %325, %284
  %329 = phi i1 [ false, %284 ], [ %327, %325 ]
  ret i1 %329
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2WheelJoint10GetAnchorAEv(%class.b2WheelJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2WheelJoint*, align 8
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %2, align 8
  %3 = load %class.b2WheelJoint*, %class.b2WheelJoint** %2, align 8
  %4 = bitcast %class.b2WheelJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %3, i32 0, i32 3
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2WheelJoint10GetAnchorBEv(%class.b2WheelJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2WheelJoint*, align 8
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %2, align 8
  %3 = load %class.b2WheelJoint*, %class.b2WheelJoint** %2, align 8
  %4 = bitcast %class.b2WheelJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %3, i32 0, i32 4
  %8 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define <2 x float> @_ZNK12b2WheelJoint16GetReactionForceEf(%class.b2WheelJoint* %this, float %inv_dt) unnamed_addr #0 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2WheelJoint*, align 8
  %3 = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %2, align 8
  store float %inv_dt, float* %3, align 4
  %7 = load %class.b2WheelJoint*, %class.b2WheelJoint** %2, align 8
  %8 = load float, float* %3, align 4
  %9 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %7, i32 0, i32 7
  %10 = load float, float* %9, align 8
  %11 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %7, i32 0, i32 23
  %12 = call <2 x float> @_ZmlfRK6b2Vec2(float %10, %struct.b2Vec2* dereferenceable(8) %11)
  %13 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %7, i32 0, i32 9
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %7, i32 0, i32 22
  %17 = call <2 x float> @_ZmlfRK6b2Vec2(float %15, %struct.b2Vec2* dereferenceable(8) %16)
  %18 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 4
  %19 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %20 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %19, <2 x float>* %20, align 4
  %21 = call <2 x float> @_ZmlfRK6b2Vec2(float %8, %struct.b2Vec2* dereferenceable(8) %4)
  %22 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  ret <2 x float> %24
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2WheelJoint17GetReactionTorqueEf(%class.b2WheelJoint* %this, float %inv_dt) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %3, i32 0, i32 8
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  ret float %7
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJoint4DumpEv(%class.b2WheelJoint* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %2 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %3 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %indexA, align 4
  %8 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.130, i32 0, i32 0))
  %13 = load i32, i32* %indexA, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.131, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %indexB, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.132, i32 0, i32 0), i32 %14)
  %15 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %16 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %15, i32 0, i32 10
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.133, i32 0, i32 0), i32 %19)
  %20 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 3
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 0
  %22 = load float, float* %21, align 8
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 3
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fpext float %26 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.134, i32 0, i32 0), double %23, double %27)
  %28 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 4
  %29 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %28, i32 0, i32 0
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  %32 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 4
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5.135, i32 0, i32 0), double %31, double %35)
  %36 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 5
  %37 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %36, i32 0, i32 0
  %38 = load float, float* %37, align 8
  %39 = fpext float %38 to double
  %40 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 5
  %41 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %40, i32 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fpext float %42 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.136, i32 0, i32 0), double %39, double %43)
  %44 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 12
  %45 = load i8, i8* %44, align 4
  %46 = trunc i8 %45 to i1
  %47 = zext i1 %46 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.137, i32 0, i32 0), i32 %47)
  %48 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 11
  %49 = load float, float* %48, align 8
  %50 = fpext float %49 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.138, i32 0, i32 0), double %50)
  %51 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 10
  %52 = load float, float* %51, align 4
  %53 = fpext float %52 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.139, i32 0, i32 0), double %53)
  %54 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 1
  %55 = load float, float* %54, align 8
  %56 = fpext float %55 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10.140, i32 0, i32 0), double %56)
  %57 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 2
  %58 = load float, float* %57, align 4
  %59 = fpext float %58 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.141, i32 0, i32 0), double %59)
  %60 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %61 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %60, i32 0, i32 8
  %62 = load i32, i32* %61, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.142, i32 0, i32 0), i32 %62)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN12b2WheelJointD2Ev(%class.b2WheelJoint* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %2 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %3 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  call void @_ZN7b2JointD2Ev(%class.b2Joint* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2WheelJointD0Ev(%class.b2WheelJoint* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %4 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  invoke void @_ZN12b2WheelJointD2Ev(%class.b2WheelJoint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2WheelJoint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2WheelJoint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData(%class.b2WheelJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %invMass = alloca float, align 4
  %C = alloca float, align 4
  %omega = alloca float, align 4
  %damp = alloca float, align 4
  %k = alloca float, align 4
  %h = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %LA = alloca float, align 4
  %LB = alloca float, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %15 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %16 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %17 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %16, i32 0, i32 6
  %18 = load %class.b2Body*, %class.b2Body** %17, align 8
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  store i32 %20, i32* %21, align 8
  %22 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %22, i32 0, i32 7
  %24 = load %class.b2Body*, %class.b2Body** %23, align 8
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 16
  %29 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %30 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %29, i32 0, i32 6
  %31 = load %class.b2Body*, %class.b2Body** %30, align 8
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %31, i32 0, i32 4
  %33 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %32, i32 0, i32 0
  %34 = bitcast %struct.b2Vec2* %28 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 17
  %37 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %38 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %37, i32 0, i32 7
  %39 = load %class.b2Body*, %class.b2Body** %38, align 8
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %39, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %40, i32 0, i32 0
  %42 = bitcast %struct.b2Vec2* %36 to i8*
  %43 = bitcast %struct.b2Vec2* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %45 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %44, i32 0, i32 6
  %46 = load %class.b2Body*, %class.b2Body** %45, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 17
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 18
  store float %48, float* %49, align 8
  %50 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 7
  %52 = load %class.b2Body*, %class.b2Body** %51, align 8
  %53 = getelementptr inbounds %class.b2Body, %class.b2Body* %52, i32 0, i32 17
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 19
  store float %54, float* %55, align 4
  %56 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %57 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %56, i32 0, i32 6
  %58 = load %class.b2Body*, %class.b2Body** %57, align 8
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %58, i32 0, i32 19
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 20
  store float %60, float* %61, align 8
  %62 = bitcast %class.b2WheelJoint* %15 to %class.b2Joint*
  %63 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %62, i32 0, i32 7
  %64 = load %class.b2Body*, %class.b2Body** %63, align 8
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %64, i32 0, i32 19
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 21
  store float %66, float* %67, align 4
  %68 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 18
  %69 = load float, float* %68, align 8
  store float %69, float* %mA, align 4
  %70 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 19
  %71 = load float, float* %70, align 4
  store float %71, float* %mB, align 4
  %72 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 20
  %73 = load float, float* %72, align 8
  store float %73, float* %iA, align 4
  %74 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 21
  %75 = load float, float* %74, align 4
  store float %75, float* %iB, align 4
  %76 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  %77 = load i32, i32* %76, align 8
  %78 = sext i32 %77 to i64
  %79 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %80 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %79, i32 0, i32 1
  %81 = load %struct.b2Position*, %struct.b2Position** %80, align 8
  %82 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %81, i64 %78
  %83 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %82, i32 0, i32 0
  %84 = bitcast %struct.b2Vec2* %cA to i8*
  %85 = bitcast %struct.b2Vec2* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 4, i1 false)
  %86 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %87 to i64
  %89 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %90 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %89, i32 0, i32 1
  %91 = load %struct.b2Position*, %struct.b2Position** %90, align 8
  %92 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %91, i64 %88
  %93 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %92, i32 0, i32 1
  %94 = load float, float* %93, align 4
  store float %94, float* %aA, align 4
  %95 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  %96 = load i32, i32* %95, align 8
  %97 = sext i32 %96 to i64
  %98 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %99 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %98, i32 0, i32 2
  %100 = load %struct.b2Position*, %struct.b2Position** %99, align 8
  %101 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %100, i64 %97
  %102 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %101, i32 0, i32 0
  %103 = bitcast %struct.b2Vec2* %vA to i8*
  %104 = bitcast %struct.b2Vec2* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 8, i32 4, i1 false)
  %105 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %109 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %108, i32 0, i32 2
  %110 = load %struct.b2Position*, %struct.b2Position** %109, align 8
  %111 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %110, i64 %107
  %112 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %111, i32 0, i32 1
  %113 = load float, float* %112, align 4
  store float %113, float* %wA, align 4
  %114 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  %115 = load i32, i32* %114, align 4
  %116 = sext i32 %115 to i64
  %117 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %118 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %117, i32 0, i32 1
  %119 = load %struct.b2Position*, %struct.b2Position** %118, align 8
  %120 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %119, i64 %116
  %121 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %120, i32 0, i32 0
  %122 = bitcast %struct.b2Vec2* %cB to i8*
  %123 = bitcast %struct.b2Vec2* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %122, i8* %123, i64 8, i32 4, i1 false)
  %124 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %128 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %127, i32 0, i32 1
  %129 = load %struct.b2Position*, %struct.b2Position** %128, align 8
  %130 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %129, i64 %126
  %131 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %130, i32 0, i32 1
  %132 = load float, float* %131, align 4
  store float %132, float* %aB, align 4
  %133 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %137 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %136, i32 0, i32 2
  %138 = load %struct.b2Position*, %struct.b2Position** %137, align 8
  %139 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %138, i64 %135
  %140 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %139, i32 0, i32 0
  %141 = bitcast %struct.b2Vec2* %vB to i8*
  %142 = bitcast %struct.b2Vec2* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 4, i1 false)
  %143 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %147 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %146, i32 0, i32 2
  %148 = load %struct.b2Position*, %struct.b2Position** %147, align 8
  %149 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %148, i64 %145
  %150 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %149, i32 0, i32 1
  %151 = load float, float* %150, align 4
  store float %151, float* %wB, align 4
  %152 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %152)
  %153 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %153)
  %154 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 3
  %155 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 16
  %156 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %154, %struct.b2Vec2* dereferenceable(8) %155)
  %157 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %159 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %158, <2 x float>* %159, align 4
  %160 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 4
  %161 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 17
  %162 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %160, %struct.b2Vec2* dereferenceable(8) %161)
  %163 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 4
  %164 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %165 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %164, <2 x float>* %165, align 4
  %166 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %rB)
  %167 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %166, <2 x float>* %167, align 4
  %168 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %cA)
  %169 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %168, <2 x float>* %169, align 4
  %170 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %171 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %170, <2 x float>* %171, align 4
  %172 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 23
  %173 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 6
  %174 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %173)
  %175 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %174, <2 x float>* %175, align 4
  %176 = bitcast %struct.b2Vec2* %172 to i8*
  %177 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %176, i8* %177, i64 8, i32 4, i1 false)
  %178 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %179 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %178, <2 x float>* %179, align 4
  %180 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 23
  %181 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %180)
  %182 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 26
  store float %181, float* %182, align 8
  %183 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 23
  %184 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %183)
  %185 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 27
  store float %184, float* %185, align 4
  %186 = load float, float* %mA, align 4
  %187 = load float, float* %mB, align 4
  %188 = fadd float %186, %187
  %189 = load float, float* %iA, align 4
  %190 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 26
  %191 = load float, float* %190, align 8
  %192 = fmul float %189, %191
  %193 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 26
  %194 = load float, float* %193, align 8
  %195 = fmul float %192, %194
  %196 = fadd float %188, %195
  %197 = load float, float* %iB, align 4
  %198 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 27
  %199 = load float, float* %198, align 4
  %200 = fmul float %197, %199
  %201 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 27
  %202 = load float, float* %201, align 4
  %203 = fmul float %200, %202
  %204 = fadd float %196, %203
  %205 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 28
  store float %204, float* %205, align 8
  %206 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 28
  %207 = load float, float* %206, align 8
  %208 = fcmp ogt float %207, 0.000000e+00
  br i1 %208, label %209, label %214

; <label>:209                                     ; preds = %0
  %210 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 28
  %211 = load float, float* %210, align 8
  %212 = fdiv float 1.000000e+00, %211
  %213 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 28
  store float %212, float* %213, align 8
  br label %214

; <label>:214                                     ; preds = %209, %0
  %215 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  store float 0.000000e+00, float* %215, align 8
  %216 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 31
  store float 0.000000e+00, float* %216, align 4
  %217 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  store float 0.000000e+00, float* %217, align 8
  %218 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 1
  %219 = load float, float* %218, align 8
  %220 = fcmp ogt float %219, 0.000000e+00
  br i1 %220, label %221, label %325

; <label>:221                                     ; preds = %214
  %222 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 22
  %223 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 5
  %224 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %223)
  %225 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %224, <2 x float>* %225, align 4
  %226 = bitcast %struct.b2Vec2* %222 to i8*
  %227 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %226, i8* %227, i64 8, i32 4, i1 false)
  %228 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %229 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %228, <2 x float>* %229, align 4
  %230 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 22
  %231 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %230)
  %232 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 24
  store float %231, float* %232, align 8
  %233 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 22
  %234 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %233)
  %235 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 25
  store float %234, float* %235, align 4
  %236 = load float, float* %mA, align 4
  %237 = load float, float* %mB, align 4
  %238 = fadd float %236, %237
  %239 = load float, float* %iA, align 4
  %240 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 24
  %241 = load float, float* %240, align 8
  %242 = fmul float %239, %241
  %243 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 24
  %244 = load float, float* %243, align 8
  %245 = fmul float %242, %244
  %246 = fadd float %238, %245
  %247 = load float, float* %iB, align 4
  %248 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 25
  %249 = load float, float* %248, align 4
  %250 = fmul float %247, %249
  %251 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 25
  %252 = load float, float* %251, align 4
  %253 = fmul float %250, %252
  %254 = fadd float %246, %253
  store float %254, float* %invMass, align 4
  %255 = load float, float* %invMass, align 4
  %256 = fcmp ogt float %255, 0.000000e+00
  br i1 %256, label %257, label %324

; <label>:257                                     ; preds = %221
  %258 = load float, float* %invMass, align 4
  %259 = fdiv float 1.000000e+00, %258
  %260 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  store float %259, float* %260, align 8
  %261 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 22
  %262 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %261)
  store float %262, float* %C, align 4
  %263 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 1
  %264 = load float, float* %263, align 8
  %265 = fmul float 0x401921FB60000000, %264
  store float %265, float* %omega, align 4
  %266 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  %267 = load float, float* %266, align 8
  %268 = fmul float 2.000000e+00, %267
  %269 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 2
  %270 = load float, float* %269, align 4
  %271 = fmul float %268, %270
  %272 = load float, float* %omega, align 4
  %273 = fmul float %271, %272
  store float %273, float* %damp, align 4
  %274 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  %275 = load float, float* %274, align 8
  %276 = load float, float* %omega, align 4
  %277 = fmul float %275, %276
  %278 = load float, float* %omega, align 4
  %279 = fmul float %277, %278
  store float %279, float* %k, align 4
  %280 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %281 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %280, i32 0, i32 0
  %282 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %281, i32 0, i32 0
  %283 = load float, float* %282, align 8
  store float %283, float* %h, align 4
  %284 = load float, float* %h, align 4
  %285 = load float, float* %damp, align 4
  %286 = load float, float* %h, align 4
  %287 = load float, float* %k, align 4
  %288 = fmul float %286, %287
  %289 = fadd float %285, %288
  %290 = fmul float %284, %289
  %291 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  store float %290, float* %291, align 8
  %292 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  %293 = load float, float* %292, align 8
  %294 = fcmp ogt float %293, 0.000000e+00
  br i1 %294, label %295, label %300

; <label>:295                                     ; preds = %257
  %296 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  %297 = load float, float* %296, align 8
  %298 = fdiv float 1.000000e+00, %297
  %299 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  store float %298, float* %299, align 8
  br label %300

; <label>:300                                     ; preds = %295, %257
  %301 = load float, float* %C, align 4
  %302 = load float, float* %h, align 4
  %303 = fmul float %301, %302
  %304 = load float, float* %k, align 4
  %305 = fmul float %303, %304
  %306 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  %307 = load float, float* %306, align 8
  %308 = fmul float %305, %307
  %309 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 31
  store float %308, float* %309, align 4
  %310 = load float, float* %invMass, align 4
  %311 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 32
  %312 = load float, float* %311, align 8
  %313 = fadd float %310, %312
  %314 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  store float %313, float* %314, align 8
  %315 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  %316 = load float, float* %315, align 8
  %317 = fcmp ogt float %316, 0.000000e+00
  br i1 %317, label %318, label %323

; <label>:318                                     ; preds = %300
  %319 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  %320 = load float, float* %319, align 8
  %321 = fdiv float 1.000000e+00, %320
  %322 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 30
  store float %321, float* %322, align 8
  br label %323

; <label>:323                                     ; preds = %318, %300
  br label %324

; <label>:324                                     ; preds = %323, %221
  br label %327

; <label>:325                                     ; preds = %214
  %326 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 9
  store float 0.000000e+00, float* %326, align 8
  br label %327

; <label>:327                                     ; preds = %325, %324
  %328 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 12
  %329 = load i8, i8* %328, align 4
  %330 = trunc i8 %329 to i1
  br i1 %330, label %331, label %345

; <label>:331                                     ; preds = %327
  %332 = load float, float* %iA, align 4
  %333 = load float, float* %iB, align 4
  %334 = fadd float %332, %333
  %335 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 29
  store float %334, float* %335, align 4
  %336 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 29
  %337 = load float, float* %336, align 4
  %338 = fcmp ogt float %337, 0.000000e+00
  br i1 %338, label %339, label %344

; <label>:339                                     ; preds = %331
  %340 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 29
  %341 = load float, float* %340, align 4
  %342 = fdiv float 1.000000e+00, %341
  %343 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 29
  store float %342, float* %343, align 4
  br label %344

; <label>:344                                     ; preds = %339, %331
  br label %348

; <label>:345                                     ; preds = %327
  %346 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 29
  store float 0.000000e+00, float* %346, align 4
  %347 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 8
  store float 0.000000e+00, float* %347, align 4
  br label %348

; <label>:348                                     ; preds = %345, %344
  %349 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %350 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %349, i32 0, i32 0
  %351 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %350, i32 0, i32 5
  %352 = load i8, i8* %351, align 4
  %353 = trunc i8 %352 to i1
  br i1 %353, label %354, label %436

; <label>:354                                     ; preds = %348
  %355 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %356 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %355, i32 0, i32 0
  %357 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %356, i32 0, i32 2
  %358 = load float, float* %357, align 8
  %359 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 7
  %360 = load float, float* %359, align 8
  %361 = fmul float %360, %358
  store float %361, float* %359, align 8
  %362 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %363 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %362, i32 0, i32 0
  %364 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %363, i32 0, i32 2
  %365 = load float, float* %364, align 8
  %366 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 9
  %367 = load float, float* %366, align 8
  %368 = fmul float %367, %365
  store float %368, float* %366, align 8
  %369 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %370 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %369, i32 0, i32 0
  %371 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %370, i32 0, i32 2
  %372 = load float, float* %371, align 8
  %373 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 8
  %374 = load float, float* %373, align 4
  %375 = fmul float %374, %372
  store float %375, float* %373, align 4
  %376 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 7
  %377 = load float, float* %376, align 8
  %378 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 23
  %379 = call <2 x float> @_ZmlfRK6b2Vec2(float %377, %struct.b2Vec2* dereferenceable(8) %378)
  %380 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %379, <2 x float>* %380, align 4
  %381 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 9
  %382 = load float, float* %381, align 8
  %383 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 22
  %384 = call <2 x float> @_ZmlfRK6b2Vec2(float %382, %struct.b2Vec2* dereferenceable(8) %383)
  %385 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %384, <2 x float>* %385, align 4
  %386 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %12)
  %387 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %386, <2 x float>* %387, align 4
  %388 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 7
  %389 = load float, float* %388, align 8
  %390 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 26
  %391 = load float, float* %390, align 8
  %392 = fmul float %389, %391
  %393 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 9
  %394 = load float, float* %393, align 8
  %395 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 24
  %396 = load float, float* %395, align 8
  %397 = fmul float %394, %396
  %398 = fadd float %392, %397
  %399 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 8
  %400 = load float, float* %399, align 4
  %401 = fadd float %398, %400
  store float %401, float* %LA, align 4
  %402 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 7
  %403 = load float, float* %402, align 8
  %404 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 27
  %405 = load float, float* %404, align 4
  %406 = fmul float %403, %405
  %407 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 9
  %408 = load float, float* %407, align 8
  %409 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 25
  %410 = load float, float* %409, align 4
  %411 = fmul float %408, %410
  %412 = fadd float %406, %411
  %413 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 8
  %414 = load float, float* %413, align 4
  %415 = fadd float %412, %414
  store float %415, float* %LB, align 4
  %416 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 18
  %417 = load float, float* %416, align 8
  %418 = call <2 x float> @_ZmlfRK6b2Vec2(float %417, %struct.b2Vec2* dereferenceable(8) %P)
  %419 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %418, <2 x float>* %419, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %13)
  %420 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 20
  %421 = load float, float* %420, align 8
  %422 = load float, float* %LA, align 4
  %423 = fmul float %421, %422
  %424 = load float, float* %wA, align 4
  %425 = fsub float %424, %423
  store float %425, float* %wA, align 4
  %426 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 19
  %427 = load float, float* %426, align 4
  %428 = call <2 x float> @_ZmlfRK6b2Vec2(float %427, %struct.b2Vec2* dereferenceable(8) %P)
  %429 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %428, <2 x float>* %429, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %14)
  %430 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 21
  %431 = load float, float* %430, align 4
  %432 = load float, float* %LB, align 4
  %433 = fmul float %431, %432
  %434 = load float, float* %wB, align 4
  %435 = fadd float %434, %433
  store float %435, float* %wB, align 4
  br label %440

; <label>:436                                     ; preds = %348
  %437 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 7
  store float 0.000000e+00, float* %437, align 8
  %438 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 9
  store float 0.000000e+00, float* %438, align 8
  %439 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 8
  store float 0.000000e+00, float* %439, align 4
  br label %440

; <label>:440                                     ; preds = %436, %354
  %441 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  %442 = load i32, i32* %441, align 8
  %443 = sext i32 %442 to i64
  %444 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %445 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %444, i32 0, i32 2
  %446 = load %struct.b2Position*, %struct.b2Position** %445, align 8
  %447 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %446, i64 %443
  %448 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %447, i32 0, i32 0
  %449 = bitcast %struct.b2Vec2* %448 to i8*
  %450 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %449, i8* %450, i64 8, i32 4, i1 false)
  %451 = load float, float* %wA, align 4
  %452 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 14
  %453 = load i32, i32* %452, align 8
  %454 = sext i32 %453 to i64
  %455 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %456 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %455, i32 0, i32 2
  %457 = load %struct.b2Position*, %struct.b2Position** %456, align 8
  %458 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %457, i64 %454
  %459 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %458, i32 0, i32 1
  store float %451, float* %459, align 4
  %460 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  %461 = load i32, i32* %460, align 4
  %462 = sext i32 %461 to i64
  %463 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %464 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %463, i32 0, i32 2
  %465 = load %struct.b2Position*, %struct.b2Position** %464, align 8
  %466 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %465, i64 %462
  %467 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %466, i32 0, i32 0
  %468 = bitcast %struct.b2Vec2* %467 to i8*
  %469 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %468, i8* %469, i64 8, i32 4, i1 false)
  %470 = load float, float* %wB, align 4
  %471 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %15, i32 0, i32 15
  %472 = load i32, i32* %471, align 4
  %473 = sext i32 %472 to i64
  %474 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %475 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %474, i32 0, i32 2
  %476 = load %struct.b2Position*, %struct.b2Position** %475, align 8
  %477 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %476, i64 %473
  %478 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %477, i32 0, i32 1
  store float %470, float* %478, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData(%class.b2WheelJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %Cdot = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %LA = alloca float, align 4
  %LB = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %Cdot1 = alloca float, align 4
  %impulse2 = alloca float, align 4
  %oldImpulse = alloca float, align 4
  %maxImpulse = alloca float, align 4
  %Cdot3 = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %impulse4 = alloca float, align 4
  %P5 = alloca %struct.b2Vec2, align 4
  %LA6 = alloca float, align 4
  %LB7 = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %9 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %10 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 18
  %11 = load float, float* %10, align 8
  store float %11, float* %mA, align 4
  %12 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 19
  %13 = load float, float* %12, align 4
  store float %13, float* %mB, align 4
  %14 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 20
  %15 = load float, float* %14, align 8
  store float %15, float* %iA, align 4
  %16 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 21
  %17 = load float, float* %16, align 4
  store float %17, float* %iB, align 4
  %18 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 14
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %22 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %21, i32 0, i32 2
  %23 = load %struct.b2Position*, %struct.b2Position** %22, align 8
  %24 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %23, i64 %20
  %25 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %24, i32 0, i32 0
  %26 = bitcast %struct.b2Vec2* %vA to i8*
  %27 = bitcast %struct.b2Vec2* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 4, i1 false)
  %28 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 14
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %32 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %31, i32 0, i32 2
  %33 = load %struct.b2Position*, %struct.b2Position** %32, align 8
  %34 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %33, i64 %30
  %35 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %34, i32 0, i32 1
  %36 = load float, float* %35, align 4
  store float %36, float* %wA, align 4
  %37 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 15
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %41 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %40, i32 0, i32 2
  %42 = load %struct.b2Position*, %struct.b2Position** %41, align 8
  %43 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %42, i64 %39
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i32 0, i32 0
  %45 = bitcast %struct.b2Vec2* %vB to i8*
  %46 = bitcast %struct.b2Vec2* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false)
  %47 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 15
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %51 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %50, i32 0, i32 2
  %52 = load %struct.b2Position*, %struct.b2Position** %51, align 8
  %53 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %52, i64 %49
  %54 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %53, i32 0, i32 1
  %55 = load float, float* %54, align 4
  store float %55, float* %wB, align 4
  %56 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 22
  %57 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %vA)
  %58 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %56, %struct.b2Vec2* dereferenceable(8) %3)
  %60 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 25
  %61 = load float, float* %60, align 4
  %62 = load float, float* %wB, align 4
  %63 = fmul float %61, %62
  %64 = fadd float %59, %63
  %65 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 24
  %66 = load float, float* %65, align 8
  %67 = load float, float* %wA, align 4
  %68 = fmul float %66, %67
  %69 = fsub float %64, %68
  store float %69, float* %Cdot, align 4
  %70 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 30
  %71 = load float, float* %70, align 8
  %72 = fsub float -0.000000e+00, %71
  %73 = load float, float* %Cdot, align 4
  %74 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 31
  %75 = load float, float* %74, align 4
  %76 = fadd float %73, %75
  %77 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 32
  %78 = load float, float* %77, align 8
  %79 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 9
  %80 = load float, float* %79, align 8
  %81 = fmul float %78, %80
  %82 = fadd float %76, %81
  %83 = fmul float %72, %82
  store float %83, float* %impulse, align 4
  %84 = load float, float* %impulse, align 4
  %85 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 9
  %86 = load float, float* %85, align 8
  %87 = fadd float %86, %84
  store float %87, float* %85, align 8
  %88 = load float, float* %impulse, align 4
  %89 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 22
  %90 = call <2 x float> @_ZmlfRK6b2Vec2(float %88, %struct.b2Vec2* dereferenceable(8) %89)
  %91 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %90, <2 x float>* %91, align 4
  %92 = load float, float* %impulse, align 4
  %93 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 24
  %94 = load float, float* %93, align 8
  %95 = fmul float %92, %94
  store float %95, float* %LA, align 4
  %96 = load float, float* %impulse, align 4
  %97 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 25
  %98 = load float, float* %97, align 4
  %99 = fmul float %96, %98
  store float %99, float* %LB, align 4
  %100 = load float, float* %mA, align 4
  %101 = call <2 x float> @_ZmlfRK6b2Vec2(float %100, %struct.b2Vec2* dereferenceable(8) %P)
  %102 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %101, <2 x float>* %102, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %4)
  %103 = load float, float* %iA, align 4
  %104 = load float, float* %LA, align 4
  %105 = fmul float %103, %104
  %106 = load float, float* %wA, align 4
  %107 = fsub float %106, %105
  store float %107, float* %wA, align 4
  %108 = load float, float* %mB, align 4
  %109 = call <2 x float> @_ZmlfRK6b2Vec2(float %108, %struct.b2Vec2* dereferenceable(8) %P)
  %110 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %109, <2 x float>* %110, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %5)
  %111 = load float, float* %iB, align 4
  %112 = load float, float* %LB, align 4
  %113 = fmul float %111, %112
  %114 = load float, float* %wB, align 4
  %115 = fadd float %114, %113
  store float %115, float* %wB, align 4
  %116 = load float, float* %wB, align 4
  %117 = load float, float* %wA, align 4
  %118 = fsub float %116, %117
  %119 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 11
  %120 = load float, float* %119, align 8
  %121 = fsub float %118, %120
  store float %121, float* %Cdot1, align 4
  %122 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 29
  %123 = load float, float* %122, align 4
  %124 = fsub float -0.000000e+00, %123
  %125 = load float, float* %Cdot1, align 4
  %126 = fmul float %124, %125
  store float %126, float* %impulse2, align 4
  %127 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 8
  %128 = load float, float* %127, align 4
  store float %128, float* %oldImpulse, align 4
  %129 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %130 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %129, i32 0, i32 0
  %131 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %130, i32 0, i32 0
  %132 = load float, float* %131, align 8
  %133 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 10
  %134 = load float, float* %133, align 4
  %135 = fmul float %132, %134
  store float %135, float* %maxImpulse, align 4
  %136 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 8
  %137 = load float, float* %136, align 4
  %138 = load float, float* %impulse2, align 4
  %139 = fadd float %137, %138
  %140 = load float, float* %maxImpulse, align 4
  %141 = fsub float -0.000000e+00, %140
  %142 = load float, float* %maxImpulse, align 4
  %143 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %139, float %141, float %142)
  %144 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 8
  store float %143, float* %144, align 4
  %145 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 8
  %146 = load float, float* %145, align 4
  %147 = load float, float* %oldImpulse, align 4
  %148 = fsub float %146, %147
  store float %148, float* %impulse2, align 4
  %149 = load float, float* %iA, align 4
  %150 = load float, float* %impulse2, align 4
  %151 = fmul float %149, %150
  %152 = load float, float* %wA, align 4
  %153 = fsub float %152, %151
  store float %153, float* %wA, align 4
  %154 = load float, float* %iB, align 4
  %155 = load float, float* %impulse2, align 4
  %156 = fmul float %154, %155
  %157 = load float, float* %wB, align 4
  %158 = fadd float %157, %156
  store float %158, float* %wB, align 4
  %159 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 23
  %160 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %vA)
  %161 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %160, <2 x float>* %161, align 4
  %162 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %159, %struct.b2Vec2* dereferenceable(8) %6)
  %163 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 27
  %164 = load float, float* %163, align 4
  %165 = load float, float* %wB, align 4
  %166 = fmul float %164, %165
  %167 = fadd float %162, %166
  %168 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 26
  %169 = load float, float* %168, align 8
  %170 = load float, float* %wA, align 4
  %171 = fmul float %169, %170
  %172 = fsub float %167, %171
  store float %172, float* %Cdot3, align 4
  %173 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 28
  %174 = load float, float* %173, align 8
  %175 = fsub float -0.000000e+00, %174
  %176 = load float, float* %Cdot3, align 4
  %177 = fmul float %175, %176
  store float %177, float* %impulse4, align 4
  %178 = load float, float* %impulse4, align 4
  %179 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 7
  %180 = load float, float* %179, align 8
  %181 = fadd float %180, %178
  store float %181, float* %179, align 8
  %182 = load float, float* %impulse4, align 4
  %183 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 23
  %184 = call <2 x float> @_ZmlfRK6b2Vec2(float %182, %struct.b2Vec2* dereferenceable(8) %183)
  %185 = bitcast %struct.b2Vec2* %P5 to <2 x float>*
  store <2 x float> %184, <2 x float>* %185, align 4
  %186 = load float, float* %impulse4, align 4
  %187 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 26
  %188 = load float, float* %187, align 8
  %189 = fmul float %186, %188
  store float %189, float* %LA6, align 4
  %190 = load float, float* %impulse4, align 4
  %191 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 27
  %192 = load float, float* %191, align 4
  %193 = fmul float %190, %192
  store float %193, float* %LB7, align 4
  %194 = load float, float* %mA, align 4
  %195 = call <2 x float> @_ZmlfRK6b2Vec2(float %194, %struct.b2Vec2* dereferenceable(8) %P5)
  %196 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %195, <2 x float>* %196, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %7)
  %197 = load float, float* %iA, align 4
  %198 = load float, float* %LA6, align 4
  %199 = fmul float %197, %198
  %200 = load float, float* %wA, align 4
  %201 = fsub float %200, %199
  store float %201, float* %wA, align 4
  %202 = load float, float* %mB, align 4
  %203 = call <2 x float> @_ZmlfRK6b2Vec2(float %202, %struct.b2Vec2* dereferenceable(8) %P5)
  %204 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %203, <2 x float>* %204, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %8)
  %205 = load float, float* %iB, align 4
  %206 = load float, float* %LB7, align 4
  %207 = fmul float %205, %206
  %208 = load float, float* %wB, align 4
  %209 = fadd float %208, %207
  store float %209, float* %wB, align 4
  %210 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 14
  %211 = load i32, i32* %210, align 8
  %212 = sext i32 %211 to i64
  %213 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %214 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %213, i32 0, i32 2
  %215 = load %struct.b2Position*, %struct.b2Position** %214, align 8
  %216 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %215, i64 %212
  %217 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %216, i32 0, i32 0
  %218 = bitcast %struct.b2Vec2* %217 to i8*
  %219 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %218, i8* %219, i64 8, i32 4, i1 false)
  %220 = load float, float* %wA, align 4
  %221 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 14
  %222 = load i32, i32* %221, align 8
  %223 = sext i32 %222 to i64
  %224 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %225 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %224, i32 0, i32 2
  %226 = load %struct.b2Position*, %struct.b2Position** %225, align 8
  %227 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %226, i64 %223
  %228 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %227, i32 0, i32 1
  store float %220, float* %228, align 4
  %229 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 15
  %230 = load i32, i32* %229, align 4
  %231 = sext i32 %230 to i64
  %232 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %233 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %232, i32 0, i32 2
  %234 = load %struct.b2Position*, %struct.b2Position** %233, align 8
  %235 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %234, i64 %231
  %236 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %235, i32 0, i32 0
  %237 = bitcast %struct.b2Vec2* %236 to i8*
  %238 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 8, i32 4, i1 false)
  %239 = load float, float* %wB, align 4
  %240 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %9, i32 0, i32 15
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %244 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %243, i32 0, i32 2
  %245 = load %struct.b2Position*, %struct.b2Position** %244, align 8
  %246 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %245, i64 %242
  %247 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %246, i32 0, i32 1
  store float %239, float* %247, align 4
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData(%class.b2WheelJoint* %this, %struct.b2SolverData* dereferenceable(40) %data) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca %struct.b2SolverData*, align 8
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %qA = alloca %struct.b2Vec2, align 4
  %qB = alloca %struct.b2Vec2, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %ay = alloca %struct.b2Vec2, align 4
  %sAy = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %sBy = alloca float, align 4
  %C = alloca float, align 4
  %k = alloca float, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %LA = alloca float, align 4
  %LB = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store %struct.b2SolverData* %data, %struct.b2SolverData** %2, align 8
  %10 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %11 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 14
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %15 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %14, i32 0, i32 1
  %16 = load %struct.b2Position*, %struct.b2Position** %15, align 8
  %17 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %16, i64 %13
  %18 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %17, i32 0, i32 0
  %19 = bitcast %struct.b2Vec2* %cA to i8*
  %20 = bitcast %struct.b2Vec2* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false)
  %21 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 14
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %25 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %24, i32 0, i32 1
  %26 = load %struct.b2Position*, %struct.b2Position** %25, align 8
  %27 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %26, i64 %23
  %28 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %27, i32 0, i32 1
  %29 = load float, float* %28, align 4
  store float %29, float* %aA, align 4
  %30 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 15
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %34 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %33, i32 0, i32 1
  %35 = load %struct.b2Position*, %struct.b2Position** %34, align 8
  %36 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %35, i64 %32
  %37 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %36, i32 0, i32 0
  %38 = bitcast %struct.b2Vec2* %cB to i8*
  %39 = bitcast %struct.b2Vec2* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  %40 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 15
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %44 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %43, i32 0, i32 1
  %45 = load %struct.b2Position*, %struct.b2Position** %44, align 8
  %46 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %45, i64 %42
  %47 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %46, i32 0, i32 1
  %48 = load float, float* %47, align 4
  store float %48, float* %aB, align 4
  %49 = load float, float* %aA, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qA, float %49)
  %50 = load float, float* %aB, align 4
  call void @_ZN5b2RotC2Ef(%struct.b2Vec2* %qB, float %50)
  %51 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 3
  %52 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 16
  %53 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %51, %struct.b2Vec2* dereferenceable(8) %52)
  %54 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %53, <2 x float>* %54, align 4
  %55 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %3)
  %56 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 4
  %57 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 4
  %58 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 17
  %59 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %57, %struct.b2Vec2* dereferenceable(8) %58)
  %60 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %59, <2 x float>* %60, align 4
  %61 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qB, %struct.b2Vec2* dereferenceable(8) %4)
  %62 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %61, <2 x float>* %62, align 4
  %63 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %cA)
  %64 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %63, <2 x float>* %64, align 4
  %65 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %rB)
  %66 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 4
  %67 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %rA)
  %68 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %67, <2 x float>* %68, align 4
  %69 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 6
  %70 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %qA, %struct.b2Vec2* dereferenceable(8) %69)
  %71 = bitcast %struct.b2Vec2* %ay to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 4
  %72 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %rA)
  %73 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %ay)
  store float %74, float* %sAy, align 4
  %75 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %ay)
  store float %75, float* %sBy, align 4
  %76 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %ay)
  store float %76, float* %C, align 4
  %77 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 18
  %78 = load float, float* %77, align 8
  %79 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 19
  %80 = load float, float* %79, align 4
  %81 = fadd float %78, %80
  %82 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 20
  %83 = load float, float* %82, align 8
  %84 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 26
  %85 = load float, float* %84, align 8
  %86 = fmul float %83, %85
  %87 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 26
  %88 = load float, float* %87, align 8
  %89 = fmul float %86, %88
  %90 = fadd float %81, %89
  %91 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 21
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 27
  %94 = load float, float* %93, align 4
  %95 = fmul float %92, %94
  %96 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 27
  %97 = load float, float* %96, align 4
  %98 = fmul float %95, %97
  %99 = fadd float %90, %98
  store float %99, float* %k, align 4
  %100 = load float, float* %k, align 4
  %101 = fcmp une float %100, 0.000000e+00
  br i1 %101, label %102, label %107

; <label>:102                                     ; preds = %0
  %103 = load float, float* %C, align 4
  %104 = fsub float -0.000000e+00, %103
  %105 = load float, float* %k, align 4
  %106 = fdiv float %104, %105
  store float %106, float* %impulse, align 4
  br label %108

; <label>:107                                     ; preds = %0
  store float 0.000000e+00, float* %impulse, align 4
  br label %108

; <label>:108                                     ; preds = %107, %102
  %109 = load float, float* %impulse, align 4
  %110 = call <2 x float> @_ZmlfRK6b2Vec2(float %109, %struct.b2Vec2* dereferenceable(8) %ay)
  %111 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %110, <2 x float>* %111, align 4
  %112 = load float, float* %impulse, align 4
  %113 = load float, float* %sAy, align 4
  %114 = fmul float %112, %113
  store float %114, float* %LA, align 4
  %115 = load float, float* %impulse, align 4
  %116 = load float, float* %sBy, align 4
  %117 = fmul float %115, %116
  store float %117, float* %LB, align 4
  %118 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 18
  %119 = load float, float* %118, align 8
  %120 = call <2 x float> @_ZmlfRK6b2Vec2(float %119, %struct.b2Vec2* dereferenceable(8) %P)
  %121 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %120, <2 x float>* %121, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %8)
  %122 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 20
  %123 = load float, float* %122, align 8
  %124 = load float, float* %LA, align 4
  %125 = fmul float %123, %124
  %126 = load float, float* %aA, align 4
  %127 = fsub float %126, %125
  store float %127, float* %aA, align 4
  %128 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 19
  %129 = load float, float* %128, align 4
  %130 = call <2 x float> @_ZmlfRK6b2Vec2(float %129, %struct.b2Vec2* dereferenceable(8) %P)
  %131 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %130, <2 x float>* %131, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %9)
  %132 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 21
  %133 = load float, float* %132, align 4
  %134 = load float, float* %LB, align 4
  %135 = fmul float %133, %134
  %136 = load float, float* %aB, align 4
  %137 = fadd float %136, %135
  store float %137, float* %aB, align 4
  %138 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 14
  %139 = load i32, i32* %138, align 8
  %140 = sext i32 %139 to i64
  %141 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %142 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %141, i32 0, i32 1
  %143 = load %struct.b2Position*, %struct.b2Position** %142, align 8
  %144 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %143, i64 %140
  %145 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %144, i32 0, i32 0
  %146 = bitcast %struct.b2Vec2* %145 to i8*
  %147 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %147, i64 8, i32 4, i1 false)
  %148 = load float, float* %aA, align 4
  %149 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 14
  %150 = load i32, i32* %149, align 8
  %151 = sext i32 %150 to i64
  %152 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %153 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %152, i32 0, i32 1
  %154 = load %struct.b2Position*, %struct.b2Position** %153, align 8
  %155 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %154, i64 %151
  %156 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %155, i32 0, i32 1
  store float %148, float* %156, align 4
  %157 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 15
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %161 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %160, i32 0, i32 1
  %162 = load %struct.b2Position*, %struct.b2Position** %161, align 8
  %163 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %162, i64 %159
  %164 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %163, i32 0, i32 0
  %165 = bitcast %struct.b2Vec2* %164 to i8*
  %166 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %165, i8* %166, i64 8, i32 4, i1 false)
  %167 = load float, float* %aB, align 4
  %168 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 15
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = load %struct.b2SolverData*, %struct.b2SolverData** %2, align 8
  %172 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %171, i32 0, i32 1
  %173 = load %struct.b2Position*, %struct.b2Position** %172, align 8
  %174 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %173, i64 %170
  %175 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %174, i32 0, i32 1
  store float %167, float* %175, align 4
  %176 = load float, float* %C, align 4
  %177 = call float @_Z5b2AbsIfET_S0_(float %176)
  %178 = fcmp ole float %177, 0x3F747AE140000000
  ret i1 %178
}

; Function Attrs: uwtable
define void @_ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %5 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %7 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %7, i32 0, i32 7
  %9 = load %class.b2Fixture*, %class.b2Fixture** %8, align 8
  %10 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %9)
  %11 = bitcast %class.b2Shape* %10 to %class.b2CircleShape*
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %13 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %14 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %13, i32 0, i32 8
  %15 = load %class.b2Fixture*, %class.b2Fixture** %14, align 8
  %16 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %15)
  %17 = bitcast %class.b2Shape* %16 to %class.b2CircleShape*
  %18 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  call void @_Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_(%struct.b2Manifold* %6, %class.b2CircleShape* %11, %struct.b2Transform* dereferenceable(16) %12, %class.b2CircleShape* %17, %struct.b2Transform* dereferenceable(16) %18)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 3
  %4 = load %class.b2Shape*, %class.b2Shape** %3, align 8
  ret %class.b2Shape* %4
}

; Function Attrs: uwtable
define void @_Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_(%struct.b2Manifold* %manifold, %class.b2CircleShape* %circleA, %struct.b2Transform* dereferenceable(16) %xfA, %class.b2CircleShape* %circleB, %struct.b2Transform* dereferenceable(16) %xfB) #0 {
  %1 = alloca %struct.b2Manifold*, align 8
  %2 = alloca %class.b2CircleShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %class.b2CircleShape*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %pA = alloca %struct.b2Vec2, align 4
  %pB = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %distSqr = alloca float, align 4
  %rA = alloca float, align 4
  %rB = alloca float, align 4
  %radius = alloca float, align 4
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %1, align 8
  store %class.b2CircleShape* %circleA, %class.b2CircleShape** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %class.b2CircleShape* %circleB, %class.b2CircleShape** %4, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %5, align 8
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %7 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %6, i32 0, i32 4
  store i32 0, i32* %7, align 4
  %8 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %9 = load %class.b2CircleShape*, %class.b2CircleShape** %2, align 8
  %10 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %9, i32 0, i32 1
  %11 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %8, %struct.b2Vec2* dereferenceable(8) %10)
  %12 = bitcast %struct.b2Vec2* %pA to <2 x float>*
  store <2 x float> %11, <2 x float>* %12, align 4
  %13 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %14 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %15 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %14, i32 0, i32 1
  %16 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %13, %struct.b2Vec2* dereferenceable(8) %15)
  %17 = bitcast %struct.b2Vec2* %pB to <2 x float>*
  store <2 x float> %16, <2 x float>* %17, align 4
  %18 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pB, %struct.b2Vec2* dereferenceable(8) %pA)
  %19 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %d)
  store float %20, float* %distSqr, align 4
  %21 = load %class.b2CircleShape*, %class.b2CircleShape** %2, align 8
  %22 = bitcast %class.b2CircleShape* %21 to %class.b2Shape*
  %23 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %22, i32 0, i32 2
  %24 = load float, float* %23, align 4
  store float %24, float* %rA, align 4
  %25 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %26 = bitcast %class.b2CircleShape* %25 to %class.b2Shape*
  %27 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %26, i32 0, i32 2
  %28 = load float, float* %27, align 4
  store float %28, float* %rB, align 4
  %29 = load float, float* %rA, align 4
  %30 = load float, float* %rB, align 4
  %31 = fadd float %29, %30
  store float %31, float* %radius, align 4
  %32 = load float, float* %distSqr, align 4
  %33 = load float, float* %radius, align 4
  %34 = load float, float* %radius, align 4
  %35 = fmul float %33, %34
  %36 = fcmp ogt float %32, %35
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %0
  br label %64

; <label>:38                                      ; preds = %0
  %39 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %40 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %39, i32 0, i32 3
  store i32 0, i32* %40, align 4
  %41 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %42 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %41, i32 0, i32 2
  %43 = load %class.b2CircleShape*, %class.b2CircleShape** %2, align 8
  %44 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %43, i32 0, i32 1
  %45 = bitcast %struct.b2Vec2* %42 to i8*
  %46 = bitcast %struct.b2Vec2* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false)
  %47 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %48 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %47, i32 0, i32 1
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %48)
  %49 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %50 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %49, i32 0, i32 4
  store i32 1, i32* %50, align 4
  %51 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %52 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %51, i32 0, i32 0
  %53 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %52, i64 0, i64 0
  %54 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %53, i32 0, i32 0
  %55 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %56 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %55, i32 0, i32 1
  %57 = bitcast %struct.b2Vec2* %54 to i8*
  %58 = bitcast %struct.b2Vec2* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false)
  %59 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %60 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %59, i32 0, i32 0
  %61 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %60, i64 0, i64 0
  %62 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %61, i32 0, i32 3
  %63 = bitcast %union.anon* %62 to i32*
  store i32 0, i32* %63, align 4
  br label %64

; <label>:64                                      ; preds = %38, %37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN15b2CircleContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9b2ContactD2Ev(%class.b2Contact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN15b2CircleContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN15b2CircleContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %5 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %7 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %7, i32 0, i32 7
  %9 = load %class.b2Fixture*, %class.b2Fixture** %8, align 8
  %10 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %9)
  %11 = bitcast %class.b2Shape* %10 to %class.b2PolygonShape*
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %13 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %14 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %13, i32 0, i32 8
  %15 = load %class.b2Fixture*, %class.b2Fixture** %14, align 8
  %16 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %15)
  %17 = bitcast %class.b2Shape* %16 to %class.b2CircleShape*
  %18 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  call void @_Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_(%struct.b2Manifold* %6, %class.b2PolygonShape* %11, %struct.b2Transform* dereferenceable(16) %12, %class.b2CircleShape* %17, %struct.b2Transform* dereferenceable(16) %18)
  ret void
}

; Function Attrs: uwtable
define void @_Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_(%struct.b2Manifold* %manifold, %class.b2PolygonShape* %polygonA, %struct.b2Transform* dereferenceable(16) %xfA, %class.b2CircleShape* %circleB, %struct.b2Transform* dereferenceable(16) %xfB) #0 {
  %1 = alloca %struct.b2Manifold*, align 8
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %class.b2CircleShape*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %c = alloca %struct.b2Vec2, align 4
  %cLocal = alloca %struct.b2Vec2, align 4
  %normalIndex = alloca i32, align 4
  %separation = alloca float, align 4
  %radius = alloca float, align 4
  %vertexCount = alloca i32, align 4
  %vertices = alloca %struct.b2Vec2*, align 8
  %normals = alloca %struct.b2Vec2*, align 8
  %i = alloca i32, align 4
  %s = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %vertIndex1 = alloca i32, align 4
  %vertIndex2 = alloca i32, align 4
  %v1 = alloca %struct.b2Vec2, align 4
  %v2 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %u1 = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %u2 = alloca float, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %faceCenter = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %s1 = alloca float, align 4
  %16 = alloca %struct.b2Vec2, align 4
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %1, align 8
  store %class.b2PolygonShape* %polygonA, %class.b2PolygonShape** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %class.b2CircleShape* %circleB, %class.b2CircleShape** %4, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %5, align 8
  %17 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %18 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %17, i32 0, i32 4
  store i32 0, i32* %18, align 4
  %19 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %20 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %21 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %20, i32 0, i32 1
  %22 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %19, %struct.b2Vec2* dereferenceable(8) %21)
  %23 = bitcast %struct.b2Vec2* %c to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %25 = call <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %24, %struct.b2Vec2* dereferenceable(8) %c)
  %26 = bitcast %struct.b2Vec2* %cLocal to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 4
  store i32 0, i32* %normalIndex, align 4
  store float 0xC7EFFFFFE0000000, float* %separation, align 4
  %27 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %28 = bitcast %class.b2PolygonShape* %27 to %class.b2Shape*
  %29 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %28, i32 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %32 = bitcast %class.b2CircleShape* %31 to %class.b2Shape*
  %33 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %32, i32 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = fadd float %30, %34
  store float %35, float* %radius, align 4
  %36 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %37 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %vertexCount, align 4
  %39 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %40 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %39, i32 0, i32 2
  %41 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %40, i32 0, i32 0
  store %struct.b2Vec2* %41, %struct.b2Vec2** %vertices, align 8
  %42 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %43 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %42, i32 0, i32 3
  %44 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %43, i32 0, i32 0
  store %struct.b2Vec2* %44, %struct.b2Vec2** %normals, align 8
  store i32 0, i32* %i, align 4
  br label %45

; <label>:45                                      ; preds = %73, %0
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %vertexCount, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %76

; <label>:49                                      ; preds = %45
  %50 = load i32, i32* %i, align 4
  %51 = sext i32 %50 to i64
  %52 = load %struct.b2Vec2*, %struct.b2Vec2** %normals, align 8
  %53 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %52, i64 %51
  %54 = load i32, i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices, align 8
  %57 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %56, i64 %55
  %58 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %57)
  %59 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %58, <2 x float>* %59, align 4
  %60 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %53, %struct.b2Vec2* dereferenceable(8) %6)
  store float %60, float* %s, align 4
  %61 = load float, float* %s, align 4
  %62 = load float, float* %radius, align 4
  %63 = fcmp ogt float %61, %62
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %49
  br label %275

; <label>:65                                      ; preds = %49
  %66 = load float, float* %s, align 4
  %67 = load float, float* %separation, align 4
  %68 = fcmp ogt float %66, %67
  br i1 %68, label %69, label %72

; <label>:69                                      ; preds = %65
  %70 = load float, float* %s, align 4
  store float %70, float* %separation, align 4
  %71 = load i32, i32* %i, align 4
  store i32 %71, i32* %normalIndex, align 4
  br label %72

; <label>:72                                      ; preds = %69, %65
  br label %73

; <label>:73                                      ; preds = %72
  %74 = load i32, i32* %i, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %i, align 4
  br label %45

; <label>:76                                      ; preds = %45
  %77 = load i32, i32* %normalIndex, align 4
  store i32 %77, i32* %vertIndex1, align 4
  %78 = load i32, i32* %vertIndex1, align 4
  %79 = add nsw i32 %78, 1
  %80 = load i32, i32* %vertexCount, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %76
  %83 = load i32, i32* %vertIndex1, align 4
  %84 = add nsw i32 %83, 1
  br label %86

; <label>:85                                      ; preds = %76
  br label %86

; <label>:86                                      ; preds = %85, %82
  %87 = phi i32 [ %84, %82 ], [ 0, %85 ]
  store i32 %87, i32* %vertIndex2, align 4
  %88 = load i32, i32* %vertIndex1, align 4
  %89 = sext i32 %88 to i64
  %90 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices, align 8
  %91 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %90, i64 %89
  %92 = bitcast %struct.b2Vec2* %v1 to i8*
  %93 = bitcast %struct.b2Vec2* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 8, i32 4, i1 false)
  %94 = load i32, i32* %vertIndex2, align 4
  %95 = sext i32 %94 to i64
  %96 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices, align 8
  %97 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %96, i64 %95
  %98 = bitcast %struct.b2Vec2* %v2 to i8*
  %99 = bitcast %struct.b2Vec2* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 4, i1 false)
  %100 = load float, float* %separation, align 4
  %101 = fcmp olt float %100, 0x3E80000000000000
  br i1 %101, label %102, label %136

; <label>:102                                     ; preds = %86
  %103 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %104 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %103, i32 0, i32 4
  store i32 1, i32* %104, align 4
  %105 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %106 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %105, i32 0, i32 3
  store i32 1, i32* %106, align 4
  %107 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %108 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %107, i32 0, i32 1
  %109 = load i32, i32* %normalIndex, align 4
  %110 = sext i32 %109 to i64
  %111 = load %struct.b2Vec2*, %struct.b2Vec2** %normals, align 8
  %112 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %111, i64 %110
  %113 = bitcast %struct.b2Vec2* %108 to i8*
  %114 = bitcast %struct.b2Vec2* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 4, i1 false)
  %115 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %116 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %115, i32 0, i32 2
  %117 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %118 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %117, <2 x float>* %118, align 4
  %119 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %8)
  %120 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %119, <2 x float>* %120, align 4
  %121 = bitcast %struct.b2Vec2* %116 to i8*
  %122 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 4, i1 false)
  %123 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %124 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %123, i32 0, i32 0
  %125 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %124, i64 0, i64 0
  %126 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %125, i32 0, i32 0
  %127 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %128 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %127, i32 0, i32 1
  %129 = bitcast %struct.b2Vec2* %126 to i8*
  %130 = bitcast %struct.b2Vec2* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 8, i32 4, i1 false)
  %131 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %132 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %131, i32 0, i32 0
  %133 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %132, i64 0, i64 0
  %134 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %133, i32 0, i32 3
  %135 = bitcast %union.anon* %134 to i32*
  store i32 0, i32* %135, align 4
  br label %275

; <label>:136                                     ; preds = %86
  %137 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %v1)
  %138 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %137, <2 x float>* %138, align 4
  %139 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v2, %struct.b2Vec2* dereferenceable(8) %v1)
  %140 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %139, <2 x float>* %140, align 4
  %141 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %10)
  store float %141, float* %u1, align 4
  %142 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %v2)
  %143 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %142, <2 x float>* %143, align 4
  %144 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %145 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %144, <2 x float>* %145, align 4
  %146 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %12)
  store float %146, float* %u2, align 4
  %147 = load float, float* %u1, align 4
  %148 = fcmp ole float %147, 0.000000e+00
  br i1 %148, label %149, label %187

; <label>:149                                     ; preds = %136
  %150 = call float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %v1)
  %151 = load float, float* %radius, align 4
  %152 = load float, float* %radius, align 4
  %153 = fmul float %151, %152
  %154 = fcmp ogt float %150, %153
  br i1 %154, label %155, label %156

; <label>:155                                     ; preds = %149
  br label %275

; <label>:156                                     ; preds = %149
  %157 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %158 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %157, i32 0, i32 4
  store i32 1, i32* %158, align 4
  %159 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %160 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %159, i32 0, i32 3
  store i32 1, i32* %160, align 4
  %161 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %162 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %161, i32 0, i32 1
  %163 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %v1)
  %164 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %163, <2 x float>* %164, align 4
  %165 = bitcast %struct.b2Vec2* %162 to i8*
  %166 = bitcast %struct.b2Vec2* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %165, i8* %166, i64 8, i32 4, i1 false)
  %167 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %168 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %167, i32 0, i32 1
  %169 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %168)
  %170 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %171 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %170, i32 0, i32 2
  %172 = bitcast %struct.b2Vec2* %171 to i8*
  %173 = bitcast %struct.b2Vec2* %v1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 8, i32 4, i1 false)
  %174 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %175 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %174, i32 0, i32 0
  %176 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %175, i64 0, i64 0
  %177 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %176, i32 0, i32 0
  %178 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %179 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %178, i32 0, i32 1
  %180 = bitcast %struct.b2Vec2* %177 to i8*
  %181 = bitcast %struct.b2Vec2* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %180, i8* %181, i64 8, i32 4, i1 false)
  %182 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %183 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %182, i32 0, i32 0
  %184 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %183, i64 0, i64 0
  %185 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %184, i32 0, i32 3
  %186 = bitcast %union.anon* %185 to i32*
  store i32 0, i32* %186, align 4
  br label %275

; <label>:187                                     ; preds = %136
  %188 = load float, float* %u2, align 4
  %189 = fcmp ole float %188, 0.000000e+00
  br i1 %189, label %190, label %228

; <label>:190                                     ; preds = %187
  %191 = call float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %v2)
  %192 = load float, float* %radius, align 4
  %193 = load float, float* %radius, align 4
  %194 = fmul float %192, %193
  %195 = fcmp ogt float %191, %194
  br i1 %195, label %196, label %197

; <label>:196                                     ; preds = %190
  br label %275

; <label>:197                                     ; preds = %190
  %198 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %199 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %198, i32 0, i32 4
  store i32 1, i32* %199, align 4
  %200 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %201 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %200, i32 0, i32 3
  store i32 1, i32* %201, align 4
  %202 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %203 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %202, i32 0, i32 1
  %204 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %v2)
  %205 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %204, <2 x float>* %205, align 4
  %206 = bitcast %struct.b2Vec2* %203 to i8*
  %207 = bitcast %struct.b2Vec2* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %206, i8* %207, i64 8, i32 4, i1 false)
  %208 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %209 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %208, i32 0, i32 1
  %210 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %209)
  %211 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %212 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %211, i32 0, i32 2
  %213 = bitcast %struct.b2Vec2* %212 to i8*
  %214 = bitcast %struct.b2Vec2* %v2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %213, i8* %214, i64 8, i32 4, i1 false)
  %215 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %216 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %215, i32 0, i32 0
  %217 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %216, i64 0, i64 0
  %218 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %217, i32 0, i32 0
  %219 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %220 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %219, i32 0, i32 1
  %221 = bitcast %struct.b2Vec2* %218 to i8*
  %222 = bitcast %struct.b2Vec2* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %221, i8* %222, i64 8, i32 4, i1 false)
  %223 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %224 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %223, i32 0, i32 0
  %225 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %224, i64 0, i64 0
  %226 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %225, i32 0, i32 3
  %227 = bitcast %union.anon* %226 to i32*
  store i32 0, i32* %227, align 4
  br label %274

; <label>:228                                     ; preds = %187
  %229 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %230 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %229, <2 x float>* %230, align 4
  %231 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %15)
  %232 = bitcast %struct.b2Vec2* %faceCenter to <2 x float>*
  store <2 x float> %231, <2 x float>* %232, align 4
  %233 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cLocal, %struct.b2Vec2* dereferenceable(8) %faceCenter)
  %234 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %233, <2 x float>* %234, align 4
  %235 = load i32, i32* %vertIndex1, align 4
  %236 = sext i32 %235 to i64
  %237 = load %struct.b2Vec2*, %struct.b2Vec2** %normals, align 8
  %238 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %237, i64 %236
  %239 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %16, %struct.b2Vec2* dereferenceable(8) %238)
  store float %239, float* %s1, align 4
  %240 = load float, float* %s1, align 4
  %241 = load float, float* %radius, align 4
  %242 = fcmp ogt float %240, %241
  br i1 %242, label %243, label %244

; <label>:243                                     ; preds = %228
  br label %275

; <label>:244                                     ; preds = %228
  %245 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %246 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %245, i32 0, i32 4
  store i32 1, i32* %246, align 4
  %247 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %248 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %247, i32 0, i32 3
  store i32 1, i32* %248, align 4
  %249 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %250 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %249, i32 0, i32 1
  %251 = load i32, i32* %vertIndex1, align 4
  %252 = sext i32 %251 to i64
  %253 = load %struct.b2Vec2*, %struct.b2Vec2** %normals, align 8
  %254 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %253, i64 %252
  %255 = bitcast %struct.b2Vec2* %250 to i8*
  %256 = bitcast %struct.b2Vec2* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %255, i8* %256, i64 8, i32 4, i1 false)
  %257 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %258 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %257, i32 0, i32 2
  %259 = bitcast %struct.b2Vec2* %258 to i8*
  %260 = bitcast %struct.b2Vec2* %faceCenter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %259, i8* %260, i64 8, i32 4, i1 false)
  %261 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %262 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %261, i32 0, i32 0
  %263 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %262, i64 0, i64 0
  %264 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %263, i32 0, i32 0
  %265 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %266 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %265, i32 0, i32 1
  %267 = bitcast %struct.b2Vec2* %264 to i8*
  %268 = bitcast %struct.b2Vec2* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %267, i8* %268, i64 8, i32 4, i1 false)
  %269 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %270 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %269, i32 0, i32 0
  %271 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %270, i64 0, i64 0
  %272 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %271, i32 0, i32 3
  %273 = bitcast %union.anon* %272 to i32*
  store i32 0, i32* %273, align 4
  br label %274

; <label>:274                                     ; preds = %244, %197
  br label %275

; <label>:275                                     ; preds = %274, %243, %196, %156, %155, %102, %64
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %T, %struct.b2Vec2* dereferenceable(8) %v) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %px = alloca float, align 4
  %py = alloca float, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  store %struct.b2Transform* %T, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %v, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %8 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fsub float %6, %10
  store float %11, float* %px, align 4
  %12 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %13 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %12, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %16 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %16, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fsub float %14, %18
  store float %19, float* %py, align 4
  %20 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %21 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %20, i32 0, i32 1
  %22 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %21, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = load float, float* %px, align 4
  %25 = fmul float %23, %24
  %26 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %27 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %26, i32 0, i32 1
  %28 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %27, i32 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = load float, float* %py, align 4
  %31 = fmul float %29, %30
  %32 = fadd float %25, %31
  store float %32, float* %x, align 4
  %33 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %34 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %33, i32 0, i32 1
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %34, i32 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = fsub float -0.000000e+00, %36
  %38 = load float, float* %px, align 4
  %39 = fmul float %37, %38
  %40 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %41 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %40, i32 0, i32 1
  %42 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %41, i32 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = load float, float* %py, align 4
  %45 = fmul float %43, %44
  %46 = fadd float %39, %45
  store float %46, float* %y, align 4
  %47 = load float, float* %x, align 4
  %48 = load float, float* %y, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %47, float %48)
  %49 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  ret <2 x float> %50
}

; Function Attrs: inlinehint uwtable
define linkonce_odr float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #1 comdat {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %c = alloca %struct.b2Vec2, align 4
  store %struct.b2Vec2* %a, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %4)
  %6 = bitcast %struct.b2Vec2* %c to <2 x float>*
  store <2 x float> %5, <2 x float>* %6, align 4
  %7 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %c, %struct.b2Vec2* dereferenceable(8) %c)
  ret float %7
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN25b2PolygonAndCircleContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN25b2PolygonAndCircleContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN25b2PolygonAndCircleContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %5 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %7 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %7, i32 0, i32 7
  %9 = load %class.b2Fixture*, %class.b2Fixture** %8, align 8
  %10 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %9)
  %11 = bitcast %class.b2Shape* %10 to %class.b2EdgeShape*
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %13 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %14 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %13, i32 0, i32 8
  %15 = load %class.b2Fixture*, %class.b2Fixture** %14, align 8
  %16 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %15)
  %17 = bitcast %class.b2Shape* %16 to %class.b2CircleShape*
  %18 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  call void @_Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_(%struct.b2Manifold* %6, %class.b2EdgeShape* %11, %struct.b2Transform* dereferenceable(16) %12, %class.b2CircleShape* %17, %struct.b2Transform* dereferenceable(16) %18)
  ret void
}

; Function Attrs: uwtable
define void @_Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_(%struct.b2Manifold* %manifold, %class.b2EdgeShape* %edgeA, %struct.b2Transform* dereferenceable(16) %xfA, %class.b2CircleShape* %circleB, %struct.b2Transform* dereferenceable(16) %xfB) #0 {
  %1 = alloca %struct.b2Manifold*, align 8
  %2 = alloca %class.b2EdgeShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %class.b2CircleShape*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %Q = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %A = alloca %struct.b2Vec2, align 4
  %B = alloca %struct.b2Vec2, align 4
  %e = alloca %struct.b2Vec2, align 4
  %u = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %v = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %radius = alloca float, align 4
  %cf = alloca %struct.b2ContactFeature, align 1
  %P = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %dd = alloca float, align 4
  %A1 = alloca %struct.b2Vec2, align 4
  %B1 = alloca %struct.b2Vec2, align 4
  %e1 = alloca %struct.b2Vec2, align 4
  %u1 = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %P1 = alloca %struct.b2Vec2, align 4
  %d2 = alloca %struct.b2Vec2, align 4
  %dd3 = alloca float, align 4
  %B2 = alloca %struct.b2Vec2, align 4
  %A2 = alloca %struct.b2Vec2, align 4
  %e2 = alloca %struct.b2Vec2, align 4
  %v2 = alloca float, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %den = alloca float, align 4
  %P4 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %d5 = alloca %struct.b2Vec2, align 4
  %dd6 = alloca float, align 4
  %n = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %1, align 8
  store %class.b2EdgeShape* %edgeA, %class.b2EdgeShape** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %class.b2CircleShape* %circleB, %class.b2CircleShape** %4, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %5, align 8
  %15 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %16 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %15, i32 0, i32 4
  store i32 0, i32* %16, align 4
  %17 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %18 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %19 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %20 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %19, i32 0, i32 1
  %21 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %18, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = call <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %17, %struct.b2Vec2* dereferenceable(8) %6)
  %24 = bitcast %struct.b2Vec2* %Q to <2 x float>*
  store <2 x float> %23, <2 x float>* %24, align 4
  %25 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %26 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %25, i32 0, i32 1
  %27 = bitcast %struct.b2Vec2* %A to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %30 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %29, i32 0, i32 2
  %31 = bitcast %struct.b2Vec2* %B to i8*
  %32 = bitcast %struct.b2Vec2* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 4, i1 false)
  %33 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %B, %struct.b2Vec2* dereferenceable(8) %A)
  %34 = bitcast %struct.b2Vec2* %e to <2 x float>*
  store <2 x float> %33, <2 x float>* %34, align 4
  %35 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %B, %struct.b2Vec2* dereferenceable(8) %Q)
  %36 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %35, <2 x float>* %36, align 4
  %37 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e, %struct.b2Vec2* dereferenceable(8) %7)
  store float %37, float* %u, align 4
  %38 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Q, %struct.b2Vec2* dereferenceable(8) %A)
  %39 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %38, <2 x float>* %39, align 4
  %40 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e, %struct.b2Vec2* dereferenceable(8) %8)
  store float %40, float* %v, align 4
  %41 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %42 = bitcast %class.b2EdgeShape* %41 to %class.b2Shape*
  %43 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %42, i32 0, i32 2
  %44 = load float, float* %43, align 4
  %45 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %46 = bitcast %class.b2CircleShape* %45 to %class.b2Shape*
  %47 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %46, i32 0, i32 2
  %48 = load float, float* %47, align 4
  %49 = fadd float %44, %48
  store float %49, float* %radius, align 4
  %50 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 1
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 3
  store i8 0, i8* %51, align 1
  %52 = load float, float* %v, align 4
  %53 = fcmp ole float %52, 0.000000e+00
  br i1 %53, label %54, label %120

; <label>:54                                      ; preds = %0
  %55 = bitcast %struct.b2Vec2* %P to i8*
  %56 = bitcast %struct.b2Vec2* %A to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false)
  %57 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Q, %struct.b2Vec2* dereferenceable(8) %P)
  %58 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %d)
  store float %59, float* %dd, align 4
  %60 = load float, float* %dd, align 4
  %61 = load float, float* %radius, align 4
  %62 = load float, float* %radius, align 4
  %63 = fmul float %61, %62
  %64 = fcmp ogt float %60, %63
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %54
  br label %271

; <label>:66                                      ; preds = %54
  %67 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %68 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %67, i32 0, i32 5
  %69 = load i8, i8* %68, align 8
  %70 = trunc i8 %69 to i1
  br i1 %70, label %71, label %87

; <label>:71                                      ; preds = %66
  %72 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %73 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %72, i32 0, i32 3
  %74 = bitcast %struct.b2Vec2* %A1 to i8*
  %75 = bitcast %struct.b2Vec2* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 4, i1 false)
  %76 = bitcast %struct.b2Vec2* %B1 to i8*
  %77 = bitcast %struct.b2Vec2* %A to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false)
  %78 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %B1, %struct.b2Vec2* dereferenceable(8) %A1)
  %79 = bitcast %struct.b2Vec2* %e1 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %B1, %struct.b2Vec2* dereferenceable(8) %Q)
  %81 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e1, %struct.b2Vec2* dereferenceable(8) %9)
  store float %82, float* %u1, align 4
  %83 = load float, float* %u1, align 4
  %84 = fcmp ogt float %83, 0.000000e+00
  br i1 %84, label %85, label %86

; <label>:85                                      ; preds = %71
  br label %271

; <label>:86                                      ; preds = %71
  br label %87

; <label>:87                                      ; preds = %86, %66
  %88 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 0
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 2
  store i8 0, i8* %89, align 1
  %90 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %91 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %90, i32 0, i32 4
  store i32 1, i32* %91, align 4
  %92 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %93 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %92, i32 0, i32 3
  store i32 0, i32* %93, align 4
  %94 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %95 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %94, i32 0, i32 1
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %95)
  %96 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %97 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %96, i32 0, i32 2
  %98 = bitcast %struct.b2Vec2* %97 to i8*
  %99 = bitcast %struct.b2Vec2* %P to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 4, i1 false)
  %100 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %101 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %100, i32 0, i32 0
  %102 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %101, i64 0, i64 0
  %103 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %102, i32 0, i32 3
  %104 = bitcast %union.anon* %103 to i32*
  store i32 0, i32* %104, align 4
  %105 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %106 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %105, i32 0, i32 0
  %107 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %106, i64 0, i64 0
  %108 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %107, i32 0, i32 3
  %109 = bitcast %union.anon* %108 to %struct.b2ContactFeature*
  %110 = bitcast %struct.b2ContactFeature* %109 to i8*
  %111 = bitcast %struct.b2ContactFeature* %cf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 4, i32 1, i1 false)
  %112 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %113 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %112, i32 0, i32 0
  %114 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %113, i64 0, i64 0
  %115 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %114, i32 0, i32 0
  %116 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %117 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %116, i32 0, i32 1
  %118 = bitcast %struct.b2Vec2* %115 to i8*
  %119 = bitcast %struct.b2Vec2* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 4, i1 false)
  br label %271

; <label>:120                                     ; preds = %0
  %121 = load float, float* %u, align 4
  %122 = fcmp ole float %121, 0.000000e+00
  br i1 %122, label %123, label %189

; <label>:123                                     ; preds = %120
  %124 = bitcast %struct.b2Vec2* %P1 to i8*
  %125 = bitcast %struct.b2Vec2* %B to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %124, i8* %125, i64 8, i32 4, i1 false)
  %126 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Q, %struct.b2Vec2* dereferenceable(8) %P1)
  %127 = bitcast %struct.b2Vec2* %d2 to <2 x float>*
  store <2 x float> %126, <2 x float>* %127, align 4
  %128 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d2, %struct.b2Vec2* dereferenceable(8) %d2)
  store float %128, float* %dd3, align 4
  %129 = load float, float* %dd3, align 4
  %130 = load float, float* %radius, align 4
  %131 = load float, float* %radius, align 4
  %132 = fmul float %130, %131
  %133 = fcmp ogt float %129, %132
  br i1 %133, label %134, label %135

; <label>:134                                     ; preds = %123
  br label %271

; <label>:135                                     ; preds = %123
  %136 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %137 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %136, i32 0, i32 6
  %138 = load i8, i8* %137, align 1
  %139 = trunc i8 %138 to i1
  br i1 %139, label %140, label %156

; <label>:140                                     ; preds = %135
  %141 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %142 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %141, i32 0, i32 4
  %143 = bitcast %struct.b2Vec2* %B2 to i8*
  %144 = bitcast %struct.b2Vec2* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 4, i1 false)
  %145 = bitcast %struct.b2Vec2* %A2 to i8*
  %146 = bitcast %struct.b2Vec2* %B to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 8, i32 4, i1 false)
  %147 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %B2, %struct.b2Vec2* dereferenceable(8) %A2)
  %148 = bitcast %struct.b2Vec2* %e2 to <2 x float>*
  store <2 x float> %147, <2 x float>* %148, align 4
  %149 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Q, %struct.b2Vec2* dereferenceable(8) %A2)
  %150 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %149, <2 x float>* %150, align 4
  %151 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e2, %struct.b2Vec2* dereferenceable(8) %10)
  store float %151, float* %v2, align 4
  %152 = load float, float* %v2, align 4
  %153 = fcmp ogt float %152, 0.000000e+00
  br i1 %153, label %154, label %155

; <label>:154                                     ; preds = %140
  br label %271

; <label>:155                                     ; preds = %140
  br label %156

; <label>:156                                     ; preds = %155, %135
  %157 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 0
  store i8 1, i8* %157, align 1
  %158 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 2
  store i8 0, i8* %158, align 1
  %159 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %160 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %159, i32 0, i32 4
  store i32 1, i32* %160, align 4
  %161 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %162 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %161, i32 0, i32 3
  store i32 0, i32* %162, align 4
  %163 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %164 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %163, i32 0, i32 1
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %164)
  %165 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %166 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %165, i32 0, i32 2
  %167 = bitcast %struct.b2Vec2* %166 to i8*
  %168 = bitcast %struct.b2Vec2* %P1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 8, i32 4, i1 false)
  %169 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %170 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %169, i32 0, i32 0
  %171 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %170, i64 0, i64 0
  %172 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %171, i32 0, i32 3
  %173 = bitcast %union.anon* %172 to i32*
  store i32 0, i32* %173, align 4
  %174 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %175 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %174, i32 0, i32 0
  %176 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %175, i64 0, i64 0
  %177 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %176, i32 0, i32 3
  %178 = bitcast %union.anon* %177 to %struct.b2ContactFeature*
  %179 = bitcast %struct.b2ContactFeature* %178 to i8*
  %180 = bitcast %struct.b2ContactFeature* %cf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %180, i64 4, i32 1, i1 false)
  %181 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %182 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %181, i32 0, i32 0
  %183 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %182, i64 0, i64 0
  %184 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %183, i32 0, i32 0
  %185 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %186 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %185, i32 0, i32 1
  %187 = bitcast %struct.b2Vec2* %184 to i8*
  %188 = bitcast %struct.b2Vec2* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %187, i8* %188, i64 8, i32 4, i1 false)
  br label %271

; <label>:189                                     ; preds = %120
  %190 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e, %struct.b2Vec2* dereferenceable(8) %e)
  store float %190, float* %den, align 4
  %191 = load float, float* %den, align 4
  %192 = fcmp ogt float %191, 0.000000e+00
  br i1 %192, label %193, label %194

; <label>:193                                     ; preds = %189
  br label %196

; <label>:194                                     ; preds = %189
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.400, i32 0, i32 0), i32 127, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %196

; <label>:196                                     ; preds = %195, %193
  %197 = load float, float* %den, align 4
  %198 = fdiv float 1.000000e+00, %197
  %199 = load float, float* %u, align 4
  %200 = call <2 x float> @_ZmlfRK6b2Vec2(float %199, %struct.b2Vec2* dereferenceable(8) %A)
  %201 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %200, <2 x float>* %201, align 4
  %202 = load float, float* %v, align 4
  %203 = call <2 x float> @_ZmlfRK6b2Vec2(float %202, %struct.b2Vec2* dereferenceable(8) %B)
  %204 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %203, <2 x float>* %204, align 4
  %205 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %13)
  %206 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %205, <2 x float>* %206, align 4
  %207 = call <2 x float> @_ZmlfRK6b2Vec2(float %198, %struct.b2Vec2* dereferenceable(8) %11)
  %208 = bitcast %struct.b2Vec2* %P4 to <2 x float>*
  store <2 x float> %207, <2 x float>* %208, align 4
  %209 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Q, %struct.b2Vec2* dereferenceable(8) %P4)
  %210 = bitcast %struct.b2Vec2* %d5 to <2 x float>*
  store <2 x float> %209, <2 x float>* %210, align 4
  %211 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d5, %struct.b2Vec2* dereferenceable(8) %d5)
  store float %211, float* %dd6, align 4
  %212 = load float, float* %dd6, align 4
  %213 = load float, float* %radius, align 4
  %214 = load float, float* %radius, align 4
  %215 = fmul float %213, %214
  %216 = fcmp ogt float %212, %215
  br i1 %216, label %217, label %218

; <label>:217                                     ; preds = %196
  br label %271

; <label>:218                                     ; preds = %196
  %219 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e, i32 0, i32 1
  %220 = load float, float* %219, align 4
  %221 = fsub float -0.000000e+00, %220
  %222 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e, i32 0, i32 0
  %223 = load float, float* %222, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %n, float %221, float %223)
  %224 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Q, %struct.b2Vec2* dereferenceable(8) %A)
  %225 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %224, <2 x float>* %225, align 4
  %226 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %14)
  %227 = fcmp olt float %226, 0.000000e+00
  br i1 %227, label %228, label %235

; <label>:228                                     ; preds = %218
  %229 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %n, i32 0, i32 0
  %230 = load float, float* %229, align 4
  %231 = fsub float -0.000000e+00, %230
  %232 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %n, i32 0, i32 1
  %233 = load float, float* %232, align 4
  %234 = fsub float -0.000000e+00, %233
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %n, float %231, float %234)
  br label %235

; <label>:235                                     ; preds = %228, %218
  %236 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %n)
  %237 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 0
  store i8 0, i8* %237, align 1
  %238 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 2
  store i8 1, i8* %238, align 1
  %239 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %240 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %239, i32 0, i32 4
  store i32 1, i32* %240, align 4
  %241 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %242 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %241, i32 0, i32 3
  store i32 1, i32* %242, align 4
  %243 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %244 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %243, i32 0, i32 1
  %245 = bitcast %struct.b2Vec2* %244 to i8*
  %246 = bitcast %struct.b2Vec2* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %246, i64 8, i32 4, i1 false)
  %247 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %248 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %247, i32 0, i32 2
  %249 = bitcast %struct.b2Vec2* %248 to i8*
  %250 = bitcast %struct.b2Vec2* %A to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %250, i64 8, i32 4, i1 false)
  %251 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %252 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %251, i32 0, i32 0
  %253 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %252, i64 0, i64 0
  %254 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %253, i32 0, i32 3
  %255 = bitcast %union.anon* %254 to i32*
  store i32 0, i32* %255, align 4
  %256 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %257 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %256, i32 0, i32 0
  %258 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %257, i64 0, i64 0
  %259 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %258, i32 0, i32 3
  %260 = bitcast %union.anon* %259 to %struct.b2ContactFeature*
  %261 = bitcast %struct.b2ContactFeature* %260 to i8*
  %262 = bitcast %struct.b2ContactFeature* %cf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %262, i64 4, i32 1, i1 false)
  %263 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %264 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %263, i32 0, i32 0
  %265 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %264, i64 0, i64 0
  %266 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %265, i32 0, i32 0
  %267 = load %class.b2CircleShape*, %class.b2CircleShape** %4, align 8
  %268 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %267, i32 0, i32 1
  %269 = bitcast %struct.b2Vec2* %266 to i8*
  %270 = bitcast %struct.b2Vec2* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %269, i8* %270, i64 8, i32 4, i1 false)
  br label %271

; <label>:271                                     ; preds = %235, %217, %156, %154, %134, %87, %85, %65
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN22b2EdgeAndCircleContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN22b2EdgeAndCircleContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN22b2EdgeAndCircleContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %5 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %7 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %7, i32 0, i32 7
  %9 = load %class.b2Fixture*, %class.b2Fixture** %8, align 8
  %10 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %9)
  %11 = bitcast %class.b2Shape* %10 to %class.b2EdgeShape*
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %13 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %14 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %13, i32 0, i32 8
  %15 = load %class.b2Fixture*, %class.b2Fixture** %14, align 8
  %16 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %15)
  %17 = bitcast %class.b2Shape* %16 to %class.b2PolygonShape*
  %18 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  call void @_Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_(%struct.b2Manifold* %6, %class.b2EdgeShape* %11, %struct.b2Transform* dereferenceable(16) %12, %class.b2PolygonShape* %17, %struct.b2Transform* dereferenceable(16) %18)
  ret void
}

; Function Attrs: uwtable
define void @_Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_(%struct.b2Manifold* %manifold, %class.b2EdgeShape* %edgeA, %struct.b2Transform* dereferenceable(16) %xfA, %class.b2PolygonShape* %polygonB, %struct.b2Transform* dereferenceable(16) %xfB) #0 {
  %1 = alloca %struct.b2Manifold*, align 8
  %2 = alloca %class.b2EdgeShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %class.b2PolygonShape*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %collider = alloca %struct.b2EPCollider, align 4
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %1, align 8
  store %class.b2EdgeShape* %edgeA, %class.b2EdgeShape** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %class.b2PolygonShape* %polygonB, %class.b2PolygonShape** %4, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %5, align 8
  call void @_ZN12b2EPColliderC2Ev(%struct.b2EPCollider* %collider)
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %7 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %8 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %9 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  %10 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  call void @_ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_(%struct.b2EPCollider* %collider, %struct.b2Manifold* %6, %class.b2EdgeShape* %7, %struct.b2Transform* dereferenceable(16) %8, %class.b2PolygonShape* %9, %struct.b2Transform* dereferenceable(16) %10)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2EPColliderC2Ev(%struct.b2EPCollider* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2EPCollider*, align 8
  store %struct.b2EPCollider* %this, %struct.b2EPCollider** %1, align 8
  %2 = load %struct.b2EPCollider*, %struct.b2EPCollider** %1, align 8
  %3 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 0
  call void @_ZN13b2TempPolygonC2Ev(%struct.b2TempPolygon* %3)
  %4 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 1
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %4)
  %5 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 2
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %5)
  %6 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 3
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %6)
  %7 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 4
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
  %8 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 5
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %8)
  %9 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 6
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %9)
  %10 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 7
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
  %11 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 8
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
  %12 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 9
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
  %13 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 10
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %13)
  %14 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 13
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %14)
  %15 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %2, i32 0, i32 14
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %15)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN13b2TempPolygonC2Ev(%struct.b2TempPolygon* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2TempPolygon*, align 8
  store %struct.b2TempPolygon* %this, %struct.b2TempPolygon** %1, align 8
  %2 = load %struct.b2TempPolygon*, %struct.b2TempPolygon** %1, align 8
  %3 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %2, i32 0, i32 0
  %4 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i64 8
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %struct.b2Vec2* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i64 1
  %9 = icmp eq %struct.b2Vec2* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %2, i32 0, i32 1
  %12 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %12, i64 8
  br label %14

; <label>:14                                      ; preds = %14, %10
  %15 = phi %struct.b2Vec2* [ %12, %10 ], [ %16, %14 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %15)
  %16 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %15, i64 1
  %17 = icmp eq %struct.b2Vec2* %16, %13
  br i1 %17, label %18, label %14

; <label>:18                                      ; preds = %14
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN11b2TransformC2Ev(%struct.b2Transform* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  %2 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  %3 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  call void @_ZN5b2RotC2Ev(%struct.b2Vec2* %4)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN5b2RotC2Ev(%struct.b2Vec2* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  %2 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_(%struct.b2EPCollider* %this, %struct.b2Manifold* %manifold, %class.b2EdgeShape* %edgeA, %struct.b2Transform* dereferenceable(16) %xfA, %class.b2PolygonShape* %polygonB, %struct.b2Transform* dereferenceable(16) %xfB) #0 align 2 {
  %1 = alloca %struct.b2EPCollider*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %class.b2EdgeShape*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %5 = alloca %class.b2PolygonShape*, align 8
  %6 = alloca %struct.b2Transform*, align 8
  %7 = alloca %struct.b2Transform, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %hasVertex0 = alloca i8, align 1
  %hasVertex3 = alloca i8, align 1
  %edge1 = alloca %struct.b2Vec2, align 4
  %offset1 = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %offset0 = alloca float, align 4
  %offset2 = alloca float, align 4
  %convex1 = alloca i8, align 1
  %convex2 = alloca i8, align 1
  %edge0 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %edge2 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  %19 = alloca %struct.b2Vec2, align 4
  %20 = alloca %struct.b2Vec2, align 4
  %21 = alloca %struct.b2Vec2, align 4
  %22 = alloca %struct.b2Vec2, align 4
  %23 = alloca %struct.b2Vec2, align 4
  %24 = alloca %struct.b2Vec2, align 4
  %25 = alloca %struct.b2Vec2, align 4
  %26 = alloca %struct.b2Vec2, align 4
  %27 = alloca %struct.b2Vec2, align 4
  %28 = alloca %struct.b2Vec2, align 4
  %29 = alloca %struct.b2Vec2, align 4
  %30 = alloca %struct.b2Vec2, align 4
  %31 = alloca %struct.b2Vec2, align 4
  %32 = alloca %struct.b2Vec2, align 4
  %33 = alloca %struct.b2Vec2, align 4
  %34 = alloca %struct.b2Vec2, align 4
  %35 = alloca %struct.b2Vec2, align 4
  %36 = alloca %struct.b2Vec2, align 4
  %37 = alloca %struct.b2Vec2, align 4
  %38 = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %39 = alloca %struct.b2Vec2, align 4
  %40 = alloca %struct.b2Vec2, align 4
  %edgeAxis = alloca %struct.b2EPAxis, align 4
  %41 = alloca { i64, float }, align 8
  %polygonAxis = alloca %struct.b2EPAxis, align 4
  %42 = alloca { i64, float }, align 8
  %k_relativeTol = alloca float, align 4
  %k_absoluteTol = alloca float, align 4
  %primaryAxis = alloca %struct.b2EPAxis, align 4
  %ie = alloca [2 x %struct.b2ClipVertex], align 16
  %rf = alloca %struct.b2ReferenceFace, align 4
  %bestIndex = alloca i32, align 4
  %bestValue = alloca float, align 4
  %i1 = alloca i32, align 4
  %value = alloca float, align 4
  %i12 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %43 = alloca %struct.b2Vec2, align 4
  %44 = alloca %struct.b2Vec2, align 4
  %clipPoints1 = alloca [2 x %struct.b2ClipVertex], align 16
  %clipPoints2 = alloca [2 x %struct.b2ClipVertex], align 16
  %np = alloca i32, align 4
  %pointCount = alloca i32, align 4
  %i3 = alloca i32, align 4
  %separation = alloca float, align 4
  %45 = alloca %struct.b2Vec2, align 4
  %cp = alloca %struct.b2ManifoldPoint*, align 8
  %46 = alloca %struct.b2Vec2, align 4
  store %struct.b2EPCollider* %this, %struct.b2EPCollider** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %class.b2EdgeShape* %edgeA, %class.b2EdgeShape** %3, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %4, align 8
  store %class.b2PolygonShape* %polygonB, %class.b2PolygonShape** %5, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %6, align 8
  %47 = load %struct.b2EPCollider*, %struct.b2EPCollider** %1, align 8
  %48 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 1
  %49 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %50 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %51 = call { <2 x float>, <2 x float> } @_Z6b2MulTRK11b2TransformS1_(%struct.b2Transform* dereferenceable(16) %49, %struct.b2Transform* dereferenceable(16) %50)
  %52 = bitcast %struct.b2Transform* %7 to { <2 x float>, <2 x float> }*
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %52, i32 0, i32 0
  %54 = extractvalue { <2 x float>, <2 x float> } %51, 0
  store <2 x float> %54, <2 x float>* %53, align 4
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %52, i32 0, i32 1
  %56 = extractvalue { <2 x float>, <2 x float> } %51, 1
  store <2 x float> %56, <2 x float>* %55, align 4
  %57 = bitcast %struct.b2Transform* %48 to i8*
  %58 = bitcast %struct.b2Transform* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 16, i32 4, i1 false)
  %59 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 2
  %60 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 1
  %61 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %62 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %61, i32 0, i32 1
  %63 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %60, %struct.b2Vec2* dereferenceable(8) %62)
  %64 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %63, <2 x float>* %64, align 4
  %65 = bitcast %struct.b2Vec2* %59 to i8*
  %66 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false)
  %67 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 3
  %68 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %69 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %68, i32 0, i32 3
  %70 = bitcast %struct.b2Vec2* %67 to i8*
  %71 = bitcast %struct.b2Vec2* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 4, i1 false)
  %72 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %73 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %74 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %73, i32 0, i32 1
  %75 = bitcast %struct.b2Vec2* %72 to i8*
  %76 = bitcast %struct.b2Vec2* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 4, i1 false)
  %77 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %78 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %79 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %78, i32 0, i32 2
  %80 = bitcast %struct.b2Vec2* %77 to i8*
  %81 = bitcast %struct.b2Vec2* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 4, i1 false)
  %82 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 6
  %83 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %84 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %83, i32 0, i32 4
  %85 = bitcast %struct.b2Vec2* %82 to i8*
  %86 = bitcast %struct.b2Vec2* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 4, i1 false)
  %87 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %88 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %87, i32 0, i32 5
  %89 = load i8, i8* %88, align 8
  %90 = trunc i8 %89 to i1
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %hasVertex0, align 1
  %92 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %93 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %92, i32 0, i32 6
  %94 = load i8, i8* %93, align 1
  %95 = trunc i8 %94 to i1
  %96 = zext i1 %95 to i8
  store i8 %96, i8* %hasVertex3, align 1
  %97 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %98 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %99 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %97, %struct.b2Vec2* dereferenceable(8) %98)
  %100 = bitcast %struct.b2Vec2* %edge1 to <2 x float>*
  store <2 x float> %99, <2 x float>* %100, align 4
  %101 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %edge1)
  %102 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %103 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %edge1, i32 0, i32 1
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %edge1, i32 0, i32 0
  %106 = load float, float* %105, align 4
  %107 = fsub float -0.000000e+00, %106
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %102, float %104, float %107)
  %108 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %109 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 2
  %110 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %111 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %109, %struct.b2Vec2* dereferenceable(8) %110)
  %112 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %111, <2 x float>* %112, align 4
  %113 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %108, %struct.b2Vec2* dereferenceable(8) %9)
  store float %113, float* %offset1, align 4
  store float 0.000000e+00, float* %offset0, align 4
  store float 0.000000e+00, float* %offset2, align 4
  store i8 0, i8* %convex1, align 1
  store i8 0, i8* %convex2, align 1
  %114 = load i8, i8* %hasVertex0, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %116, label %137

; <label>:116                                     ; preds = %0
  %117 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %118 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 3
  %119 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %117, %struct.b2Vec2* dereferenceable(8) %118)
  %120 = bitcast %struct.b2Vec2* %edge0 to <2 x float>*
  store <2 x float> %119, <2 x float>* %120, align 4
  %121 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %edge0)
  %122 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %123 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %edge0, i32 0, i32 1
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %edge0, i32 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = fsub float -0.000000e+00, %126
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %122, float %124, float %127)
  %128 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %edge0, %struct.b2Vec2* dereferenceable(8) %edge1)
  %129 = fcmp oge float %128, 0.000000e+00
  %130 = zext i1 %129 to i8
  store i8 %130, i8* %convex1, align 1
  %131 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %132 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 2
  %133 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 3
  %134 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %132, %struct.b2Vec2* dereferenceable(8) %133)
  %135 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %131, %struct.b2Vec2* dereferenceable(8) %10)
  store float %136, float* %offset0, align 4
  br label %137

; <label>:137                                     ; preds = %116, %0
  %138 = load i8, i8* %hasVertex3, align 1
  %139 = trunc i8 %138 to i1
  br i1 %139, label %140, label %161

; <label>:140                                     ; preds = %137
  %141 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 6
  %142 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %143 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %141, %struct.b2Vec2* dereferenceable(8) %142)
  %144 = bitcast %struct.b2Vec2* %edge2 to <2 x float>*
  store <2 x float> %143, <2 x float>* %144, align 4
  %145 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %edge2)
  %146 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %147 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %edge2, i32 0, i32 1
  %148 = load float, float* %147, align 4
  %149 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %edge2, i32 0, i32 0
  %150 = load float, float* %149, align 4
  %151 = fsub float -0.000000e+00, %150
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %146, float %148, float %151)
  %152 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %edge1, %struct.b2Vec2* dereferenceable(8) %edge2)
  %153 = fcmp ogt float %152, 0.000000e+00
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %convex2, align 1
  %155 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %156 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 2
  %157 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %158 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %156, %struct.b2Vec2* dereferenceable(8) %157)
  %159 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %158, <2 x float>* %159, align 4
  %160 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %155, %struct.b2Vec2* dereferenceable(8) %11)
  store float %160, float* %offset2, align 4
  br label %161

; <label>:161                                     ; preds = %140, %137
  %162 = load i8, i8* %hasVertex0, align 1
  %163 = trunc i8 %162 to i1
  br i1 %163, label %164, label %382

; <label>:164                                     ; preds = %161
  %165 = load i8, i8* %hasVertex3, align 1
  %166 = trunc i8 %165 to i1
  br i1 %166, label %167, label %382

; <label>:167                                     ; preds = %164
  %168 = load i8, i8* %convex1, align 1
  %169 = trunc i8 %168 to i1
  br i1 %169, label %170, label %222

; <label>:170                                     ; preds = %167
  %171 = load i8, i8* %convex2, align 1
  %172 = trunc i8 %171 to i1
  br i1 %172, label %173, label %222

; <label>:173                                     ; preds = %170
  %174 = load float, float* %offset0, align 4
  %175 = fcmp oge float %174, 0.000000e+00
  br i1 %175, label %182, label %176

; <label>:176                                     ; preds = %173
  %177 = load float, float* %offset1, align 4
  %178 = fcmp oge float %177, 0.000000e+00
  br i1 %178, label %182, label %179

; <label>:179                                     ; preds = %176
  %180 = load float, float* %offset2, align 4
  %181 = fcmp oge float %180, 0.000000e+00
  br label %182

; <label>:182                                     ; preds = %179, %176, %173
  %183 = phi i1 [ true, %176 ], [ true, %173 ], [ %181, %179 ]
  %184 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %185 = zext i1 %183 to i8
  store i8 %185, i8* %184, align 4
  %186 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %187 = load i8, i8* %186, align 4
  %188 = trunc i8 %187 to i1
  br i1 %188, label %189, label %202

; <label>:189                                     ; preds = %182
  %190 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %191 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %192 = bitcast %struct.b2Vec2* %190 to i8*
  %193 = bitcast %struct.b2Vec2* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %193, i64 8, i32 4, i1 false)
  %194 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %195 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %196 = bitcast %struct.b2Vec2* %194 to i8*
  %197 = bitcast %struct.b2Vec2* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %197, i64 8, i32 4, i1 false)
  %198 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %199 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %200 = bitcast %struct.b2Vec2* %198 to i8*
  %201 = bitcast %struct.b2Vec2* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %200, i8* %201, i64 8, i32 4, i1 false)
  br label %221

; <label>:202                                     ; preds = %182
  %203 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %204 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %205 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %204)
  %206 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %205, <2 x float>* %206, align 4
  %207 = bitcast %struct.b2Vec2* %203 to i8*
  %208 = bitcast %struct.b2Vec2* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %208, i64 8, i32 4, i1 false)
  %209 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %210 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %211 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %210)
  %212 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %211, <2 x float>* %212, align 4
  %213 = bitcast %struct.b2Vec2* %209 to i8*
  %214 = bitcast %struct.b2Vec2* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %213, i8* %214, i64 8, i32 4, i1 false)
  %215 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %216 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %217 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %216)
  %218 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %217, <2 x float>* %218, align 4
  %219 = bitcast %struct.b2Vec2* %215 to i8*
  %220 = bitcast %struct.b2Vec2* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 8, i32 4, i1 false)
  br label %221

; <label>:221                                     ; preds = %202, %189
  br label %381

; <label>:222                                     ; preds = %170, %167
  %223 = load i8, i8* %convex1, align 1
  %224 = trunc i8 %223 to i1
  br i1 %224, label %225, label %276

; <label>:225                                     ; preds = %222
  %226 = load float, float* %offset0, align 4
  %227 = fcmp oge float %226, 0.000000e+00
  br i1 %227, label %236, label %228

; <label>:228                                     ; preds = %225
  %229 = load float, float* %offset1, align 4
  %230 = fcmp oge float %229, 0.000000e+00
  br i1 %230, label %231, label %234

; <label>:231                                     ; preds = %228
  %232 = load float, float* %offset2, align 4
  %233 = fcmp oge float %232, 0.000000e+00
  br label %234

; <label>:234                                     ; preds = %231, %228
  %235 = phi i1 [ false, %228 ], [ %233, %231 ]
  br label %236

; <label>:236                                     ; preds = %234, %225
  %237 = phi i1 [ true, %225 ], [ %235, %234 ]
  %238 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %239 = zext i1 %237 to i8
  store i8 %239, i8* %238, align 4
  %240 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %241 = load i8, i8* %240, align 4
  %242 = trunc i8 %241 to i1
  br i1 %242, label %243, label %256

; <label>:243                                     ; preds = %236
  %244 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %245 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %246 = bitcast %struct.b2Vec2* %244 to i8*
  %247 = bitcast %struct.b2Vec2* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %246, i8* %247, i64 8, i32 4, i1 false)
  %248 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %249 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %250 = bitcast %struct.b2Vec2* %248 to i8*
  %251 = bitcast %struct.b2Vec2* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %250, i8* %251, i64 8, i32 4, i1 false)
  %252 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %253 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %254 = bitcast %struct.b2Vec2* %252 to i8*
  %255 = bitcast %struct.b2Vec2* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %254, i8* %255, i64 8, i32 4, i1 false)
  br label %275

; <label>:256                                     ; preds = %236
  %257 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %258 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %259 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %258)
  %260 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %259, <2 x float>* %260, align 4
  %261 = bitcast %struct.b2Vec2* %257 to i8*
  %262 = bitcast %struct.b2Vec2* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %262, i64 8, i32 4, i1 false)
  %263 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %264 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %265 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %264)
  %266 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %265, <2 x float>* %266, align 4
  %267 = bitcast %struct.b2Vec2* %263 to i8*
  %268 = bitcast %struct.b2Vec2* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %267, i8* %268, i64 8, i32 4, i1 false)
  %269 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %270 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %271 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %270)
  %272 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %271, <2 x float>* %272, align 4
  %273 = bitcast %struct.b2Vec2* %269 to i8*
  %274 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %273, i8* %274, i64 8, i32 4, i1 false)
  br label %275

; <label>:275                                     ; preds = %256, %243
  br label %380

; <label>:276                                     ; preds = %222
  %277 = load i8, i8* %convex2, align 1
  %278 = trunc i8 %277 to i1
  br i1 %278, label %279, label %330

; <label>:279                                     ; preds = %276
  %280 = load float, float* %offset2, align 4
  %281 = fcmp oge float %280, 0.000000e+00
  br i1 %281, label %290, label %282

; <label>:282                                     ; preds = %279
  %283 = load float, float* %offset0, align 4
  %284 = fcmp oge float %283, 0.000000e+00
  br i1 %284, label %285, label %288

; <label>:285                                     ; preds = %282
  %286 = load float, float* %offset1, align 4
  %287 = fcmp oge float %286, 0.000000e+00
  br label %288

; <label>:288                                     ; preds = %285, %282
  %289 = phi i1 [ false, %282 ], [ %287, %285 ]
  br label %290

; <label>:290                                     ; preds = %288, %279
  %291 = phi i1 [ true, %279 ], [ %289, %288 ]
  %292 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %293 = zext i1 %291 to i8
  store i8 %293, i8* %292, align 4
  %294 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %295 = load i8, i8* %294, align 4
  %296 = trunc i8 %295 to i1
  br i1 %296, label %297, label %310

; <label>:297                                     ; preds = %290
  %298 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %299 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %300 = bitcast %struct.b2Vec2* %298 to i8*
  %301 = bitcast %struct.b2Vec2* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %300, i8* %301, i64 8, i32 4, i1 false)
  %302 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %303 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %304 = bitcast %struct.b2Vec2* %302 to i8*
  %305 = bitcast %struct.b2Vec2* %303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %304, i8* %305, i64 8, i32 4, i1 false)
  %306 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %307 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %308 = bitcast %struct.b2Vec2* %306 to i8*
  %309 = bitcast %struct.b2Vec2* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %308, i8* %309, i64 8, i32 4, i1 false)
  br label %329

; <label>:310                                     ; preds = %290
  %311 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %312 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %313 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %312)
  %314 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %313, <2 x float>* %314, align 4
  %315 = bitcast %struct.b2Vec2* %311 to i8*
  %316 = bitcast %struct.b2Vec2* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %315, i8* %316, i64 8, i32 4, i1 false)
  %317 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %318 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %319 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %318)
  %320 = bitcast %struct.b2Vec2* %19 to <2 x float>*
  store <2 x float> %319, <2 x float>* %320, align 4
  %321 = bitcast %struct.b2Vec2* %317 to i8*
  %322 = bitcast %struct.b2Vec2* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* %322, i64 8, i32 4, i1 false)
  %323 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %324 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %325 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %324)
  %326 = bitcast %struct.b2Vec2* %20 to <2 x float>*
  store <2 x float> %325, <2 x float>* %326, align 4
  %327 = bitcast %struct.b2Vec2* %323 to i8*
  %328 = bitcast %struct.b2Vec2* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %327, i8* %328, i64 8, i32 4, i1 false)
  br label %329

; <label>:329                                     ; preds = %310, %297
  br label %379

; <label>:330                                     ; preds = %276
  %331 = load float, float* %offset0, align 4
  %332 = fcmp oge float %331, 0.000000e+00
  br i1 %332, label %333, label %339

; <label>:333                                     ; preds = %330
  %334 = load float, float* %offset1, align 4
  %335 = fcmp oge float %334, 0.000000e+00
  br i1 %335, label %336, label %339

; <label>:336                                     ; preds = %333
  %337 = load float, float* %offset2, align 4
  %338 = fcmp oge float %337, 0.000000e+00
  br label %339

; <label>:339                                     ; preds = %336, %333, %330
  %340 = phi i1 [ false, %333 ], [ false, %330 ], [ %338, %336 ]
  %341 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %342 = zext i1 %340 to i8
  store i8 %342, i8* %341, align 4
  %343 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %344 = load i8, i8* %343, align 4
  %345 = trunc i8 %344 to i1
  br i1 %345, label %346, label %359

; <label>:346                                     ; preds = %339
  %347 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %348 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %349 = bitcast %struct.b2Vec2* %347 to i8*
  %350 = bitcast %struct.b2Vec2* %348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %349, i8* %350, i64 8, i32 4, i1 false)
  %351 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %352 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %353 = bitcast %struct.b2Vec2* %351 to i8*
  %354 = bitcast %struct.b2Vec2* %352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %353, i8* %354, i64 8, i32 4, i1 false)
  %355 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %356 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %357 = bitcast %struct.b2Vec2* %355 to i8*
  %358 = bitcast %struct.b2Vec2* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %357, i8* %358, i64 8, i32 4, i1 false)
  br label %378

; <label>:359                                     ; preds = %339
  %360 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %361 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %362 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %361)
  %363 = bitcast %struct.b2Vec2* %21 to <2 x float>*
  store <2 x float> %362, <2 x float>* %363, align 4
  %364 = bitcast %struct.b2Vec2* %360 to i8*
  %365 = bitcast %struct.b2Vec2* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %364, i8* %365, i64 8, i32 4, i1 false)
  %366 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %367 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %368 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %367)
  %369 = bitcast %struct.b2Vec2* %22 to <2 x float>*
  store <2 x float> %368, <2 x float>* %369, align 4
  %370 = bitcast %struct.b2Vec2* %366 to i8*
  %371 = bitcast %struct.b2Vec2* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %370, i8* %371, i64 8, i32 4, i1 false)
  %372 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %373 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %374 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %373)
  %375 = bitcast %struct.b2Vec2* %23 to <2 x float>*
  store <2 x float> %374, <2 x float>* %375, align 4
  %376 = bitcast %struct.b2Vec2* %372 to i8*
  %377 = bitcast %struct.b2Vec2* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %376, i8* %377, i64 8, i32 4, i1 false)
  br label %378

; <label>:378                                     ; preds = %359, %346
  br label %379

; <label>:379                                     ; preds = %378, %329
  br label %380

; <label>:380                                     ; preds = %379, %275
  br label %381

; <label>:381                                     ; preds = %380, %221
  br label %623

; <label>:382                                     ; preds = %164, %161
  %383 = load i8, i8* %hasVertex0, align 1
  %384 = trunc i8 %383 to i1
  br i1 %384, label %385, label %481

; <label>:385                                     ; preds = %382
  %386 = load i8, i8* %convex1, align 1
  %387 = trunc i8 %386 to i1
  br i1 %387, label %388, label %434

; <label>:388                                     ; preds = %385
  %389 = load float, float* %offset0, align 4
  %390 = fcmp oge float %389, 0.000000e+00
  br i1 %390, label %394, label %391

; <label>:391                                     ; preds = %388
  %392 = load float, float* %offset1, align 4
  %393 = fcmp oge float %392, 0.000000e+00
  br label %394

; <label>:394                                     ; preds = %391, %388
  %395 = phi i1 [ true, %388 ], [ %393, %391 ]
  %396 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %397 = zext i1 %395 to i8
  store i8 %397, i8* %396, align 4
  %398 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %399 = load i8, i8* %398, align 4
  %400 = trunc i8 %399 to i1
  br i1 %400, label %401, label %416

; <label>:401                                     ; preds = %394
  %402 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %403 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %404 = bitcast %struct.b2Vec2* %402 to i8*
  %405 = bitcast %struct.b2Vec2* %403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %404, i8* %405, i64 8, i32 4, i1 false)
  %406 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %407 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %408 = bitcast %struct.b2Vec2* %406 to i8*
  %409 = bitcast %struct.b2Vec2* %407 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %408, i8* %409, i64 8, i32 4, i1 false)
  %410 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %411 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %412 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %411)
  %413 = bitcast %struct.b2Vec2* %24 to <2 x float>*
  store <2 x float> %412, <2 x float>* %413, align 4
  %414 = bitcast %struct.b2Vec2* %410 to i8*
  %415 = bitcast %struct.b2Vec2* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %414, i8* %415, i64 8, i32 4, i1 false)
  br label %433

; <label>:416                                     ; preds = %394
  %417 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %418 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %419 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %418)
  %420 = bitcast %struct.b2Vec2* %25 to <2 x float>*
  store <2 x float> %419, <2 x float>* %420, align 4
  %421 = bitcast %struct.b2Vec2* %417 to i8*
  %422 = bitcast %struct.b2Vec2* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %421, i8* %422, i64 8, i32 4, i1 false)
  %423 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %424 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %425 = bitcast %struct.b2Vec2* %423 to i8*
  %426 = bitcast %struct.b2Vec2* %424 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %425, i8* %426, i64 8, i32 4, i1 false)
  %427 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %428 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %429 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %428)
  %430 = bitcast %struct.b2Vec2* %26 to <2 x float>*
  store <2 x float> %429, <2 x float>* %430, align 4
  %431 = bitcast %struct.b2Vec2* %427 to i8*
  %432 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %431, i8* %432, i64 8, i32 4, i1 false)
  br label %433

; <label>:433                                     ; preds = %416, %401
  br label %480

; <label>:434                                     ; preds = %385
  %435 = load float, float* %offset0, align 4
  %436 = fcmp oge float %435, 0.000000e+00
  br i1 %436, label %437, label %440

; <label>:437                                     ; preds = %434
  %438 = load float, float* %offset1, align 4
  %439 = fcmp oge float %438, 0.000000e+00
  br label %440

; <label>:440                                     ; preds = %437, %434
  %441 = phi i1 [ false, %434 ], [ %439, %437 ]
  %442 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %443 = zext i1 %441 to i8
  store i8 %443, i8* %442, align 4
  %444 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %445 = load i8, i8* %444, align 4
  %446 = trunc i8 %445 to i1
  br i1 %446, label %447, label %462

; <label>:447                                     ; preds = %440
  %448 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %449 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %450 = bitcast %struct.b2Vec2* %448 to i8*
  %451 = bitcast %struct.b2Vec2* %449 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %450, i8* %451, i64 8, i32 4, i1 false)
  %452 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %453 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %454 = bitcast %struct.b2Vec2* %452 to i8*
  %455 = bitcast %struct.b2Vec2* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %454, i8* %455, i64 8, i32 4, i1 false)
  %456 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %457 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %458 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %457)
  %459 = bitcast %struct.b2Vec2* %27 to <2 x float>*
  store <2 x float> %458, <2 x float>* %459, align 4
  %460 = bitcast %struct.b2Vec2* %456 to i8*
  %461 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %460, i8* %461, i64 8, i32 4, i1 false)
  br label %479

; <label>:462                                     ; preds = %440
  %463 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %464 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %465 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %464)
  %466 = bitcast %struct.b2Vec2* %28 to <2 x float>*
  store <2 x float> %465, <2 x float>* %466, align 4
  %467 = bitcast %struct.b2Vec2* %463 to i8*
  %468 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %467, i8* %468, i64 8, i32 4, i1 false)
  %469 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %470 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %471 = bitcast %struct.b2Vec2* %469 to i8*
  %472 = bitcast %struct.b2Vec2* %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %471, i8* %472, i64 8, i32 4, i1 false)
  %473 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %474 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 7
  %475 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %474)
  %476 = bitcast %struct.b2Vec2* %29 to <2 x float>*
  store <2 x float> %475, <2 x float>* %476, align 4
  %477 = bitcast %struct.b2Vec2* %473 to i8*
  %478 = bitcast %struct.b2Vec2* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %477, i8* %478, i64 8, i32 4, i1 false)
  br label %479

; <label>:479                                     ; preds = %462, %447
  br label %480

; <label>:480                                     ; preds = %479, %433
  br label %622

; <label>:481                                     ; preds = %382
  %482 = load i8, i8* %hasVertex3, align 1
  %483 = trunc i8 %482 to i1
  br i1 %483, label %484, label %580

; <label>:484                                     ; preds = %481
  %485 = load i8, i8* %convex2, align 1
  %486 = trunc i8 %485 to i1
  br i1 %486, label %487, label %533

; <label>:487                                     ; preds = %484
  %488 = load float, float* %offset1, align 4
  %489 = fcmp oge float %488, 0.000000e+00
  br i1 %489, label %493, label %490

; <label>:490                                     ; preds = %487
  %491 = load float, float* %offset2, align 4
  %492 = fcmp oge float %491, 0.000000e+00
  br label %493

; <label>:493                                     ; preds = %490, %487
  %494 = phi i1 [ true, %487 ], [ %492, %490 ]
  %495 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %496 = zext i1 %494 to i8
  store i8 %496, i8* %495, align 4
  %497 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %498 = load i8, i8* %497, align 4
  %499 = trunc i8 %498 to i1
  br i1 %499, label %500, label %515

; <label>:500                                     ; preds = %493
  %501 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %502 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %503 = bitcast %struct.b2Vec2* %501 to i8*
  %504 = bitcast %struct.b2Vec2* %502 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %503, i8* %504, i64 8, i32 4, i1 false)
  %505 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %506 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %507 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %506)
  %508 = bitcast %struct.b2Vec2* %30 to <2 x float>*
  store <2 x float> %507, <2 x float>* %508, align 4
  %509 = bitcast %struct.b2Vec2* %505 to i8*
  %510 = bitcast %struct.b2Vec2* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %509, i8* %510, i64 8, i32 4, i1 false)
  %511 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %512 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %513 = bitcast %struct.b2Vec2* %511 to i8*
  %514 = bitcast %struct.b2Vec2* %512 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %513, i8* %514, i64 8, i32 4, i1 false)
  br label %532

; <label>:515                                     ; preds = %493
  %516 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %517 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %518 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %517)
  %519 = bitcast %struct.b2Vec2* %31 to <2 x float>*
  store <2 x float> %518, <2 x float>* %519, align 4
  %520 = bitcast %struct.b2Vec2* %516 to i8*
  %521 = bitcast %struct.b2Vec2* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %520, i8* %521, i64 8, i32 4, i1 false)
  %522 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %523 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %524 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %523)
  %525 = bitcast %struct.b2Vec2* %32 to <2 x float>*
  store <2 x float> %524, <2 x float>* %525, align 4
  %526 = bitcast %struct.b2Vec2* %522 to i8*
  %527 = bitcast %struct.b2Vec2* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %526, i8* %527, i64 8, i32 4, i1 false)
  %528 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %529 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %530 = bitcast %struct.b2Vec2* %528 to i8*
  %531 = bitcast %struct.b2Vec2* %529 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %530, i8* %531, i64 8, i32 4, i1 false)
  br label %532

; <label>:532                                     ; preds = %515, %500
  br label %579

; <label>:533                                     ; preds = %484
  %534 = load float, float* %offset1, align 4
  %535 = fcmp oge float %534, 0.000000e+00
  br i1 %535, label %536, label %539

; <label>:536                                     ; preds = %533
  %537 = load float, float* %offset2, align 4
  %538 = fcmp oge float %537, 0.000000e+00
  br label %539

; <label>:539                                     ; preds = %536, %533
  %540 = phi i1 [ false, %533 ], [ %538, %536 ]
  %541 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %542 = zext i1 %540 to i8
  store i8 %542, i8* %541, align 4
  %543 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %544 = load i8, i8* %543, align 4
  %545 = trunc i8 %544 to i1
  br i1 %545, label %546, label %561

; <label>:546                                     ; preds = %539
  %547 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %548 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %549 = bitcast %struct.b2Vec2* %547 to i8*
  %550 = bitcast %struct.b2Vec2* %548 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %549, i8* %550, i64 8, i32 4, i1 false)
  %551 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %552 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %553 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %552)
  %554 = bitcast %struct.b2Vec2* %33 to <2 x float>*
  store <2 x float> %553, <2 x float>* %554, align 4
  %555 = bitcast %struct.b2Vec2* %551 to i8*
  %556 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %555, i8* %556, i64 8, i32 4, i1 false)
  %557 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %558 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %559 = bitcast %struct.b2Vec2* %557 to i8*
  %560 = bitcast %struct.b2Vec2* %558 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %559, i8* %560, i64 8, i32 4, i1 false)
  br label %578

; <label>:561                                     ; preds = %539
  %562 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %563 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %564 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %563)
  %565 = bitcast %struct.b2Vec2* %34 to <2 x float>*
  store <2 x float> %564, <2 x float>* %565, align 4
  %566 = bitcast %struct.b2Vec2* %562 to i8*
  %567 = bitcast %struct.b2Vec2* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %566, i8* %567, i64 8, i32 4, i1 false)
  %568 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %569 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 9
  %570 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %569)
  %571 = bitcast %struct.b2Vec2* %35 to <2 x float>*
  store <2 x float> %570, <2 x float>* %571, align 4
  %572 = bitcast %struct.b2Vec2* %568 to i8*
  %573 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %572, i8* %573, i64 8, i32 4, i1 false)
  %574 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %575 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %576 = bitcast %struct.b2Vec2* %574 to i8*
  %577 = bitcast %struct.b2Vec2* %575 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %576, i8* %577, i64 8, i32 4, i1 false)
  br label %578

; <label>:578                                     ; preds = %561, %546
  br label %579

; <label>:579                                     ; preds = %578, %532
  br label %621

; <label>:580                                     ; preds = %481
  %581 = load float, float* %offset1, align 4
  %582 = fcmp oge float %581, 0.000000e+00
  %583 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %584 = zext i1 %582 to i8
  store i8 %584, i8* %583, align 4
  %585 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %586 = load i8, i8* %585, align 4
  %587 = trunc i8 %586 to i1
  br i1 %587, label %588, label %605

; <label>:588                                     ; preds = %580
  %589 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %590 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %591 = bitcast %struct.b2Vec2* %589 to i8*
  %592 = bitcast %struct.b2Vec2* %590 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %591, i8* %592, i64 8, i32 4, i1 false)
  %593 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %594 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %595 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %594)
  %596 = bitcast %struct.b2Vec2* %36 to <2 x float>*
  store <2 x float> %595, <2 x float>* %596, align 4
  %597 = bitcast %struct.b2Vec2* %593 to i8*
  %598 = bitcast %struct.b2Vec2* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %597, i8* %598, i64 8, i32 4, i1 false)
  %599 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %600 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %601 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %600)
  %602 = bitcast %struct.b2Vec2* %37 to <2 x float>*
  store <2 x float> %601, <2 x float>* %602, align 4
  %603 = bitcast %struct.b2Vec2* %599 to i8*
  %604 = bitcast %struct.b2Vec2* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %603, i8* %604, i64 8, i32 4, i1 false)
  br label %620

; <label>:605                                     ; preds = %580
  %606 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %607 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %608 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %607)
  %609 = bitcast %struct.b2Vec2* %38 to <2 x float>*
  store <2 x float> %608, <2 x float>* %609, align 4
  %610 = bitcast %struct.b2Vec2* %606 to i8*
  %611 = bitcast %struct.b2Vec2* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %610, i8* %611, i64 8, i32 4, i1 false)
  %612 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 13
  %613 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %614 = bitcast %struct.b2Vec2* %612 to i8*
  %615 = bitcast %struct.b2Vec2* %613 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %614, i8* %615, i64 8, i32 4, i1 false)
  %616 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 14
  %617 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %618 = bitcast %struct.b2Vec2* %616 to i8*
  %619 = bitcast %struct.b2Vec2* %617 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %618, i8* %619, i64 8, i32 4, i1 false)
  br label %620

; <label>:620                                     ; preds = %605, %588
  br label %621

; <label>:621                                     ; preds = %620, %579
  br label %622

; <label>:622                                     ; preds = %621, %480
  br label %623

; <label>:623                                     ; preds = %622, %381
  %624 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %625 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %624, i32 0, i32 4
  %626 = load i32, i32* %625, align 8
  %627 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %628 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %627, i32 0, i32 2
  store i32 %626, i32* %628, align 4
  store i32 0, i32* %i, align 4
  br label %629

; <label>:629                                     ; preds = %667, %623
  %630 = load i32, i32* %i, align 4
  %631 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %632 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %631, i32 0, i32 4
  %633 = load i32, i32* %632, align 8
  %634 = icmp slt i32 %630, %633
  br i1 %634, label %635, label %670

; <label>:635                                     ; preds = %629
  %636 = load i32, i32* %i, align 4
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %639 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %638, i32 0, i32 0
  %640 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %639, i64 0, i64 %637
  %641 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 1
  %642 = load i32, i32* %i, align 4
  %643 = sext i32 %642 to i64
  %644 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %645 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %644, i32 0, i32 2
  %646 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %645, i64 0, i64 %643
  %647 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %641, %struct.b2Vec2* dereferenceable(8) %646)
  %648 = bitcast %struct.b2Vec2* %39 to <2 x float>*
  store <2 x float> %647, <2 x float>* %648, align 4
  %649 = bitcast %struct.b2Vec2* %640 to i8*
  %650 = bitcast %struct.b2Vec2* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %649, i8* %650, i64 8, i32 4, i1 false)
  %651 = load i32, i32* %i, align 4
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %654 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %653, i32 0, i32 1
  %655 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %654, i64 0, i64 %652
  %656 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 1
  %657 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %656, i32 0, i32 1
  %658 = load i32, i32* %i, align 4
  %659 = sext i32 %658 to i64
  %660 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %661 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %660, i32 0, i32 3
  %662 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %661, i64 0, i64 %659
  %663 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %657, %struct.b2Vec2* dereferenceable(8) %662)
  %664 = bitcast %struct.b2Vec2* %40 to <2 x float>*
  store <2 x float> %663, <2 x float>* %664, align 4
  %665 = bitcast %struct.b2Vec2* %655 to i8*
  %666 = bitcast %struct.b2Vec2* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %665, i8* %666, i64 8, i32 4, i1 false)
  br label %667

; <label>:667                                     ; preds = %635
  %668 = load i32, i32* %i, align 4
  %669 = add nsw i32 %668, 1
  store i32 %669, i32* %i, align 4
  br label %629

; <label>:670                                     ; preds = %629
  %671 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 15
  store float 0x3F947AE140000000, float* %671, align 4
  %672 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %673 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %672, i32 0, i32 4
  store i32 0, i32* %673, align 4
  %674 = call { i64, float } @_ZN12b2EPCollider21ComputeEdgeSeparationEv(%struct.b2EPCollider* %47)
  store { i64, float } %674, { i64, float }* %41, align 8
  %675 = bitcast { i64, float }* %41 to i8*
  %676 = bitcast %struct.b2EPAxis* %edgeAxis to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %676, i8* %675, i64 12, i32 4, i1 false)
  %677 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %edgeAxis, i32 0, i32 0
  %678 = load i32, i32* %677, align 4
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %681

; <label>:680                                     ; preds = %670
  br label %1175

; <label>:681                                     ; preds = %670
  %682 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %edgeAxis, i32 0, i32 2
  %683 = load float, float* %682, align 4
  %684 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 15
  %685 = load float, float* %684, align 4
  %686 = fcmp ogt float %683, %685
  br i1 %686, label %687, label %688

; <label>:687                                     ; preds = %681
  br label %1175

; <label>:688                                     ; preds = %681
  %689 = call { i64, float } @_ZN12b2EPCollider24ComputePolygonSeparationEv(%struct.b2EPCollider* %47)
  store { i64, float } %689, { i64, float }* %42, align 8
  %690 = bitcast { i64, float }* %42 to i8*
  %691 = bitcast %struct.b2EPAxis* %polygonAxis to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %691, i8* %690, i64 12, i32 4, i1 false)
  %692 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %polygonAxis, i32 0, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %695, label %702

; <label>:695                                     ; preds = %688
  %696 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %polygonAxis, i32 0, i32 2
  %697 = load float, float* %696, align 4
  %698 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 15
  %699 = load float, float* %698, align 4
  %700 = fcmp ogt float %697, %699
  br i1 %700, label %701, label %702

; <label>:701                                     ; preds = %695
  br label %1175

; <label>:702                                     ; preds = %695, %688
  store float 0x3FEF5C2900000000, float* %k_relativeTol, align 4
  store float 0x3F50624DE0000000, float* %k_absoluteTol, align 4
  %703 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %polygonAxis, i32 0, i32 0
  %704 = load i32, i32* %703, align 4
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %706, label %709

; <label>:706                                     ; preds = %702
  %707 = bitcast %struct.b2EPAxis* %primaryAxis to i8*
  %708 = bitcast %struct.b2EPAxis* %edgeAxis to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %707, i8* %708, i64 12, i32 4, i1 false)
  br label %724

; <label>:709                                     ; preds = %702
  %710 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %polygonAxis, i32 0, i32 2
  %711 = load float, float* %710, align 4
  %712 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %edgeAxis, i32 0, i32 2
  %713 = load float, float* %712, align 4
  %714 = fmul float 0x3FEF5C2900000000, %713
  %715 = fadd float %714, 0x3F50624DE0000000
  %716 = fcmp ogt float %711, %715
  br i1 %716, label %717, label %720

; <label>:717                                     ; preds = %709
  %718 = bitcast %struct.b2EPAxis* %primaryAxis to i8*
  %719 = bitcast %struct.b2EPAxis* %polygonAxis to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %718, i8* %719, i64 12, i32 4, i1 false)
  br label %723

; <label>:720                                     ; preds = %709
  %721 = bitcast %struct.b2EPAxis* %primaryAxis to i8*
  %722 = bitcast %struct.b2EPAxis* %edgeAxis to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %721, i8* %722, i64 12, i32 4, i1 false)
  br label %723

; <label>:723                                     ; preds = %720, %717
  br label %724

; <label>:724                                     ; preds = %723, %706
  %725 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i32 0, i32 0
  %726 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %725, i64 2
  br label %727

; <label>:727                                     ; preds = %727, %724
  %728 = phi %struct.b2ClipVertex* [ %725, %724 ], [ %729, %727 ]
  call void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %728)
  %729 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %728, i64 1
  %730 = icmp eq %struct.b2ClipVertex* %729, %726
  br i1 %730, label %731, label %727

; <label>:731                                     ; preds = %727
  call void @_ZN15b2ReferenceFaceC2Ev(%struct.b2ReferenceFace* %rf)
  %732 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %primaryAxis, i32 0, i32 0
  %733 = load i32, i32* %732, align 4
  %734 = icmp eq i32 %733, 1
  br i1 %734, label %735, label %871

; <label>:735                                     ; preds = %731
  %736 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %737 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %736, i32 0, i32 3
  store i32 1, i32* %737, align 4
  store i32 0, i32* %bestIndex, align 4
  %738 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %739 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %740 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %739, i32 0, i32 1
  %741 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %740, i64 0, i64 0
  %742 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %738, %struct.b2Vec2* dereferenceable(8) %741)
  store float %742, float* %bestValue, align 4
  store i32 1, i32* %i1, align 4
  br label %743

; <label>:743                                     ; preds = %764, %735
  %744 = load i32, i32* %i1, align 4
  %745 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %746 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %745, i32 0, i32 2
  %747 = load i32, i32* %746, align 4
  %748 = icmp slt i32 %744, %747
  br i1 %748, label %749, label %767

; <label>:749                                     ; preds = %743
  %750 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 10
  %751 = load i32, i32* %i1, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %754 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %753, i32 0, i32 1
  %755 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %754, i64 0, i64 %752
  %756 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %750, %struct.b2Vec2* dereferenceable(8) %755)
  store float %756, float* %value, align 4
  %757 = load float, float* %value, align 4
  %758 = load float, float* %bestValue, align 4
  %759 = fcmp olt float %757, %758
  br i1 %759, label %760, label %763

; <label>:760                                     ; preds = %749
  %761 = load float, float* %value, align 4
  store float %761, float* %bestValue, align 4
  %762 = load i32, i32* %i1, align 4
  store i32 %762, i32* %bestIndex, align 4
  br label %763

; <label>:763                                     ; preds = %760, %749
  br label %764

; <label>:764                                     ; preds = %763
  %765 = load i32, i32* %i1, align 4
  %766 = add nsw i32 %765, 1
  store i32 %766, i32* %i1, align 4
  br label %743

; <label>:767                                     ; preds = %743
  %768 = load i32, i32* %bestIndex, align 4
  store i32 %768, i32* %i12, align 4
  %769 = load i32, i32* %i12, align 4
  %770 = add nsw i32 %769, 1
  %771 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %772 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %771, i32 0, i32 2
  %773 = load i32, i32* %772, align 4
  %774 = icmp slt i32 %770, %773
  br i1 %774, label %775, label %778

; <label>:775                                     ; preds = %767
  %776 = load i32, i32* %i12, align 4
  %777 = add nsw i32 %776, 1
  br label %779

; <label>:778                                     ; preds = %767
  br label %779

; <label>:779                                     ; preds = %778, %775
  %780 = phi i32 [ %777, %775 ], [ 0, %778 ]
  store i32 %780, i32* %i2, align 4
  %781 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %782 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %781, i32 0, i32 0
  %783 = load i32, i32* %i12, align 4
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %786 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %785, i32 0, i32 0
  %787 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %786, i64 0, i64 %784
  %788 = bitcast %struct.b2Vec2* %782 to i8*
  %789 = bitcast %struct.b2Vec2* %787 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %788, i8* %789, i64 8, i32 4, i1 false)
  %790 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %791 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %790, i32 0, i32 1
  %792 = bitcast %union.anon* %791 to %struct.b2ContactFeature*
  %793 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %792, i32 0, i32 0
  store i8 0, i8* %793, align 8
  %794 = load i32, i32* %i12, align 4
  %795 = trunc i32 %794 to i8
  %796 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %797 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %796, i32 0, i32 1
  %798 = bitcast %union.anon* %797 to %struct.b2ContactFeature*
  %799 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %798, i32 0, i32 1
  store i8 %795, i8* %799, align 1
  %800 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %801 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %800, i32 0, i32 1
  %802 = bitcast %union.anon* %801 to %struct.b2ContactFeature*
  %803 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %802, i32 0, i32 2
  store i8 1, i8* %803, align 2
  %804 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %805 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %804, i32 0, i32 1
  %806 = bitcast %union.anon* %805 to %struct.b2ContactFeature*
  %807 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %806, i32 0, i32 3
  store i8 0, i8* %807, align 1
  %808 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %809 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %808, i32 0, i32 0
  %810 = load i32, i32* %i2, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %813 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %812, i32 0, i32 0
  %814 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %813, i64 0, i64 %811
  %815 = bitcast %struct.b2Vec2* %809 to i8*
  %816 = bitcast %struct.b2Vec2* %814 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %815, i8* %816, i64 8, i32 4, i1 false)
  %817 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %818 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %817, i32 0, i32 1
  %819 = bitcast %union.anon* %818 to %struct.b2ContactFeature*
  %820 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %819, i32 0, i32 0
  store i8 0, i8* %820, align 4
  %821 = load i32, i32* %i2, align 4
  %822 = trunc i32 %821 to i8
  %823 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %824 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %823, i32 0, i32 1
  %825 = bitcast %union.anon* %824 to %struct.b2ContactFeature*
  %826 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %825, i32 0, i32 1
  store i8 %822, i8* %826, align 1
  %827 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %828 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %827, i32 0, i32 1
  %829 = bitcast %union.anon* %828 to %struct.b2ContactFeature*
  %830 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %829, i32 0, i32 2
  store i8 1, i8* %830, align 2
  %831 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %832 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %831, i32 0, i32 1
  %833 = bitcast %union.anon* %832 to %struct.b2ContactFeature*
  %834 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %833, i32 0, i32 3
  store i8 0, i8* %834, align 1
  %835 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 16
  %836 = load i8, i8* %835, align 4
  %837 = trunc i8 %836 to i1
  br i1 %837, label %838, label %853

; <label>:838                                     ; preds = %779
  %839 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  store i32 0, i32* %839, align 4
  %840 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 1
  store i32 1, i32* %840, align 4
  %841 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 2
  %842 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %843 = bitcast %struct.b2Vec2* %841 to i8*
  %844 = bitcast %struct.b2Vec2* %842 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %843, i8* %844, i64 8, i32 4, i1 false)
  %845 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 3
  %846 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %847 = bitcast %struct.b2Vec2* %845 to i8*
  %848 = bitcast %struct.b2Vec2* %846 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %847, i8* %848, i64 8, i32 4, i1 false)
  %849 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %850 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %851 = bitcast %struct.b2Vec2* %849 to i8*
  %852 = bitcast %struct.b2Vec2* %850 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %851, i8* %852, i64 8, i32 4, i1 false)
  br label %870

; <label>:853                                     ; preds = %779
  %854 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  store i32 1, i32* %854, align 4
  %855 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 1
  store i32 0, i32* %855, align 4
  %856 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 2
  %857 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %858 = bitcast %struct.b2Vec2* %856 to i8*
  %859 = bitcast %struct.b2Vec2* %857 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %858, i8* %859, i64 8, i32 4, i1 false)
  %860 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 3
  %861 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %862 = bitcast %struct.b2Vec2* %860 to i8*
  %863 = bitcast %struct.b2Vec2* %861 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %862, i8* %863, i64 8, i32 4, i1 false)
  %864 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %865 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 8
  %866 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %865)
  %867 = bitcast %struct.b2Vec2* %43 to <2 x float>*
  store <2 x float> %866, <2 x float>* %867, align 4
  %868 = bitcast %struct.b2Vec2* %864 to i8*
  %869 = bitcast %struct.b2Vec2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %868, i8* %869, i64 8, i32 4, i1 false)
  br label %870

; <label>:870                                     ; preds = %853, %838
  br label %967

; <label>:871                                     ; preds = %731
  %872 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %873 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %872, i32 0, i32 3
  store i32 2, i32* %873, align 4
  %874 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %875 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %874, i32 0, i32 0
  %876 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 4
  %877 = bitcast %struct.b2Vec2* %875 to i8*
  %878 = bitcast %struct.b2Vec2* %876 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %877, i8* %878, i64 8, i32 4, i1 false)
  %879 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %880 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %879, i32 0, i32 1
  %881 = bitcast %union.anon* %880 to %struct.b2ContactFeature*
  %882 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %881, i32 0, i32 0
  store i8 0, i8* %882, align 8
  %883 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %primaryAxis, i32 0, i32 1
  %884 = load i32, i32* %883, align 4
  %885 = trunc i32 %884 to i8
  %886 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %887 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %886, i32 0, i32 1
  %888 = bitcast %union.anon* %887 to %struct.b2ContactFeature*
  %889 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %888, i32 0, i32 1
  store i8 %885, i8* %889, align 1
  %890 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %891 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %890, i32 0, i32 1
  %892 = bitcast %union.anon* %891 to %struct.b2ContactFeature*
  %893 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %892, i32 0, i32 2
  store i8 0, i8* %893, align 2
  %894 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 0
  %895 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %894, i32 0, i32 1
  %896 = bitcast %union.anon* %895 to %struct.b2ContactFeature*
  %897 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %896, i32 0, i32 3
  store i8 1, i8* %897, align 1
  %898 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %899 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %898, i32 0, i32 0
  %900 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 5
  %901 = bitcast %struct.b2Vec2* %899 to i8*
  %902 = bitcast %struct.b2Vec2* %900 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %901, i8* %902, i64 8, i32 4, i1 false)
  %903 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %904 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %903, i32 0, i32 1
  %905 = bitcast %union.anon* %904 to %struct.b2ContactFeature*
  %906 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %905, i32 0, i32 0
  store i8 0, i8* %906, align 4
  %907 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %primaryAxis, i32 0, i32 1
  %908 = load i32, i32* %907, align 4
  %909 = trunc i32 %908 to i8
  %910 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %911 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %910, i32 0, i32 1
  %912 = bitcast %union.anon* %911 to %struct.b2ContactFeature*
  %913 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %912, i32 0, i32 1
  store i8 %909, i8* %913, align 1
  %914 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %915 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %914, i32 0, i32 1
  %916 = bitcast %union.anon* %915 to %struct.b2ContactFeature*
  %917 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %916, i32 0, i32 2
  store i8 0, i8* %917, align 2
  %918 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i64 0, i64 1
  %919 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %918, i32 0, i32 1
  %920 = bitcast %union.anon* %919 to %struct.b2ContactFeature*
  %921 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %920, i32 0, i32 3
  store i8 1, i8* %921, align 1
  %922 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %primaryAxis, i32 0, i32 1
  %923 = load i32, i32* %922, align 4
  %924 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  store i32 %923, i32* %924, align 4
  %925 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %926 = load i32, i32* %925, align 4
  %927 = add nsw i32 %926, 1
  %928 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %929 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %928, i32 0, i32 2
  %930 = load i32, i32* %929, align 4
  %931 = icmp slt i32 %927, %930
  br i1 %931, label %932, label %936

; <label>:932                                     ; preds = %871
  %933 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %934 = load i32, i32* %933, align 4
  %935 = add nsw i32 %934, 1
  br label %937

; <label>:936                                     ; preds = %871
  br label %937

; <label>:937                                     ; preds = %936, %932
  %938 = phi i32 [ %935, %932 ], [ 0, %936 ]
  %939 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 1
  store i32 %938, i32* %939, align 4
  %940 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 2
  %941 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %942 = load i32, i32* %941, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %945 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %944, i32 0, i32 0
  %946 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %945, i64 0, i64 %943
  %947 = bitcast %struct.b2Vec2* %940 to i8*
  %948 = bitcast %struct.b2Vec2* %946 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %947, i8* %948, i64 8, i32 4, i1 false)
  %949 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 3
  %950 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 1
  %951 = load i32, i32* %950, align 4
  %952 = sext i32 %951 to i64
  %953 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %954 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %953, i32 0, i32 0
  %955 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %954, i64 0, i64 %952
  %956 = bitcast %struct.b2Vec2* %949 to i8*
  %957 = bitcast %struct.b2Vec2* %955 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %956, i8* %957, i64 8, i32 4, i1 false)
  %958 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %959 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %960 = load i32, i32* %959, align 4
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 0
  %963 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %962, i32 0, i32 1
  %964 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %963, i64 0, i64 %961
  %965 = bitcast %struct.b2Vec2* %958 to i8*
  %966 = bitcast %struct.b2Vec2* %964 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %965, i8* %966, i64 8, i32 4, i1 false)
  br label %967

; <label>:967                                     ; preds = %937, %870
  %968 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 5
  %969 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %970 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %969, i32 0, i32 1
  %971 = load float, float* %970, align 4
  %972 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %973 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %972, i32 0, i32 0
  %974 = load float, float* %973, align 4
  %975 = fsub float -0.000000e+00, %974
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %968, float %971, float %975)
  %976 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 7
  %977 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 5
  %978 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %977)
  %979 = bitcast %struct.b2Vec2* %44 to <2 x float>*
  store <2 x float> %978, <2 x float>* %979, align 4
  %980 = bitcast %struct.b2Vec2* %976 to i8*
  %981 = bitcast %struct.b2Vec2* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %980, i8* %981, i64 8, i32 4, i1 false)
  %982 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 5
  %983 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 2
  %984 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %982, %struct.b2Vec2* dereferenceable(8) %983)
  %985 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 6
  store float %984, float* %985, align 4
  %986 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 7
  %987 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 3
  %988 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %986, %struct.b2Vec2* dereferenceable(8) %987)
  %989 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 8
  store float %988, float* %989, align 4
  %990 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints1, i32 0, i32 0
  %991 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %990, i64 2
  br label %992

; <label>:992                                     ; preds = %992, %967
  %993 = phi %struct.b2ClipVertex* [ %990, %967 ], [ %994, %992 ]
  call void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %993)
  %994 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %993, i64 1
  %995 = icmp eq %struct.b2ClipVertex* %994, %991
  br i1 %995, label %996, label %992

; <label>:996                                     ; preds = %992
  %997 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i32 0, i32 0
  %998 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %997, i64 2
  br label %999

; <label>:999                                     ; preds = %999, %996
  %1000 = phi %struct.b2ClipVertex* [ %997, %996 ], [ %1001, %999 ]
  call void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %1000)
  %1001 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1000, i64 1
  %1002 = icmp eq %struct.b2ClipVertex* %1001, %998
  br i1 %1002, label %1003, label %999

; <label>:1003                                    ; preds = %999
  %1004 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints1, i32 0, i32 0
  %1005 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %ie, i32 0, i32 0
  %1006 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 5
  %1007 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 6
  %1008 = load float, float* %1007, align 4
  %1009 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %1010 = load i32, i32* %1009, align 4
  %1011 = call i32 @_Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi(%struct.b2ClipVertex* %1004, %struct.b2ClipVertex* %1005, %struct.b2Vec2* dereferenceable(8) %1006, float %1008, i32 %1010)
  store i32 %1011, i32* %np, align 4
  %1012 = load i32, i32* %np, align 4
  %1013 = icmp slt i32 %1012, 2
  br i1 %1013, label %1014, label %1015

; <label>:1014                                    ; preds = %1003
  br label %1175

; <label>:1015                                    ; preds = %1003
  %1016 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i32 0, i32 0
  %1017 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints1, i32 0, i32 0
  %1018 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 7
  %1019 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 8
  %1020 = load float, float* %1019, align 4
  %1021 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 1
  %1022 = load i32, i32* %1021, align 4
  %1023 = call i32 @_Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi(%struct.b2ClipVertex* %1016, %struct.b2ClipVertex* %1017, %struct.b2Vec2* dereferenceable(8) %1018, float %1020, i32 %1022)
  store i32 %1023, i32* %np, align 4
  %1024 = load i32, i32* %np, align 4
  %1025 = icmp slt i32 %1024, 2
  br i1 %1025, label %1026, label %1027

; <label>:1026                                    ; preds = %1015
  br label %1175

; <label>:1027                                    ; preds = %1015
  %1028 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %primaryAxis, i32 0, i32 0
  %1029 = load i32, i32* %1028, align 4
  %1030 = icmp eq i32 %1029, 1
  br i1 %1030, label %1031, label %1042

; <label>:1031                                    ; preds = %1027
  %1032 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %1033 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %1032, i32 0, i32 1
  %1034 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %1035 = bitcast %struct.b2Vec2* %1033 to i8*
  %1036 = bitcast %struct.b2Vec2* %1034 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1035, i8* %1036, i64 8, i32 4, i1 false)
  %1037 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %1038 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %1037, i32 0, i32 2
  %1039 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 2
  %1040 = bitcast %struct.b2Vec2* %1038 to i8*
  %1041 = bitcast %struct.b2Vec2* %1039 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1040, i8* %1041, i64 8, i32 4, i1 false)
  br label %1063

; <label>:1042                                    ; preds = %1027
  %1043 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %1044 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %1043, i32 0, i32 1
  %1045 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %1046 = load i32, i32* %1045, align 4
  %1047 = sext i32 %1046 to i64
  %1048 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %1049 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %1048, i32 0, i32 3
  %1050 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %1049, i64 0, i64 %1047
  %1051 = bitcast %struct.b2Vec2* %1044 to i8*
  %1052 = bitcast %struct.b2Vec2* %1050 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1051, i8* %1052, i64 8, i32 4, i1 false)
  %1053 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %1054 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %1053, i32 0, i32 2
  %1055 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 0
  %1056 = load i32, i32* %1055, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %1059 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %1058, i32 0, i32 2
  %1060 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %1059, i64 0, i64 %1057
  %1061 = bitcast %struct.b2Vec2* %1054 to i8*
  %1062 = bitcast %struct.b2Vec2* %1060 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1061, i8* %1062, i64 8, i32 4, i1 false)
  br label %1063

; <label>:1063                                    ; preds = %1042, %1031
  store i32 0, i32* %pointCount, align 4
  store i32 0, i32* %i3, align 4
  br label %1064

; <label>:1064                                    ; preds = %1168, %1063
  %1065 = load i32, i32* %i3, align 4
  %1066 = icmp slt i32 %1065, 2
  br i1 %1066, label %1067, label %1171

; <label>:1067                                    ; preds = %1064
  %1068 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 4
  %1069 = load i32, i32* %i3, align 4
  %1070 = sext i32 %1069 to i64
  %1071 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1070
  %1072 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1071, i32 0, i32 0
  %1073 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %rf, i32 0, i32 2
  %1074 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %1072, %struct.b2Vec2* dereferenceable(8) %1073)
  %1075 = bitcast %struct.b2Vec2* %45 to <2 x float>*
  store <2 x float> %1074, <2 x float>* %1075, align 4
  %1076 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %1068, %struct.b2Vec2* dereferenceable(8) %45)
  store float %1076, float* %separation, align 4
  %1077 = load float, float* %separation, align 4
  %1078 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 15
  %1079 = load float, float* %1078, align 4
  %1080 = fcmp ole float %1077, %1079
  br i1 %1080, label %1081, label %1167

; <label>:1081                                    ; preds = %1067
  %1082 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %1083 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %1082, i32 0, i32 0
  %1084 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %1083, i32 0, i32 0
  %1085 = load i32, i32* %pointCount, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1084, i64 %1086
  store %struct.b2ManifoldPoint* %1087, %struct.b2ManifoldPoint** %cp, align 8
  %1088 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %primaryAxis, i32 0, i32 0
  %1089 = load i32, i32* %1088, align 4
  %1090 = icmp eq i32 %1089, 1
  br i1 %1090, label %1091, label %1111

; <label>:1091                                    ; preds = %1081
  %1092 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1093 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1092, i32 0, i32 0
  %1094 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %47, i32 0, i32 1
  %1095 = load i32, i32* %i3, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1096
  %1098 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1097, i32 0, i32 0
  %1099 = call <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %1094, %struct.b2Vec2* dereferenceable(8) %1098)
  %1100 = bitcast %struct.b2Vec2* %46 to <2 x float>*
  store <2 x float> %1099, <2 x float>* %1100, align 4
  %1101 = bitcast %struct.b2Vec2* %1093 to i8*
  %1102 = bitcast %struct.b2Vec2* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1101, i8* %1102, i64 8, i32 4, i1 false)
  %1103 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1104 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1103, i32 0, i32 3
  %1105 = load i32, i32* %i3, align 4
  %1106 = sext i32 %1105 to i64
  %1107 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1106
  %1108 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1107, i32 0, i32 1
  %1109 = bitcast %union.anon* %1104 to i8*
  %1110 = bitcast %union.anon* %1108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1109, i8* %1110, i64 4, i32 4, i1 false)
  br label %1164

; <label>:1111                                    ; preds = %1081
  %1112 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1113 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1112, i32 0, i32 0
  %1114 = load i32, i32* %i3, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1115
  %1117 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1116, i32 0, i32 0
  %1118 = bitcast %struct.b2Vec2* %1113 to i8*
  %1119 = bitcast %struct.b2Vec2* %1117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1118, i8* %1119, i64 8, i32 4, i1 false)
  %1120 = load i32, i32* %i3, align 4
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1121
  %1123 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1122, i32 0, i32 1
  %1124 = bitcast %union.anon* %1123 to %struct.b2ContactFeature*
  %1125 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1124, i32 0, i32 3
  %1126 = load i8, i8* %1125, align 1
  %1127 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1128 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1127, i32 0, i32 3
  %1129 = bitcast %union.anon* %1128 to %struct.b2ContactFeature*
  %1130 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1129, i32 0, i32 2
  store i8 %1126, i8* %1130, align 2
  %1131 = load i32, i32* %i3, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1132
  %1134 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1133, i32 0, i32 1
  %1135 = bitcast %union.anon* %1134 to %struct.b2ContactFeature*
  %1136 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1135, i32 0, i32 2
  %1137 = load i8, i8* %1136, align 2
  %1138 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1139 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1138, i32 0, i32 3
  %1140 = bitcast %union.anon* %1139 to %struct.b2ContactFeature*
  %1141 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1140, i32 0, i32 3
  store i8 %1137, i8* %1141, align 1
  %1142 = load i32, i32* %i3, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1143
  %1145 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1144, i32 0, i32 1
  %1146 = bitcast %union.anon* %1145 to %struct.b2ContactFeature*
  %1147 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1146, i32 0, i32 1
  %1148 = load i8, i8* %1147, align 1
  %1149 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1150 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1149, i32 0, i32 3
  %1151 = bitcast %union.anon* %1150 to %struct.b2ContactFeature*
  %1152 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1151, i32 0, i32 0
  store i8 %1148, i8* %1152, align 4
  %1153 = load i32, i32* %i3, align 4
  %1154 = sext i32 %1153 to i64
  %1155 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %1154
  %1156 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %1155, i32 0, i32 1
  %1157 = bitcast %union.anon* %1156 to %struct.b2ContactFeature*
  %1158 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1157, i32 0, i32 0
  %1159 = load i8, i8* %1158, align 4
  %1160 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %1161 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %1160, i32 0, i32 3
  %1162 = bitcast %union.anon* %1161 to %struct.b2ContactFeature*
  %1163 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %1162, i32 0, i32 1
  store i8 %1159, i8* %1163, align 1
  br label %1164

; <label>:1164                                    ; preds = %1111, %1091
  %1165 = load i32, i32* %pointCount, align 4
  %1166 = add nsw i32 %1165, 1
  store i32 %1166, i32* %pointCount, align 4
  br label %1167

; <label>:1167                                    ; preds = %1164, %1067
  br label %1168

; <label>:1168                                    ; preds = %1167
  %1169 = load i32, i32* %i3, align 4
  %1170 = add nsw i32 %1169, 1
  store i32 %1170, i32* %i3, align 4
  br label %1064

; <label>:1171                                    ; preds = %1064
  %1172 = load i32, i32* %pointCount, align 4
  %1173 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %1174 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %1173, i32 0, i32 4
  store i32 %1172, i32* %1174, align 4
  br label %1175

; <label>:1175                                    ; preds = %1171, %1026, %1014, %701, %687, %680
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr { <2 x float>, <2 x float> } @_Z6b2MulTRK11b2TransformS1_(%struct.b2Transform* dereferenceable(16) %A, %struct.b2Transform* dereferenceable(16) %B) #1 comdat {
  %1 = alloca %struct.b2Transform, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %struct.b2Transform* %A, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %B, %struct.b2Transform** %3, align 8
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %1)
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %1, i32 0, i32 1
  %8 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %8, i32 0, i32 1
  %10 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %11 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %10, i32 0, i32 1
  %12 = call <2 x float> @_Z6b2MulTRK5b2RotS1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %11)
  %13 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = bitcast %struct.b2Vec2* %7 to i8*
  %15 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false)
  %16 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %1, i32 0, i32 0
  %17 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %18 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %17, i32 0, i32 1
  %19 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %20 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %19, i32 0, i32 0
  %21 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %22 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %21, i32 0, i32 0
  %23 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %22)
  %24 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %23, <2 x float>* %24, align 4
  %25 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %18, %struct.b2Vec2* dereferenceable(8) %6)
  %26 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 4
  %27 = bitcast %struct.b2Vec2* %16 to i8*
  %28 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = bitcast %struct.b2Transform* %1 to { <2 x float>, <2 x float> }*
  %30 = load { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, align 4
  ret { <2 x float>, <2 x float> } %30
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z6b2MulTRK5b2RotS1_(%struct.b2Vec2* dereferenceable(8) %q, %struct.b2Vec2* dereferenceable(8) %r) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %q, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %r, %struct.b2Vec2** %3, align 8
  call void @_ZN5b2RotC2Ev(%struct.b2Vec2* %1)
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %6, %9
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %13, %16
  %18 = fsub float %10, %17
  %19 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %1, i32 0, i32 0
  store float %18, float* %19, align 4
  %20 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %21 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %20, i32 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %24 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %23, i32 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fmul float %22, %25
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %28 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %27, i32 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %30, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fmul float %29, %32
  %34 = fadd float %26, %33
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %1, i32 0, i32 1
  store float %34, float* %35, align 4
  %36 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  ret <2 x float> %37
}

; Function Attrs: uwtable
define { i64, float } @_ZN12b2EPCollider21ComputeEdgeSeparationEv(%struct.b2EPCollider* %this) #0 align 2 {
  %1 = alloca %struct.b2EPAxis, align 4
  %2 = alloca %struct.b2EPCollider*, align 8
  %i = alloca i32, align 4
  %s = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca { i64, float }, align 8
  store %struct.b2EPCollider* %this, %struct.b2EPCollider** %2, align 8
  %5 = load %struct.b2EPCollider*, %struct.b2EPCollider** %2, align 8
  %6 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %5, i32 0, i32 16
  %8 = load i8, i8* %7, align 4
  %9 = trunc i8 %8 to i1
  %10 = select i1 %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  store float 0x47EFFFFFE0000000, float* %12, align 4
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %38, %0
  %14 = load i32, i32* %i, align 4
  %15 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %5, i32 0, i32 0
  %16 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %19, label %41

; <label>:19                                      ; preds = %13
  %20 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %5, i32 0, i32 10
  %21 = load i32, i32* %i, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %5, i32 0, i32 0
  %24 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %23, i32 0, i32 0
  %25 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %24, i64 0, i64 %22
  %26 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %5, i32 0, i32 4
  %27 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %25, %struct.b2Vec2* dereferenceable(8) %26)
  %28 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %27, <2 x float>* %28, align 4
  %29 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %3)
  store float %29, float* %s, align 4
  %30 = load float, float* %s, align 4
  %31 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  %32 = load float, float* %31, align 4
  %33 = fcmp olt float %30, %32
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %19
  %35 = load float, float* %s, align 4
  %36 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  store float %35, float* %36, align 4
  br label %37

; <label>:37                                      ; preds = %34, %19
  br label %38

; <label>:38                                      ; preds = %37
  %39 = load i32, i32* %i, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %i, align 4
  br label %13

; <label>:41                                      ; preds = %13
  %42 = bitcast { i64, float }* %4 to i8*
  %43 = bitcast %struct.b2EPAxis* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 12, i32 4, i1 false)
  %44 = load { i64, float }, { i64, float }* %4, align 8
  ret { i64, float } %44
}

; Function Attrs: uwtable
define { i64, float } @_ZN12b2EPCollider24ComputePolygonSeparationEv(%struct.b2EPCollider* %this) #0 align 2 {
  %1 = alloca %struct.b2EPAxis, align 4
  %2 = alloca %struct.b2EPCollider*, align 8
  %perp = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %n = alloca %struct.b2Vec2, align 4
  %s1 = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %s2 = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %s = alloca float, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca { i64, float }, align 8
  store %struct.b2EPCollider* %this, %struct.b2EPCollider** %2, align 8
  %8 = load %struct.b2EPCollider*, %struct.b2EPCollider** %2, align 8
  %9 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 1
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  store float 0xC7EFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 10
  %13 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %12, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fsub float -0.000000e+00, %14
  %16 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 10
  %17 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %16, i32 0, i32 0
  %18 = load float, float* %17, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %perp, float %15, float %18)
  store i32 0, i32* %i, align 4
  br label %19

; <label>:19                                      ; preds = %97, %0
  %20 = load i32, i32* %i, align 4
  %21 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 0
  %22 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %20, %23
  br i1 %24, label %25, label %100

; <label>:25                                      ; preds = %19
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %28, i32 0, i32 1
  %30 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %29, i64 0, i64 %27
  %31 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %30)
  %32 = bitcast %struct.b2Vec2* %n to <2 x float>*
  store <2 x float> %31, <2 x float>* %32, align 4
  %33 = load i32, i32* %i, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 0
  %36 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %35, i32 0, i32 0
  %37 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %36, i64 0, i64 %34
  %38 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 4
  %39 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %37, %struct.b2Vec2* dereferenceable(8) %38)
  %40 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %39, <2 x float>* %40, align 4
  %41 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %3)
  store float %41, float* %s1, align 4
  %42 = load i32, i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 0
  %45 = getelementptr inbounds %struct.b2TempPolygon, %struct.b2TempPolygon* %44, i32 0, i32 0
  %46 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %45, i64 0, i64 %43
  %47 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 5
  %48 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %46, %struct.b2Vec2* dereferenceable(8) %47)
  %49 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %48, <2 x float>* %49, align 4
  %50 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %4)
  store float %50, float* %s2, align 4
  %51 = load float, float* %s1, align 4
  %52 = load float, float* %s2, align 4
  %53 = call float @_Z5b2MinIfET_S0_S0_(float %51, float %52)
  store float %53, float* %s, align 4
  %54 = load float, float* %s, align 4
  %55 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 15
  %56 = load float, float* %55, align 4
  %57 = fcmp ogt float %54, %56
  br i1 %57, label %58, label %64

; <label>:58                                      ; preds = %25
  %59 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 0
  store i32 2, i32* %59, align 4
  %60 = load i32, i32* %i, align 4
  %61 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 1
  store i32 %60, i32* %61, align 4
  %62 = load float, float* %s, align 4
  %63 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  store float %62, float* %63, align 4
  br label %101

; <label>:64                                      ; preds = %25
  %65 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %perp)
  %66 = fcmp oge float %65, 0.000000e+00
  br i1 %66, label %67, label %76

; <label>:67                                      ; preds = %64
  %68 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 14
  %69 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %68)
  %70 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %69, <2 x float>* %70, align 4
  %71 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 10
  %72 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %71)
  %73 = fcmp olt float %72, 0xBFA1DF46C0000000
  br i1 %73, label %74, label %75

; <label>:74                                      ; preds = %67
  br label %97

; <label>:75                                      ; preds = %67
  br label %85

; <label>:76                                      ; preds = %64
  %77 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 13
  %78 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %77)
  %79 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = getelementptr inbounds %struct.b2EPCollider, %struct.b2EPCollider* %8, i32 0, i32 10
  %81 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %80)
  %82 = fcmp olt float %81, 0xBFA1DF46C0000000
  br i1 %82, label %83, label %84

; <label>:83                                      ; preds = %76
  br label %97

; <label>:84                                      ; preds = %76
  br label %85

; <label>:85                                      ; preds = %84, %75
  %86 = load float, float* %s, align 4
  %87 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  %88 = load float, float* %87, align 4
  %89 = fcmp ogt float %86, %88
  br i1 %89, label %90, label %96

; <label>:90                                      ; preds = %85
  %91 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 0
  store i32 2, i32* %91, align 4
  %92 = load i32, i32* %i, align 4
  %93 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 1
  store i32 %92, i32* %93, align 4
  %94 = load float, float* %s, align 4
  %95 = getelementptr inbounds %struct.b2EPAxis, %struct.b2EPAxis* %1, i32 0, i32 2
  store float %94, float* %95, align 4
  br label %96

; <label>:96                                      ; preds = %90, %85
  br label %97

; <label>:97                                      ; preds = %96, %83, %74
  %98 = load i32, i32* %i, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %i, align 4
  br label %19

; <label>:100                                     ; preds = %19
  br label %101

; <label>:101                                     ; preds = %100, %58
  %102 = bitcast { i64, float }* %7 to i8*
  %103 = bitcast %struct.b2EPAxis* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 12, i32 4, i1 false)
  %104 = load { i64, float }, { i64, float }* %7, align 8
  ret { i64, float } %104
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2ClipVertex*, align 8
  store %struct.b2ClipVertex* %this, %struct.b2ClipVertex** %1, align 8
  %2 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %3 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %2, i32 0, i32 1
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2ReferenceFaceC2Ev(%struct.b2ReferenceFace* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2ReferenceFace*, align 8
  store %struct.b2ReferenceFace* %this, %struct.b2ReferenceFace** %1, align 8
  %2 = load %struct.b2ReferenceFace*, %struct.b2ReferenceFace** %1, align 8
  %3 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %2, i32 0, i32 2
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %2, i32 0, i32 3
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  %5 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %2, i32 0, i32 4
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %5)
  %6 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %2, i32 0, i32 5
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %6)
  %7 = getelementptr inbounds %struct.b2ReferenceFace, %struct.b2ReferenceFace* %2, i32 0, i32 7
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
  ret void
}

; Function Attrs: uwtable
define i32 @_Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi(%struct.b2ClipVertex* %vOut, %struct.b2ClipVertex* %vIn, %struct.b2Vec2* dereferenceable(8) %normal, float %offset, i32 %vertexIndexA) #0 {
  %1 = alloca %struct.b2ClipVertex*, align 8
  %2 = alloca %struct.b2ClipVertex*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %4 = alloca float, align 4
  %5 = alloca i32, align 4
  %numOut = alloca i32, align 4
  %distance0 = alloca float, align 4
  %distance1 = alloca float, align 4
  %interp = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %struct.b2ClipVertex* %vOut, %struct.b2ClipVertex** %1, align 8
  store %struct.b2ClipVertex* %vIn, %struct.b2ClipVertex** %2, align 8
  store %struct.b2Vec2* %normal, %struct.b2Vec2** %3, align 8
  store float %offset, float* %4, align 4
  store i32 %vertexIndexA, i32* %5, align 4
  store i32 0, i32* %numOut, align 4
  %9 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %10 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %11 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %10, i64 0
  %12 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %11, i32 0, i32 0
  %13 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %12)
  %14 = load float, float* %4, align 4
  %15 = fsub float %13, %14
  store float %15, float* %distance0, align 4
  %16 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %17 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %18 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %17, i64 1
  %19 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %18, i32 0, i32 0
  %20 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %16, %struct.b2Vec2* dereferenceable(8) %19)
  %21 = load float, float* %4, align 4
  %22 = fsub float %20, %21
  store float %22, float* %distance1, align 4
  %23 = load float, float* %distance0, align 4
  %24 = fcmp ole float %23, 0.000000e+00
  br i1 %24, label %25, label %35

; <label>:25                                      ; preds = %0
  %26 = load i32, i32* %numOut, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %numOut, align 4
  %28 = sext i32 %26 to i64
  %29 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %30 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %29, i64 %28
  %31 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %32 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %31, i64 0
  %33 = bitcast %struct.b2ClipVertex* %30 to i8*
  %34 = bitcast %struct.b2ClipVertex* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 12, i32 4, i1 false)
  br label %35

; <label>:35                                      ; preds = %25, %0
  %36 = load float, float* %distance1, align 4
  %37 = fcmp ole float %36, 0.000000e+00
  br i1 %37, label %38, label %48

; <label>:38                                      ; preds = %35
  %39 = load i32, i32* %numOut, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %numOut, align 4
  %41 = sext i32 %39 to i64
  %42 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %43 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %42, i64 %41
  %44 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %45 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %44, i64 1
  %46 = bitcast %struct.b2ClipVertex* %43 to i8*
  %47 = bitcast %struct.b2ClipVertex* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 12, i32 4, i1 false)
  br label %48

; <label>:48                                      ; preds = %38, %35
  %49 = load float, float* %distance0, align 4
  %50 = load float, float* %distance1, align 4
  %51 = fmul float %49, %50
  %52 = fcmp olt float %51, 0.000000e+00
  br i1 %52, label %53, label %120

; <label>:53                                      ; preds = %48
  %54 = load float, float* %distance0, align 4
  %55 = load float, float* %distance0, align 4
  %56 = load float, float* %distance1, align 4
  %57 = fsub float %55, %56
  %58 = fdiv float %54, %57
  store float %58, float* %interp, align 4
  %59 = load i32, i32* %numOut, align 4
  %60 = sext i32 %59 to i64
  %61 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %62 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %61, i64 %60
  %63 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %62, i32 0, i32 0
  %64 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %65 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %64, i64 0
  %66 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %65, i32 0, i32 0
  %67 = load float, float* %interp, align 4
  %68 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %69 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %68, i64 1
  %70 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %69, i32 0, i32 0
  %71 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %72 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %71, i64 0
  %73 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %72, i32 0, i32 0
  %74 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %70, %struct.b2Vec2* dereferenceable(8) %73)
  %75 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %74, <2 x float>* %75, align 4
  %76 = call <2 x float> @_ZmlfRK6b2Vec2(float %67, %struct.b2Vec2* dereferenceable(8) %8)
  %77 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %66, %struct.b2Vec2* dereferenceable(8) %7)
  %79 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = bitcast %struct.b2Vec2* %63 to i8*
  %81 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 4, i1 false)
  %82 = load i32, i32* %5, align 4
  %83 = trunc i32 %82 to i8
  %84 = load i32, i32* %numOut, align 4
  %85 = sext i32 %84 to i64
  %86 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %87 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %86, i64 %85
  %88 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %87, i32 0, i32 1
  %89 = bitcast %union.anon* %88 to %struct.b2ContactFeature*
  %90 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %89, i32 0, i32 0
  store i8 %83, i8* %90, align 4
  %91 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %2, align 8
  %92 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %91, i64 0
  %93 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %92, i32 0, i32 1
  %94 = bitcast %union.anon* %93 to %struct.b2ContactFeature*
  %95 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %94, i32 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = load i32, i32* %numOut, align 4
  %98 = sext i32 %97 to i64
  %99 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %100 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %99, i64 %98
  %101 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %100, i32 0, i32 1
  %102 = bitcast %union.anon* %101 to %struct.b2ContactFeature*
  %103 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %102, i32 0, i32 1
  store i8 %96, i8* %103, align 1
  %104 = load i32, i32* %numOut, align 4
  %105 = sext i32 %104 to i64
  %106 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %107 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %106, i64 %105
  %108 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %107, i32 0, i32 1
  %109 = bitcast %union.anon* %108 to %struct.b2ContactFeature*
  %110 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %109, i32 0, i32 2
  store i8 0, i8* %110, align 2
  %111 = load i32, i32* %numOut, align 4
  %112 = sext i32 %111 to i64
  %113 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %114 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %113, i64 %112
  %115 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %114, i32 0, i32 1
  %116 = bitcast %union.anon* %115 to %struct.b2ContactFeature*
  %117 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %116, i32 0, i32 3
  store i8 1, i8* %117, align 1
  %118 = load i32, i32* %numOut, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %numOut, align 4
  br label %120

; <label>:120                                     ; preds = %53, %48
  %121 = load i32, i32* %numOut, align 4
  ret i32 %121
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN23b2EdgeAndPolygonContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN23b2EdgeAndPolygonContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN23b2EdgeAndPolygonContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %chain = alloca %class.b2ChainShape*, align 8
  %edge = alloca %class.b2EdgeShape, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %7 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %8 = bitcast %class.b2CircleContact* %7 to %class.b2Contact*
  %9 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %8, i32 0, i32 7
  %10 = load %class.b2Fixture*, %class.b2Fixture** %9, align 8
  %11 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %10)
  %12 = bitcast %class.b2Shape* %11 to %class.b2ChainShape*
  store %class.b2ChainShape* %12, %class.b2ChainShape** %chain, align 8
  call void @_ZN11b2EdgeShapeC2Ev(%class.b2EdgeShape* %edge)
  %13 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %14 = bitcast %class.b2CircleContact* %7 to %class.b2Contact*
  %15 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %14, i32 0, i32 9
  %16 = load i32, i32* %15, align 8
  invoke void @_ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei(%class.b2ChainShape* %13, %class.b2EdgeShape* %edge, i32 %16)
          to label %17 unwind label %28

; <label>:17                                      ; preds = %0
  %18 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %19 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %20 = bitcast %class.b2CircleContact* %7 to %class.b2Contact*
  %21 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %20, i32 0, i32 8
  %22 = load %class.b2Fixture*, %class.b2Fixture** %21, align 8
  %23 = invoke %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %22)
          to label %24 unwind label %28

; <label>:24                                      ; preds = %17
  %25 = bitcast %class.b2Shape* %23 to %class.b2CircleShape*
  %26 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  invoke void @_Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_(%struct.b2Manifold* %18, %class.b2EdgeShape* %edge, %struct.b2Transform* dereferenceable(16) %19, %class.b2CircleShape* %25, %struct.b2Transform* dereferenceable(16) %26)
          to label %27 unwind label %28

; <label>:27                                      ; preds = %24
  call void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %edge)
  ret void

; <label>:28                                      ; preds = %24, %17, %0
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %5, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %6, align 4
  invoke void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %edge)
          to label %32 unwind label %38

; <label>:32                                      ; preds = %28
  br label %33

; <label>:33                                      ; preds = %32
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

; <label>:38                                      ; preds = %28
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #15
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN11b2EdgeShapeC2Ev(%class.b2EdgeShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  %4 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %5 = bitcast %class.b2EdgeShape* %4 to %class.b2Shape*
  call void @_ZN7b2ShapeC2Ev(%class.b2Shape* %5) #3
  %6 = bitcast %class.b2EdgeShape* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTV11b2EdgeShape, i64 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
          to label %8 unwind label %29

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %9)
          to label %10 unwind label %29

; <label>:10                                      ; preds = %8
  %11 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 3
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
          to label %12 unwind label %29

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 4
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %13)
          to label %14 unwind label %29

; <label>:14                                      ; preds = %12
  %15 = bitcast %class.b2EdgeShape* %4 to %class.b2Shape*
  %16 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %15, i32 0, i32 1
  store i32 1, i32* %16, align 8
  %17 = bitcast %class.b2EdgeShape* %4 to %class.b2Shape*
  %18 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %17, i32 0, i32 2
  store float 0x3F847AE140000000, float* %18, align 4
  %19 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 3
  %20 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %19, i32 0, i32 0
  store float 0.000000e+00, float* %20, align 8
  %21 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 3
  %22 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %21, i32 0, i32 1
  store float 0.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 4
  %24 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %23, i32 0, i32 0
  store float 0.000000e+00, float* %24, align 8
  %25 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 4
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i32 0, i32 1
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 5
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 6
  store i8 0, i8* %28, align 1
  ret void

; <label>:29                                      ; preds = %12, %10, %8, %0
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %2, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %3, align 4
  %33 = bitcast %class.b2EdgeShape* %4 to %class.b2Shape*
  invoke void @_ZN7b2ShapeD2Ev(%class.b2Shape* %33)
          to label %34 unwind label %40

; <label>:34                                      ; preds = %29
  br label %35

; <label>:35                                      ; preds = %34
  %36 = load i8*, i8** %2, align 8
  %37 = load i32, i32* %3, align 4
  %38 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

; <label>:40                                      ; preds = %29
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  call void @__clang_call_terminate(i8* %42) #15
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN7b2ShapeC2Ev(%class.b2Shape* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2Shape*, align 8
  store %class.b2Shape* %this, %class.b2Shape** %1, align 8
  %2 = load %class.b2Shape*, %class.b2Shape** %1, align 8
  %3 = bitcast %class.b2Shape* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTV7b2Shape, i64 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7b2ShapeD2Ev(%class.b2Shape* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2Shape*, align 8
  store %class.b2Shape* %this, %class.b2Shape** %1, align 8
  %2 = load %class.b2Shape*, %class.b2Shape** %1, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN7b2ShapeD0Ev(%class.b2Shape* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2Shape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2Shape* %this, %class.b2Shape** %1, align 8
  %4 = load %class.b2Shape*, %class.b2Shape** %1, align 8
  invoke void @_ZN7b2ShapeD2Ev(%class.b2Shape* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2Shape* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2Shape* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

declare void @__cxa_pure_virtual()

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  %2 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %3 = bitcast %class.b2EdgeShape* %2 to %class.b2Shape*
  call void @_ZN7b2ShapeD2Ev(%class.b2Shape* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN11b2EdgeShapeD0Ev(%class.b2EdgeShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  %4 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  invoke void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2EdgeShape* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2EdgeShape* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define %class.b2Shape* @_ZNK11b2EdgeShape5CloneEP16b2BlockAllocator(%class.b2EdgeShape* %this, %class.b2BlockAllocator* %allocator) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  %clone = alloca %class.b2EdgeShape*, align 8
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %4 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %5 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %4, i32 56)
  store i8* %5, i8** %mem, align 8
  %6 = load i8*, i8** %mem, align 8
  %7 = bitcast i8* %6 to %class.b2EdgeShape*
  call void @_ZN11b2EdgeShapeC2Ev(%class.b2EdgeShape* %7)
  store %class.b2EdgeShape* %7, %class.b2EdgeShape** %clone, align 8
  %8 = load %class.b2EdgeShape*, %class.b2EdgeShape** %clone, align 8
  %9 = call dereferenceable(56) %class.b2EdgeShape* @_ZN11b2EdgeShapeaSERKS_(%class.b2EdgeShape* %8, %class.b2EdgeShape* dereferenceable(56) %3) #3
  %10 = load %class.b2EdgeShape*, %class.b2EdgeShape** %clone, align 8
  %11 = bitcast %class.b2EdgeShape* %10 to %class.b2Shape*
  ret %class.b2Shape* %11
}

; Function Attrs: uwtable
define i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %this, i32 %size) #0 align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %3 = alloca i32, align 4
  %index = alloca i32, align 4
  %block = alloca %struct.b2Block*, align 8
  %oldChunks = alloca %struct.b2Chunk*, align 8
  %chunk = alloca %struct.b2Chunk*, align 8
  %blockSize = alloca i32, align 4
  %blockCount = alloca i32, align 4
  %i = alloca i32, align 4
  %block1 = alloca %struct.b2Block*, align 8
  %next = alloca %struct.b2Block*, align 8
  %last = alloca %struct.b2Block*, align 8
  store %class.b2BlockAllocator* %this, %class.b2BlockAllocator** %2, align 8
  store i32 %size, i32* %3, align 4
  %4 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i8* null, i8** %1, align 8
  br label %185

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 0, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %8
  br label %14

; <label>:12                                      ; preds = %8
  call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.310, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.307, i32 0, i32 0), i32 102, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN16b2BlockAllocator8AllocateEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %3, align 4
  %16 = icmp sgt i32 %15, 640
  br i1 %16, label %17, label %20

; <label>:17                                      ; preds = %14
  %18 = load i32, i32* %3, align 4
  %19 = call i8* @_Z7b2Alloci(i32 %18)
  store i8* %19, i8** %1, align 8
  br label %185

; <label>:20                                      ; preds = %14
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [641 x i8], [641 x i8]* @_ZN16b2BlockAllocator17s_blockSizeLookupE, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  store i32 %25, i32* %index, align 4
  %26 = load i32, i32* %index, align 4
  %27 = icmp sle i32 0, %26
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %20
  %29 = load i32, i32* %index, align 4
  %30 = icmp slt i32 %29, 14
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %28
  br label %34

; <label>:32                                      ; preds = %28, %20
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.311, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.307, i32 0, i32 0), i32 110, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN16b2BlockAllocator8AllocateEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %34

; <label>:34                                      ; preds = %33, %31
  %35 = load i32, i32* %index, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 3
  %38 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %37, i64 0, i64 %36
  %39 = load %struct.b2Block*, %struct.b2Block** %38, align 8
  %40 = icmp ne %struct.b2Block* %39, null
  br i1 %40, label %41, label %56

; <label>:41                                      ; preds = %34
  %42 = load i32, i32* %index, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 3
  %45 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %44, i64 0, i64 %43
  %46 = load %struct.b2Block*, %struct.b2Block** %45, align 8
  store %struct.b2Block* %46, %struct.b2Block** %block, align 8
  %47 = load %struct.b2Block*, %struct.b2Block** %block, align 8
  %48 = getelementptr inbounds %struct.b2Block, %struct.b2Block* %47, i32 0, i32 0
  %49 = load %struct.b2Block*, %struct.b2Block** %48, align 8
  %50 = load i32, i32* %index, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 3
  %53 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %52, i64 0, i64 %51
  store %struct.b2Block* %49, %struct.b2Block** %53, align 8
  %54 = load %struct.b2Block*, %struct.b2Block** %block, align 8
  %55 = bitcast %struct.b2Block* %54 to i8*
  store i8* %55, i8** %1, align 8
  br label %185

; <label>:56                                      ; preds = %34
  %57 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %94

; <label>:62                                      ; preds = %56
  %63 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 0
  %64 = load %struct.b2Chunk*, %struct.b2Chunk** %63, align 8
  store %struct.b2Chunk* %64, %struct.b2Chunk** %oldChunks, align 8
  %65 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, 128
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = mul i64 %70, 16
  %72 = trunc i64 %71 to i32
  %73 = call i8* @_Z7b2Alloci(i32 %72)
  %74 = bitcast i8* %73 to %struct.b2Chunk*
  %75 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 0
  store %struct.b2Chunk* %74, %struct.b2Chunk** %75, align 8
  %76 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 0
  %77 = load %struct.b2Chunk*, %struct.b2Chunk** %76, align 8
  %78 = bitcast %struct.b2Chunk* %77 to i8*
  %79 = load %struct.b2Chunk*, %struct.b2Chunk** %oldChunks, align 8
  %80 = bitcast %struct.b2Chunk* %79 to i8*
  %81 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  %84 = mul i64 %83, 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %80, i64 %84, i32 8, i1 false)
  %85 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 0
  %86 = load %struct.b2Chunk*, %struct.b2Chunk** %85, align 8
  %87 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %86, i64 %89
  %91 = bitcast %struct.b2Chunk* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* %91, i8 0, i64 2048, i32 8, i1 false)
  %92 = load %struct.b2Chunk*, %struct.b2Chunk** %oldChunks, align 8
  %93 = bitcast %struct.b2Chunk* %92 to i8*
  call void @_Z6b2FreePv(i8* %93)
  br label %94

; <label>:94                                      ; preds = %62, %56
  %95 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 0
  %96 = load %struct.b2Chunk*, %struct.b2Chunk** %95, align 8
  %97 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %96, i64 %99
  store %struct.b2Chunk* %100, %struct.b2Chunk** %chunk, align 8
  %101 = call i8* @_Z7b2Alloci(i32 16384)
  %102 = bitcast i8* %101 to %struct.b2Block*
  %103 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %104 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %103, i32 0, i32 1
  store %struct.b2Block* %102, %struct.b2Block** %104, align 8
  %105 = load i32, i32* %index, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [14 x i32], [14 x i32]* @_ZN16b2BlockAllocator12s_blockSizesE, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %blockSize, align 4
  %109 = load i32, i32* %blockSize, align 4
  %110 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %111 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %110, i32 0, i32 0
  store i32 %109, i32* %111, align 8
  %112 = load i32, i32* %blockSize, align 4
  %113 = sdiv i32 16384, %112
  store i32 %113, i32* %blockCount, align 4
  %114 = load i32, i32* %blockCount, align 4
  %115 = load i32, i32* %blockSize, align 4
  %116 = mul nsw i32 %114, %115
  %117 = icmp sle i32 %116, 16384
  br i1 %117, label %118, label %119

; <label>:118                                     ; preds = %94
  br label %121

; <label>:119                                     ; preds = %94
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.312, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.307, i32 0, i32 0), i32 138, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN16b2BlockAllocator8AllocateEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %121

; <label>:121                                     ; preds = %120, %118
  store i32 0, i32* %i, align 4
  br label %122

; <label>:122                                     ; preds = %152, %121
  %123 = load i32, i32* %i, align 4
  %124 = load i32, i32* %blockCount, align 4
  %125 = sub nsw i32 %124, 1
  %126 = icmp slt i32 %123, %125
  br i1 %126, label %127, label %155

; <label>:127                                     ; preds = %122
  %128 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %129 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %128, i32 0, i32 1
  %130 = load %struct.b2Block*, %struct.b2Block** %129, align 8
  %131 = bitcast %struct.b2Block* %130 to i8*
  %132 = load i32, i32* %blockSize, align 4
  %133 = load i32, i32* %i, align 4
  %134 = mul nsw i32 %132, %133
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %131, i64 %135
  %137 = bitcast i8* %136 to %struct.b2Block*
  store %struct.b2Block* %137, %struct.b2Block** %block1, align 8
  %138 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %139 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %138, i32 0, i32 1
  %140 = load %struct.b2Block*, %struct.b2Block** %139, align 8
  %141 = bitcast %struct.b2Block* %140 to i8*
  %142 = load i32, i32* %blockSize, align 4
  %143 = load i32, i32* %i, align 4
  %144 = add nsw i32 %143, 1
  %145 = mul nsw i32 %142, %144
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %141, i64 %146
  %148 = bitcast i8* %147 to %struct.b2Block*
  store %struct.b2Block* %148, %struct.b2Block** %next, align 8
  %149 = load %struct.b2Block*, %struct.b2Block** %next, align 8
  %150 = load %struct.b2Block*, %struct.b2Block** %block1, align 8
  %151 = getelementptr inbounds %struct.b2Block, %struct.b2Block* %150, i32 0, i32 0
  store %struct.b2Block* %149, %struct.b2Block** %151, align 8
  br label %152

; <label>:152                                     ; preds = %127
  %153 = load i32, i32* %i, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %i, align 4
  br label %122

; <label>:155                                     ; preds = %122
  %156 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %157 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %156, i32 0, i32 1
  %158 = load %struct.b2Block*, %struct.b2Block** %157, align 8
  %159 = bitcast %struct.b2Block* %158 to i8*
  %160 = load i32, i32* %blockSize, align 4
  %161 = load i32, i32* %blockCount, align 4
  %162 = sub nsw i32 %161, 1
  %163 = mul nsw i32 %160, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %159, i64 %164
  %166 = bitcast i8* %165 to %struct.b2Block*
  store %struct.b2Block* %166, %struct.b2Block** %last, align 8
  %167 = load %struct.b2Block*, %struct.b2Block** %last, align 8
  %168 = getelementptr inbounds %struct.b2Block, %struct.b2Block* %167, i32 0, i32 0
  store %struct.b2Block* null, %struct.b2Block** %168, align 8
  %169 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %170 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %169, i32 0, i32 1
  %171 = load %struct.b2Block*, %struct.b2Block** %170, align 8
  %172 = getelementptr inbounds %struct.b2Block, %struct.b2Block* %171, i32 0, i32 0
  %173 = load %struct.b2Block*, %struct.b2Block** %172, align 8
  %174 = load i32, i32* %index, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 3
  %177 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %176, i64 0, i64 %175
  store %struct.b2Block* %173, %struct.b2Block** %177, align 8
  %178 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %178, align 8
  %181 = load %struct.b2Chunk*, %struct.b2Chunk** %chunk, align 8
  %182 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %181, i32 0, i32 1
  %183 = load %struct.b2Block*, %struct.b2Block** %182, align 8
  %184 = bitcast %struct.b2Block* %183 to i8*
  store i8* %184, i8** %1, align 8
  br label %185

; <label>:185                                     ; preds = %155, %41, %17, %7
  %186 = load i8*, i8** %1, align 8
  ret i8* %186
}

; Function Attrs: nounwind uwtable
define i8* @_Z7b2Alloci(i32 %size) #2 {
  %1 = alloca i32, align 4
  store i32 %size, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = call noalias i8* @malloc(i64 %3) #3
  ret i8* %4
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #7

; Function Attrs: nounwind uwtable
define void @_Z6b2FreePv(i8* %mem) #2 {
  %1 = alloca i8*, align 8
  store i8* %mem, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  call void @free(i8* %2) #3
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #8

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(56) %class.b2EdgeShape* @_ZN11b2EdgeShapeaSERKS_(%class.b2EdgeShape* %this, %class.b2EdgeShape* dereferenceable(56)) #5 comdat align 2 {
  %2 = alloca %class.b2EdgeShape*, align 8
  %3 = alloca %class.b2EdgeShape*, align 8
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %2, align 8
  store %class.b2EdgeShape* %0, %class.b2EdgeShape** %3, align 8
  %4 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %5 = bitcast %class.b2EdgeShape* %4 to %class.b2Shape*
  %6 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %7 = bitcast %class.b2EdgeShape* %6 to %class.b2Shape*
  %8 = call dereferenceable(16) %class.b2Shape* @_ZN7b2ShapeaSERKS_(%class.b2Shape* %5, %class.b2Shape* dereferenceable(16) %7) #3
  %9 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 1
  %10 = load %class.b2EdgeShape*, %class.b2EdgeShape** %3, align 8
  %11 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %10, i32 0, i32 1
  %12 = bitcast %struct.b2Vec2* %9 to i8*
  %13 = bitcast %struct.b2Vec2* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 34, i32 8, i1 false)
  ret %class.b2EdgeShape* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(16) %class.b2Shape* @_ZN7b2ShapeaSERKS_(%class.b2Shape* %this, %class.b2Shape* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %class.b2Shape*, align 8
  %3 = alloca %class.b2Shape*, align 8
  store %class.b2Shape* %this, %class.b2Shape** %2, align 8
  store %class.b2Shape* %0, %class.b2Shape** %3, align 8
  %4 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %5 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %4, i32 0, i32 1
  %6 = load %class.b2Shape*, %class.b2Shape** %3, align 8
  %7 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %6, i32 0, i32 1
  %8 = bitcast i32* %5 to i8*
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 8, i1 false)
  ret %class.b2Shape* %4
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK11b2EdgeShape13GetChildCountEv(%class.b2EdgeShape* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  %2 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  ret i32 1
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2(%class.b2EdgeShape* %this, %struct.b2Transform* dereferenceable(16) %xf, %struct.b2Vec2* dereferenceable(8) %p) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %p, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %5 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  ret i1 false
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi(%class.b2EdgeShape* %this, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %input, %struct.b2Transform* dereferenceable(16) %xf, i32 %childIndex) #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2EdgeShape*, align 8
  %3 = alloca %struct.b2Position*, align 8
  %4 = alloca %struct.b2PositionSolverManifold*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %6 = alloca i32, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %v1 = alloca %struct.b2Vec2, align 4
  %v2 = alloca %struct.b2Vec2, align 4
  %e = alloca %struct.b2Vec2, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %numerator = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %denominator = alloca float, align 4
  %t = alloca float, align 4
  %q = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %r = alloca %struct.b2Vec2, align 4
  %rr = alloca float, align 4
  %s = alloca float, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %2, align 8
  store %struct.b2Position* %output, %struct.b2Position** %3, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %4, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %5, align 8
  store i32 %childIndex, i32* %6, align 4
  %15 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %16 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %17 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %16, i32 0, i32 1
  %18 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %19 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %18, i32 0, i32 0
  %20 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %21 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %20, i32 0, i32 0
  %22 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %21)
  %23 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %17, %struct.b2Vec2* dereferenceable(8) %7)
  %25 = bitcast %struct.b2Vec2* %p1 to <2 x float>*
  store <2 x float> %24, <2 x float>* %25, align 4
  %26 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %27 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %26, i32 0, i32 1
  %28 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %29 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %28, i32 0, i32 1
  %30 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %31 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %30, i32 0, i32 0
  %32 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %29, %struct.b2Vec2* dereferenceable(8) %31)
  %33 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  %34 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %27, %struct.b2Vec2* dereferenceable(8) %8)
  %35 = bitcast %struct.b2Vec2* %p2 to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %37 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %36, <2 x float>* %37, align 4
  %38 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %15, i32 0, i32 1
  %39 = bitcast %struct.b2Vec2* %v1 to i8*
  %40 = bitcast %struct.b2Vec2* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false)
  %41 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %15, i32 0, i32 2
  %42 = bitcast %struct.b2Vec2* %v2 to i8*
  %43 = bitcast %struct.b2Vec2* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v2, %struct.b2Vec2* dereferenceable(8) %v1)
  %45 = bitcast %struct.b2Vec2* %e to <2 x float>*
  store <2 x float> %44, <2 x float>* %45, align 4
  %46 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e, i32 0, i32 1
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e, i32 0, i32 0
  %49 = load float, float* %48, align 4
  %50 = fsub float -0.000000e+00, %49
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %normal, float %47, float %50)
  %51 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %normal)
  %52 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %p1)
  %53 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %normal, %struct.b2Vec2* dereferenceable(8) %9)
  store float %54, float* %numerator, align 4
  %55 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %normal, %struct.b2Vec2* dereferenceable(8) %d)
  store float %55, float* %denominator, align 4
  %56 = load float, float* %denominator, align 4
  %57 = fcmp oeq float %56, 0.000000e+00
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %0
  store i1 false, i1* %1, align 1
  br label %123

; <label>:59                                      ; preds = %0
  %60 = load float, float* %numerator, align 4
  %61 = load float, float* %denominator, align 4
  %62 = fdiv float %60, %61
  store float %62, float* %t, align 4
  %63 = load float, float* %t, align 4
  %64 = fcmp olt float %63, 0.000000e+00
  br i1 %64, label %71, label %65

; <label>:65                                      ; preds = %59
  %66 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %67 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %66, i32 0, i32 2
  %68 = load float, float* %67, align 4
  %69 = load float, float* %t, align 4
  %70 = fcmp olt float %68, %69
  br i1 %70, label %71, label %72

; <label>:71                                      ; preds = %65, %59
  store i1 false, i1* %1, align 1
  br label %123

; <label>:72                                      ; preds = %65
  %73 = load float, float* %t, align 4
  %74 = call <2 x float> @_ZmlfRK6b2Vec2(float %73, %struct.b2Vec2* dereferenceable(8) %d)
  %75 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %74, <2 x float>* %75, align 4
  %76 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %10)
  %77 = bitcast %struct.b2Vec2* %q to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v2, %struct.b2Vec2* dereferenceable(8) %v1)
  %79 = bitcast %struct.b2Vec2* %r to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %r, %struct.b2Vec2* dereferenceable(8) %r)
  store float %80, float* %rr, align 4
  %81 = load float, float* %rr, align 4
  %82 = fcmp oeq float %81, 0.000000e+00
  br i1 %82, label %83, label %84

; <label>:83                                      ; preds = %72
  store i1 false, i1* %1, align 1
  br label %123

; <label>:84                                      ; preds = %72
  %85 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %q, %struct.b2Vec2* dereferenceable(8) %v1)
  %86 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  %87 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %r)
  %88 = load float, float* %rr, align 4
  %89 = fdiv float %87, %88
  store float %89, float* %s, align 4
  %90 = load float, float* %s, align 4
  %91 = fcmp olt float %90, 0.000000e+00
  br i1 %91, label %95, label %92

; <label>:92                                      ; preds = %84
  %93 = load float, float* %s, align 4
  %94 = fcmp olt float 1.000000e+00, %93
  br i1 %94, label %95, label %96

; <label>:95                                      ; preds = %92, %84
  store i1 false, i1* %1, align 1
  br label %123

; <label>:96                                      ; preds = %92
  %97 = load float, float* %t, align 4
  %98 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %99 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %98, i32 0, i32 1
  store float %97, float* %99, align 4
  %100 = load float, float* %numerator, align 4
  %101 = fcmp ogt float %100, 0.000000e+00
  br i1 %101, label %102, label %113

; <label>:102                                     ; preds = %96
  %103 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %104 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %103, i32 0, i32 0
  %105 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %106 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %105, i32 0, i32 1
  %107 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %106, %struct.b2Vec2* dereferenceable(8) %normal)
  %108 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %107, <2 x float>* %108, align 4
  %109 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %13)
  %110 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %109, <2 x float>* %110, align 4
  %111 = bitcast %struct.b2Vec2* %104 to i8*
  %112 = bitcast %struct.b2Vec2* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 4, i1 false)
  br label %122

; <label>:113                                     ; preds = %96
  %114 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %115 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %114, i32 0, i32 0
  %116 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %117 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %116, i32 0, i32 1
  %118 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %117, %struct.b2Vec2* dereferenceable(8) %normal)
  %119 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = bitcast %struct.b2Vec2* %115 to i8*
  %121 = bitcast %struct.b2Vec2* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 4, i1 false)
  br label %122

; <label>:122                                     ; preds = %113, %102
  store i1 true, i1* %1, align 1
  br label %123

; <label>:123                                     ; preds = %122, %95, %83, %71, %58
  %124 = load i1, i1* %1, align 1
  ret i1 %124
}

; Function Attrs: uwtable
define void @_ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi(%class.b2EdgeShape* %this, %struct.b2Transform* %aabb, %struct.b2Transform* dereferenceable(16) %xf, i32 %childIndex) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca i32, align 4
  %v1 = alloca %struct.b2Vec2, align 4
  %v2 = alloca %struct.b2Vec2, align 4
  %lower = alloca %struct.b2Vec2, align 4
  %upper = alloca %struct.b2Vec2, align 4
  %r = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %3, align 8
  store i32 %childIndex, i32* %4, align 4
  %7 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %8 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %9 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %7, i32 0, i32 1
  %10 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %8, %struct.b2Vec2* dereferenceable(8) %9)
  %11 = bitcast %struct.b2Vec2* %v1 to <2 x float>*
  store <2 x float> %10, <2 x float>* %11, align 4
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %13 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %7, i32 0, i32 2
  %14 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %12, %struct.b2Vec2* dereferenceable(8) %13)
  %15 = bitcast %struct.b2Vec2* %v2 to <2 x float>*
  store <2 x float> %14, <2 x float>* %15, align 4
  %16 = call <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %17 = bitcast %struct.b2Vec2* %lower to <2 x float>*
  store <2 x float> %16, <2 x float>* %17, align 4
  %18 = call <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %19 = bitcast %struct.b2Vec2* %upper to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = bitcast %class.b2EdgeShape* %7 to %class.b2Shape*
  %21 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %20, i32 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = bitcast %class.b2EdgeShape* %7 to %class.b2Shape*
  %24 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %23, i32 0, i32 2
  %25 = load float, float* %24, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %r, float %22, float %25)
  %26 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %27 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %26, i32 0, i32 0
  %28 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %lower, %struct.b2Vec2* dereferenceable(8) %r)
  %29 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = bitcast %struct.b2Vec2* %27 to i8*
  %31 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  %32 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %33 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %32, i32 0, i32 1
  %34 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %upper, %struct.b2Vec2* dereferenceable(8) %r)
  %35 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = bitcast %struct.b2Vec2* %33 to i8*
  %37 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = call float @_Z5b2MinIfET_S0_S0_(float %6, float %9)
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = call float @_Z5b2MinIfET_S0_S0_(float %13, float %16)
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %10, float %17)
  %18 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  ret <2 x float> %19
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %3, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = call float @_Z5b2MaxIfET_S0_S0_(float %6, float %9)
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = call float @_Z5b2MaxIfET_S0_S0_(float %13, float %16)
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %10, float %17)
  %18 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  ret <2 x float> %19
}

; Function Attrs: uwtable
define void @_ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf(%class.b2EdgeShape* %this, %struct.b2MassData* %massData, float %density) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca %struct.b2MassData*, align 8
  %3 = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  store %struct.b2MassData* %massData, %struct.b2MassData** %2, align 8
  store float %density, float* %3, align 4
  %6 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %7 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %8 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %7, i32 0, i32 0
  store float 0.000000e+00, float* %8, align 4
  %9 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %10 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %9, i32 0, i32 1
  %11 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %6, i32 0, i32 1
  %12 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %6, i32 0, i32 2
  %13 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %12)
  %14 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 4
  %15 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %5)
  %16 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 4
  %17 = bitcast %struct.b2Vec2* %10 to i8*
  %18 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  %19 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %20 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %19, i32 0, i32 2
  store float 0.000000e+00, float* %20, align 4
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #10 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #15
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: nounwind uwtable
define void @_ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei(%class.b2ChainShape* %this, %class.b2EdgeShape* %edge, i32 %index) #2 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %class.b2EdgeShape*, align 8
  %3 = alloca i32, align 4
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %class.b2EdgeShape* %edge, %class.b2EdgeShape** %2, align 8
  store i32 %index, i32* %3, align 4
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = load i32, i32* %3, align 4
  %6 = icmp sle i32 0, %5
  br i1 %6, label %7, label %14

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %3, align 4
  %9 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = sub nsw i32 %10, 1
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %7
  br label %16

; <label>:14                                      ; preds = %7, %0
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.370, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 116, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16                                      ; preds = %15, %13
  %17 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %18 = bitcast %class.b2EdgeShape* %17 to %class.b2Shape*
  %19 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %18, i32 0, i32 1
  store i32 1, i32* %19, align 8
  %20 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  %21 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %20, i32 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %24 = bitcast %class.b2EdgeShape* %23 to %class.b2Shape*
  %25 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %24, i32 0, i32 2
  store float %22, float* %25, align 4
  %26 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %27 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %26, i32 0, i32 1
  %28 = load i32, i32* %3, align 4
  %29 = add nsw i32 %28, 0
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %32 = load %struct.b2Vec2*, %struct.b2Vec2** %31, align 8
  %33 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %32, i64 %30
  %34 = bitcast %struct.b2Vec2* %27 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %37 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %36, i32 0, i32 2
  %38 = load i32, i32* %3, align 4
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %42 = load %struct.b2Vec2*, %struct.b2Vec2** %41, align 8
  %43 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %42, i64 %40
  %44 = bitcast %struct.b2Vec2* %37 to i8*
  %45 = bitcast %struct.b2Vec2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 4, i1 false)
  %46 = load i32, i32* %3, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %61

; <label>:48                                      ; preds = %16
  %49 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %50 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %49, i32 0, i32 3
  %51 = load i32, i32* %3, align 4
  %52 = sub nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %55 = load %struct.b2Vec2*, %struct.b2Vec2** %54, align 8
  %56 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %55, i64 %53
  %57 = bitcast %struct.b2Vec2* %50 to i8*
  %58 = bitcast %struct.b2Vec2* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false)
  %59 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %60 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %59, i32 0, i32 5
  store i8 1, i8* %60, align 8
  br label %73

; <label>:61                                      ; preds = %16
  %62 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %63 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %62, i32 0, i32 3
  %64 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 3
  %65 = bitcast %struct.b2Vec2* %63 to i8*
  %66 = bitcast %struct.b2Vec2* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false)
  %67 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 5
  %68 = load i8, i8* %67, align 4
  %69 = trunc i8 %68 to i1
  %70 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %71 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %70, i32 0, i32 5
  %72 = zext i1 %69 to i8
  store i8 %72, i8* %71, align 8
  br label %73

; <label>:73                                      ; preds = %61, %48
  %74 = load i32, i32* %3, align 4
  %75 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = sub nsw i32 %76, 2
  %78 = icmp slt i32 %74, %77
  br i1 %78, label %79, label %92

; <label>:79                                      ; preds = %73
  %80 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %81 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %80, i32 0, i32 4
  %82 = load i32, i32* %3, align 4
  %83 = add nsw i32 %82, 2
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %86 = load %struct.b2Vec2*, %struct.b2Vec2** %85, align 8
  %87 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %86, i64 %84
  %88 = bitcast %struct.b2Vec2* %81 to i8*
  %89 = bitcast %struct.b2Vec2* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 4, i1 false)
  %90 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %91 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %90, i32 0, i32 6
  store i8 1, i8* %91, align 1
  br label %104

; <label>:92                                      ; preds = %73
  %93 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %94 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %93, i32 0, i32 4
  %95 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 4
  %96 = bitcast %struct.b2Vec2* %94 to i8*
  %97 = bitcast %struct.b2Vec2* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 4, i1 false)
  %98 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 6
  %99 = load i8, i8* %98, align 1
  %100 = trunc i8 %99 to i1
  %101 = load %class.b2EdgeShape*, %class.b2EdgeShape** %2, align 8
  %102 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %101, i32 0, i32 6
  %103 = zext i1 %100 to i8
  store i8 %103, i8* %102, align 1
  br label %104

; <label>:104                                     ; preds = %92, %79
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN23b2ChainAndCircleContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN23b2ChainAndCircleContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN23b2ChainAndCircleContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %chain = alloca %class.b2ChainShape*, align 8
  %edge = alloca %class.b2EdgeShape, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %7 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %8 = bitcast %class.b2CircleContact* %7 to %class.b2Contact*
  %9 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %8, i32 0, i32 7
  %10 = load %class.b2Fixture*, %class.b2Fixture** %9, align 8
  %11 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %10)
  %12 = bitcast %class.b2Shape* %11 to %class.b2ChainShape*
  store %class.b2ChainShape* %12, %class.b2ChainShape** %chain, align 8
  call void @_ZN11b2EdgeShapeC2Ev(%class.b2EdgeShape* %edge)
  %13 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %14 = bitcast %class.b2CircleContact* %7 to %class.b2Contact*
  %15 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %14, i32 0, i32 9
  %16 = load i32, i32* %15, align 8
  invoke void @_ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei(%class.b2ChainShape* %13, %class.b2EdgeShape* %edge, i32 %16)
          to label %17 unwind label %28

; <label>:17                                      ; preds = %0
  %18 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %19 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %20 = bitcast %class.b2CircleContact* %7 to %class.b2Contact*
  %21 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %20, i32 0, i32 8
  %22 = load %class.b2Fixture*, %class.b2Fixture** %21, align 8
  %23 = invoke %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %22)
          to label %24 unwind label %28

; <label>:24                                      ; preds = %17
  %25 = bitcast %class.b2Shape* %23 to %class.b2PolygonShape*
  %26 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  invoke void @_Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_(%struct.b2Manifold* %18, %class.b2EdgeShape* %edge, %struct.b2Transform* dereferenceable(16) %19, %class.b2PolygonShape* %25, %struct.b2Transform* dereferenceable(16) %26)
          to label %27 unwind label %28

; <label>:27                                      ; preds = %24
  call void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %edge)
  ret void

; <label>:28                                      ; preds = %24, %17, %0
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %5, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %6, align 4
  invoke void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %edge)
          to label %32 unwind label %38

; <label>:32                                      ; preds = %28
  br label %33

; <label>:33                                      ; preds = %32
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

; <label>:38                                      ; preds = %28
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #15
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN24b2ChainAndPolygonContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN24b2ChainAndPolygonContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN24b2ChainAndPolygonContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_(%class.b2CircleContact* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  %5 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %6 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %7 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %7, i32 0, i32 7
  %9 = load %class.b2Fixture*, %class.b2Fixture** %8, align 8
  %10 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %9)
  %11 = bitcast %class.b2Shape* %10 to %class.b2PolygonShape*
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %13 = bitcast %class.b2CircleContact* %5 to %class.b2Contact*
  %14 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %13, i32 0, i32 8
  %15 = load %class.b2Fixture*, %class.b2Fixture** %14, align 8
  %16 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %15)
  %17 = bitcast %class.b2Shape* %16 to %class.b2PolygonShape*
  %18 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  call void @_Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_(%struct.b2Manifold* %6, %class.b2PolygonShape* %11, %struct.b2Transform* dereferenceable(16) %12, %class.b2PolygonShape* %17, %struct.b2Transform* dereferenceable(16) %18)
  ret void
}

; Function Attrs: uwtable
define void @_Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_(%struct.b2Manifold* %manifold, %class.b2PolygonShape* %polyA, %struct.b2Transform* dereferenceable(16) %xfA, %class.b2PolygonShape* %polyB, %struct.b2Transform* dereferenceable(16) %xfB) #0 {
  %1 = alloca %struct.b2Manifold*, align 8
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %class.b2PolygonShape*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %totalRadius = alloca float, align 4
  %edgeA = alloca i32, align 4
  %separationA = alloca float, align 4
  %edgeB = alloca i32, align 4
  %separationB = alloca float, align 4
  %poly1 = alloca %class.b2PolygonShape*, align 8
  %poly2 = alloca %class.b2PolygonShape*, align 8
  %xf1 = alloca %struct.b2Transform, align 4
  %xf2 = alloca %struct.b2Transform, align 4
  %edge1 = alloca i32, align 4
  %flip = alloca i8, align 1
  %k_tol = alloca float, align 4
  %incidentEdge = alloca [2 x %struct.b2ClipVertex], align 16
  %count1 = alloca i32, align 4
  %vertices1 = alloca %struct.b2Vec2*, align 8
  %iv1 = alloca i32, align 4
  %iv2 = alloca i32, align 4
  %v11 = alloca %struct.b2Vec2, align 4
  %v12 = alloca %struct.b2Vec2, align 4
  %localTangent = alloca %struct.b2Vec2, align 4
  %localNormal = alloca %struct.b2Vec2, align 4
  %planePoint = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %tangent = alloca %struct.b2Vec2, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %frontOffset = alloca float, align 4
  %sideOffset1 = alloca float, align 4
  %sideOffset2 = alloca float, align 4
  %clipPoints1 = alloca [2 x %struct.b2ClipVertex], align 16
  %clipPoints2 = alloca [2 x %struct.b2ClipVertex], align 16
  %np = alloca i32, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %pointCount = alloca i32, align 4
  %i = alloca i32, align 4
  %separation = alloca float, align 4
  %cp = alloca %struct.b2ManifoldPoint*, align 8
  %10 = alloca %struct.b2Vec2, align 4
  %cf = alloca %struct.b2ContactFeature, align 1
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %1, align 8
  store %class.b2PolygonShape* %polyA, %class.b2PolygonShape** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %class.b2PolygonShape* %polyB, %class.b2PolygonShape** %4, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %5, align 8
  %11 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %12 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %11, i32 0, i32 4
  store i32 0, i32* %12, align 4
  %13 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %14 = bitcast %class.b2PolygonShape* %13 to %class.b2Shape*
  %15 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %14, i32 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  %18 = bitcast %class.b2PolygonShape* %17 to %class.b2Shape*
  %19 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %18, i32 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = fadd float %16, %20
  store float %21, float* %totalRadius, align 4
  store i32 0, i32* %edgeA, align 4
  %22 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %23 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %24 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  %25 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %26 = call float @_ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_(i32* %edgeA, %class.b2PolygonShape* %22, %struct.b2Transform* dereferenceable(16) %23, %class.b2PolygonShape* %24, %struct.b2Transform* dereferenceable(16) %25)
  store float %26, float* %separationA, align 4
  %27 = load float, float* %separationA, align 4
  %28 = load float, float* %totalRadius, align 4
  %29 = fcmp ogt float %27, %28
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %0
  br label %265

; <label>:31                                      ; preds = %0
  store i32 0, i32* %edgeB, align 4
  %32 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  %33 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %34 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %35 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %36 = call float @_ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_(i32* %edgeB, %class.b2PolygonShape* %32, %struct.b2Transform* dereferenceable(16) %33, %class.b2PolygonShape* %34, %struct.b2Transform* dereferenceable(16) %35)
  store float %36, float* %separationB, align 4
  %37 = load float, float* %separationB, align 4
  %38 = load float, float* %totalRadius, align 4
  %39 = fcmp ogt float %37, %38
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %31
  br label %265

; <label>:41                                      ; preds = %31
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xf1)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xf2)
  store float 0x3F40624DE0000000, float* %k_tol, align 4
  %42 = load float, float* %separationB, align 4
  %43 = load float, float* %separationA, align 4
  %44 = fadd float %43, 0x3F40624DE0000000
  %45 = fcmp ogt float %42, %44
  br i1 %45, label %46, label %58

; <label>:46                                      ; preds = %41
  %47 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  store %class.b2PolygonShape* %47, %class.b2PolygonShape** %poly1, align 8
  %48 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  store %class.b2PolygonShape* %48, %class.b2PolygonShape** %poly2, align 8
  %49 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %50 = bitcast %struct.b2Transform* %xf1 to i8*
  %51 = bitcast %struct.b2Transform* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 4, i1 false)
  %52 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %53 = bitcast %struct.b2Transform* %xf2 to i8*
  %54 = bitcast %struct.b2Transform* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 4, i1 false)
  %55 = load i32, i32* %edgeB, align 4
  store i32 %55, i32* %edge1, align 4
  %56 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %57 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %56, i32 0, i32 3
  store i32 2, i32* %57, align 4
  store i8 1, i8* %flip, align 1
  br label %70

; <label>:58                                      ; preds = %41
  %59 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  store %class.b2PolygonShape* %59, %class.b2PolygonShape** %poly1, align 8
  %60 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  store %class.b2PolygonShape* %60, %class.b2PolygonShape** %poly2, align 8
  %61 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %62 = bitcast %struct.b2Transform* %xf1 to i8*
  %63 = bitcast %struct.b2Transform* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 16, i32 4, i1 false)
  %64 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %65 = bitcast %struct.b2Transform* %xf2 to i8*
  %66 = bitcast %struct.b2Transform* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 4, i1 false)
  %67 = load i32, i32* %edgeA, align 4
  store i32 %67, i32* %edge1, align 4
  %68 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %69 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i8 0, i8* %flip, align 1
  br label %70

; <label>:70                                      ; preds = %58, %46
  %71 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %incidentEdge, i32 0, i32 0
  %72 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %71, i64 2
  br label %73

; <label>:73                                      ; preds = %73, %70
  %74 = phi %struct.b2ClipVertex* [ %71, %70 ], [ %75, %73 ]
  call void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %74)
  %75 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %74, i64 1
  %76 = icmp eq %struct.b2ClipVertex* %75, %72
  br i1 %76, label %77, label %73

; <label>:77                                      ; preds = %73
  %78 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %incidentEdge, i32 0, i32 0
  %79 = load %class.b2PolygonShape*, %class.b2PolygonShape** %poly1, align 8
  %80 = load i32, i32* %edge1, align 4
  %81 = load %class.b2PolygonShape*, %class.b2PolygonShape** %poly2, align 8
  call void @_ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_(%struct.b2ClipVertex* %78, %class.b2PolygonShape* %79, %struct.b2Transform* dereferenceable(16) %xf1, i32 %80, %class.b2PolygonShape* %81, %struct.b2Transform* dereferenceable(16) %xf2)
  %82 = load %class.b2PolygonShape*, %class.b2PolygonShape** %poly1, align 8
  %83 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %82, i32 0, i32 4
  %84 = load i32, i32* %83, align 8
  store i32 %84, i32* %count1, align 4
  %85 = load %class.b2PolygonShape*, %class.b2PolygonShape** %poly1, align 8
  %86 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %85, i32 0, i32 2
  %87 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %86, i32 0, i32 0
  store %struct.b2Vec2* %87, %struct.b2Vec2** %vertices1, align 8
  %88 = load i32, i32* %edge1, align 4
  store i32 %88, i32* %iv1, align 4
  %89 = load i32, i32* %edge1, align 4
  %90 = add nsw i32 %89, 1
  %91 = load i32, i32* %count1, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %96

; <label>:93                                      ; preds = %77
  %94 = load i32, i32* %edge1, align 4
  %95 = add nsw i32 %94, 1
  br label %97

; <label>:96                                      ; preds = %77
  br label %97

; <label>:97                                      ; preds = %96, %93
  %98 = phi i32 [ %95, %93 ], [ 0, %96 ]
  store i32 %98, i32* %iv2, align 4
  %99 = load i32, i32* %iv1, align 4
  %100 = sext i32 %99 to i64
  %101 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices1, align 8
  %102 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %101, i64 %100
  %103 = bitcast %struct.b2Vec2* %v11 to i8*
  %104 = bitcast %struct.b2Vec2* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 8, i32 4, i1 false)
  %105 = load i32, i32* %iv2, align 4
  %106 = sext i32 %105 to i64
  %107 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices1, align 8
  %108 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %107, i64 %106
  %109 = bitcast %struct.b2Vec2* %v12 to i8*
  %110 = bitcast %struct.b2Vec2* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 4, i1 false)
  %111 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v12, %struct.b2Vec2* dereferenceable(8) %v11)
  %112 = bitcast %struct.b2Vec2* %localTangent to <2 x float>*
  store <2 x float> %111, <2 x float>* %112, align 4
  %113 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %localTangent)
  %114 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %localTangent, float 1.000000e+00)
  %115 = bitcast %struct.b2Vec2* %localNormal to <2 x float>*
  store <2 x float> %114, <2 x float>* %115, align 4
  %116 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v11, %struct.b2Vec2* dereferenceable(8) %v12)
  %117 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %116, <2 x float>* %117, align 4
  %118 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %6)
  %119 = bitcast %struct.b2Vec2* %planePoint to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf1, i32 0, i32 1
  %121 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %120, %struct.b2Vec2* dereferenceable(8) %localTangent)
  %122 = bitcast %struct.b2Vec2* %tangent to <2 x float>*
  store <2 x float> %121, <2 x float>* %122, align 4
  %123 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %tangent, float 1.000000e+00)
  %124 = bitcast %struct.b2Vec2* %normal to <2 x float>*
  store <2 x float> %123, <2 x float>* %124, align 4
  %125 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xf1, %struct.b2Vec2* dereferenceable(8) %v11)
  %126 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %125, <2 x float>* %126, align 4
  %127 = bitcast %struct.b2Vec2* %v11 to i8*
  %128 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 4, i1 false)
  %129 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xf1, %struct.b2Vec2* dereferenceable(8) %v12)
  %130 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %129, <2 x float>* %130, align 4
  %131 = bitcast %struct.b2Vec2* %v12 to i8*
  %132 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 8, i32 4, i1 false)
  %133 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %normal, %struct.b2Vec2* dereferenceable(8) %v11)
  store float %133, float* %frontOffset, align 4
  %134 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %tangent, %struct.b2Vec2* dereferenceable(8) %v11)
  %135 = fsub float -0.000000e+00, %134
  %136 = load float, float* %totalRadius, align 4
  %137 = fadd float %135, %136
  store float %137, float* %sideOffset1, align 4
  %138 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %tangent, %struct.b2Vec2* dereferenceable(8) %v12)
  %139 = load float, float* %totalRadius, align 4
  %140 = fadd float %138, %139
  store float %140, float* %sideOffset2, align 4
  %141 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints1, i32 0, i32 0
  %142 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %141, i64 2
  br label %143

; <label>:143                                     ; preds = %143, %97
  %144 = phi %struct.b2ClipVertex* [ %141, %97 ], [ %145, %143 ]
  call void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %144)
  %145 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %144, i64 1
  %146 = icmp eq %struct.b2ClipVertex* %145, %142
  br i1 %146, label %147, label %143

; <label>:147                                     ; preds = %143
  %148 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i32 0, i32 0
  %149 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %148, i64 2
  br label %150

; <label>:150                                     ; preds = %150, %147
  %151 = phi %struct.b2ClipVertex* [ %148, %147 ], [ %152, %150 ]
  call void @_ZN12b2ClipVertexC2Ev(%struct.b2ClipVertex* %151)
  %152 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %151, i64 1
  %153 = icmp eq %struct.b2ClipVertex* %152, %149
  br i1 %153, label %154, label %150

; <label>:154                                     ; preds = %150
  %155 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints1, i32 0, i32 0
  %156 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %incidentEdge, i32 0, i32 0
  %157 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %tangent)
  %158 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %157, <2 x float>* %158, align 4
  %159 = load float, float* %sideOffset1, align 4
  %160 = load i32, i32* %iv1, align 4
  %161 = call i32 @_Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi(%struct.b2ClipVertex* %155, %struct.b2ClipVertex* %156, %struct.b2Vec2* dereferenceable(8) %9, float %159, i32 %160)
  store i32 %161, i32* %np, align 4
  %162 = load i32, i32* %np, align 4
  %163 = icmp slt i32 %162, 2
  br i1 %163, label %164, label %165

; <label>:164                                     ; preds = %154
  br label %265

; <label>:165                                     ; preds = %154
  %166 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i32 0, i32 0
  %167 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints1, i32 0, i32 0
  %168 = load float, float* %sideOffset2, align 4
  %169 = load i32, i32* %iv2, align 4
  %170 = call i32 @_Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi(%struct.b2ClipVertex* %166, %struct.b2ClipVertex* %167, %struct.b2Vec2* dereferenceable(8) %tangent, float %168, i32 %169)
  store i32 %170, i32* %np, align 4
  %171 = load i32, i32* %np, align 4
  %172 = icmp slt i32 %171, 2
  br i1 %172, label %173, label %174

; <label>:173                                     ; preds = %165
  br label %265

; <label>:174                                     ; preds = %165
  %175 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %176 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %175, i32 0, i32 1
  %177 = bitcast %struct.b2Vec2* %176 to i8*
  %178 = bitcast %struct.b2Vec2* %localNormal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %177, i8* %178, i64 8, i32 4, i1 false)
  %179 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %180 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %179, i32 0, i32 2
  %181 = bitcast %struct.b2Vec2* %180 to i8*
  %182 = bitcast %struct.b2Vec2* %planePoint to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 8, i32 4, i1 false)
  store i32 0, i32* %pointCount, align 4
  store i32 0, i32* %i, align 4
  br label %183

; <label>:183                                     ; preds = %258, %174
  %184 = load i32, i32* %i, align 4
  %185 = icmp slt i32 %184, 2
  br i1 %185, label %186, label %261

; <label>:186                                     ; preds = %183
  %187 = load i32, i32* %i, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %188
  %190 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %189, i32 0, i32 0
  %191 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %normal, %struct.b2Vec2* dereferenceable(8) %190)
  %192 = load float, float* %frontOffset, align 4
  %193 = fsub float %191, %192
  store float %193, float* %separation, align 4
  %194 = load float, float* %separation, align 4
  %195 = load float, float* %totalRadius, align 4
  %196 = fcmp ole float %194, %195
  br i1 %196, label %197, label %257

; <label>:197                                     ; preds = %186
  %198 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %199 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %198, i32 0, i32 0
  %200 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %199, i32 0, i32 0
  %201 = load i32, i32* %pointCount, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %200, i64 %202
  store %struct.b2ManifoldPoint* %203, %struct.b2ManifoldPoint** %cp, align 8
  %204 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %205 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %204, i32 0, i32 0
  %206 = load i32, i32* %i, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %207
  %209 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %208, i32 0, i32 0
  %210 = call <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xf2, %struct.b2Vec2* dereferenceable(8) %209)
  %211 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %210, <2 x float>* %211, align 4
  %212 = bitcast %struct.b2Vec2* %205 to i8*
  %213 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %213, i64 8, i32 4, i1 false)
  %214 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %215 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %214, i32 0, i32 3
  %216 = load i32, i32* %i, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [2 x %struct.b2ClipVertex], [2 x %struct.b2ClipVertex]* %clipPoints2, i64 0, i64 %217
  %219 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %218, i32 0, i32 1
  %220 = bitcast %union.anon* %215 to i8*
  %221 = bitcast %union.anon* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 4, i32 4, i1 false)
  %222 = load i8, i8* %flip, align 1
  %223 = icmp ne i8 %222, 0
  br i1 %223, label %224, label %254

; <label>:224                                     ; preds = %197
  %225 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %226 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %225, i32 0, i32 3
  %227 = bitcast %union.anon* %226 to %struct.b2ContactFeature*
  %228 = bitcast %struct.b2ContactFeature* %cf to i8*
  %229 = bitcast %struct.b2ContactFeature* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %228, i8* %229, i64 4, i32 1, i1 false)
  %230 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 1
  %231 = load i8, i8* %230, align 1
  %232 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %233 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %232, i32 0, i32 3
  %234 = bitcast %union.anon* %233 to %struct.b2ContactFeature*
  %235 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %234, i32 0, i32 0
  store i8 %231, i8* %235, align 4
  %236 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %239 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %238, i32 0, i32 3
  %240 = bitcast %union.anon* %239 to %struct.b2ContactFeature*
  %241 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %240, i32 0, i32 1
  store i8 %237, i8* %241, align 1
  %242 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 3
  %243 = load i8, i8* %242, align 1
  %244 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %245 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %244, i32 0, i32 3
  %246 = bitcast %union.anon* %245 to %struct.b2ContactFeature*
  %247 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %246, i32 0, i32 2
  store i8 %243, i8* %247, align 2
  %248 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %cf, i32 0, i32 2
  %249 = load i8, i8* %248, align 1
  %250 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %251 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %250, i32 0, i32 3
  %252 = bitcast %union.anon* %251 to %struct.b2ContactFeature*
  %253 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %252, i32 0, i32 3
  store i8 %249, i8* %253, align 1
  br label %254

; <label>:254                                     ; preds = %224, %197
  %255 = load i32, i32* %pointCount, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %pointCount, align 4
  br label %257

; <label>:257                                     ; preds = %254, %186
  br label %258

; <label>:258                                     ; preds = %257
  %259 = load i32, i32* %i, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %i, align 4
  br label %183

; <label>:261                                     ; preds = %183
  %262 = load i32, i32* %pointCount, align 4
  %263 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %264 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %263, i32 0, i32 4
  store i32 %262, i32* %264, align 4
  br label %265

; <label>:265                                     ; preds = %261, %173, %164, %40, %30
  ret void
}

; Function Attrs: uwtable
define internal float @_ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_(i32* %edgeIndex, %class.b2PolygonShape* %poly1, %struct.b2Transform* dereferenceable(16) %xf1, %class.b2PolygonShape* %poly2, %struct.b2Transform* dereferenceable(16) %xf2) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %class.b2PolygonShape*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %count1 = alloca i32, align 4
  %count2 = alloca i32, align 4
  %n1s = alloca %struct.b2Vec2*, align 8
  %v1s = alloca %struct.b2Vec2*, align 8
  %v2s = alloca %struct.b2Vec2*, align 8
  %xf = alloca %struct.b2Transform, align 4
  %bestIndex = alloca i32, align 4
  %maxSeparation = alloca float, align 4
  %i = alloca i32, align 4
  %n = alloca %struct.b2Vec2, align 4
  %v1 = alloca %struct.b2Vec2, align 4
  %si = alloca float, align 4
  %j = alloca i32, align 4
  %sij = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store i32* %edgeIndex, i32** %1, align 8
  store %class.b2PolygonShape* %poly1, %class.b2PolygonShape** %2, align 8
  store %struct.b2Transform* %xf1, %struct.b2Transform** %3, align 8
  store %class.b2PolygonShape* %poly2, %class.b2PolygonShape** %4, align 8
  store %struct.b2Transform* %xf2, %struct.b2Transform** %5, align 8
  %7 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %8 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %count1, align 4
  %10 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  %11 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %10, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %count2, align 4
  %13 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %14 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %13, i32 0, i32 3
  %15 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %14, i32 0, i32 0
  store %struct.b2Vec2* %15, %struct.b2Vec2** %n1s, align 8
  %16 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %17 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %16, i32 0, i32 2
  %18 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %17, i32 0, i32 0
  store %struct.b2Vec2* %18, %struct.b2Vec2** %v1s, align 8
  %19 = load %class.b2PolygonShape*, %class.b2PolygonShape** %4, align 8
  %20 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %19, i32 0, i32 2
  %21 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %20, i32 0, i32 0
  store %struct.b2Vec2* %21, %struct.b2Vec2** %v2s, align 8
  %22 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %23 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %24 = call { <2 x float>, <2 x float> } @_Z6b2MulTRK11b2TransformS1_(%struct.b2Transform* dereferenceable(16) %22, %struct.b2Transform* dereferenceable(16) %23)
  %25 = bitcast %struct.b2Transform* %xf to { <2 x float>, <2 x float> }*
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i32 0, i32 0
  %27 = extractvalue { <2 x float>, <2 x float> } %24, 0
  store <2 x float> %27, <2 x float>* %26, align 4
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i32 0, i32 1
  %29 = extractvalue { <2 x float>, <2 x float> } %24, 1
  store <2 x float> %29, <2 x float>* %28, align 4
  store i32 0, i32* %bestIndex, align 4
  store float 0xC7EFFFFFE0000000, float* %maxSeparation, align 4
  store i32 0, i32* %i, align 4
  br label %30

; <label>:30                                      ; preds = %77, %0
  %31 = load i32, i32* %i, align 4
  %32 = load i32, i32* %count1, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %80

; <label>:34                                      ; preds = %30
  %35 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf, i32 0, i32 1
  %36 = load i32, i32* %i, align 4
  %37 = sext i32 %36 to i64
  %38 = load %struct.b2Vec2*, %struct.b2Vec2** %n1s, align 8
  %39 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %38, i64 %37
  %40 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %35, %struct.b2Vec2* dereferenceable(8) %39)
  %41 = bitcast %struct.b2Vec2* %n to <2 x float>*
  store <2 x float> %40, <2 x float>* %41, align 4
  %42 = load i32, i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = load %struct.b2Vec2*, %struct.b2Vec2** %v1s, align 8
  %45 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %44, i64 %43
  %46 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xf, %struct.b2Vec2* dereferenceable(8) %45)
  %47 = bitcast %struct.b2Vec2* %v1 to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 4
  store float 0x47EFFFFFE0000000, float* %si, align 4
  store i32 0, i32* %j, align 4
  br label %48

; <label>:48                                      ; preds = %66, %34
  %49 = load i32, i32* %j, align 4
  %50 = load i32, i32* %count2, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %69

; <label>:52                                      ; preds = %48
  %53 = load i32, i32* %j, align 4
  %54 = sext i32 %53 to i64
  %55 = load %struct.b2Vec2*, %struct.b2Vec2** %v2s, align 8
  %56 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %55, i64 %54
  %57 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %56, %struct.b2Vec2* dereferenceable(8) %v1)
  %58 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %n, %struct.b2Vec2* dereferenceable(8) %6)
  store float %59, float* %sij, align 4
  %60 = load float, float* %sij, align 4
  %61 = load float, float* %si, align 4
  %62 = fcmp olt float %60, %61
  br i1 %62, label %63, label %65

; <label>:63                                      ; preds = %52
  %64 = load float, float* %sij, align 4
  store float %64, float* %si, align 4
  br label %65

; <label>:65                                      ; preds = %63, %52
  br label %66

; <label>:66                                      ; preds = %65
  %67 = load i32, i32* %j, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %j, align 4
  br label %48

; <label>:69                                      ; preds = %48
  %70 = load float, float* %si, align 4
  %71 = load float, float* %maxSeparation, align 4
  %72 = fcmp ogt float %70, %71
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %69
  %74 = load float, float* %si, align 4
  store float %74, float* %maxSeparation, align 4
  %75 = load i32, i32* %i, align 4
  store i32 %75, i32* %bestIndex, align 4
  br label %76

; <label>:76                                      ; preds = %73, %69
  br label %77

; <label>:77                                      ; preds = %76
  %78 = load i32, i32* %i, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %i, align 4
  br label %30

; <label>:80                                      ; preds = %30
  %81 = load i32, i32* %bestIndex, align 4
  %82 = load i32*, i32** %1, align 8
  store i32 %81, i32* %82, align 4
  %83 = load float, float* %maxSeparation, align 4
  ret float %83
}

; Function Attrs: uwtable
define internal void @_ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_(%struct.b2ClipVertex* %c, %class.b2PolygonShape* %poly1, %struct.b2Transform* dereferenceable(16) %xf1, i32 %edge1, %class.b2PolygonShape* %poly2, %struct.b2Transform* dereferenceable(16) %xf2) #0 {
  %1 = alloca %struct.b2ClipVertex*, align 8
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2PolygonShape*, align 8
  %6 = alloca %struct.b2Transform*, align 8
  %normals1 = alloca %struct.b2Vec2*, align 8
  %count2 = alloca i32, align 4
  %vertices2 = alloca %struct.b2Vec2*, align 8
  %normals2 = alloca %struct.b2Vec2*, align 8
  %normal1 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %index = alloca i32, align 4
  %minDot = alloca float, align 4
  %i = alloca i32, align 4
  %dot = alloca float, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %struct.b2ClipVertex* %c, %struct.b2ClipVertex** %1, align 8
  store %class.b2PolygonShape* %poly1, %class.b2PolygonShape** %2, align 8
  store %struct.b2Transform* %xf1, %struct.b2Transform** %3, align 8
  store i32 %edge1, i32* %4, align 4
  store %class.b2PolygonShape* %poly2, %class.b2PolygonShape** %5, align 8
  store %struct.b2Transform* %xf2, %struct.b2Transform** %6, align 8
  %10 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %11 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %10, i32 0, i32 3
  %12 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %11, i32 0, i32 0
  store %struct.b2Vec2* %12, %struct.b2Vec2** %normals1, align 8
  %13 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %14 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %13, i32 0, i32 4
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %count2, align 4
  %16 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %17 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %16, i32 0, i32 2
  %18 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %17, i32 0, i32 0
  store %struct.b2Vec2* %18, %struct.b2Vec2** %vertices2, align 8
  %19 = load %class.b2PolygonShape*, %class.b2PolygonShape** %5, align 8
  %20 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %19, i32 0, i32 3
  %21 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %20, i32 0, i32 0
  store %struct.b2Vec2* %21, %struct.b2Vec2** %normals2, align 8
  %22 = load i32, i32* %4, align 4
  %23 = icmp sle i32 0, %22
  br i1 %23, label %24, label %31

; <label>:24                                      ; preds = %0
  %25 = load i32, i32* %4, align 4
  %26 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %27 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %25, %28
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %24
  br label %33

; <label>:31                                      ; preds = %24, %0
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1.406, i32 0, i32 0), i32 74, i8* getelementptr inbounds ([137 x i8], [137 x i8]* @__PRETTY_FUNCTION__._ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %33

; <label>:33                                      ; preds = %32, %30
  %34 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %35 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %34, i32 0, i32 1
  %36 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %37 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %36, i32 0, i32 1
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = load %struct.b2Vec2*, %struct.b2Vec2** %normals1, align 8
  %41 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %40, i64 %39
  %42 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %37, %struct.b2Vec2* dereferenceable(8) %41)
  %43 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %42, <2 x float>* %43, align 4
  %44 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %35, %struct.b2Vec2* dereferenceable(8) %7)
  %45 = bitcast %struct.b2Vec2* %normal1 to <2 x float>*
  store <2 x float> %44, <2 x float>* %45, align 4
  store i32 0, i32* %index, align 4
  store float 0x47EFFFFFE0000000, float* %minDot, align 4
  store i32 0, i32* %i, align 4
  br label %46

; <label>:46                                      ; preds = %63, %33
  %47 = load i32, i32* %i, align 4
  %48 = load i32, i32* %count2, align 4
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %50, label %66

; <label>:50                                      ; preds = %46
  %51 = load i32, i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = load %struct.b2Vec2*, %struct.b2Vec2** %normals2, align 8
  %54 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %53, i64 %52
  %55 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %normal1, %struct.b2Vec2* dereferenceable(8) %54)
  store float %55, float* %dot, align 4
  %56 = load float, float* %dot, align 4
  %57 = load float, float* %minDot, align 4
  %58 = fcmp olt float %56, %57
  br i1 %58, label %59, label %62

; <label>:59                                      ; preds = %50
  %60 = load float, float* %dot, align 4
  store float %60, float* %minDot, align 4
  %61 = load i32, i32* %i, align 4
  store i32 %61, i32* %index, align 4
  br label %62

; <label>:62                                      ; preds = %59, %50
  br label %63

; <label>:63                                      ; preds = %62
  %64 = load i32, i32* %i, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %i, align 4
  br label %46

; <label>:66                                      ; preds = %46
  %67 = load i32, i32* %index, align 4
  store i32 %67, i32* %i1, align 4
  %68 = load i32, i32* %i1, align 4
  %69 = add nsw i32 %68, 1
  %70 = load i32, i32* %count2, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %75

; <label>:72                                      ; preds = %66
  %73 = load i32, i32* %i1, align 4
  %74 = add nsw i32 %73, 1
  br label %76

; <label>:75                                      ; preds = %66
  br label %76

; <label>:76                                      ; preds = %75, %72
  %77 = phi i32 [ %74, %72 ], [ 0, %75 ]
  store i32 %77, i32* %i2, align 4
  %78 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %79 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %78, i64 0
  %80 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %79, i32 0, i32 0
  %81 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %82 = load i32, i32* %i1, align 4
  %83 = sext i32 %82 to i64
  %84 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices2, align 8
  %85 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %84, i64 %83
  %86 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %81, %struct.b2Vec2* dereferenceable(8) %85)
  %87 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %86, <2 x float>* %87, align 4
  %88 = bitcast %struct.b2Vec2* %80 to i8*
  %89 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 4, i1 false)
  %90 = load i32, i32* %4, align 4
  %91 = trunc i32 %90 to i8
  %92 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %93 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %92, i64 0
  %94 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %93, i32 0, i32 1
  %95 = bitcast %union.anon* %94 to %struct.b2ContactFeature*
  %96 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %95, i32 0, i32 0
  store i8 %91, i8* %96, align 4
  %97 = load i32, i32* %i1, align 4
  %98 = trunc i32 %97 to i8
  %99 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %100 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %99, i64 0
  %101 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %100, i32 0, i32 1
  %102 = bitcast %union.anon* %101 to %struct.b2ContactFeature*
  %103 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %102, i32 0, i32 1
  store i8 %98, i8* %103, align 1
  %104 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %105 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %104, i64 0
  %106 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %105, i32 0, i32 1
  %107 = bitcast %union.anon* %106 to %struct.b2ContactFeature*
  %108 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %107, i32 0, i32 2
  store i8 1, i8* %108, align 2
  %109 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %110 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %109, i64 0
  %111 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %110, i32 0, i32 1
  %112 = bitcast %union.anon* %111 to %struct.b2ContactFeature*
  %113 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %112, i32 0, i32 3
  store i8 0, i8* %113, align 1
  %114 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %115 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %114, i64 1
  %116 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %115, i32 0, i32 0
  %117 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %118 = load i32, i32* %i2, align 4
  %119 = sext i32 %118 to i64
  %120 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices2, align 8
  %121 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %120, i64 %119
  %122 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %117, %struct.b2Vec2* dereferenceable(8) %121)
  %123 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %122, <2 x float>* %123, align 4
  %124 = bitcast %struct.b2Vec2* %116 to i8*
  %125 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %124, i8* %125, i64 8, i32 4, i1 false)
  %126 = load i32, i32* %4, align 4
  %127 = trunc i32 %126 to i8
  %128 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %129 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %128, i64 1
  %130 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %129, i32 0, i32 1
  %131 = bitcast %union.anon* %130 to %struct.b2ContactFeature*
  %132 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %131, i32 0, i32 0
  store i8 %127, i8* %132, align 4
  %133 = load i32, i32* %i2, align 4
  %134 = trunc i32 %133 to i8
  %135 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %136 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %135, i64 1
  %137 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %136, i32 0, i32 1
  %138 = bitcast %union.anon* %137 to %struct.b2ContactFeature*
  %139 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %138, i32 0, i32 1
  store i8 %134, i8* %139, align 1
  %140 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %141 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %140, i64 1
  %142 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %141, i32 0, i32 1
  %143 = bitcast %union.anon* %142 to %struct.b2ContactFeature*
  %144 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %143, i32 0, i32 2
  store i8 1, i8* %144, align 2
  %145 = load %struct.b2ClipVertex*, %struct.b2ClipVertex** %1, align 8
  %146 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %145, i64 1
  %147 = getelementptr inbounds %struct.b2ClipVertex, %struct.b2ClipVertex* %146, i32 0, i32 1
  %148 = bitcast %union.anon* %147 to %struct.b2ContactFeature*
  %149 = getelementptr inbounds %struct.b2ContactFeature, %struct.b2ContactFeature* %148, i32 0, i32 3
  store i8 0, i8* %149, align 1
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %a, float %s) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca float, align 4
  store %struct.b2Vec2* %a, %struct.b2Vec2** %2, align 8
  store float %s, float* %3, align 4
  %4 = load float, float* %3, align 4
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fmul float %4, %7
  %9 = load float, float* %3, align 4
  %10 = fsub float -0.000000e+00, %9
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fmul float %10, %13
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %8, float %14)
  %15 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  ret <2 x float> %16
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16b2PolygonContactD2Ev(%class.b2CircleContact* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2CircleContact*, align 8
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %2 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %3 = bitcast %class.b2CircleContact* %2 to %class.b2Contact*
  call void @_ZN9b2ContactD2Ev(%class.b2Contact* %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN16b2PolygonContactD0Ev(%class.b2CircleContact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  %4 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  invoke void @_ZN16b2PolygonContactD2Ev(%class.b2CircleContact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleContact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_b2ContactManager.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  ret void
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZN15b2ContactFilterC2Ev(%class.b2ContactFilter* @b2_defaultFilter) #3
  %1 = call i32 @atexit(void ()* @__dtor_b2_defaultFilter) #3
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN15b2ContactFilterC2Ev(%class.b2ContactFilter* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  %2 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  %3 = bitcast %class.b2ContactFilter* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV15b2ContactFilter, i64 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN15b2ContactFilterD2Ev(%class.b2ContactFilter* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  %2 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN15b2ContactFilterD0Ev(%class.b2ContactFilter* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2ContactFilter*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  invoke void @_ZN15b2ContactFilterD2Ev(%class.b2ContactFilter* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2ContactFilter* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2ContactFilter* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define zeroext i1 @_ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_(%class.b2ContactFilter* %this, %class.b2Fixture* %fixtureA, %class.b2Fixture* %fixtureB) unnamed_addr #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2ContactFilter*, align 8
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca %class.b2Fixture*, align 8
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %filterA = alloca %struct.b2Filter*, align 8
  %filterB = alloca %struct.b2Filter*, align 8
  %collide = alloca i8, align 1
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %2, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %3, align 8
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %4, align 8
  %5 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %6 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %7 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %6)
  store %class.b2Body* %7, %class.b2Body** %bodyA, align 8
  %8 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %9 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %8)
  store %class.b2Body* %9, %class.b2Body** %bodyB, align 8
  %10 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %11 = call i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %10)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %0
  %14 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %15 = call i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %14)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %13
  store i1 false, i1* %1, align 1
  br label %78

; <label>:18                                      ; preds = %13, %0
  %19 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %20 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %21 = call zeroext i1 @_ZNK6b2Body22ShouldCollideConnectedEPKS_(%class.b2Body* %19, %class.b2Body* %20)
  %22 = zext i1 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %18
  store i1 false, i1* %1, align 1
  br label %78

; <label>:25                                      ; preds = %18
  %26 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %27 = call dereferenceable(6) %struct.b2Filter* @_ZNK9b2Fixture13GetFilterDataEv(%class.b2Fixture* %26)
  store %struct.b2Filter* %27, %struct.b2Filter** %filterA, align 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %29 = call dereferenceable(6) %struct.b2Filter* @_ZNK9b2Fixture13GetFilterDataEv(%class.b2Fixture* %28)
  store %struct.b2Filter* %29, %struct.b2Filter** %filterB, align 8
  %30 = load %struct.b2Filter*, %struct.b2Filter** %filterA, align 8
  %31 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %30, i32 0, i32 2
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = load %struct.b2Filter*, %struct.b2Filter** %filterB, align 8
  %35 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %34, i32 0, i32 2
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i32
  %38 = icmp eq i32 %33, %37
  br i1 %38, label %39, label %51

; <label>:39                                      ; preds = %25
  %40 = load %struct.b2Filter*, %struct.b2Filter** %filterA, align 8
  %41 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %40, i32 0, i32 2
  %42 = load i16, i16* %41, align 2
  %43 = sext i16 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %51

; <label>:45                                      ; preds = %39
  %46 = load %struct.b2Filter*, %struct.b2Filter** %filterA, align 8
  %47 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %46, i32 0, i32 2
  %48 = load i16, i16* %47, align 2
  %49 = sext i16 %48 to i32
  %50 = icmp sgt i32 %49, 0
  store i1 %50, i1* %1, align 1
  br label %78

; <label>:51                                      ; preds = %39, %25
  %52 = load %struct.b2Filter*, %struct.b2Filter** %filterA, align 8
  %53 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %52, i32 0, i32 1
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = load %struct.b2Filter*, %struct.b2Filter** %filterB, align 8
  %57 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %56, i32 0, i32 0
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %55, %59
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %73

; <label>:62                                      ; preds = %51
  %63 = load %struct.b2Filter*, %struct.b2Filter** %filterA, align 8
  %64 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %63, i32 0, i32 0
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = load %struct.b2Filter*, %struct.b2Filter** %filterB, align 8
  %68 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %67, i32 0, i32 1
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  %71 = and i32 %66, %70
  %72 = icmp ne i32 %71, 0
  br label %73

; <label>:73                                      ; preds = %62, %51
  %74 = phi i1 [ false, %51 ], [ %72, %62 ]
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %collide, align 1
  %76 = load i8, i8* %collide, align 1
  %77 = trunc i8 %76 to i1
  store i1 %77, i1* %1, align 1
  br label %78

; <label>:78                                      ; preds = %73, %45, %24, %17
  %79 = load i1, i1* %1, align 1
  ret i1 %79
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 2
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  ret %class.b2Body* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK6b2Body22ShouldCollideConnectedEPKS_(%class.b2Body* %this, %class.b2Body* %other) #2 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %jn = alloca %struct.b2JointEdge*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %class.b2Body* %other, %class.b2Body** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 14
  %6 = load %struct.b2JointEdge*, %struct.b2JointEdge** %5, align 8
  store %struct.b2JointEdge* %6, %struct.b2JointEdge** %jn, align 8
  br label %7

; <label>:7                                       ; preds = %28, %0
  %8 = load %struct.b2JointEdge*, %struct.b2JointEdge** %jn, align 8
  %9 = icmp ne %struct.b2JointEdge* %8, null
  br i1 %9, label %10, label %32

; <label>:10                                      ; preds = %7
  %11 = load %struct.b2JointEdge*, %struct.b2JointEdge** %jn, align 8
  %12 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %11, i32 0, i32 0
  %13 = load %class.b2Body*, %class.b2Body** %12, align 8
  %14 = load %class.b2Body*, %class.b2Body** %3, align 8
  %15 = icmp eq %class.b2Body* %13, %14
  br i1 %15, label %16, label %27

; <label>:16                                      ; preds = %10
  %17 = load %struct.b2JointEdge*, %struct.b2JointEdge** %jn, align 8
  %18 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %17, i32 0, i32 1
  %19 = load %class.b2Joint*, %class.b2Joint** %18, align 8
  %20 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %19, i32 0, i32 10
  %21 = load i8, i8* %20, align 1
  %22 = trunc i8 %21 to i1
  %23 = zext i1 %22 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %16
  store i1 false, i1* %1, align 1
  br label %33

; <label>:26                                      ; preds = %16
  br label %27

; <label>:27                                      ; preds = %26, %10
  br label %28

; <label>:28                                      ; preds = %27
  %29 = load %struct.b2JointEdge*, %struct.b2JointEdge** %jn, align 8
  %30 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %29, i32 0, i32 3
  %31 = load %struct.b2JointEdge*, %struct.b2JointEdge** %30, align 8
  store %struct.b2JointEdge* %31, %struct.b2JointEdge** %jn, align 8
  br label %7

; <label>:32                                      ; preds = %7
  store i1 true, i1* %1, align 1
  br label %33

; <label>:33                                      ; preds = %32, %25
  %34 = load i1, i1* %1, align 1
  ret i1 %34
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(6) %struct.b2Filter* @_ZNK9b2Fixture13GetFilterDataEv(%class.b2Fixture* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 8
  ret %struct.b2Filter* %3
}

; Function Attrs: uwtable
define internal void @__dtor_b2_defaultFilter() #0 section ".text.startup" {
  call void @_ZN15b2ContactFilterD2Ev(%class.b2ContactFilter* @b2_defaultFilter)
  ret void
}

; Function Attrs: nounwind
declare i32 @atexit(void ()*) #3

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  call void @_ZN17b2ContactListenerC2Ev(%class.b2ContactFilter* @b2_defaultListener) #3
  %1 = call i32 @atexit(void ()* @__dtor_b2_defaultListener) #3
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN17b2ContactListenerC2Ev(%class.b2ContactFilter* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  %2 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  %3 = bitcast %class.b2ContactFilter* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @_ZTV17b2ContactListener, i64 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN17b2ContactListenerD2Ev(%class.b2ContactFilter* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  %2 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN17b2ContactListenerD0Ev(%class.b2ContactFilter* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2ContactFilter*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  invoke void @_ZN17b2ContactListenerD2Ev(%class.b2ContactFilter* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2ContactFilter* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2ContactFilter* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN17b2ContactListener12BeginContactEP9b2Contact(%class.b2ContactFilter* %this, %class.b2Contact* %contact) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  %2 = alloca %class.b2Contact*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %2, align 8
  %3 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN17b2ContactListener10EndContactEP9b2Contact(%class.b2ContactFilter* %this, %class.b2Contact* %contact) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  %2 = alloca %class.b2Contact*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %2, align 8
  %3 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold(%class.b2ContactFilter* %this, %class.b2Contact* %contact, %struct.b2Manifold* %oldManifold) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  %2 = alloca %class.b2Contact*, align 8
  %3 = alloca %struct.b2Manifold*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %2, align 8
  store %struct.b2Manifold* %oldManifold, %struct.b2Manifold** %3, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse(%class.b2ContactFilter* %this, %class.b2Contact* %contact, %struct.b2ContactImpulse* %impulse) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2ContactFilter*, align 8
  %2 = alloca %class.b2Contact*, align 8
  %3 = alloca %struct.b2ContactImpulse*, align 8
  store %class.b2ContactFilter* %this, %class.b2ContactFilter** %1, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %2, align 8
  store %struct.b2ContactImpulse* %impulse, %struct.b2ContactImpulse** %3, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %1, align 8
  ret void
}

; Function Attrs: uwtable
define internal void @__dtor_b2_defaultListener() #0 section ".text.startup" {
  call void @_ZN17b2ContactListenerD2Ev(%class.b2ContactFilter* @b2_defaultListener)
  ret void
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_b2Math.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init.324()
  ret void
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.324() #0 section ".text.startup" {
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* @b2Vec2_zero, float 0.000000e+00, float 0.000000e+00)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN13b2CircleShapeD2Ev(%class.b2CircleShape* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2CircleShape*, align 8
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  %2 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  %3 = bitcast %class.b2CircleShape* %2 to %class.b2Shape*
  call void @_ZN7b2ShapeD2Ev(%class.b2Shape* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN13b2CircleShapeD0Ev(%class.b2CircleShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  %4 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  invoke void @_ZN13b2CircleShapeD2Ev(%class.b2CircleShape* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2CircleShape* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2CircleShape* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define %class.b2Shape* @_ZNK13b2CircleShape5CloneEP16b2BlockAllocator(%class.b2CircleShape* %this, %class.b2BlockAllocator* %allocator) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleShape*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  %clone = alloca %class.b2CircleShape*, align 8
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  %4 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %5 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %4, i32 24)
  store i8* %5, i8** %mem, align 8
  %6 = load i8*, i8** %mem, align 8
  %7 = bitcast i8* %6 to %class.b2CircleShape*
  call void @_ZN13b2CircleShapeC2Ev(%class.b2CircleShape* %7)
  store %class.b2CircleShape* %7, %class.b2CircleShape** %clone, align 8
  %8 = load %class.b2CircleShape*, %class.b2CircleShape** %clone, align 8
  %9 = call dereferenceable(24) %class.b2CircleShape* @_ZN13b2CircleShapeaSERKS_(%class.b2CircleShape* %8, %class.b2CircleShape* dereferenceable(24) %3) #3
  %10 = load %class.b2CircleShape*, %class.b2CircleShape** %clone, align 8
  %11 = bitcast %class.b2CircleShape* %10 to %class.b2Shape*
  ret %class.b2Shape* %11
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN13b2CircleShapeC2Ev(%class.b2CircleShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  %4 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  %5 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  call void @_ZN7b2ShapeC2Ev(%class.b2Shape* %5) #3
  %6 = bitcast %class.b2CircleShape* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTV13b2CircleShape, i64 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %4, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
          to label %8 unwind label %15

; <label>:8                                       ; preds = %0
  %9 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %10 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %9, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %12 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %11, i32 0, i32 2
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %4, i32 0, i32 1
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %13)
          to label %14 unwind label %15

; <label>:14                                      ; preds = %8
  ret void

; <label>:15                                      ; preds = %8, %0
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %2, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %3, align 4
  %19 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  invoke void @_ZN7b2ShapeD2Ev(%class.b2Shape* %19)
          to label %20 unwind label %26

; <label>:20                                      ; preds = %15
  br label %21

; <label>:21                                      ; preds = %20
  %22 = load i8*, i8** %2, align 8
  %23 = load i32, i32* %3, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

; <label>:26                                      ; preds = %15
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  call void @__clang_call_terminate(i8* %28) #15
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(24) %class.b2CircleShape* @_ZN13b2CircleShapeaSERKS_(%class.b2CircleShape* %this, %class.b2CircleShape* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca %class.b2CircleShape*, align 8
  %3 = alloca %class.b2CircleShape*, align 8
  store %class.b2CircleShape* %this, %class.b2CircleShape** %2, align 8
  store %class.b2CircleShape* %0, %class.b2CircleShape** %3, align 8
  %4 = load %class.b2CircleShape*, %class.b2CircleShape** %2, align 8
  %5 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %6 = load %class.b2CircleShape*, %class.b2CircleShape** %3, align 8
  %7 = bitcast %class.b2CircleShape* %6 to %class.b2Shape*
  %8 = call dereferenceable(16) %class.b2Shape* @_ZN7b2ShapeaSERKS_(%class.b2Shape* %5, %class.b2Shape* dereferenceable(16) %7) #3
  %9 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %4, i32 0, i32 1
  %10 = load %class.b2CircleShape*, %class.b2CircleShape** %3, align 8
  %11 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %10, i32 0, i32 1
  %12 = bitcast %struct.b2Vec2* %9 to i8*
  %13 = bitcast %struct.b2Vec2* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  ret %class.b2CircleShape* %4
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK13b2CircleShape13GetChildCountEv(%class.b2CircleShape* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2CircleShape*, align 8
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  %2 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  ret i32 1
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2(%class.b2CircleShape* %this, %struct.b2Transform* dereferenceable(16) %transform, %struct.b2Vec2* dereferenceable(8) %p) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %center = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  store %struct.b2Transform* %transform, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %p, %struct.b2Vec2** %3, align 8
  %5 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  %6 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %6, i32 0, i32 0
  %8 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %8, i32 0, i32 1
  %10 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %5, i32 0, i32 1
  %11 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %10)
  %12 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %11, <2 x float>* %12, align 4
  %13 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %4)
  %14 = bitcast %struct.b2Vec2* %center to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 4
  %15 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %16 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %15, %struct.b2Vec2* dereferenceable(8) %center)
  %17 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %16, <2 x float>* %17, align 4
  %18 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %d)
  %19 = bitcast %class.b2CircleShape* %5 to %class.b2Shape*
  %20 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %19, i32 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = bitcast %class.b2CircleShape* %5 to %class.b2Shape*
  %23 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %22, i32 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fmul float %21, %24
  %26 = fcmp ole float %18, %25
  ret i1 %26
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi(%class.b2CircleShape* %this, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %input, %struct.b2Transform* dereferenceable(16) %transform, i32 %childIndex) unnamed_addr #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2CircleShape*, align 8
  %3 = alloca %struct.b2Position*, align 8
  %4 = alloca %struct.b2PositionSolverManifold*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %6 = alloca i32, align 4
  %position = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %s = alloca %struct.b2Vec2, align 4
  %b = alloca float, align 4
  %r = alloca %struct.b2Vec2, align 4
  %c = alloca float, align 4
  %rr = alloca float, align 4
  %sigma = alloca float, align 4
  %a = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2CircleShape* %this, %class.b2CircleShape** %2, align 8
  store %struct.b2Position* %output, %struct.b2Position** %3, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %4, align 8
  store %struct.b2Transform* %transform, %struct.b2Transform** %5, align 8
  store i32 %childIndex, i32* %6, align 4
  %10 = load %class.b2CircleShape*, %class.b2CircleShape** %2, align 8
  %11 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %12 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %11, i32 0, i32 0
  %13 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %14 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %13, i32 0, i32 1
  %15 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %10, i32 0, i32 1
  %16 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %14, %struct.b2Vec2* dereferenceable(8) %15)
  %17 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %16, <2 x float>* %17, align 4
  %18 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %7)
  %19 = bitcast %struct.b2Vec2* %position to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %21 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %20, i32 0, i32 0
  %22 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %21, %struct.b2Vec2* dereferenceable(8) %position)
  %23 = bitcast %struct.b2Vec2* %s to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %s, %struct.b2Vec2* dereferenceable(8) %s)
  %25 = bitcast %class.b2CircleShape* %10 to %class.b2Shape*
  %26 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %25, i32 0, i32 2
  %27 = load float, float* %26, align 4
  %28 = bitcast %class.b2CircleShape* %10 to %class.b2Shape*
  %29 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %28, i32 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = fmul float %27, %30
  %32 = fsub float %24, %31
  store float %32, float* %b, align 4
  %33 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %34 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %33, i32 0, i32 1
  %35 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %36 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %35, i32 0, i32 0
  %37 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %34, %struct.b2Vec2* dereferenceable(8) %36)
  %38 = bitcast %struct.b2Vec2* %r to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 4
  %39 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %s, %struct.b2Vec2* dereferenceable(8) %r)
  store float %39, float* %c, align 4
  %40 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %r, %struct.b2Vec2* dereferenceable(8) %r)
  store float %40, float* %rr, align 4
  %41 = load float, float* %c, align 4
  %42 = load float, float* %c, align 4
  %43 = fmul float %41, %42
  %44 = load float, float* %rr, align 4
  %45 = load float, float* %b, align 4
  %46 = fmul float %44, %45
  %47 = fsub float %43, %46
  store float %47, float* %sigma, align 4
  %48 = load float, float* %sigma, align 4
  %49 = fcmp olt float %48, 0.000000e+00
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %0
  %51 = load float, float* %rr, align 4
  %52 = fcmp olt float %51, 0x3E80000000000000
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %50, %0
  store i1 false, i1* %1, align 1
  br label %90

; <label>:54                                      ; preds = %50
  %55 = load float, float* %c, align 4
  %56 = load float, float* %sigma, align 4
  %57 = call float @sqrtf(float %56) #3
  %58 = fadd float %55, %57
  %59 = fsub float -0.000000e+00, %58
  store float %59, float* %a, align 4
  %60 = load float, float* %a, align 4
  %61 = fcmp ole float 0.000000e+00, %60
  br i1 %61, label %62, label %89

; <label>:62                                      ; preds = %54
  %63 = load float, float* %a, align 4
  %64 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %65 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %64, i32 0, i32 2
  %66 = load float, float* %65, align 4
  %67 = load float, float* %rr, align 4
  %68 = fmul float %66, %67
  %69 = fcmp ole float %63, %68
  br i1 %69, label %70, label %89

; <label>:70                                      ; preds = %62
  %71 = load float, float* %rr, align 4
  %72 = load float, float* %a, align 4
  %73 = fdiv float %72, %71
  store float %73, float* %a, align 4
  %74 = load float, float* %a, align 4
  %75 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %76 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %75, i32 0, i32 1
  store float %74, float* %76, align 4
  %77 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %78 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %77, i32 0, i32 0
  %79 = load float, float* %a, align 4
  %80 = call <2 x float> @_ZmlfRK6b2Vec2(float %79, %struct.b2Vec2* dereferenceable(8) %r)
  %81 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %s, %struct.b2Vec2* dereferenceable(8) %9)
  %83 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %82, <2 x float>* %83, align 4
  %84 = bitcast %struct.b2Vec2* %78 to i8*
  %85 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 4, i1 false)
  %86 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %87 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %86, i32 0, i32 0
  %88 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %87)
  store i1 true, i1* %1, align 1
  br label %90

; <label>:89                                      ; preds = %62, %54
  store i1 false, i1* %1, align 1
  br label %90

; <label>:90                                      ; preds = %89, %70, %53
  %91 = load i1, i1* %1, align 1
  ret i1 %91
}

; Function Attrs: uwtable
define void @_ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi(%class.b2CircleShape* %this, %struct.b2Transform* %aabb, %struct.b2Transform* dereferenceable(16) %transform, i32 %childIndex) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca i32, align 4
  %p = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %transform, %struct.b2Transform** %3, align 8
  store i32 %childIndex, i32* %4, align 4
  %6 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  %7 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %8 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %7, i32 0, i32 0
  %9 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %10 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %9, i32 0, i32 1
  %11 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %6, i32 0, i32 1
  %12 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %11)
  %13 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %5)
  %15 = bitcast %struct.b2Vec2* %p to <2 x float>*
  store <2 x float> %14, <2 x float>* %15, align 4
  %16 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %17 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %p, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = bitcast %class.b2CircleShape* %6 to %class.b2Shape*
  %21 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %20, i32 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = fsub float %19, %22
  %24 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %p, i32 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = bitcast %class.b2CircleShape* %6 to %class.b2Shape*
  %27 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %26, i32 0, i32 2
  %28 = load float, float* %27, align 4
  %29 = fsub float %25, %28
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %17, float %23, float %29)
  %30 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %31 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %30, i32 0, i32 1
  %32 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %p, i32 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = bitcast %class.b2CircleShape* %6 to %class.b2Shape*
  %35 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %34, i32 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = fadd float %33, %36
  %38 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %p, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = bitcast %class.b2CircleShape* %6 to %class.b2Shape*
  %41 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %40, i32 0, i32 2
  %42 = load float, float* %41, align 4
  %43 = fadd float %39, %42
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %31, float %37, float %43)
  ret void
}

; Function Attrs: uwtable
define void @_ZNK13b2CircleShape11ComputeMassEP10b2MassDataf(%class.b2CircleShape* %this, %struct.b2MassData* %massData, float %density) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2CircleShape*, align 8
  %2 = alloca %struct.b2MassData*, align 8
  %3 = alloca float, align 4
  store %class.b2CircleShape* %this, %class.b2CircleShape** %1, align 8
  store %struct.b2MassData* %massData, %struct.b2MassData** %2, align 8
  store float %density, float* %3, align 4
  %4 = load %class.b2CircleShape*, %class.b2CircleShape** %1, align 8
  %5 = load float, float* %3, align 4
  %6 = fmul float %5, 0x400921FB60000000
  %7 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %8 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %7, i32 0, i32 2
  %9 = load float, float* %8, align 4
  %10 = fmul float %6, %9
  %11 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %12 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %11, i32 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = fmul float %10, %13
  %15 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %16 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %15, i32 0, i32 0
  store float %14, float* %16, align 4
  %17 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %18 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %17, i32 0, i32 1
  %19 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %4, i32 0, i32 1
  %20 = bitcast %struct.b2Vec2* %18 to i8*
  %21 = bitcast %struct.b2Vec2* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 4, i1 false)
  %22 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %23 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %22, i32 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %26 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %25, i32 0, i32 2
  %27 = load float, float* %26, align 4
  %28 = fmul float 5.000000e-01, %27
  %29 = bitcast %class.b2CircleShape* %4 to %class.b2Shape*
  %30 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %29, i32 0, i32 2
  %31 = load float, float* %30, align 4
  %32 = fmul float %28, %31
  %33 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %4, i32 0, i32 1
  %34 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %4, i32 0, i32 1
  %35 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %33, %struct.b2Vec2* dereferenceable(8) %34)
  %36 = fadd float %32, %35
  %37 = fmul float %24, %36
  %38 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %39 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %38, i32 0, i32 2
  store float %37, float* %39, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2ChainShapeD2Ev(%class.b2ChainShape* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = bitcast %class.b2ChainShape* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTV12b2ChainShape, i64 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  invoke void @_ZN12b2ChainShape5ClearEv(%class.b2ChainShape* %4)
          to label %6 unwind label %8

; <label>:6                                       ; preds = %0
  %7 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  call void @_ZN7b2ShapeD2Ev(%class.b2Shape* %7)
  ret void

; <label>:8                                       ; preds = %0
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %2, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %3, align 4
  %12 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  invoke void @_ZN7b2ShapeD2Ev(%class.b2Shape* %12)
          to label %13 unwind label %19

; <label>:13                                      ; preds = %8
  br label %14

; <label>:14                                      ; preds = %13
  %15 = load i8*, i8** %2, align 8
  %16 = load i32, i32* %3, align 4
  %17 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

; <label>:19                                      ; preds = %8
  %20 = landingpad { i8*, i32 }
          catch i8* null
  %21 = extractvalue { i8*, i32 } %20, 0
  call void @__clang_call_terminate(i8* %21) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN12b2ChainShape5ClearEv(%class.b2ChainShape* %this) #0 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  %2 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %3 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %2, i32 0, i32 1
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %5 = bitcast %struct.b2Vec2* %4 to i8*
  call void @_Z6b2FreePv(i8* %5)
  %6 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %2, i32 0, i32 1
  store %struct.b2Vec2* null, %struct.b2Vec2** %6, align 8
  %7 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %2, i32 0, i32 2
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2ChainShapeD0Ev(%class.b2ChainShape* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  invoke void @_ZN12b2ChainShapeD1Ev(%class.b2ChainShape* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2ChainShape* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2ChainShape* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define %class.b2Shape* @_ZNK12b2ChainShape5CloneEP16b2BlockAllocator(%class.b2ChainShape* %this, %class.b2BlockAllocator* %allocator) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  %clone = alloca %class.b2ChainShape*, align 8
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %4 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %5 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %4, i32 48)
  store i8* %5, i8** %mem, align 8
  %6 = load i8*, i8** %mem, align 8
  %7 = bitcast i8* %6 to %class.b2ChainShape*
  call void @_ZN12b2ChainShapeC2Ev(%class.b2ChainShape* %7)
  store %class.b2ChainShape* %7, %class.b2ChainShape** %clone, align 8
  %8 = load %class.b2ChainShape*, %class.b2ChainShape** %clone, align 8
  %9 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 1
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %9, align 8
  %11 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  call void @_ZN12b2ChainShape11CreateChainEPK6b2Vec2i(%class.b2ChainShape* %8, %struct.b2Vec2* %10, i32 %12)
  %13 = load %class.b2ChainShape*, %class.b2ChainShape** %clone, align 8
  %14 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %13, i32 0, i32 3
  %15 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 3
  %16 = bitcast %struct.b2Vec2* %14 to i8*
  %17 = bitcast %struct.b2Vec2* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false)
  %18 = load %class.b2ChainShape*, %class.b2ChainShape** %clone, align 8
  %19 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %18, i32 0, i32 4
  %20 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 4
  %21 = bitcast %struct.b2Vec2* %19 to i8*
  %22 = bitcast %struct.b2Vec2* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 5
  %24 = load i8, i8* %23, align 4
  %25 = trunc i8 %24 to i1
  %26 = load %class.b2ChainShape*, %class.b2ChainShape** %clone, align 8
  %27 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %26, i32 0, i32 5
  %28 = zext i1 %25 to i8
  store i8 %28, i8* %27, align 4
  %29 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 6
  %30 = load i8, i8* %29, align 1
  %31 = trunc i8 %30 to i1
  %32 = load %class.b2ChainShape*, %class.b2ChainShape** %clone, align 8
  %33 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %32, i32 0, i32 6
  %34 = zext i1 %31 to i8
  store i8 %34, i8* %33, align 1
  %35 = load %class.b2ChainShape*, %class.b2ChainShape** %clone, align 8
  %36 = bitcast %class.b2ChainShape* %35 to %class.b2Shape*
  ret %class.b2Shape* %36
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2ChainShapeC2Ev(%class.b2ChainShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  call void @_ZN7b2ShapeC2Ev(%class.b2Shape* %5) #3
  %6 = bitcast %class.b2ChainShape* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTV12b2ChainShape, i64 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 3
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
          to label %8 unwind label %19

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 4
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %9)
          to label %10 unwind label %19

; <label>:10                                      ; preds = %8
  %11 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  %12 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %11, i32 0, i32 1
  store i32 3, i32* %12, align 8
  %13 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  %14 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %13, i32 0, i32 2
  store float 0x3F847AE140000000, float* %14, align 4
  %15 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  store %struct.b2Vec2* null, %struct.b2Vec2** %15, align 8
  %16 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 5
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 6
  store i8 0, i8* %18, align 1
  ret void

; <label>:19                                      ; preds = %8, %0
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %2, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %3, align 4
  %23 = bitcast %class.b2ChainShape* %4 to %class.b2Shape*
  invoke void @_ZN7b2ShapeD2Ev(%class.b2Shape* %23)
          to label %24 unwind label %30

; <label>:24                                      ; preds = %19
  br label %25

; <label>:25                                      ; preds = %24
  %26 = load i8*, i8** %2, align 8
  %27 = load i32, i32* %3, align 4
  %28 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

; <label>:30                                      ; preds = %19
  %31 = landingpad { i8*, i32 }
          catch i8* null
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @__clang_call_terminate(i8* %32) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN12b2ChainShape11CreateChainEPK6b2Vec2i(%class.b2ChainShape* %this, %struct.b2Vec2* %vertices, i32 %count) #0 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Vec2* %vertices, %struct.b2Vec2** %2, align 8
  store i32 %count, i32* %3, align 4
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %7 = icmp eq %struct.b2Vec2* %6, null
  br i1 %7, label %8, label %13

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %8
  br label %15

; <label>:13                                      ; preds = %8, %0
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN12b2ChainShape11CreateChainEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load i32, i32* %3, align 4
  %17 = icmp sge i32 %16, 2
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %15
  br label %21

; <label>:19                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.363, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 66, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN12b2ChainShape11CreateChainEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %21

; <label>:21                                      ; preds = %20, %18
  store i32 1, i32* %i, align 4
  br label %22

; <label>:22                                      ; preds = %42, %21
  %23 = load i32, i32* %i, align 4
  %24 = load i32, i32* %3, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %45

; <label>:26                                      ; preds = %22
  %27 = load i32, i32* %i, align 4
  %28 = sub nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %30, i64 %29
  %32 = load i32, i32* %i, align 4
  %33 = sext i32 %32 to i64
  %34 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %34, i64 %33
  %36 = call float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %31, %struct.b2Vec2* dereferenceable(8) %35)
  %37 = fcmp ogt float %36, 0x3EFA36E2E0000000
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %26
  br label %41

; <label>:39                                      ; preds = %26
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.5.364, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 70, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN12b2ChainShape11CreateChainEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %41

; <label>:41                                      ; preds = %40, %38
  br label %42

; <label>:42                                      ; preds = %41
  %43 = load i32, i32* %i, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %i, align 4
  br label %22

; <label>:45                                      ; preds = %22
  %46 = load i32, i32* %3, align 4
  %47 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  store i32 %46, i32* %47, align 8
  %48 = load i32, i32* %3, align 4
  %49 = sext i32 %48 to i64
  %50 = mul i64 %49, 8
  %51 = trunc i64 %50 to i32
  %52 = call i8* @_Z7b2Alloci(i32 %51)
  %53 = bitcast i8* %52 to %struct.b2Vec2*
  %54 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  store %struct.b2Vec2* %53, %struct.b2Vec2** %54, align 8
  %55 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %56 = load %struct.b2Vec2*, %struct.b2Vec2** %55, align 8
  %57 = bitcast %struct.b2Vec2* %56 to i8*
  %58 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %59 = bitcast %struct.b2Vec2* %58 to i8*
  %60 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = mul i64 %62, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %59, i64 %63, i32 4, i1 false)
  %64 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 5
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 6
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 3
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %66)
  %67 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 4
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %67)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK12b2ChainShape13GetChildCountEv(%class.b2ChainShape* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  %2 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %3 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %2, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = sub nsw i32 %4, 1
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2(%class.b2ChainShape* %this, %struct.b2Transform* dereferenceable(16) %xf, %struct.b2Vec2* dereferenceable(8) %p) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %2, align 8
  store %struct.b2Vec2* %p, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  ret i1 false
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi(%class.b2ChainShape* %this, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %input, %struct.b2Transform* dereferenceable(16) %xf, i32 %childIndex) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Position*, align 8
  %3 = alloca %struct.b2PositionSolverManifold*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %5 = alloca i32, align 4
  %edgeShape = alloca %class.b2EdgeShape, align 8
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Position* %output, %struct.b2Position** %2, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %3, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %4, align 8
  store i32 %childIndex, i32* %5, align 4
  %8 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %9 = load i32, i32* %5, align 4
  %10 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %8, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  br label %16

; <label>:14                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.365, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 156, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16                                      ; preds = %15, %13
  call void @_ZN11b2EdgeShapeC2Ev(%class.b2EdgeShape* %edgeShape)
  %17 = load i32, i32* %5, align 4
  store i32 %17, i32* %i1, align 4
  %18 = load i32, i32* %5, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i2, align 4
  %20 = load i32, i32* %i2, align 4
  %21 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %8, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %16
  store i32 0, i32* %i2, align 4
  br label %25

; <label>:25                                      ; preds = %24, %16
  %26 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %edgeShape, i32 0, i32 1
  %27 = load i32, i32* %i1, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %8, i32 0, i32 1
  %30 = load %struct.b2Vec2*, %struct.b2Vec2** %29, align 8
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %30, i64 %28
  %32 = bitcast %struct.b2Vec2* %26 to i8*
  %33 = bitcast %struct.b2Vec2* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %edgeShape, i32 0, i32 2
  %35 = load i32, i32* %i2, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %8, i32 0, i32 1
  %38 = load %struct.b2Vec2*, %struct.b2Vec2** %37, align 8
  %39 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %38, i64 %36
  %40 = bitcast %struct.b2Vec2* %34 to i8*
  %41 = bitcast %struct.b2Vec2* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 4, i1 false)
  %42 = load %struct.b2Position*, %struct.b2Position** %2, align 8
  %43 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %44 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %45 = invoke zeroext i1 @_ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi(%class.b2EdgeShape* %edgeShape, %struct.b2Position* %42, %struct.b2PositionSolverManifold* dereferenceable(20) %43, %struct.b2Transform* dereferenceable(16) %44, i32 0)
          to label %46 unwind label %47

; <label>:46                                      ; preds = %25
  call void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %edgeShape)
  ret i1 %45

; <label>:47                                      ; preds = %25
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %6, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %7, align 4
  invoke void @_ZN11b2EdgeShapeD2Ev(%class.b2EdgeShape* %edgeShape)
          to label %51 unwind label %57

; <label>:51                                      ; preds = %47
  br label %52

; <label>:52                                      ; preds = %51
  %53 = load i8*, i8** %6, align 8
  %54 = load i32, i32* %7, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

; <label>:57                                      ; preds = %47
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  call void @__clang_call_terminate(i8* %59) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi(%class.b2ChainShape* %this, %struct.b2Transform* %aabb, %struct.b2Transform* dereferenceable(16) %xf, i32 %childIndex) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %v1 = alloca %struct.b2Vec2, align 4
  %v2 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %3, align 8
  store i32 %childIndex, i32* %4, align 4
  %7 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %8 = load i32, i32* %4, align 4
  %9 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %7, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %15

; <label>:13                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.365, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 175, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load i32, i32* %4, align 4
  store i32 %16, i32* %i1, align 4
  %17 = load i32, i32* %4, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %i2, align 4
  %19 = load i32, i32* %i2, align 4
  %20 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %7, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %15
  store i32 0, i32* %i2, align 4
  br label %24

; <label>:24                                      ; preds = %23, %15
  %25 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %26 = load i32, i32* %i1, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %7, i32 0, i32 1
  %29 = load %struct.b2Vec2*, %struct.b2Vec2** %28, align 8
  %30 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %29, i64 %27
  %31 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %25, %struct.b2Vec2* dereferenceable(8) %30)
  %32 = bitcast %struct.b2Vec2* %v1 to <2 x float>*
  store <2 x float> %31, <2 x float>* %32, align 4
  %33 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %34 = load i32, i32* %i2, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %7, i32 0, i32 1
  %37 = load %struct.b2Vec2*, %struct.b2Vec2** %36, align 8
  %38 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %37, i64 %35
  %39 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %33, %struct.b2Vec2* dereferenceable(8) %38)
  %40 = bitcast %struct.b2Vec2* %v2 to <2 x float>*
  store <2 x float> %39, <2 x float>* %40, align 4
  %41 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %42 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %41, i32 0, i32 0
  %43 = call <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %44 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 4
  %45 = bitcast %struct.b2Vec2* %42 to i8*
  %46 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false)
  %47 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %48 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %47, i32 0, i32 1
  %49 = call <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %50 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = bitcast %struct.b2Vec2* %48 to i8*
  %52 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZNK12b2ChainShape11ComputeMassEP10b2MassDataf(%class.b2ChainShape* %this, %struct.b2MassData* %massData, float %density) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2MassData*, align 8
  %3 = alloca float, align 4
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2MassData* %massData, %struct.b2MassData** %2, align 8
  store float %density, float* %3, align 4
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %6 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %5, i32 0, i32 0
  store float 0.000000e+00, float* %6, align 4
  %7 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %8 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %7, i32 0, i32 1
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %8)
  %9 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %10 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %9, i32 0, i32 2
  store float 0.000000e+00, float* %10, align 4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN14b2PolygonShapeD2Ev(%class.b2PolygonShape* %this) unnamed_addr #5 comdat align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  %2 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %3 = bitcast %class.b2PolygonShape* %2 to %class.b2Shape*
  call void @_ZN7b2ShapeD2Ev(%class.b2Shape* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN14b2PolygonShapeD0Ev(%class.b2PolygonShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  %4 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  invoke void @_ZN14b2PolygonShapeD2Ev(%class.b2PolygonShape* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2PolygonShape* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2PolygonShape* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define %class.b2Shape* @_ZNK14b2PolygonShape5CloneEP16b2BlockAllocator(%class.b2PolygonShape* %this, %class.b2BlockAllocator* %allocator) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  %clone = alloca %class.b2PolygonShape*, align 8
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %4 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %5 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %4, i32 160)
  store i8* %5, i8** %mem, align 8
  %6 = load i8*, i8** %mem, align 8
  %7 = bitcast i8* %6 to %class.b2PolygonShape*
  call void @_ZN14b2PolygonShapeC2Ev(%class.b2PolygonShape* %7)
  store %class.b2PolygonShape* %7, %class.b2PolygonShape** %clone, align 8
  %8 = load %class.b2PolygonShape*, %class.b2PolygonShape** %clone, align 8
  %9 = call dereferenceable(160) %class.b2PolygonShape* @_ZN14b2PolygonShapeaSERKS_(%class.b2PolygonShape* %8, %class.b2PolygonShape* dereferenceable(160) %3) #3
  %10 = load %class.b2PolygonShape*, %class.b2PolygonShape** %clone, align 8
  %11 = bitcast %class.b2PolygonShape* %10 to %class.b2Shape*
  ret %class.b2Shape* %11
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN14b2PolygonShapeC2Ev(%class.b2PolygonShape* %this) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  %4 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %5 = bitcast %class.b2PolygonShape* %4 to %class.b2Shape*
  call void @_ZN7b2ShapeC2Ev(%class.b2Shape* %5) #3
  %6 = bitcast %class.b2PolygonShape* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTV14b2PolygonShape, i64 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
          to label %8 unwind label %34

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 2
  %10 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i64 8
  br label %12

; <label>:12                                      ; preds = %14, %8
  %13 = phi %struct.b2Vec2* [ %10, %8 ], [ %15, %14 ]
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %13)
          to label %14 unwind label %34

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i64 1
  %16 = icmp eq %struct.b2Vec2* %15, %11
  br i1 %16, label %17, label %12

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 3
  %19 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %19, i64 8
  br label %21

; <label>:21                                      ; preds = %23, %17
  %22 = phi %struct.b2Vec2* [ %19, %17 ], [ %24, %23 ]
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %34

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %22, i64 1
  %25 = icmp eq %struct.b2Vec2* %24, %20
  br i1 %25, label %26, label %21

; <label>:26                                      ; preds = %23
  %27 = bitcast %class.b2PolygonShape* %4 to %class.b2Shape*
  %28 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %27, i32 0, i32 1
  store i32 2, i32* %28, align 8
  %29 = bitcast %class.b2PolygonShape* %4 to %class.b2Shape*
  %30 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %29, i32 0, i32 2
  store float 0x3F847AE140000000, float* %30, align 4
  %31 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 4
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 1
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %32)
          to label %33 unwind label %34

; <label>:33                                      ; preds = %26
  ret void

; <label>:34                                      ; preds = %26, %21, %12, %0
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %2, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %3, align 4
  %38 = bitcast %class.b2PolygonShape* %4 to %class.b2Shape*
  invoke void @_ZN7b2ShapeD2Ev(%class.b2Shape* %38)
          to label %39 unwind label %45

; <label>:39                                      ; preds = %34
  br label %40

; <label>:40                                      ; preds = %39
  %41 = load i8*, i8** %2, align 8
  %42 = load i32, i32* %3, align 4
  %43 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

; <label>:45                                      ; preds = %34
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  call void @__clang_call_terminate(i8* %47) #15
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(160) %class.b2PolygonShape* @_ZN14b2PolygonShapeaSERKS_(%class.b2PolygonShape* %this, %class.b2PolygonShape* dereferenceable(160)) #5 comdat align 2 {
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %class.b2PolygonShape*, align 8
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %2, align 8
  store %class.b2PolygonShape* %0, %class.b2PolygonShape** %3, align 8
  %4 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %5 = bitcast %class.b2PolygonShape* %4 to %class.b2Shape*
  %6 = load %class.b2PolygonShape*, %class.b2PolygonShape** %3, align 8
  %7 = bitcast %class.b2PolygonShape* %6 to %class.b2Shape*
  %8 = call dereferenceable(16) %class.b2Shape* @_ZN7b2ShapeaSERKS_(%class.b2Shape* %5, %class.b2Shape* dereferenceable(16) %7) #3
  %9 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 1
  %10 = load %class.b2PolygonShape*, %class.b2PolygonShape** %3, align 8
  %11 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %10, i32 0, i32 1
  %12 = bitcast %struct.b2Vec2* %9 to i8*
  %13 = bitcast %struct.b2Vec2* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 140, i32 8, i1 false)
  ret %class.b2PolygonShape* %4
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK14b2PolygonShape13GetChildCountEv(%class.b2PolygonShape* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  %2 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  ret i32 1
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2(%class.b2PolygonShape* %this, %struct.b2Transform* dereferenceable(16) %xf, %struct.b2Vec2* dereferenceable(8) %p) unnamed_addr #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %pLocal = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %dot = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %2, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %3, align 8
  store %struct.b2Vec2* %p, %struct.b2Vec2** %4, align 8
  %7 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %8 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %8, i32 0, i32 1
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %11 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %12 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %11, i32 0, i32 0
  %13 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %12)
  %14 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 4
  %15 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %5)
  %16 = bitcast %struct.b2Vec2* %pLocal to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 4
  store i32 0, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %38, %0
  %18 = load i32, i32* %i, align 4
  %19 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %22, label %41

; <label>:22                                      ; preds = %17
  %23 = load i32, i32* %i, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 3
  %26 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %25, i64 0, i64 %24
  %27 = load i32, i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 2
  %30 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %29, i64 0, i64 %28
  %31 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pLocal, %struct.b2Vec2* dereferenceable(8) %30)
  %32 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %31, <2 x float>* %32, align 4
  %33 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %26, %struct.b2Vec2* dereferenceable(8) %6)
  store float %33, float* %dot, align 4
  %34 = load float, float* %dot, align 4
  %35 = fcmp ogt float %34, 0.000000e+00
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %22
  store i1 false, i1* %1, align 1
  br label %42

; <label>:37                                      ; preds = %22
  br label %38

; <label>:38                                      ; preds = %37
  %39 = load i32, i32* %i, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %i, align 4
  br label %17

; <label>:41                                      ; preds = %17
  store i1 true, i1* %1, align 1
  br label %42

; <label>:42                                      ; preds = %41, %36
  %43 = load i1, i1* %1, align 1
  ret i1 %43
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi(%class.b2PolygonShape* %this, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %input, %struct.b2Transform* dereferenceable(16) %xf, i32 %childIndex) unnamed_addr #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2PolygonShape*, align 8
  %3 = alloca %struct.b2Position*, align 8
  %4 = alloca %struct.b2PositionSolverManifold*, align 8
  %5 = alloca %struct.b2Transform*, align 8
  %6 = alloca i32, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %lower = alloca float, align 4
  %upper = alloca float, align 4
  %index = alloca i32, align 4
  %i = alloca i32, align 4
  %numerator = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %denominator = alloca float, align 4
  %10 = alloca %struct.b2Vec2, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %2, align 8
  store %struct.b2Position* %output, %struct.b2Position** %3, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %4, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %5, align 8
  store i32 %childIndex, i32* %6, align 4
  %11 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  %12 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %12, i32 0, i32 1
  %14 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %15 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %14, i32 0, i32 0
  %16 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %17 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %16, i32 0, i32 0
  %18 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %15, %struct.b2Vec2* dereferenceable(8) %17)
  %19 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %13, %struct.b2Vec2* dereferenceable(8) %7)
  %21 = bitcast %struct.b2Vec2* %p1 to <2 x float>*
  store <2 x float> %20, <2 x float>* %21, align 4
  %22 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %23 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %22, i32 0, i32 1
  %24 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %25 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %24, i32 0, i32 1
  %26 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %27 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %26, i32 0, i32 0
  %28 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %25, %struct.b2Vec2* dereferenceable(8) %27)
  %29 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %23, %struct.b2Vec2* dereferenceable(8) %8)
  %31 = bitcast %struct.b2Vec2* %p2 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 4
  %32 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %33 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  store float 0.000000e+00, float* %lower, align 4
  %34 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %35 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %34, i32 0, i32 2
  %36 = load float, float* %35, align 4
  store float %36, float* %upper, align 4
  store i32 -1, i32* %index, align 4
  store i32 0, i32* %i, align 4
  br label %37

; <label>:37                                      ; preds = %101, %0
  %38 = load i32, i32* %i, align 4
  %39 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %11, i32 0, i32 4
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %42, label %104

; <label>:42                                      ; preds = %37
  %43 = load i32, i32* %i, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %11, i32 0, i32 3
  %46 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %45, i64 0, i64 %44
  %47 = load i32, i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %11, i32 0, i32 2
  %50 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %49, i64 0, i64 %48
  %51 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %50, %struct.b2Vec2* dereferenceable(8) %p1)
  %52 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %51, <2 x float>* %52, align 4
  %53 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %46, %struct.b2Vec2* dereferenceable(8) %9)
  store float %53, float* %numerator, align 4
  %54 = load i32, i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %11, i32 0, i32 3
  %57 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %56, i64 0, i64 %55
  %58 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %57, %struct.b2Vec2* dereferenceable(8) %d)
  store float %58, float* %denominator, align 4
  %59 = load float, float* %denominator, align 4
  %60 = fcmp oeq float %59, 0.000000e+00
  br i1 %60, label %61, label %66

; <label>:61                                      ; preds = %42
  %62 = load float, float* %numerator, align 4
  %63 = fcmp olt float %62, 0.000000e+00
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %61
  store i1 false, i1* %1, align 1
  br label %136

; <label>:65                                      ; preds = %61
  br label %95

; <label>:66                                      ; preds = %42
  %67 = load float, float* %denominator, align 4
  %68 = fcmp olt float %67, 0.000000e+00
  br i1 %68, label %69, label %80

; <label>:69                                      ; preds = %66
  %70 = load float, float* %numerator, align 4
  %71 = load float, float* %lower, align 4
  %72 = load float, float* %denominator, align 4
  %73 = fmul float %71, %72
  %74 = fcmp olt float %70, %73
  br i1 %74, label %75, label %80

; <label>:75                                      ; preds = %69
  %76 = load float, float* %numerator, align 4
  %77 = load float, float* %denominator, align 4
  %78 = fdiv float %76, %77
  store float %78, float* %lower, align 4
  %79 = load i32, i32* %i, align 4
  store i32 %79, i32* %index, align 4
  br label %94

; <label>:80                                      ; preds = %69, %66
  %81 = load float, float* %denominator, align 4
  %82 = fcmp ogt float %81, 0.000000e+00
  br i1 %82, label %83, label %93

; <label>:83                                      ; preds = %80
  %84 = load float, float* %numerator, align 4
  %85 = load float, float* %upper, align 4
  %86 = load float, float* %denominator, align 4
  %87 = fmul float %85, %86
  %88 = fcmp olt float %84, %87
  br i1 %88, label %89, label %93

; <label>:89                                      ; preds = %83
  %90 = load float, float* %numerator, align 4
  %91 = load float, float* %denominator, align 4
  %92 = fdiv float %90, %91
  store float %92, float* %upper, align 4
  br label %93

; <label>:93                                      ; preds = %89, %83, %80
  br label %94

; <label>:94                                      ; preds = %93, %75
  br label %95

; <label>:95                                      ; preds = %94, %65
  %96 = load float, float* %upper, align 4
  %97 = load float, float* %lower, align 4
  %98 = fcmp olt float %96, %97
  br i1 %98, label %99, label %100

; <label>:99                                      ; preds = %95
  store i1 false, i1* %1, align 1
  br label %136

; <label>:100                                     ; preds = %95
  br label %101

; <label>:101                                     ; preds = %100
  %102 = load i32, i32* %i, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %i, align 4
  br label %37

; <label>:104                                     ; preds = %37
  %105 = load float, float* %lower, align 4
  %106 = fcmp ole float 0.000000e+00, %105
  br i1 %106, label %107, label %114

; <label>:107                                     ; preds = %104
  %108 = load float, float* %lower, align 4
  %109 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %110 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %109, i32 0, i32 2
  %111 = load float, float* %110, align 4
  %112 = fcmp ole float %108, %111
  br i1 %112, label %113, label %114

; <label>:113                                     ; preds = %107
  br label %116

; <label>:114                                     ; preds = %107, %104
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4.371, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 327, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %116

; <label>:116                                     ; preds = %115, %113
  %117 = load i32, i32* %index, align 4
  %118 = icmp sge i32 %117, 0
  br i1 %118, label %119, label %135

; <label>:119                                     ; preds = %116
  %120 = load float, float* %lower, align 4
  %121 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %122 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %121, i32 0, i32 1
  store float %120, float* %122, align 4
  %123 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %124 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %123, i32 0, i32 0
  %125 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %126 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %125, i32 0, i32 1
  %127 = load i32, i32* %index, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %11, i32 0, i32 3
  %130 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %129, i64 0, i64 %128
  %131 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %126, %struct.b2Vec2* dereferenceable(8) %130)
  %132 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %131, <2 x float>* %132, align 4
  %133 = bitcast %struct.b2Vec2* %124 to i8*
  %134 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false)
  store i1 true, i1* %1, align 1
  br label %136

; <label>:135                                     ; preds = %116
  store i1 false, i1* %1, align 1
  br label %136

; <label>:136                                     ; preds = %135, %119, %99, %64
  %137 = load i1, i1* %1, align 1
  ret i1 %137
}

; Function Attrs: uwtable
define void @_ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi(%class.b2PolygonShape* %this, %struct.b2Transform* %aabb, %struct.b2Transform* dereferenceable(16) %xf, i32 %childIndex) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca i32, align 4
  %lower = alloca %struct.b2Vec2, align 4
  %upper = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %v = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %r = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %3, align 8
  store i32 %childIndex, i32* %4, align 4
  %9 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %10 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %11 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %9, i32 0, i32 2
  %12 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %11, i64 0, i64 0
  %13 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %10, %struct.b2Vec2* dereferenceable(8) %12)
  %14 = bitcast %struct.b2Vec2* %lower to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 4
  %15 = bitcast %struct.b2Vec2* %upper to i8*
  %16 = bitcast %struct.b2Vec2* %lower to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 4, i1 false)
  store i32 1, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %38, %0
  %18 = load i32, i32* %i, align 4
  %19 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %9, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %22, label %41

; <label>:22                                      ; preds = %17
  %23 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %24 = load i32, i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %9, i32 0, i32 2
  %27 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %26, i64 0, i64 %25
  %28 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %23, %struct.b2Vec2* dereferenceable(8) %27)
  %29 = bitcast %struct.b2Vec2* %v to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = call <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %lower, %struct.b2Vec2* dereferenceable(8) %v)
  %31 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 4
  %32 = bitcast %struct.b2Vec2* %lower to i8*
  %33 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = call <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %upper, %struct.b2Vec2* dereferenceable(8) %v)
  %35 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = bitcast %struct.b2Vec2* %upper to i8*
  %37 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  br label %38

; <label>:38                                      ; preds = %22
  %39 = load i32, i32* %i, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %i, align 4
  br label %17

; <label>:41                                      ; preds = %17
  %42 = bitcast %class.b2PolygonShape* %9 to %class.b2Shape*
  %43 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %42, i32 0, i32 2
  %44 = load float, float* %43, align 4
  %45 = bitcast %class.b2PolygonShape* %9 to %class.b2Shape*
  %46 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %45, i32 0, i32 2
  %47 = load float, float* %46, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %r, float %44, float %47)
  %48 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %49 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %48, i32 0, i32 0
  %50 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %lower, %struct.b2Vec2* dereferenceable(8) %r)
  %51 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %50, <2 x float>* %51, align 4
  %52 = bitcast %struct.b2Vec2* %49 to i8*
  %53 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 4, i1 false)
  %54 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %55 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %54, i32 0, i32 1
  %56 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %upper, %struct.b2Vec2* dereferenceable(8) %r)
  %57 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  %58 = bitcast %struct.b2Vec2* %55 to i8*
  %59 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf(%class.b2PolygonShape* %this, %struct.b2MassData* %massData, float %density) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca %struct.b2MassData*, align 8
  %3 = alloca float, align 4
  %center = alloca %struct.b2Vec2, align 4
  %area = alloca float, align 4
  %I = alloca float, align 4
  %s = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %k_inv3 = alloca float, align 4
  %i1 = alloca i32, align 4
  %e1 = alloca %struct.b2Vec2, align 4
  %e2 = alloca %struct.b2Vec2, align 4
  %D = alloca float, align 4
  %triangleArea = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %ex1 = alloca float, align 4
  %ey1 = alloca float, align 4
  %ex2 = alloca float, align 4
  %ey2 = alloca float, align 4
  %intx2 = alloca float, align 4
  %inty2 = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  store %struct.b2MassData* %massData, %struct.b2MassData** %2, align 8
  store float %density, float* %3, align 4
  %7 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %8 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp sge i32 %9, 3
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  br label %14

; <label>:12                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.373, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 384, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %center)
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %center, float 0.000000e+00, float 0.000000e+00)
  store float 0.000000e+00, float* %area, align 4
  store float 0.000000e+00, float* %I, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %s, float 0.000000e+00, float 0.000000e+00)
  store i32 0, i32* %i, align 4
  br label %15

; <label>:15                                      ; preds = %25, %14
  %16 = load i32, i32* %i, align 4
  %17 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %28

; <label>:20                                      ; preds = %15
  %21 = load i32, i32* %i, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 2
  %24 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %23, i64 0, i64 %22
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %s, %struct.b2Vec2* dereferenceable(8) %24)
  br label %25

; <label>:25                                      ; preds = %20
  %26 = load i32, i32* %i, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %i, align 4
  br label %15

; <label>:28                                      ; preds = %15
  %29 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = sitofp i32 %30 to float
  %32 = fdiv float 1.000000e+00, %31
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %s, float %32)
  store float 0x3FD5555560000000, float* %k_inv3, align 4
  store i32 0, i32* %i1, align 4
  br label %33

; <label>:33                                      ; preds = %114, %28
  %34 = load i32, i32* %i1, align 4
  %35 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %34, %36
  br i1 %37, label %38, label %117

; <label>:38                                      ; preds = %33
  %39 = load i32, i32* %i1, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 2
  %42 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %41, i64 0, i64 %40
  %43 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %42, %struct.b2Vec2* dereferenceable(8) %s)
  %44 = bitcast %struct.b2Vec2* %e1 to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 4
  %45 = load i32, i32* %i1, align 4
  %46 = add nsw i32 %45, 1
  %47 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %46, %48
  br i1 %49, label %50, label %58

; <label>:50                                      ; preds = %38
  %51 = load i32, i32* %i1, align 4
  %52 = add nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 2
  %55 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %54, i64 0, i64 %53
  %56 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %55, %struct.b2Vec2* dereferenceable(8) %s)
  %57 = bitcast %struct.b2Vec2* %e2 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  br label %63

; <label>:58                                      ; preds = %38
  %59 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %7, i32 0, i32 2
  %60 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %59, i64 0, i64 0
  %61 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %60, %struct.b2Vec2* dereferenceable(8) %s)
  %62 = bitcast %struct.b2Vec2* %e2 to <2 x float>*
  store <2 x float> %61, <2 x float>* %62, align 4
  br label %63

; <label>:63                                      ; preds = %58, %50
  %64 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e1, %struct.b2Vec2* dereferenceable(8) %e2)
  store float %64, float* %D, align 4
  %65 = load float, float* %D, align 4
  %66 = fmul float 5.000000e-01, %65
  store float %66, float* %triangleArea, align 4
  %67 = load float, float* %triangleArea, align 4
  %68 = load float, float* %area, align 4
  %69 = fadd float %68, %67
  store float %69, float* %area, align 4
  %70 = load float, float* %triangleArea, align 4
  %71 = fmul float %70, 0x3FD5555560000000
  %72 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e1, %struct.b2Vec2* dereferenceable(8) %e2)
  %73 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = call <2 x float> @_ZmlfRK6b2Vec2(float %71, %struct.b2Vec2* dereferenceable(8) %5)
  %75 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %74, <2 x float>* %75, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %center, %struct.b2Vec2* dereferenceable(8) %4)
  %76 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e1, i32 0, i32 0
  %77 = load float, float* %76, align 4
  store float %77, float* %ex1, align 4
  %78 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e1, i32 0, i32 1
  %79 = load float, float* %78, align 4
  store float %79, float* %ey1, align 4
  %80 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e2, i32 0, i32 0
  %81 = load float, float* %80, align 4
  store float %81, float* %ex2, align 4
  %82 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %e2, i32 0, i32 1
  %83 = load float, float* %82, align 4
  store float %83, float* %ey2, align 4
  %84 = load float, float* %ex1, align 4
  %85 = load float, float* %ex1, align 4
  %86 = fmul float %84, %85
  %87 = load float, float* %ex2, align 4
  %88 = load float, float* %ex1, align 4
  %89 = fmul float %87, %88
  %90 = fadd float %86, %89
  %91 = load float, float* %ex2, align 4
  %92 = load float, float* %ex2, align 4
  %93 = fmul float %91, %92
  %94 = fadd float %90, %93
  store float %94, float* %intx2, align 4
  %95 = load float, float* %ey1, align 4
  %96 = load float, float* %ey1, align 4
  %97 = fmul float %95, %96
  %98 = load float, float* %ey2, align 4
  %99 = load float, float* %ey1, align 4
  %100 = fmul float %98, %99
  %101 = fadd float %97, %100
  %102 = load float, float* %ey2, align 4
  %103 = load float, float* %ey2, align 4
  %104 = fmul float %102, %103
  %105 = fadd float %101, %104
  store float %105, float* %inty2, align 4
  %106 = load float, float* %D, align 4
  %107 = fmul float 0x3FB5555560000000, %106
  %108 = load float, float* %intx2, align 4
  %109 = load float, float* %inty2, align 4
  %110 = fadd float %108, %109
  %111 = fmul float %107, %110
  %112 = load float, float* %I, align 4
  %113 = fadd float %112, %111
  store float %113, float* %I, align 4
  br label %114

; <label>:114                                     ; preds = %63
  %115 = load i32, i32* %i1, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %i1, align 4
  br label %33

; <label>:117                                     ; preds = %33
  %118 = load float, float* %3, align 4
  %119 = load float, float* %area, align 4
  %120 = fmul float %118, %119
  %121 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %122 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %121, i32 0, i32 0
  store float %120, float* %122, align 4
  %123 = load float, float* %area, align 4
  %124 = fcmp ogt float %123, 0x3E80000000000000
  br i1 %124, label %125, label %126

; <label>:125                                     ; preds = %117
  br label %128

; <label>:126                                     ; preds = %117
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.374, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 430, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %128

; <label>:128                                     ; preds = %127, %125
  %129 = load float, float* %area, align 4
  %130 = fdiv float 1.000000e+00, %129
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %center, float %130)
  %131 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %132 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %131, i32 0, i32 1
  %133 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %center, %struct.b2Vec2* dereferenceable(8) %s)
  %134 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %133, <2 x float>* %134, align 4
  %135 = bitcast %struct.b2Vec2* %132 to i8*
  %136 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 8, i32 4, i1 false)
  %137 = load float, float* %3, align 4
  %138 = load float, float* %I, align 4
  %139 = fmul float %137, %138
  %140 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %141 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %140, i32 0, i32 2
  store float %139, float* %141, align 4
  %142 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %143 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %142, i32 0, i32 0
  %144 = load float, float* %143, align 4
  %145 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %146 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %145, i32 0, i32 1
  %147 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %148 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %147, i32 0, i32 1
  %149 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %146, %struct.b2Vec2* dereferenceable(8) %148)
  %150 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %center, %struct.b2Vec2* dereferenceable(8) %center)
  %151 = fsub float %149, %150
  %152 = fmul float %144, %151
  %153 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %154 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %153, i32 0, i32 2
  %155 = load float, float* %154, align 4
  %156 = fadd float %155, %152
  store float %156, float* %154, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_(%struct.b2DistanceJointDef* %this, %class.b2Body* %b1, %class.b2Body* %b2, %struct.b2Vec2* dereferenceable(8) %anchor1, %struct.b2Vec2* dereferenceable(8) %anchor2) #0 align 2 {
  %1 = alloca %struct.b2DistanceJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2*, align 8
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  store %struct.b2DistanceJointDef* %this, %struct.b2DistanceJointDef** %1, align 8
  store %class.b2Body* %b1, %class.b2Body** %2, align 8
  store %class.b2Body* %b2, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %anchor1, %struct.b2Vec2** %4, align 8
  store %struct.b2Vec2* %anchor2, %struct.b2Vec2** %5, align 8
  %8 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %1, align 8
  %9 = load %class.b2Body*, %class.b2Body** %2, align 8
  %10 = bitcast %struct.b2DistanceJointDef* %8 to %struct.b2JointDef*
  %11 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %10, i32 0, i32 3
  store %class.b2Body* %9, %class.b2Body** %11, align 8
  %12 = load %class.b2Body*, %class.b2Body** %3, align 8
  %13 = bitcast %struct.b2DistanceJointDef* %8 to %struct.b2JointDef*
  %14 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %13, i32 0, i32 4
  store %class.b2Body* %12, %class.b2Body** %14, align 8
  %15 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %8, i32 0, i32 1
  %16 = bitcast %struct.b2DistanceJointDef* %8 to %struct.b2JointDef*
  %17 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %16, i32 0, i32 3
  %18 = load %class.b2Body*, %class.b2Body** %17, align 8
  %19 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %20 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %18, %struct.b2Vec2* dereferenceable(8) %19)
  %21 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %20, <2 x float>* %21, align 4
  %22 = bitcast %struct.b2Vec2* %15 to i8*
  %23 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  %24 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %8, i32 0, i32 2
  %25 = bitcast %struct.b2DistanceJointDef* %8 to %struct.b2JointDef*
  %26 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %25, i32 0, i32 4
  %27 = load %class.b2Body*, %class.b2Body** %26, align 8
  %28 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %29 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %27, %struct.b2Vec2* dereferenceable(8) %28)
  %30 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %29, <2 x float>* %30, align 4
  %31 = bitcast %struct.b2Vec2* %24 to i8*
  %32 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 4, i1 false)
  %33 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %34 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %35 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %33, %struct.b2Vec2* dereferenceable(8) %34)
  %36 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %35, <2 x float>* %36, align 4
  %37 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %d)
  %38 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %8, i32 0, i32 3
  store float %37, float* %38, align 4
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %this, %struct.b2Vec2* dereferenceable(8) %worldPoint) #1 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %struct.b2Vec2* %worldPoint, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %7 = call <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  ret <2 x float> %10
}

; Function Attrs: uwtable
define void @_ZN15b2DistanceJointC2EPK18b2DistanceJointDef(%class.b2DistanceJoint* %this, %struct.b2DistanceJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2DistanceJoint*, align 8
  %2 = alloca %struct.b2DistanceJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2DistanceJoint* %this, %class.b2DistanceJoint** %1, align 8
  store %struct.b2DistanceJointDef* %def, %struct.b2DistanceJointDef** %2, align 8
  %5 = load %class.b2DistanceJoint*, %class.b2DistanceJoint** %1, align 8
  %6 = bitcast %class.b2DistanceJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %8 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2DistanceJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV15b2DistanceJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 4
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %49

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 5
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %49

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %14)
          to label %15 unwind label %49

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %49

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 13
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %49

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 14
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %49

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 15
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %49

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 4
  %25 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %26 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %25, i32 0, i32 1
  %27 = bitcast %struct.b2Vec2* %24 to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 5
  %30 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %31 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %30, i32 0, i32 2
  %32 = bitcast %struct.b2Vec2* %29 to i8*
  %33 = bitcast %struct.b2Vec2* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %35 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %34, i32 0, i32 3
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 8
  store float %36, float* %37, align 4
  %38 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %39 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %38, i32 0, i32 4
  %40 = load float, float* %39, align 8
  %41 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 1
  store float %40, float* %41, align 8
  %42 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %43 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %42, i32 0, i32 5
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 2
  store float %44, float* %45, align 4
  %46 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 7
  store float 0.000000e+00, float* %46, align 8
  %47 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 6
  store float 0.000000e+00, float* %47, align 4
  %48 = getelementptr inbounds %class.b2DistanceJoint, %class.b2DistanceJoint* %5, i32 0, i32 3
  store float 0.000000e+00, float* %48, align 8
  ret void

; <label>:49                                      ; preds = %21, %19, %17, %15, %13, %11, %0
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = bitcast %class.b2DistanceJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %53)
          to label %54 unwind label %60

; <label>:54                                      ; preds = %49
  br label %55

; <label>:55                                      ; preds = %54
  %56 = load i8*, i8** %3, align 8
  %57 = load i32, i32* %4, align 4
  %58 = insertvalue { i8*, i32 } undef, i8* %56, 0
  %59 = insertvalue { i8*, i32 } %58, i32 %57, 1
  resume { i8*, i32 } %59

; <label>:60                                      ; preds = %49
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #15
  unreachable
}

; Function Attrs: nounwind uwtable
define void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %this, %struct.b2JointDef* %def) #2 align 2 {
  %1 = alloca %class.b2Joint*, align 8
  %2 = alloca %struct.b2JointDef*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  store %struct.b2JointDef* %def, %struct.b2JointDef** %2, align 8
  %3 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %4 = bitcast %class.b2Joint* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV7b2Joint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 4
  %6 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 5
  %7 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %8 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %7, i32 0, i32 3
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  %10 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %11 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %10, i32 0, i32 4
  %12 = load %class.b2Body*, %class.b2Body** %11, align 8
  %13 = icmp ne %class.b2Body* %9, %12
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %0
  br label %17

; <label>:15                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.32, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.28, i32 0, i32 0), i32 185, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZN7b2JointC2EPK10b2JointDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %17

; <label>:17                                      ; preds = %16, %14
  %18 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %19 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 1
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 2
  store %class.b2Joint* null, %class.b2Joint** %22, align 8
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 3
  store %class.b2Joint* null, %class.b2Joint** %23, align 8
  %24 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %25 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %24, i32 0, i32 3
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  store %class.b2Body* %26, %class.b2Body** %27, align 8
  %28 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %29 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %28, i32 0, i32 4
  %30 = load %class.b2Body*, %class.b2Body** %29, align 8
  %31 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 7
  store %class.b2Body* %30, %class.b2Body** %31, align 8
  %32 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 8
  store i32 0, i32* %32, align 8
  %33 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %34 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %33, i32 0, i32 5
  %35 = load i8, i8* %34, align 8
  %36 = trunc i8 %35 to i1
  %37 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 10
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 1
  %39 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 9
  store i8 0, i8* %39, align 4
  %40 = load %struct.b2JointDef*, %struct.b2JointDef** %2, align 8
  %41 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %40, i32 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 11
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 4
  %45 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %44, i32 0, i32 1
  store %class.b2Joint* null, %class.b2Joint** %45, align 8
  %46 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 4
  %47 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %46, i32 0, i32 0
  store %class.b2Body* null, %class.b2Body** %47, align 8
  %48 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 4
  %49 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %48, i32 0, i32 2
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %49, align 8
  %50 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 4
  %51 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %50, i32 0, i32 3
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %51, align 8
  %52 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 5
  %53 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %52, i32 0, i32 1
  store %class.b2Joint* null, %class.b2Joint** %53, align 8
  %54 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 5
  %55 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %54, i32 0, i32 0
  store %class.b2Body* null, %class.b2Body** %55, align 8
  %56 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 5
  %57 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %56, i32 0, i32 2
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %57, align 8
  %58 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 5
  %59 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %58, i32 0, i32 3
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %59, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN7b2Joint4DumpEv(%class.b2Joint* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3.31, i32 0, i32 0))
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN7b2JointD0Ev(%class.b2Joint* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2Joint*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %4 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2Joint* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2Joint* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define void @_ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2(%struct.b2FrictionJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB, %struct.b2Vec2* dereferenceable(8) %anchor) #0 align 2 {
  %1 = alloca %struct.b2FrictionJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %struct.b2FrictionJointDef* %this, %struct.b2FrictionJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %anchor, %struct.b2Vec2** %4, align 8
  %7 = load %struct.b2FrictionJointDef*, %struct.b2FrictionJointDef** %1, align 8
  %8 = load %class.b2Body*, %class.b2Body** %2, align 8
  %9 = bitcast %struct.b2FrictionJointDef* %7 to %struct.b2JointDef*
  %10 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %9, i32 0, i32 3
  store %class.b2Body* %8, %class.b2Body** %10, align 8
  %11 = load %class.b2Body*, %class.b2Body** %3, align 8
  %12 = bitcast %struct.b2FrictionJointDef* %7 to %struct.b2JointDef*
  %13 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %12, i32 0, i32 4
  store %class.b2Body* %11, %class.b2Body** %13, align 8
  %14 = getelementptr inbounds %struct.b2FrictionJointDef, %struct.b2FrictionJointDef* %7, i32 0, i32 1
  %15 = bitcast %struct.b2FrictionJointDef* %7 to %struct.b2JointDef*
  %16 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %15, i32 0, i32 3
  %17 = load %class.b2Body*, %class.b2Body** %16, align 8
  %18 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %19 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %17, %struct.b2Vec2* dereferenceable(8) %18)
  %20 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %19, <2 x float>* %20, align 4
  %21 = bitcast %struct.b2Vec2* %14 to i8*
  %22 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = getelementptr inbounds %struct.b2FrictionJointDef, %struct.b2FrictionJointDef* %7, i32 0, i32 2
  %24 = bitcast %struct.b2FrictionJointDef* %7 to %struct.b2JointDef*
  %25 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %24, i32 0, i32 4
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %28 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %26, %struct.b2Vec2* dereferenceable(8) %27)
  %29 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = bitcast %struct.b2Vec2* %23 to i8*
  %31 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2FrictionJointC2EPK18b2FrictionJointDef(%class.b2FrictionJoint* %this, %struct.b2FrictionJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca %struct.b2FrictionJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store %struct.b2FrictionJointDef* %def, %struct.b2FrictionJointDef** %2, align 8
  %5 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %6 = bitcast %class.b2FrictionJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2FrictionJointDef*, %struct.b2FrictionJointDef** %2, align 8
  %8 = bitcast %struct.b2FrictionJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2FrictionJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV15b2FrictionJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %47

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %47

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 3
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %14)
          to label %15 unwind label %47

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 9
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %47

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 10
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %47

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %47

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %47

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 17
  invoke void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %24)
          to label %25 unwind label %47

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 1
  %27 = load %struct.b2FrictionJointDef*, %struct.b2FrictionJointDef** %2, align 8
  %28 = getelementptr inbounds %struct.b2FrictionJointDef, %struct.b2FrictionJointDef* %27, i32 0, i32 1
  %29 = bitcast %struct.b2Vec2* %26 to i8*
  %30 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 2
  %32 = load %struct.b2FrictionJointDef*, %struct.b2FrictionJointDef** %2, align 8
  %33 = getelementptr inbounds %struct.b2FrictionJointDef, %struct.b2FrictionJointDef* %32, i32 0, i32 2
  %34 = bitcast %struct.b2Vec2* %31 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 3
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %36)
          to label %37 unwind label %47

; <label>:37                                      ; preds = %25
  %38 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 4
  store float 0.000000e+00, float* %38, align 8
  %39 = load %struct.b2FrictionJointDef*, %struct.b2FrictionJointDef** %2, align 8
  %40 = getelementptr inbounds %struct.b2FrictionJointDef, %struct.b2FrictionJointDef* %39, i32 0, i32 3
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 5
  store float %41, float* %42, align 4
  %43 = load %struct.b2FrictionJointDef*, %struct.b2FrictionJointDef** %2, align 8
  %44 = getelementptr inbounds %struct.b2FrictionJointDef, %struct.b2FrictionJointDef* %43, i32 0, i32 4
  %45 = load float, float* %44, align 8
  %46 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %5, i32 0, i32 6
  store float %45, float* %46, align 8
  ret void

; <label>:47                                      ; preds = %25, %23, %21, %19, %17, %15, %13, %11, %0
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %3, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %4, align 4
  %51 = bitcast %class.b2FrictionJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %51)
          to label %52 unwind label %58

; <label>:52                                      ; preds = %47
  br label %53

; <label>:53                                      ; preds = %52
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57

; <label>:58                                      ; preds = %47
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN15b2FrictionJoint11SetMaxForceEf(%class.b2FrictionJoint* %this, float %force) #0 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store float %force, float* %2, align 4
  %3 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load float, float* %2, align 4
  %8 = fcmp oge float %7, 0.000000e+00
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.13, i32 0, i32 0), i32 217, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN15b2FrictionJoint11SetMaxForceEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load float, float* %2, align 4
  %14 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %3, i32 0, i32 5
  store float %13, float* %14, align 4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_Z9b2IsValidf(float %x) #5 comdat {
  %1 = alloca float, align 4
  %ix = alloca i32, align 4
  store float %x, float* %1, align 4
  %2 = bitcast float* %1 to i32*
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %ix, align 4
  %4 = load i32, i32* %ix, align 4
  %5 = and i32 %4, 2139095040
  %6 = icmp ne i32 %5, 2139095040
  ret i1 %6
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2FrictionJoint11GetMaxForceEv(%class.b2FrictionJoint* %this) #2 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  %2 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 5
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN15b2FrictionJoint12SetMaxTorqueEf(%class.b2FrictionJoint* %this, float %torque) #0 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  store float %torque, float* %2, align 4
  %3 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load float, float* %2, align 4
  %8 = fcmp oge float %7, 0.000000e+00
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2.14, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.13, i32 0, i32 0), i32 228, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__PRETTY_FUNCTION__._ZN15b2FrictionJoint12SetMaxTorqueEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load float, float* %2, align 4
  %14 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %3, i32 0, i32 6
  store float %13, float* %14, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2FrictionJoint12GetMaxTorqueEv(%class.b2FrictionJoint* %this) #2 align 2 {
  %1 = alloca %class.b2FrictionJoint*, align 8
  store %class.b2FrictionJoint* %this, %class.b2FrictionJoint** %1, align 8
  %2 = load %class.b2FrictionJoint*, %class.b2FrictionJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2FrictionJoint, %class.b2FrictionJoint* %2, i32 0, i32 6
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN11b2GearJointC2EPK14b2GearJointDef(%class.b2GearJoint* %this, %struct.b2GearJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca %struct.b2GearJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %coordinateA = alloca float, align 4
  %coordinateB = alloca float, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %aA = alloca float, align 4
  %xfC = alloca %struct.b2Transform, align 4
  %aC = alloca float, align 4
  %revolute = alloca %class.b2RevoluteJoint*, align 8
  %prismatic = alloca %class.b2PrismaticJoint*, align 8
  %pC = alloca %struct.b2Vec2, align 4
  %pA = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %aB = alloca float, align 4
  %xfD = alloca %struct.b2Transform, align 4
  %aD = alloca float, align 4
  %revolute1 = alloca %class.b2RevoluteJoint*, align 8
  %prismatic2 = alloca %class.b2PrismaticJoint*, align 8
  %pD = alloca %struct.b2Vec2, align 4
  %pB = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  store %struct.b2GearJointDef* %def, %struct.b2GearJointDef** %2, align 8
  %13 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %14 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %15 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %16 = bitcast %struct.b2GearJointDef* %15 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %14, %struct.b2JointDef* %16)
  %17 = bitcast %class.b2GearJoint* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV11b2GearJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 7
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %69

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 8
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %69

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 9
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %69

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 10
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %24)
          to label %25 unwind label %69

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %26)
          to label %27 unwind label %69

; <label>:27                                      ; preds = %25
  %28 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %28)
          to label %29 unwind label %69

; <label>:29                                      ; preds = %27
  %30 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 22
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %30)
          to label %31 unwind label %69

; <label>:31                                      ; preds = %29
  %32 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 23
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %32)
          to label %33 unwind label %69

; <label>:33                                      ; preds = %31
  %34 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 24
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %34)
          to label %35 unwind label %69

; <label>:35                                      ; preds = %33
  %36 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 25
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %36)
          to label %37 unwind label %69

; <label>:37                                      ; preds = %35
  %38 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 34
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %38)
          to label %39 unwind label %69

; <label>:39                                      ; preds = %37
  %40 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 35
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %40)
          to label %41 unwind label %69

; <label>:41                                      ; preds = %39
  %42 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %43 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %42, i32 0, i32 2
  %44 = load %class.b2Joint*, %class.b2Joint** %43, align 8
  %45 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 1
  store %class.b2Joint* %44, %class.b2Joint** %45, align 8
  %46 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %47 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %46, i32 0, i32 3
  %48 = load %class.b2Joint*, %class.b2Joint** %47, align 8
  %49 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 2
  store %class.b2Joint* %48, %class.b2Joint** %49, align 8
  %50 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 1
  %51 = load %class.b2Joint*, %class.b2Joint** %50, align 8
  %52 = invoke i32 @_ZNK7b2Joint7GetTypeEv(%class.b2Joint* %51)
          to label %53 unwind label %69

; <label>:53                                      ; preds = %41
  %54 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 3
  store i32 %52, i32* %54, align 8
  %55 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 2
  %56 = load %class.b2Joint*, %class.b2Joint** %55, align 8
  %57 = invoke i32 @_ZNK7b2Joint7GetTypeEv(%class.b2Joint* %56)
          to label %58 unwind label %69

; <label>:58                                      ; preds = %53
  %59 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 4
  store i32 %57, i32* %59, align 4
  %60 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %67, label %63

; <label>:63                                      ; preds = %58
  %64 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %63, %58
  br label %75

; <label>:68                                      ; preds = %63
  call void @__assert_fail(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.24, i32 0, i32 0), i32 53, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZN11b2GearJointC2EPK14b2GearJointDef, i32 0, i32 0)) #15
  unreachable

; <label>:69                                      ; preds = %309, %306, %303, %300, %295, %264, %237, %204, %200, %195, %192, %189, %186, %181, %150, %123, %90, %86, %53, %41, %39, %37, %35, %33, %31, %29, %27, %25, %23, %21, %19, %0
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %3, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %4, align 4
  %73 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %73)
          to label %327 unwind label %333
                                                  ; No predecessors!
  br label %75

; <label>:75                                      ; preds = %74, %67
  %76 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %83, label %79

; <label>:79                                      ; preds = %75
  %80 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %84

; <label>:83                                      ; preds = %79, %75
  br label %86

; <label>:84                                      ; preds = %79
  call void @__assert_fail(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2.25, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.24, i32 0, i32 0), i32 54, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZN11b2GearJointC2EPK14b2GearJointDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %86

; <label>:86                                      ; preds = %85, %83
  %87 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 1
  %88 = load %class.b2Joint*, %class.b2Joint** %87, align 8
  %89 = invoke %class.b2Body* @_ZN7b2Joint8GetBodyAEv(%class.b2Joint* %88)
          to label %90 unwind label %69

; <label>:90                                      ; preds = %86
  %91 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 5
  store %class.b2Body* %89, %class.b2Body** %91, align 8
  %92 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 1
  %93 = load %class.b2Joint*, %class.b2Joint** %92, align 8
  %94 = invoke %class.b2Body* @_ZN7b2Joint8GetBodyBEv(%class.b2Joint* %93)
          to label %95 unwind label %69

; <label>:95                                      ; preds = %90
  %96 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %97 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %96, i32 0, i32 6
  store %class.b2Body* %94, %class.b2Body** %97, align 8
  %98 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %99 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %98, i32 0, i32 6
  %100 = load %class.b2Body*, %class.b2Body** %99, align 8
  %101 = getelementptr inbounds %class.b2Body, %class.b2Body* %100, i32 0, i32 3
  %102 = bitcast %struct.b2Transform* %xfA to i8*
  %103 = bitcast %struct.b2Transform* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 16, i32 4, i1 false)
  %104 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %105 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %104, i32 0, i32 6
  %106 = load %class.b2Body*, %class.b2Body** %105, align 8
  %107 = getelementptr inbounds %class.b2Body, %class.b2Body* %106, i32 0, i32 4
  %108 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %107, i32 0, i32 4
  %109 = load float, float* %108, align 4
  store float %109, float* %aA, align 4
  %110 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 5
  %111 = load %class.b2Body*, %class.b2Body** %110, align 8
  %112 = getelementptr inbounds %class.b2Body, %class.b2Body* %111, i32 0, i32 3
  %113 = bitcast %struct.b2Transform* %xfC to i8*
  %114 = bitcast %struct.b2Transform* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 16, i32 4, i1 false)
  %115 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 5
  %116 = load %class.b2Body*, %class.b2Body** %115, align 8
  %117 = getelementptr inbounds %class.b2Body, %class.b2Body* %116, i32 0, i32 4
  %118 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %117, i32 0, i32 4
  %119 = load float, float* %118, align 4
  store float %119, float* %aC, align 4
  %120 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %150

; <label>:123                                     ; preds = %95
  %124 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %125 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %124, i32 0, i32 2
  %126 = load %class.b2Joint*, %class.b2Joint** %125, align 8
  %127 = bitcast %class.b2Joint* %126 to %class.b2RevoluteJoint*
  store %class.b2RevoluteJoint* %127, %class.b2RevoluteJoint** %revolute, align 8
  %128 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 9
  %129 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %revolute, align 8
  %130 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %129, i32 0, i32 1
  %131 = bitcast %struct.b2Vec2* %128 to i8*
  %132 = bitcast %struct.b2Vec2* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 8, i32 8, i1 false)
  %133 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 7
  %134 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %revolute, align 8
  %135 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %134, i32 0, i32 2
  %136 = bitcast %struct.b2Vec2* %133 to i8*
  %137 = bitcast %struct.b2Vec2* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 8, i32 8, i1 false)
  %138 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %revolute, align 8
  %139 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %138, i32 0, i32 9
  %140 = load float, float* %139, align 8
  %141 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 13
  store float %140, float* %141, align 8
  %142 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 11
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %142)
          to label %143 unwind label %69

; <label>:143                                     ; preds = %123
  %144 = load float, float* %aA, align 4
  %145 = load float, float* %aC, align 4
  %146 = fsub float %144, %145
  %147 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 13
  %148 = load float, float* %147, align 8
  %149 = fsub float %146, %148
  store float %149, float* %coordinateA, align 4
  br label %200

; <label>:150                                     ; preds = %95
  %151 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %152 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %151, i32 0, i32 2
  %153 = load %class.b2Joint*, %class.b2Joint** %152, align 8
  %154 = bitcast %class.b2Joint* %153 to %class.b2PrismaticJoint*
  store %class.b2PrismaticJoint* %154, %class.b2PrismaticJoint** %prismatic, align 8
  %155 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 9
  %156 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic, align 8
  %157 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %156, i32 0, i32 1
  %158 = bitcast %struct.b2Vec2* %155 to i8*
  %159 = bitcast %struct.b2Vec2* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %159, i64 8, i32 8, i1 false)
  %160 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 7
  %161 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic, align 8
  %162 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %161, i32 0, i32 2
  %163 = bitcast %struct.b2Vec2* %160 to i8*
  %164 = bitcast %struct.b2Vec2* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 8, i32 8, i1 false)
  %165 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic, align 8
  %166 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %165, i32 0, i32 5
  %167 = load float, float* %166, align 8
  %168 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 13
  store float %167, float* %168, align 8
  %169 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 11
  %170 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic, align 8
  %171 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %170, i32 0, i32 3
  %172 = bitcast %struct.b2Vec2* %169 to i8*
  %173 = bitcast %struct.b2Vec2* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 8, i32 8, i1 false)
  %174 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 9
  %175 = bitcast %struct.b2Vec2* %pC to i8*
  %176 = bitcast %struct.b2Vec2* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 8, i32 4, i1 false)
  %177 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfC, i32 0, i32 1
  %178 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %179 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 7
  %180 = invoke <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %178, %struct.b2Vec2* dereferenceable(8) %179)
          to label %181 unwind label %69

; <label>:181                                     ; preds = %150
  %182 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %180, <2 x float>* %182, align 4
  %183 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 0
  %184 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfC, i32 0, i32 0
  %185 = invoke <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %183, %struct.b2Vec2* dereferenceable(8) %184)
          to label %186 unwind label %69

; <label>:186                                     ; preds = %181
  %187 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %185, <2 x float>* %187, align 4
  %188 = invoke <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %7)
          to label %189 unwind label %69

; <label>:189                                     ; preds = %186
  %190 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %188, <2 x float>* %190, align 4
  %191 = invoke <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %177, %struct.b2Vec2* dereferenceable(8) %5)
          to label %192 unwind label %69

; <label>:192                                     ; preds = %189
  %193 = bitcast %struct.b2Vec2* %pA to <2 x float>*
  store <2 x float> %191, <2 x float>* %193, align 4
  %194 = invoke <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pA, %struct.b2Vec2* dereferenceable(8) %pC)
          to label %195 unwind label %69

; <label>:195                                     ; preds = %192
  %196 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %194, <2 x float>* %196, align 4
  %197 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 11
  %198 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %197)
          to label %199 unwind label %69

; <label>:199                                     ; preds = %195
  store float %198, float* %coordinateA, align 4
  br label %200

; <label>:200                                     ; preds = %199, %143
  %201 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 2
  %202 = load %class.b2Joint*, %class.b2Joint** %201, align 8
  %203 = invoke %class.b2Body* @_ZN7b2Joint8GetBodyAEv(%class.b2Joint* %202)
          to label %204 unwind label %69

; <label>:204                                     ; preds = %200
  %205 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 6
  store %class.b2Body* %203, %class.b2Body** %205, align 8
  %206 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 2
  %207 = load %class.b2Joint*, %class.b2Joint** %206, align 8
  %208 = invoke %class.b2Body* @_ZN7b2Joint8GetBodyBEv(%class.b2Joint* %207)
          to label %209 unwind label %69

; <label>:209                                     ; preds = %204
  %210 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %211 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %210, i32 0, i32 7
  store %class.b2Body* %208, %class.b2Body** %211, align 8
  %212 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %213 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %212, i32 0, i32 7
  %214 = load %class.b2Body*, %class.b2Body** %213, align 8
  %215 = getelementptr inbounds %class.b2Body, %class.b2Body* %214, i32 0, i32 3
  %216 = bitcast %struct.b2Transform* %xfB to i8*
  %217 = bitcast %struct.b2Transform* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %216, i8* %217, i64 16, i32 4, i1 false)
  %218 = bitcast %class.b2GearJoint* %13 to %class.b2Joint*
  %219 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %218, i32 0, i32 7
  %220 = load %class.b2Body*, %class.b2Body** %219, align 8
  %221 = getelementptr inbounds %class.b2Body, %class.b2Body* %220, i32 0, i32 4
  %222 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %221, i32 0, i32 4
  %223 = load float, float* %222, align 4
  store float %223, float* %aB, align 4
  %224 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 6
  %225 = load %class.b2Body*, %class.b2Body** %224, align 8
  %226 = getelementptr inbounds %class.b2Body, %class.b2Body* %225, i32 0, i32 3
  %227 = bitcast %struct.b2Transform* %xfD to i8*
  %228 = bitcast %struct.b2Transform* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %227, i8* %228, i64 16, i32 4, i1 false)
  %229 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 6
  %230 = load %class.b2Body*, %class.b2Body** %229, align 8
  %231 = getelementptr inbounds %class.b2Body, %class.b2Body* %230, i32 0, i32 4
  %232 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %231, i32 0, i32 4
  %233 = load float, float* %232, align 4
  store float %233, float* %aD, align 4
  %234 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 4
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %264

; <label>:237                                     ; preds = %209
  %238 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %239 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %238, i32 0, i32 3
  %240 = load %class.b2Joint*, %class.b2Joint** %239, align 8
  %241 = bitcast %class.b2Joint* %240 to %class.b2RevoluteJoint*
  store %class.b2RevoluteJoint* %241, %class.b2RevoluteJoint** %revolute1, align 8
  %242 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 10
  %243 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %revolute1, align 8
  %244 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %243, i32 0, i32 1
  %245 = bitcast %struct.b2Vec2* %242 to i8*
  %246 = bitcast %struct.b2Vec2* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %246, i64 8, i32 8, i1 false)
  %247 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 8
  %248 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %revolute1, align 8
  %249 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %248, i32 0, i32 2
  %250 = bitcast %struct.b2Vec2* %247 to i8*
  %251 = bitcast %struct.b2Vec2* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %250, i8* %251, i64 8, i32 8, i1 false)
  %252 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %revolute1, align 8
  %253 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %252, i32 0, i32 9
  %254 = load float, float* %253, align 8
  %255 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 14
  store float %254, float* %255, align 4
  %256 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 12
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %256)
          to label %257 unwind label %69

; <label>:257                                     ; preds = %237
  %258 = load float, float* %aB, align 4
  %259 = load float, float* %aD, align 4
  %260 = fsub float %258, %259
  %261 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 14
  %262 = load float, float* %261, align 4
  %263 = fsub float %260, %262
  store float %263, float* %coordinateB, align 4
  br label %314

; <label>:264                                     ; preds = %209
  %265 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %266 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %265, i32 0, i32 3
  %267 = load %class.b2Joint*, %class.b2Joint** %266, align 8
  %268 = bitcast %class.b2Joint* %267 to %class.b2PrismaticJoint*
  store %class.b2PrismaticJoint* %268, %class.b2PrismaticJoint** %prismatic2, align 8
  %269 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 10
  %270 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic2, align 8
  %271 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %270, i32 0, i32 1
  %272 = bitcast %struct.b2Vec2* %269 to i8*
  %273 = bitcast %struct.b2Vec2* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %272, i8* %273, i64 8, i32 8, i1 false)
  %274 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 8
  %275 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic2, align 8
  %276 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %275, i32 0, i32 2
  %277 = bitcast %struct.b2Vec2* %274 to i8*
  %278 = bitcast %struct.b2Vec2* %276 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %277, i8* %278, i64 8, i32 8, i1 false)
  %279 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic2, align 8
  %280 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %279, i32 0, i32 5
  %281 = load float, float* %280, align 8
  %282 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 14
  store float %281, float* %282, align 4
  %283 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 12
  %284 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %prismatic2, align 8
  %285 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %284, i32 0, i32 3
  %286 = bitcast %struct.b2Vec2* %283 to i8*
  %287 = bitcast %struct.b2Vec2* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %286, i8* %287, i64 8, i32 8, i1 false)
  %288 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 10
  %289 = bitcast %struct.b2Vec2* %pD to i8*
  %290 = bitcast %struct.b2Vec2* %288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %289, i8* %290, i64 8, i32 4, i1 false)
  %291 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfD, i32 0, i32 1
  %292 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %293 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 8
  %294 = invoke <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %292, %struct.b2Vec2* dereferenceable(8) %293)
          to label %295 unwind label %69

; <label>:295                                     ; preds = %264
  %296 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %294, <2 x float>* %296, align 4
  %297 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 0
  %298 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfD, i32 0, i32 0
  %299 = invoke <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %297, %struct.b2Vec2* dereferenceable(8) %298)
          to label %300 unwind label %69

; <label>:300                                     ; preds = %295
  %301 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %299, <2 x float>* %301, align 4
  %302 = invoke <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %11)
          to label %303 unwind label %69

; <label>:303                                     ; preds = %300
  %304 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %302, <2 x float>* %304, align 4
  %305 = invoke <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %291, %struct.b2Vec2* dereferenceable(8) %9)
          to label %306 unwind label %69

; <label>:306                                     ; preds = %303
  %307 = bitcast %struct.b2Vec2* %pB to <2 x float>*
  store <2 x float> %305, <2 x float>* %307, align 4
  %308 = invoke <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pB, %struct.b2Vec2* dereferenceable(8) %pD)
          to label %309 unwind label %69

; <label>:309                                     ; preds = %306
  %310 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %308, <2 x float>* %310, align 4
  %311 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 12
  %312 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %311)
          to label %313 unwind label %69

; <label>:313                                     ; preds = %309
  store float %312, float* %coordinateB, align 4
  br label %314

; <label>:314                                     ; preds = %313, %257
  %315 = load %struct.b2GearJointDef*, %struct.b2GearJointDef** %2, align 8
  %316 = getelementptr inbounds %struct.b2GearJointDef, %struct.b2GearJointDef* %315, i32 0, i32 4
  %317 = load float, float* %316, align 8
  %318 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 16
  store float %317, float* %318, align 4
  %319 = load float, float* %coordinateA, align 4
  %320 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 16
  %321 = load float, float* %320, align 4
  %322 = load float, float* %coordinateB, align 4
  %323 = fmul float %321, %322
  %324 = fadd float %319, %323
  %325 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 15
  store float %324, float* %325, align 8
  %326 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %13, i32 0, i32 17
  store float 0.000000e+00, float* %326, align 8
  ret void

; <label>:327                                     ; preds = %69
  br label %328

; <label>:328                                     ; preds = %327
  %329 = load i8*, i8** %3, align 8
  %330 = load i32, i32* %4, align 4
  %331 = insertvalue { i8*, i32 } undef, i8* %329, 0
  %332 = insertvalue { i8*, i32 } %331, i32 %330, 1
  resume { i8*, i32 } %332

; <label>:333                                     ; preds = %69
  %334 = landingpad { i8*, i32 }
          catch i8* null
  %335 = extractvalue { i8*, i32 } %334, 0
  call void @__clang_call_terminate(i8* %335) #15
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK7b2Joint7GetTypeEv(%class.b2Joint* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %3 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Body* @_ZN7b2Joint8GetBodyAEv(%class.b2Joint* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %3 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %2, i32 0, i32 6
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  ret %class.b2Body* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Body* @_ZN7b2Joint8GetBodyBEv(%class.b2Joint* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %3 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %2, i32 0, i32 7
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  ret %class.b2Body* %4
}

; Function Attrs: uwtable
define void @_ZN11b2GearJoint8SetRatioEf(%class.b2GearJoint* %this, float %ratio) #0 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  store float %ratio, float* %2, align 4
  %3 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %9

; <label>:7                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.26, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.24, i32 0, i32 0), i32 394, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN11b2GearJoint8SetRatioEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %9

; <label>:9                                       ; preds = %8, %6
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %3, i32 0, i32 16
  store float %10, float* %11, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK11b2GearJoint8GetRatioEv(%class.b2GearJoint* %this) #2 align 2 {
  %1 = alloca %class.b2GearJoint*, align 8
  store %class.b2GearJoint* %this, %class.b2GearJoint** %1, align 8
  %2 = load %class.b2GearJoint*, %class.b2GearJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2GearJoint, %class.b2GearJoint* %2, i32 0, i32 16
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: uwtable
define %class.b2Joint* @_ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator(%struct.b2JointDef* %def, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %struct.b2JointDef*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %joint = alloca %class.b2Joint*, align 8
  %mem = alloca i8*, align 8
  %mem1 = alloca i8*, align 8
  %mem2 = alloca i8*, align 8
  %mem3 = alloca i8*, align 8
  %mem4 = alloca i8*, align 8
  %mem5 = alloca i8*, align 8
  %mem6 = alloca i8*, align 8
  %mem7 = alloca i8*, align 8
  %mem8 = alloca i8*, align 8
  %mem9 = alloca i8*, align 8
  %mem10 = alloca i8*, align 8
  store %struct.b2JointDef* %def, %struct.b2JointDef** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  store %class.b2Joint* null, %class.b2Joint** %joint, align 8
  %3 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %4 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %94 [
    i32 3, label %6
    i32 5, label %14
    i32 2, label %22
    i32 1, label %30
    i32 4, label %38
    i32 6, label %46
    i32 7, label %54
    i32 8, label %62
    i32 9, label %70
    i32 10, label %78
    i32 11, label %86
  ]

; <label>:6                                       ; preds = %0
  %7 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %8 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %7, i32 240)
  store i8* %8, i8** %mem, align 8
  %9 = load i8*, i8** %mem, align 8
  %10 = bitcast i8* %9 to %class.b2DistanceJoint*
  %11 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %12 = bitcast %struct.b2JointDef* %11 to %struct.b2DistanceJointDef*
  call void @_ZN15b2DistanceJointC1EPK18b2DistanceJointDef(%class.b2DistanceJoint* %10, %struct.b2DistanceJointDef* %12)
  %13 = bitcast %class.b2DistanceJoint* %10 to %class.b2Joint*
  store %class.b2Joint* %13, %class.b2Joint** %joint, align 8
  br label %95

; <label>:14                                      ; preds = %0
  %15 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %16 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %15, i32 232)
  store i8* %16, i8** %mem1, align 8
  %17 = load i8*, i8** %mem1, align 8
  %18 = bitcast i8* %17 to %class.b2MouseJoint*
  %19 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %20 = bitcast %struct.b2JointDef* %19 to %struct.b2MouseJointDef*
  call void @_ZN12b2MouseJointC1EPK15b2MouseJointDef(%class.b2MouseJoint* %18, %struct.b2MouseJointDef* %20)
  %21 = bitcast %class.b2MouseJoint* %18 to %class.b2Joint*
  store %class.b2Joint* %21, %class.b2Joint** %joint, align 8
  br label %95

; <label>:22                                      ; preds = %0
  %23 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %24 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %23, i32 320)
  store i8* %24, i8** %mem2, align 8
  %25 = load i8*, i8** %mem2, align 8
  %26 = bitcast i8* %25 to %class.b2PrismaticJoint*
  %27 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %28 = bitcast %struct.b2JointDef* %27 to %struct.b2PrismaticJointDef*
  call void @_ZN16b2PrismaticJointC1EPK19b2PrismaticJointDef(%class.b2PrismaticJoint* %26, %struct.b2PrismaticJointDef* %28)
  %29 = bitcast %class.b2PrismaticJoint* %26 to %class.b2Joint*
  store %class.b2Joint* %29, %class.b2Joint** %joint, align 8
  br label %95

; <label>:30                                      ; preds = %0
  %31 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %32 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %31, i32 288)
  store i8* %32, i8** %mem3, align 8
  %33 = load i8*, i8** %mem3, align 8
  %34 = bitcast i8* %33 to %class.b2RevoluteJoint*
  %35 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %36 = bitcast %struct.b2JointDef* %35 to %struct.b2RevoluteJointDef*
  call void @_ZN15b2RevoluteJointC1EPK18b2RevoluteJointDef(%class.b2RevoluteJoint* %34, %struct.b2RevoluteJointDef* %36)
  %37 = bitcast %class.b2RevoluteJoint* %34 to %class.b2Joint*
  store %class.b2Joint* %37, %class.b2Joint** %joint, align 8
  br label %95

; <label>:38                                      ; preds = %0
  %39 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %40 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %39, i32 256)
  store i8* %40, i8** %mem4, align 8
  %41 = load i8*, i8** %mem4, align 8
  %42 = bitcast i8* %41 to %class.b2PulleyJoint*
  %43 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %44 = bitcast %struct.b2JointDef* %43 to %struct.b2PulleyJointDef*
  call void @_ZN13b2PulleyJointC1EPK16b2PulleyJointDef(%class.b2PulleyJoint* %42, %struct.b2PulleyJointDef* %44)
  %45 = bitcast %class.b2PulleyJoint* %42 to %class.b2Joint*
  store %class.b2Joint* %45, %class.b2Joint** %joint, align 8
  br label %95

; <label>:46                                      ; preds = %0
  %47 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %48 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %47, i32 352)
  store i8* %48, i8** %mem5, align 8
  %49 = load i8*, i8** %mem5, align 8
  %50 = bitcast i8* %49 to %class.b2GearJoint*
  %51 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %52 = bitcast %struct.b2JointDef* %51 to %struct.b2GearJointDef*
  call void @_ZN11b2GearJointC1EPK14b2GearJointDef(%class.b2GearJoint* %50, %struct.b2GearJointDef* %52)
  %53 = bitcast %class.b2GearJoint* %50 to %class.b2Joint*
  store %class.b2Joint* %53, %class.b2Joint** %joint, align 8
  br label %95

; <label>:54                                      ; preds = %0
  %55 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %56 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %55, i32 288)
  store i8* %56, i8** %mem6, align 8
  %57 = load i8*, i8** %mem6, align 8
  %58 = bitcast i8* %57 to %class.b2WheelJoint*
  %59 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %60 = bitcast %struct.b2JointDef* %59 to %struct.b2WheelJointDef*
  call void @_ZN12b2WheelJointC1EPK15b2WheelJointDef(%class.b2WheelJoint* %58, %struct.b2WheelJointDef* %60)
  %61 = bitcast %class.b2WheelJoint* %58 to %class.b2Joint*
  store %class.b2Joint* %61, %class.b2Joint** %joint, align 8
  br label %95

; <label>:62                                      ; preds = %0
  %63 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %64 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %63, i32 272)
  store i8* %64, i8** %mem7, align 8
  %65 = load i8*, i8** %mem7, align 8
  %66 = bitcast i8* %65 to %class.b2WeldJoint*
  %67 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %68 = bitcast %struct.b2JointDef* %67 to %struct.b2DistanceJointDef*
  call void @_ZN11b2WeldJointC1EPK14b2WeldJointDef(%class.b2WeldJoint* %66, %struct.b2DistanceJointDef* %68)
  %69 = bitcast %class.b2WeldJoint* %66 to %class.b2Joint*
  store %class.b2Joint* %69, %class.b2Joint** %joint, align 8
  br label %95

; <label>:70                                      ; preds = %0
  %71 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %72 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %71, i32 240)
  store i8* %72, i8** %mem8, align 8
  %73 = load i8*, i8** %mem8, align 8
  %74 = bitcast i8* %73 to %class.b2FrictionJoint*
  %75 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %76 = bitcast %struct.b2JointDef* %75 to %struct.b2FrictionJointDef*
  call void @_ZN15b2FrictionJointC1EPK18b2FrictionJointDef(%class.b2FrictionJoint* %74, %struct.b2FrictionJointDef* %76)
  %77 = bitcast %class.b2FrictionJoint* %74 to %class.b2Joint*
  store %class.b2Joint* %77, %class.b2Joint** %joint, align 8
  br label %95

; <label>:78                                      ; preds = %0
  %79 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %80 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %79, i32 232)
  store i8* %80, i8** %mem9, align 8
  %81 = load i8*, i8** %mem9, align 8
  %82 = bitcast i8* %81 to %class.b2RopeJoint*
  %83 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %84 = bitcast %struct.b2JointDef* %83 to %struct.b2RopeJointDef*
  call void @_ZN11b2RopeJointC1EPK14b2RopeJointDef(%class.b2RopeJoint* %82, %struct.b2RopeJointDef* %84)
  %85 = bitcast %class.b2RopeJoint* %82 to %class.b2Joint*
  store %class.b2Joint* %85, %class.b2Joint** %joint, align 8
  br label %95

; <label>:86                                      ; preds = %0
  %87 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %88 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %87, i32 256)
  store i8* %88, i8** %mem10, align 8
  %89 = load i8*, i8** %mem10, align 8
  %90 = bitcast i8* %89 to %class.b2MotorJoint*
  %91 = load %struct.b2JointDef*, %struct.b2JointDef** %1, align 8
  %92 = bitcast %struct.b2JointDef* %91 to %struct.b2MotorJointDef*
  call void @_ZN12b2MotorJointC1EPK15b2MotorJointDef(%class.b2MotorJoint* %90, %struct.b2MotorJointDef* %92)
  %93 = bitcast %class.b2MotorJoint* %90 to %class.b2Joint*
  store %class.b2Joint* %93, %class.b2Joint** %joint, align 8
  br label %95

; <label>:94                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.28, i32 0, i32 0), i32 121, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable

; <label>:95                                      ; preds = %86, %78, %70, %62, %54, %46, %38, %30, %22, %14, %6
  %96 = load %class.b2Joint*, %class.b2Joint** %joint, align 8
  ret %class.b2Joint* %96
}

; Function Attrs: uwtable
define void @_ZN12b2MouseJointC2EPK15b2MouseJointDef(%class.b2MouseJoint* %this, %struct.b2MouseJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca %struct.b2MouseJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store %struct.b2MouseJointDef* %def, %struct.b2MouseJointDef** %2, align 8
  %6 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %7 = bitcast %class.b2MouseJoint* %6 to %class.b2Joint*
  %8 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %9 = bitcast %struct.b2MouseJointDef* %8 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %7, %struct.b2JointDef* %9)
  %10 = bitcast %class.b2MouseJoint* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV12b2MouseJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
          to label %12 unwind label %31

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %13)
          to label %14 unwind label %31

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 6
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %15)
          to label %16 unwind label %31

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %17)
          to label %18 unwind label %31

; <label>:18                                      ; preds = %16
  %19 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %19)
          to label %20 unwind label %31

; <label>:20                                      ; preds = %18
  %21 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 15
  invoke void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %21)
          to label %22 unwind label %31

; <label>:22                                      ; preds = %20
  %23 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 16
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %23)
          to label %24 unwind label %31

; <label>:24                                      ; preds = %22
  %25 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %26 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %25, i32 0, i32 1
  %27 = invoke zeroext i1 @_ZNK6b2Vec27IsValidEv(%struct.b2Vec2* %26)
          to label %28 unwind label %31

; <label>:28                                      ; preds = %24
  br i1 %27, label %29, label %30

; <label>:29                                      ; preds = %28
  br label %37

; <label>:30                                      ; preds = %28
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.50, i32 0, i32 0), i32 34, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN12b2MouseJointC2EPK15b2MouseJointDef, i32 0, i32 0)) #15
  unreachable

; <label>:31                                      ; preds = %93, %90, %79, %65, %51, %37, %24, %22, %20, %18, %16, %14, %12, %0
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %3, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %4, align 4
  %35 = bitcast %class.b2MouseJoint* %6 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %35)
          to label %113 unwind label %119
                                                  ; No predecessors!
  br label %37

; <label>:37                                      ; preds = %36, %29
  %38 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %39 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %38, i32 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = invoke zeroext i1 @_Z9b2IsValidf(float %40)
          to label %42 unwind label %31

; <label>:42                                      ; preds = %37
  br i1 %41, label %43, label %49

; <label>:43                                      ; preds = %42
  %44 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %45 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %44, i32 0, i32 2
  %46 = load float, float* %45, align 4
  %47 = fcmp oge float %46, 0.000000e+00
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %43
  br label %51

; <label>:49                                      ; preds = %43, %42
  call void @__assert_fail(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2.52, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.50, i32 0, i32 0), i32 35, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN12b2MouseJointC2EPK15b2MouseJointDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %51

; <label>:51                                      ; preds = %50, %48
  %52 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %53 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %52, i32 0, i32 3
  %54 = load float, float* %53, align 8
  %55 = invoke zeroext i1 @_Z9b2IsValidf(float %54)
          to label %56 unwind label %31

; <label>:56                                      ; preds = %51
  br i1 %55, label %57, label %63

; <label>:57                                      ; preds = %56
  %58 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %59 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %58, i32 0, i32 3
  %60 = load float, float* %59, align 8
  %61 = fcmp oge float %60, 0.000000e+00
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %57
  br label %65

; <label>:63                                      ; preds = %57, %56
  call void @__assert_fail(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.53, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.50, i32 0, i32 0), i32 36, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN12b2MouseJointC2EPK15b2MouseJointDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %65

; <label>:65                                      ; preds = %64, %62
  %66 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %67 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %66, i32 0, i32 4
  %68 = load float, float* %67, align 4
  %69 = invoke zeroext i1 @_Z9b2IsValidf(float %68)
          to label %70 unwind label %31

; <label>:70                                      ; preds = %65
  br i1 %69, label %71, label %77

; <label>:71                                      ; preds = %70
  %72 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %73 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %72, i32 0, i32 4
  %74 = load float, float* %73, align 4
  %75 = fcmp oge float %74, 0.000000e+00
  br i1 %75, label %76, label %77

; <label>:76                                      ; preds = %71
  br label %79

; <label>:77                                      ; preds = %71, %70
  call void @__assert_fail(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.50, i32 0, i32 0), i32 37, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN12b2MouseJointC2EPK15b2MouseJointDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %79

; <label>:79                                      ; preds = %78, %76
  %80 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 2
  %81 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %82 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %81, i32 0, i32 1
  %83 = bitcast %struct.b2Vec2* %80 to i8*
  %84 = bitcast %struct.b2Vec2* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false)
  %85 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 1
  %86 = bitcast %class.b2MouseJoint* %6 to %class.b2Joint*
  %87 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %86, i32 0, i32 7
  %88 = load %class.b2Body*, %class.b2Body** %87, align 8
  %89 = invoke dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %88)
          to label %90 unwind label %31

; <label>:90                                      ; preds = %79
  %91 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 2
  %92 = invoke <2 x float> @_Z6b2MulTRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %89, %struct.b2Vec2* dereferenceable(8) %91)
          to label %93 unwind label %31

; <label>:93                                      ; preds = %90
  %94 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %92, <2 x float>* %94, align 4
  %95 = bitcast %struct.b2Vec2* %85 to i8*
  %96 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false)
  %97 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %98 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %97, i32 0, i32 2
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 7
  store float %99, float* %100, align 4
  %101 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 6
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %101)
          to label %102 unwind label %31

; <label>:102                                     ; preds = %93
  %103 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %104 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %103, i32 0, i32 3
  %105 = load float, float* %104, align 8
  %106 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 3
  store float %105, float* %106, align 8
  %107 = load %struct.b2MouseJointDef*, %struct.b2MouseJointDef** %2, align 8
  %108 = getelementptr inbounds %struct.b2MouseJointDef, %struct.b2MouseJointDef* %107, i32 0, i32 4
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 4
  store float %109, float* %110, align 4
  %111 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 5
  store float 0.000000e+00, float* %111, align 8
  %112 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %6, i32 0, i32 8
  store float 0.000000e+00, float* %112, align 8
  ret void

; <label>:113                                     ; preds = %31
  br label %114

; <label>:114                                     ; preds = %113
  %115 = load i8*, i8** %3, align 8
  %116 = load i32, i32* %4, align 4
  %117 = insertvalue { i8*, i32 } undef, i8* %115, 0
  %118 = insertvalue { i8*, i32 } %117, i32 %116, 1
  resume { i8*, i32 } %118

; <label>:119                                     ; preds = %31
  %120 = landingpad { i8*, i32 }
          catch i8* null
  %121 = extractvalue { i8*, i32 } %120, 0
  call void @__clang_call_terminate(i8* %121) #15
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr zeroext i1 @_ZNK6b2Vec27IsValidEv(%struct.b2Vec2* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  %2 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %3 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %2, i32 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = call zeroext i1 @_Z9b2IsValidf(float %8)
  br label %10

; <label>:10                                      ; preds = %6, %0
  %11 = phi i1 [ false, %0 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 3
  ret %struct.b2Transform* %3
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef(%class.b2PrismaticJoint* %this, %struct.b2PrismaticJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca %struct.b2PrismaticJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store %struct.b2PrismaticJointDef* %def, %struct.b2PrismaticJointDef** %2, align 8
  %6 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %7 = bitcast %class.b2PrismaticJoint* %6 to %class.b2Joint*
  %8 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %9 = bitcast %struct.b2PrismaticJointDef* %8 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %7, %struct.b2JointDef* %9)
  %10 = bitcast %class.b2PrismaticJoint* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV16b2PrismaticJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
          to label %12 unwind label %97

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %13)
          to label %14 unwind label %97

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 3
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %15)
          to label %16 unwind label %97

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 4
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %17)
          to label %18 unwind label %97

; <label>:18                                      ; preds = %16
  %19 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 6
  invoke void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %19)
          to label %20 unwind label %97

; <label>:20                                      ; preds = %18
  %21 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 18
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %21)
          to label %22 unwind label %97

; <label>:22                                      ; preds = %20
  %23 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 19
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %23)
          to label %24 unwind label %97

; <label>:24                                      ; preds = %22
  %25 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 24
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %25)
          to label %26 unwind label %97

; <label>:26                                      ; preds = %24
  %27 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 25
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %27)
          to label %28 unwind label %97

; <label>:28                                      ; preds = %26
  %29 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 30
  invoke void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %29)
          to label %30 unwind label %97

; <label>:30                                      ; preds = %28
  %31 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 1
  %32 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %33 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %32, i32 0, i32 1
  %34 = bitcast %struct.b2Vec2* %31 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 2
  %37 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %38 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %37, i32 0, i32 2
  %39 = bitcast %struct.b2Vec2* %36 to i8*
  %40 = bitcast %struct.b2Vec2* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false)
  %41 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 3
  %42 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %43 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %42, i32 0, i32 3
  %44 = bitcast %struct.b2Vec2* %41 to i8*
  %45 = bitcast %struct.b2Vec2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 4, i1 false)
  %46 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 3
  %47 = invoke float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %46)
          to label %48 unwind label %97

; <label>:48                                      ; preds = %30
  %49 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 4
  %50 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 3
  %51 = invoke <2 x float> @_Z7b2CrossfRK6b2Vec2(float 1.000000e+00, %struct.b2Vec2* dereferenceable(8) %50)
          to label %52 unwind label %97

; <label>:52                                      ; preds = %48
  %53 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %51, <2 x float>* %53, align 4
  %54 = bitcast %struct.b2Vec2* %49 to i8*
  %55 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 4, i1 false)
  %56 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %57 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %56, i32 0, i32 4
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 5
  store float %58, float* %59, align 8
  %60 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 6
  invoke void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %60)
          to label %61 unwind label %97

; <label>:61                                      ; preds = %52
  %62 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 31
  store float 0.000000e+00, float* %62, align 8
  %63 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 7
  store float 0.000000e+00, float* %63, align 8
  %64 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %65 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %64, i32 0, i32 6
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 8
  store float %66, float* %67, align 4
  %68 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %69 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %68, i32 0, i32 7
  %70 = load float, float* %69, align 8
  %71 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 9
  store float %70, float* %71, align 8
  %72 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %73 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %72, i32 0, i32 9
  %74 = load float, float* %73, align 8
  %75 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 10
  store float %74, float* %75, align 4
  %76 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %77 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %76, i32 0, i32 10
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 11
  store float %78, float* %79, align 8
  %80 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %81 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %80, i32 0, i32 5
  %82 = load i8, i8* %81, align 8
  %83 = trunc i8 %82 to i1
  %84 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 12
  %85 = zext i1 %83 to i8
  store i8 %85, i8* %84, align 4
  %86 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %2, align 8
  %87 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %86, i32 0, i32 8
  %88 = load i8, i8* %87, align 4
  %89 = trunc i8 %88 to i1
  %90 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 13
  %91 = zext i1 %89 to i8
  store i8 %91, i8* %90, align 1
  %92 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 15
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 24
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %93)
          to label %94 unwind label %97

; <label>:94                                      ; preds = %61
  %95 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %6, i32 0, i32 25
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %95)
          to label %96 unwind label %97

; <label>:96                                      ; preds = %94
  ret void

; <label>:97                                      ; preds = %94, %61, %52, %48, %30, %28, %26, %24, %22, %20, %18, %16, %14, %12, %0
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %3, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %4, align 4
  %101 = bitcast %class.b2PrismaticJoint* %6 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %101)
          to label %102 unwind label %108

; <label>:102                                     ; preds = %97
  br label %103

; <label>:103                                     ; preds = %102
  %104 = load i8*, i8** %3, align 8
  %105 = load i32, i32* %4, align 4
  %106 = insertvalue { i8*, i32 } undef, i8* %104, 0
  %107 = insertvalue { i8*, i32 } %106, i32 %105, 1
  resume { i8*, i32 } %107

; <label>:108                                     ; preds = %97
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  call void @__clang_call_terminate(i8* %110) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef(%class.b2RevoluteJoint* %this, %struct.b2RevoluteJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca %struct.b2RevoluteJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store %struct.b2RevoluteJointDef* %def, %struct.b2RevoluteJointDef** %2, align 8
  %5 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %6 = bitcast %class.b2RevoluteJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %8 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2RevoluteJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV15b2RevoluteJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %72

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %72

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 3
  invoke void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %14)
          to label %15 unwind label %72

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 14
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %72

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 15
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %72

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 16
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %72

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 17
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %72

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 22
  invoke void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %24)
          to label %25 unwind label %72

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 1
  %27 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %28 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %27, i32 0, i32 1
  %29 = bitcast %struct.b2Vec2* %26 to i8*
  %30 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 2
  %32 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %33 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %32, i32 0, i32 2
  %34 = bitcast %struct.b2Vec2* %31 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %37 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %36, i32 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 9
  store float %38, float* %39, align 8
  %40 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 3
  invoke void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %40)
          to label %41 unwind label %72

; <label>:41                                      ; preds = %25
  %42 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 4
  store float 0.000000e+00, float* %42, align 4
  %43 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %44 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %43, i32 0, i32 5
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 10
  store float %45, float* %46, align 4
  %47 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %48 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %47, i32 0, i32 6
  %49 = load float, float* %48, align 8
  %50 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 11
  store float %49, float* %50, align 8
  %51 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %52 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %51, i32 0, i32 9
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 6
  store float %53, float* %54, align 4
  %55 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %56 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %55, i32 0, i32 8
  %57 = load float, float* %56, align 8
  %58 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 7
  store float %57, float* %58, align 8
  %59 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %60 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %59, i32 0, i32 4
  %61 = load i8, i8* %60, align 8
  %62 = trunc i8 %61 to i1
  %63 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 8
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 4
  %65 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %2, align 8
  %66 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %65, i32 0, i32 7
  %67 = load i8, i8* %66, align 4
  %68 = trunc i8 %67 to i1
  %69 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 5
  %70 = zext i1 %68 to i8
  store i8 %70, i8* %69, align 8
  %71 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %5, i32 0, i32 24
  store i32 0, i32* %71, align 4
  ret void

; <label>:72                                      ; preds = %25, %23, %21, %19, %17, %15, %13, %11, %0
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = bitcast %class.b2RevoluteJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %76)
          to label %77 unwind label %83

; <label>:77                                      ; preds = %72
  br label %78

; <label>:78                                      ; preds = %77
  %79 = load i8*, i8** %3, align 8
  %80 = load i32, i32* %4, align 4
  %81 = insertvalue { i8*, i32 } undef, i8* %79, 0
  %82 = insertvalue { i8*, i32 } %81, i32 %80, 1
  resume { i8*, i32 } %82

; <label>:83                                      ; preds = %72
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN13b2PulleyJointC2EPK16b2PulleyJointDef(%class.b2PulleyJoint* %this, %struct.b2PulleyJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %2 = alloca %struct.b2PulleyJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  store %struct.b2PulleyJointDef* %def, %struct.b2PulleyJointDef** %2, align 8
  %5 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %6 = bitcast %class.b2PulleyJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %8 = bitcast %struct.b2PulleyJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2PulleyJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV13b2PulleyJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %64

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %64

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 5
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %14)
          to label %15 unwind label %64

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 6
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %64

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %64

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 13
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %64

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 14
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %64

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 15
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %24)
          to label %25 unwind label %64

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 16
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %26)
          to label %27 unwind label %64

; <label>:27                                      ; preds = %25
  %28 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 17
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %28)
          to label %29 unwind label %64

; <label>:29                                      ; preds = %27
  %30 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 1
  %31 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %32 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %31, i32 0, i32 1
  %33 = bitcast %struct.b2Vec2* %30 to i8*
  %34 = bitcast %struct.b2Vec2* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false)
  %35 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 2
  %36 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %37 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %36, i32 0, i32 2
  %38 = bitcast %struct.b2Vec2* %35 to i8*
  %39 = bitcast %struct.b2Vec2* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  %40 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 5
  %41 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %42 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %41, i32 0, i32 3
  %43 = bitcast %struct.b2Vec2* %40 to i8*
  %44 = bitcast %struct.b2Vec2* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 4, i1 false)
  %45 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 6
  %46 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %47 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %46, i32 0, i32 4
  %48 = bitcast %struct.b2Vec2* %45 to i8*
  %49 = bitcast %struct.b2Vec2* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false)
  %50 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %51 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %50, i32 0, i32 5
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 3
  store float %52, float* %53, align 8
  %54 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %55 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %54, i32 0, i32 6
  %56 = load float, float* %55, align 8
  %57 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 4
  store float %56, float* %57, align 4
  %58 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %59 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %58, i32 0, i32 7
  %60 = load float, float* %59, align 4
  %61 = fcmp une float %60, 0.000000e+00
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %29
  br label %70

; <label>:63                                      ; preds = %29
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.87, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.86, i32 0, i32 0), i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN13b2PulleyJointC2EPK16b2PulleyJointDef, i32 0, i32 0)) #15
  unreachable

; <label>:64                                      ; preds = %27, %25, %23, %21, %19, %17, %15, %13, %11, %0
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %3, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %4, align 4
  %68 = bitcast %class.b2PulleyJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %68)
          to label %87 unwind label %93
                                                  ; No predecessors!
  br label %70

; <label>:70                                      ; preds = %69, %62
  %71 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %72 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %71, i32 0, i32 7
  %73 = load float, float* %72, align 4
  %74 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 8
  store float %73, float* %74, align 4
  %75 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %76 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %75, i32 0, i32 5
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 8
  %79 = load float, float* %78, align 4
  %80 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %2, align 8
  %81 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %80, i32 0, i32 6
  %82 = load float, float* %81, align 8
  %83 = fmul float %79, %82
  %84 = fadd float %77, %83
  %85 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 7
  store float %84, float* %85, align 8
  %86 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %5, i32 0, i32 9
  store float 0.000000e+00, float* %86, align 8
  ret void

; <label>:87                                      ; preds = %64
  br label %88

; <label>:88                                      ; preds = %87
  %89 = load i8*, i8** %3, align 8
  %90 = load i32, i32* %4, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93                                      ; preds = %64
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJointC2EPK15b2WheelJointDef(%class.b2WheelJoint* %this, %struct.b2WheelJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca %struct.b2WheelJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store %struct.b2WheelJointDef* %def, %struct.b2WheelJointDef** %2, align 8
  %6 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %7 = bitcast %class.b2WheelJoint* %6 to %class.b2Joint*
  %8 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %9 = bitcast %struct.b2WheelJointDef* %8 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %7, %struct.b2JointDef* %9)
  %10 = bitcast %class.b2WheelJoint* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV12b2WheelJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 3
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
          to label %12 unwind label %83

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 4
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %13)
          to label %14 unwind label %83

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 5
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %15)
          to label %16 unwind label %83

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 6
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %17)
          to label %18 unwind label %83

; <label>:18                                      ; preds = %16
  %19 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 16
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %19)
          to label %20 unwind label %83

; <label>:20                                      ; preds = %18
  %21 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 17
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %21)
          to label %22 unwind label %83

; <label>:22                                      ; preds = %20
  %23 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 22
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %23)
          to label %24 unwind label %83

; <label>:24                                      ; preds = %22
  %25 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 23
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %25)
          to label %26 unwind label %83

; <label>:26                                      ; preds = %24
  %27 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 3
  %28 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %29 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %28, i32 0, i32 1
  %30 = bitcast %struct.b2Vec2* %27 to i8*
  %31 = bitcast %struct.b2Vec2* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  %32 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 4
  %33 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %34 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %33, i32 0, i32 2
  %35 = bitcast %struct.b2Vec2* %32 to i8*
  %36 = bitcast %struct.b2Vec2* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 4, i1 false)
  %37 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 5
  %38 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %39 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %38, i32 0, i32 3
  %40 = bitcast %struct.b2Vec2* %37 to i8*
  %41 = bitcast %struct.b2Vec2* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 4, i1 false)
  %42 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 6
  %43 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 5
  %44 = invoke <2 x float> @_Z7b2CrossfRK6b2Vec2(float 1.000000e+00, %struct.b2Vec2* dereferenceable(8) %43)
          to label %45 unwind label %83

; <label>:45                                      ; preds = %26
  %46 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %44, <2 x float>* %46, align 4
  %47 = bitcast %struct.b2Vec2* %42 to i8*
  %48 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 4, i1 false)
  %49 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 28
  store float 0.000000e+00, float* %49, align 8
  %50 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 7
  store float 0.000000e+00, float* %50, align 8
  %51 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 29
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 8
  store float 0.000000e+00, float* %52, align 4
  %53 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 30
  store float 0.000000e+00, float* %53, align 8
  %54 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 9
  store float 0.000000e+00, float* %54, align 8
  %55 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %56 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %55, i32 0, i32 5
  %57 = load float, float* %56, align 8
  %58 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 10
  store float %57, float* %58, align 4
  %59 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %60 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %59, i32 0, i32 6
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 11
  store float %61, float* %62, align 8
  %63 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %64 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %63, i32 0, i32 4
  %65 = load i8, i8* %64, align 4
  %66 = trunc i8 %65 to i1
  %67 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 12
  %68 = zext i1 %66 to i8
  store i8 %68, i8* %67, align 4
  %69 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %70 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %69, i32 0, i32 7
  %71 = load float, float* %70, align 8
  %72 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 1
  store float %71, float* %72, align 8
  %73 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %2, align 8
  %74 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %73, i32 0, i32 8
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 2
  store float %75, float* %76, align 4
  %77 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 31
  store float 0.000000e+00, float* %77, align 4
  %78 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 32
  store float 0.000000e+00, float* %78, align 8
  %79 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 22
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %79)
          to label %80 unwind label %83

; <label>:80                                      ; preds = %45
  %81 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %6, i32 0, i32 23
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %81)
          to label %82 unwind label %83

; <label>:82                                      ; preds = %80
  ret void

; <label>:83                                      ; preds = %80, %45, %26, %24, %22, %20, %18, %16, %14, %12, %0
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %3, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %4, align 4
  %87 = bitcast %class.b2WheelJoint* %6 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %87)
          to label %88 unwind label %94

; <label>:88                                      ; preds = %83
  br label %89

; <label>:89                                      ; preds = %88
  %90 = load i8*, i8** %3, align 8
  %91 = load i32, i32* %4, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94                                      ; preds = %83
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN11b2WeldJointC2EPK14b2WeldJointDef(%class.b2WeldJoint* %this, %struct.b2DistanceJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2WeldJoint*, align 8
  %2 = alloca %struct.b2DistanceJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2WeldJoint* %this, %class.b2WeldJoint** %1, align 8
  store %struct.b2DistanceJointDef* %def, %struct.b2DistanceJointDef** %2, align 8
  %5 = load %class.b2WeldJoint*, %class.b2WeldJoint** %1, align 8
  %6 = bitcast %class.b2WeldJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %8 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2WeldJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV11b2WeldJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 4
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %50

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 5
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %50

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 8
  invoke void @_ZN6b2Vec3C2Ev(%struct.b2Vec3* %14)
          to label %15 unwind label %50

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %50

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %50

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 13
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %50

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 14
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %50

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 19
  invoke void @_ZN7b2Mat33C2Ev(%struct.b2Mat33* %24)
          to label %25 unwind label %50

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 4
  %27 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %28 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %27, i32 0, i32 1
  %29 = bitcast %struct.b2Vec2* %26 to i8*
  %30 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 5
  %32 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %33 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %32, i32 0, i32 2
  %34 = bitcast %struct.b2Vec2* %31 to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %37 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %36, i32 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 6
  store float %38, float* %39, align 4
  %40 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %41 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %40, i32 0, i32 4
  %42 = load float, float* %41, align 8
  %43 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 1
  store float %42, float* %43, align 8
  %44 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %2, align 8
  %45 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %44, i32 0, i32 5
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 2
  store float %46, float* %47, align 4
  %48 = getelementptr inbounds %class.b2WeldJoint, %class.b2WeldJoint* %5, i32 0, i32 8
  invoke void @_ZN6b2Vec37SetZeroEv(%struct.b2Vec3* %48)
          to label %49 unwind label %50

; <label>:49                                      ; preds = %25
  ret void

; <label>:50                                      ; preds = %25, %23, %21, %19, %17, %15, %13, %11, %0
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %class.b2WeldJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %54)
          to label %55 unwind label %61

; <label>:55                                      ; preds = %50
  br label %56

; <label>:56                                      ; preds = %55
  %57 = load i8*, i8** %3, align 8
  %58 = load i32, i32* %4, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  resume { i8*, i32 } %60

; <label>:61                                      ; preds = %50
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN11b2RopeJointC2EPK14b2RopeJointDef(%class.b2RopeJoint* %this, %struct.b2RopeJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2RopeJoint*, align 8
  %2 = alloca %struct.b2RopeJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  store %struct.b2RopeJointDef* %def, %struct.b2RopeJointDef** %2, align 8
  %5 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %6 = bitcast %class.b2RopeJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2RopeJointDef*, %struct.b2RopeJointDef** %2, align 8
  %8 = bitcast %struct.b2RopeJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2RopeJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV11b2RopeJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %42

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 2
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %42

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 8
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %14)
          to label %15 unwind label %42

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 9
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %42

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 10
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %42

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %42

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %42

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 1
  %25 = load %struct.b2RopeJointDef*, %struct.b2RopeJointDef** %2, align 8
  %26 = getelementptr inbounds %struct.b2RopeJointDef, %struct.b2RopeJointDef* %25, i32 0, i32 1
  %27 = bitcast %struct.b2Vec2* %24 to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 2
  %30 = load %struct.b2RopeJointDef*, %struct.b2RopeJointDef** %2, align 8
  %31 = getelementptr inbounds %struct.b2RopeJointDef, %struct.b2RopeJointDef* %30, i32 0, i32 2
  %32 = bitcast %struct.b2Vec2* %29 to i8*
  %33 = bitcast %struct.b2Vec2* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = load %struct.b2RopeJointDef*, %struct.b2RopeJointDef** %2, align 8
  %35 = getelementptr inbounds %struct.b2RopeJointDef, %struct.b2RopeJointDef* %34, i32 0, i32 3
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 3
  store float %36, float* %37, align 8
  %38 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 17
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 5
  store float 0.000000e+00, float* %39, align 8
  %40 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 18
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %5, i32 0, i32 4
  store float 0.000000e+00, float* %41, align 4
  ret void

; <label>:42                                      ; preds = %21, %19, %17, %15, %13, %11, %0
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %3, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %4, align 4
  %46 = bitcast %class.b2RopeJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %46)
          to label %47 unwind label %53

; <label>:47                                      ; preds = %42
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i8*, i8** %3, align 8
  %50 = load i32, i32* %4, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

; <label>:53                                      ; preds = %42
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJointC2EPK15b2MotorJointDef(%class.b2MotorJoint* %this, %struct.b2MotorJointDef* %def) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca %struct.b2MotorJointDef*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store %struct.b2MotorJointDef* %def, %struct.b2MotorJointDef** %2, align 8
  %5 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %6 = bitcast %class.b2MotorJoint* %5 to %class.b2Joint*
  %7 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %2, align 8
  %8 = bitcast %struct.b2MotorJointDef* %7 to %struct.b2JointDef*
  call void @_ZN7b2JointC2EPK10b2JointDef(%class.b2Joint* %6, %struct.b2JointDef* %8)
  %9 = bitcast %class.b2MotorJoint* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZTV12b2MotorJoint, i64 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 1
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %10)
          to label %11 unwind label %50

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 3
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
          to label %13 unwind label %50

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 10
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %14)
          to label %15 unwind label %50

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 11
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %16)
          to label %17 unwind label %50

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 12
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %18)
          to label %19 unwind label %50

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 13
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %20)
          to label %21 unwind label %50

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 14
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %22)
          to label %23 unwind label %50

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 20
  invoke void @_ZN7b2Mat22C2Ev(%struct.b2Transform* %24)
          to label %25 unwind label %50

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 1
  %27 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %2, align 8
  %28 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %27, i32 0, i32 1
  %29 = bitcast %struct.b2Vec2* %26 to i8*
  %30 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %2, align 8
  %32 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %31, i32 0, i32 2
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 2
  store float %33, float* %34, align 8
  %35 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 3
  invoke void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %35)
          to label %36 unwind label %50

; <label>:36                                      ; preds = %25
  %37 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 4
  store float 0.000000e+00, float* %37, align 4
  %38 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %2, align 8
  %39 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %38, i32 0, i32 3
  %40 = load float, float* %39, align 8
  %41 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 5
  store float %40, float* %41, align 8
  %42 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %2, align 8
  %43 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %42, i32 0, i32 4
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 6
  store float %44, float* %45, align 4
  %46 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %2, align 8
  %47 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %46, i32 0, i32 5
  %48 = load float, float* %47, align 8
  %49 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %5, i32 0, i32 7
  store float %48, float* %49, align 8
  ret void

; <label>:50                                      ; preds = %25, %23, %21, %19, %17, %15, %13, %11, %0
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %class.b2MotorJoint* %5 to %class.b2Joint*
  invoke void @_ZN7b2JointD2Ev(%class.b2Joint* %54)
          to label %55 unwind label %61

; <label>:55                                      ; preds = %50
  br label %56

; <label>:56                                      ; preds = %55
  %57 = load i8*, i8** %3, align 8
  %58 = load i32, i32* %4, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  resume { i8*, i32 } %60

; <label>:61                                      ; preds = %50
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN7b2Joint7DestroyEPS_P16b2BlockAllocator(%class.b2Joint* %joint, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Joint*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Joint* %joint, %class.b2Joint** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %4 = bitcast %class.b2Joint* %3 to void (%class.b2Joint*)***
  %5 = load void (%class.b2Joint*)**, void (%class.b2Joint*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.b2Joint*)*, void (%class.b2Joint*)** %5, i64 6
  %7 = load void (%class.b2Joint*)*, void (%class.b2Joint*)** %6, align 8
  call void %7(%class.b2Joint* %3)
  %8 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %55 [
    i32 3, label %11
    i32 5, label %15
    i32 2, label %19
    i32 1, label %23
    i32 4, label %27
    i32 6, label %31
    i32 7, label %35
    i32 8, label %39
    i32 9, label %43
    i32 10, label %47
    i32 11, label %51
  ]

; <label>:11                                      ; preds = %0
  %12 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %13 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %14 = bitcast %class.b2Joint* %13 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %12, i8* %14, i32 240)
  br label %56

; <label>:15                                      ; preds = %0
  %16 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %17 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %18 = bitcast %class.b2Joint* %17 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %16, i8* %18, i32 232)
  br label %56

; <label>:19                                      ; preds = %0
  %20 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %21 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %22 = bitcast %class.b2Joint* %21 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %20, i8* %22, i32 320)
  br label %56

; <label>:23                                      ; preds = %0
  %24 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %25 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %26 = bitcast %class.b2Joint* %25 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %24, i8* %26, i32 288)
  br label %56

; <label>:27                                      ; preds = %0
  %28 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %29 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %30 = bitcast %class.b2Joint* %29 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %28, i8* %30, i32 256)
  br label %56

; <label>:31                                      ; preds = %0
  %32 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %33 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %34 = bitcast %class.b2Joint* %33 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %32, i8* %34, i32 352)
  br label %56

; <label>:35                                      ; preds = %0
  %36 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %37 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %38 = bitcast %class.b2Joint* %37 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %36, i8* %38, i32 288)
  br label %56

; <label>:39                                      ; preds = %0
  %40 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %41 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %42 = bitcast %class.b2Joint* %41 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %40, i8* %42, i32 272)
  br label %56

; <label>:43                                      ; preds = %0
  %44 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %45 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %46 = bitcast %class.b2Joint* %45 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %44, i8* %46, i32 240)
  br label %56

; <label>:47                                      ; preds = %0
  %48 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %49 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %50 = bitcast %class.b2Joint* %49 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %48, i8* %50, i32 232)
  br label %56

; <label>:51                                      ; preds = %0
  %52 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %53 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %54 = bitcast %class.b2Joint* %53 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %52, i8* %54, i32 256)
  br label %56

; <label>:55                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.28, i32 0, i32 0), i32 178, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN7b2Joint7DestroyEPS_P16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable

; <label>:56                                      ; preds = %51, %47, %43, %39, %35, %31, %27, %23, %19, %15, %11
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %this, i8* %p, i32 %size) #0 align 2 {
  %1 = alloca %class.b2BlockAllocator*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %index = alloca i32, align 4
  %block = alloca %struct.b2Block*, align 8
  store %class.b2BlockAllocator* %this, %class.b2BlockAllocator** %1, align 8
  store i8* %p, i8** %2, align 8
  store i32 %size, i32* %3, align 4
  %4 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %1, align 8
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %48

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 0, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %8
  br label %14

; <label>:12                                      ; preds = %8
  call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.310, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.307, i32 0, i32 0), i32 162, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN16b2BlockAllocator4FreeEPvi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %3, align 4
  %16 = icmp sgt i32 %15, 640
  br i1 %16, label %17, label %19

; <label>:17                                      ; preds = %14
  %18 = load i8*, i8** %2, align 8
  call void @_Z6b2FreePv(i8* %18)
  br label %48

; <label>:19                                      ; preds = %14
  %20 = load i32, i32* %3, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [641 x i8], [641 x i8]* @_ZN16b2BlockAllocator17s_blockSizeLookupE, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %index, align 4
  %25 = load i32, i32* %index, align 4
  %26 = icmp sle i32 0, %25
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %19
  %28 = load i32, i32* %index, align 4
  %29 = icmp slt i32 %28, 14
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %27
  br label %33

; <label>:31                                      ; preds = %27, %19
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.311, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.307, i32 0, i32 0), i32 171, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN16b2BlockAllocator4FreeEPvi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %33

; <label>:33                                      ; preds = %32, %30
  %34 = load i8*, i8** %2, align 8
  %35 = bitcast i8* %34 to %struct.b2Block*
  store %struct.b2Block* %35, %struct.b2Block** %block, align 8
  %36 = load i32, i32* %index, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 3
  %39 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %38, i64 0, i64 %37
  %40 = load %struct.b2Block*, %struct.b2Block** %39, align 8
  %41 = load %struct.b2Block*, %struct.b2Block** %block, align 8
  %42 = getelementptr inbounds %struct.b2Block, %struct.b2Block* %41, i32 0, i32 0
  store %struct.b2Block* %40, %struct.b2Block** %42, align 8
  %43 = load %struct.b2Block*, %struct.b2Block** %block, align 8
  %44 = load i32, i32* %index, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %4, i32 0, i32 3
  %47 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %46, i64 0, i64 %45
  store %struct.b2Block* %43, %struct.b2Block** %47, align 8
  br label %48

; <label>:48                                      ; preds = %33, %17, %7
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK7b2Joint8IsActiveEv(%class.b2Joint* %this) #0 align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %3 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %2, i32 0, i32 6
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  %5 = call zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %4)
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %2, i32 0, i32 7
  %8 = load %class.b2Body*, %class.b2Body** %7, align 8
  %9 = call zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %8)
  br label %10

; <label>:10                                      ; preds = %6, %0
  %11 = phi i1 [ false, %0 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %4 = load i16, i16* %3, align 4
  %5 = zext i16 %4 to i32
  %6 = and i32 %5, 32
  %7 = icmp eq i32 %6, 32
  ret i1 %7
}

; Function Attrs: uwtable
define void @_ZN15b2MotorJointDef10InitializeEP6b2BodyS1_(%struct.b2MotorJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB) #0 align 2 {
  %1 = alloca %struct.b2MotorJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %xB = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %angleA = alloca float, align 4
  %angleB = alloca float, align 4
  store %struct.b2MotorJointDef* %this, %struct.b2MotorJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  %5 = load %struct.b2MotorJointDef*, %struct.b2MotorJointDef** %1, align 8
  %6 = load %class.b2Body*, %class.b2Body** %2, align 8
  %7 = bitcast %struct.b2MotorJointDef* %5 to %struct.b2JointDef*
  %8 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %7, i32 0, i32 3
  store %class.b2Body* %6, %class.b2Body** %8, align 8
  %9 = load %class.b2Body*, %class.b2Body** %3, align 8
  %10 = bitcast %struct.b2MotorJointDef* %5 to %struct.b2JointDef*
  %11 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %10, i32 0, i32 4
  store %class.b2Body* %9, %class.b2Body** %11, align 8
  %12 = bitcast %struct.b2MotorJointDef* %5 to %struct.b2JointDef*
  %13 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %12, i32 0, i32 4
  %14 = load %class.b2Body*, %class.b2Body** %13, align 8
  %15 = call dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body11GetPositionEv(%class.b2Body* %14)
  %16 = bitcast %struct.b2Vec2* %xB to i8*
  %17 = bitcast %struct.b2Vec2* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false)
  %18 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %5, i32 0, i32 1
  %19 = bitcast %struct.b2MotorJointDef* %5 to %struct.b2JointDef*
  %20 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %19, i32 0, i32 3
  %21 = load %class.b2Body*, %class.b2Body** %20, align 8
  %22 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %21, %struct.b2Vec2* dereferenceable(8) %xB)
  %23 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = bitcast %struct.b2Vec2* %18 to i8*
  %25 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false)
  %26 = bitcast %struct.b2MotorJointDef* %5 to %struct.b2JointDef*
  %27 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %26, i32 0, i32 3
  %28 = load %class.b2Body*, %class.b2Body** %27, align 8
  %29 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %28)
  store float %29, float* %angleA, align 4
  %30 = bitcast %struct.b2MotorJointDef* %5 to %struct.b2JointDef*
  %31 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %30, i32 0, i32 4
  %32 = load %class.b2Body*, %class.b2Body** %31, align 8
  %33 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %32)
  store float %33, float* %angleB, align 4
  %34 = load float, float* %angleB, align 4
  %35 = load float, float* %angleA, align 4
  %36 = fsub float %34, %35
  %37 = getelementptr inbounds %struct.b2MotorJointDef, %struct.b2MotorJointDef* %5, i32 0, i32 2
  store float %36, float* %37, align 4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 4
  %4 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %3, i32 0, i32 4
  %5 = load float, float* %4, align 4
  ret float %5
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint11SetMaxForceEf(%class.b2MotorJoint* %this, float %force) #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store float %force, float* %2, align 4
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load float, float* %2, align 4
  %8 = fcmp oge float %7, 0.000000e+00
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.43, i32 0, i32 0), i32 228, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN12b2MotorJoint11SetMaxForceEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load float, float* %2, align 4
  %14 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 5
  store float %13, float* %14, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MotorJoint11GetMaxForceEv(%class.b2MotorJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 5
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint12SetMaxTorqueEf(%class.b2MotorJoint* %this, float %torque) #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store float %torque, float* %2, align 4
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load float, float* %2, align 4
  %8 = fcmp oge float %7, 0.000000e+00
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2.44, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.43, i32 0, i32 0), i32 239, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__._ZN12b2MotorJoint12SetMaxTorqueEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load float, float* %2, align 4
  %14 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 6
  store float %13, float* %14, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MotorJoint12GetMaxTorqueEv(%class.b2MotorJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 6
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint19SetCorrectionFactorEf(%class.b2MotorJoint* %this, float %factor) #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store float %factor, float* %2, align 4
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = call zeroext i1 @_Z9b2IsValidf(float %4)
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load float, float* %2, align 4
  %8 = fcmp ole float 0.000000e+00, %7
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %6
  %10 = load float, float* %2, align 4
  %11 = fcmp ole float %10, 1.000000e+00
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %9
  br label %15

; <label>:13                                      ; preds = %9, %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3.45, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1.43, i32 0, i32 0), i32 250, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__._ZN12b2MotorJoint19SetCorrectionFactorEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load float, float* %2, align 4
  %17 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 7
  store float %16, float* %17, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MotorJoint19GetCorrectionFactorEv(%class.b2MotorJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 7
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint15SetLinearOffsetERK6b2Vec2(%class.b2MotorJoint* %this, %struct.b2Vec2* dereferenceable(8) %linearOffset) #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store %struct.b2Vec2* %linearOffset, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 1
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 8
  %10 = fcmp une float %6, %9
  br i1 %10, label %19, label %11

; <label>:11                                      ; preds = %0
  %12 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %13 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %12, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 1
  %16 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %15, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp une float %14, %17
  br i1 %18, label %19, label %30

; <label>:19                                      ; preds = %11, %0
  %20 = bitcast %class.b2MotorJoint* %3 to %class.b2Joint*
  %21 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %20, i32 0, i32 6
  %22 = load %class.b2Body*, %class.b2Body** %21, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %22, i1 zeroext true)
  %23 = bitcast %class.b2MotorJoint* %3 to %class.b2Joint*
  %24 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %23, i32 0, i32 7
  %25 = load %class.b2Body*, %class.b2Body** %24, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %25, i1 zeroext true)
  %26 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 1
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  br label %30

; <label>:30                                      ; preds = %19, %11
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %this, i1 zeroext %flag) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca i8, align 1
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  br i1 %6, label %7, label %21

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %9 = load i16, i16* %8, align 4
  %10 = zext i16 %9 to i32
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %15 = load i16, i16* %14, align 4
  %16 = zext i16 %15 to i32
  %17 = or i32 %16, 2
  %18 = trunc i32 %17 to i16
  store i16 %18, i16* %14, align 4
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 23
  store float 0.000000e+00, float* %19, align 4
  br label %20

; <label>:20                                      ; preds = %13, %7
  br label %32

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %23 = load i16, i16* %22, align 4
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, -3
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %22, align 4
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 23
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 5
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %28)
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 6
  store float 0.000000e+00, float* %29, align 8
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 7
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %30)
  %31 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 8
  store float 0.000000e+00, float* %31, align 4
  br label %32

; <label>:32                                      ; preds = %21, %20
  ret void
}

; Function Attrs: nounwind uwtable
define dereferenceable(8) %struct.b2Vec2* @_ZNK12b2MotorJoint15GetLinearOffsetEv(%class.b2MotorJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 1
  ret %struct.b2Vec2* %3
}

; Function Attrs: uwtable
define void @_ZN12b2MotorJoint16SetAngularOffsetEf(%class.b2MotorJoint* %this, float %angularOffset) #0 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  store float %angularOffset, float* %2, align 4
  %3 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 2
  %6 = load float, float* %5, align 8
  %7 = fcmp une float %4, %6
  br i1 %7, label %8, label %17

; <label>:8                                       ; preds = %0
  %9 = bitcast %class.b2MotorJoint* %3 to %class.b2Joint*
  %10 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %9, i32 0, i32 6
  %11 = load %class.b2Body*, %class.b2Body** %10, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %11, i1 zeroext true)
  %12 = bitcast %class.b2MotorJoint* %3 to %class.b2Joint*
  %13 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %12, i32 0, i32 7
  %14 = load %class.b2Body*, %class.b2Body** %13, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %14, i1 zeroext true)
  %15 = load float, float* %2, align 4
  %16 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %3, i32 0, i32 2
  store float %15, float* %16, align 8
  br label %17

; <label>:17                                      ; preds = %8, %0
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MotorJoint16GetAngularOffsetEv(%class.b2MotorJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MotorJoint*, align 8
  store %class.b2MotorJoint* %this, %class.b2MotorJoint** %1, align 8
  %2 = load %class.b2MotorJoint*, %class.b2MotorJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MotorJoint, %class.b2MotorJoint* %2, i32 0, i32 2
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN12b2MouseJoint9SetTargetERK6b2Vec2(%class.b2MouseJoint* %this, %struct.b2Vec2* dereferenceable(8) %target) #0 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store %struct.b2Vec2* %target, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = bitcast %class.b2MouseJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 7
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  %7 = call zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %6)
  %8 = zext i1 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

; <label>:10                                      ; preds = %0
  %11 = bitcast %class.b2MouseJoint* %3 to %class.b2Joint*
  %12 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %11, i32 0, i32 7
  %13 = load %class.b2Body*, %class.b2Body** %12, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %13, i1 zeroext true)
  br label %14

; <label>:14                                      ; preds = %10, %0
  %15 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 2
  %16 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %17 = bitcast %struct.b2Vec2* %15 to i8*
  %18 = bitcast %struct.b2Vec2* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %4 = load i16, i16* %3, align 4
  %5 = zext i16 %4 to i32
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 2
  ret i1 %7
}

; Function Attrs: nounwind uwtable
define dereferenceable(8) %struct.b2Vec2* @_ZNK12b2MouseJoint9GetTargetEv(%class.b2MouseJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %2 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %2, i32 0, i32 2
  ret %struct.b2Vec2* %3
}

; Function Attrs: nounwind uwtable
define void @_ZN12b2MouseJoint11SetMaxForceEf(%class.b2MouseJoint* %this, float %force) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store float %force, float* %2, align 4
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 7
  store float %4, float* %5, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MouseJoint11GetMaxForceEv(%class.b2MouseJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %2 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %2, i32 0, i32 7
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: nounwind uwtable
define void @_ZN12b2MouseJoint12SetFrequencyEf(%class.b2MouseJoint* %this, float %hz) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store float %hz, float* %2, align 4
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 3
  store float %4, float* %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MouseJoint12GetFrequencyEv(%class.b2MouseJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %2 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %2, i32 0, i32 3
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: nounwind uwtable
define void @_ZN12b2MouseJoint15SetDampingRatioEf(%class.b2MouseJoint* %this, float %ratio) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  store float %ratio, float* %2, align 4
  %3 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %3, i32 0, i32 4
  store float %4, float* %5, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2MouseJoint15GetDampingRatioEv(%class.b2MouseJoint* %this) #2 align 2 {
  %1 = alloca %class.b2MouseJoint*, align 8
  store %class.b2MouseJoint* %this, %class.b2MouseJoint** %1, align 8
  %2 = load %class.b2MouseJoint*, %class.b2MouseJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2MouseJoint, %class.b2MouseJoint* %2, i32 0, i32 4
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_(%struct.b2PrismaticJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB, %struct.b2Vec2* dereferenceable(8) %anchor, %struct.b2Vec2* dereferenceable(8) %axis) #0 align 2 {
  %1 = alloca %struct.b2PrismaticJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2*, align 8
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %struct.b2PrismaticJointDef* %this, %struct.b2PrismaticJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %anchor, %struct.b2Vec2** %4, align 8
  store %struct.b2Vec2* %axis, %struct.b2Vec2** %5, align 8
  %9 = load %struct.b2PrismaticJointDef*, %struct.b2PrismaticJointDef** %1, align 8
  %10 = load %class.b2Body*, %class.b2Body** %2, align 8
  %11 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %12 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %11, i32 0, i32 3
  store %class.b2Body* %10, %class.b2Body** %12, align 8
  %13 = load %class.b2Body*, %class.b2Body** %3, align 8
  %14 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %15 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %14, i32 0, i32 4
  store %class.b2Body* %13, %class.b2Body** %15, align 8
  %16 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %9, i32 0, i32 1
  %17 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %18 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %17, i32 0, i32 3
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  %20 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %21 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %19, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = bitcast %struct.b2Vec2* %16 to i8*
  %24 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false)
  %25 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %9, i32 0, i32 2
  %26 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %27 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %26, i32 0, i32 4
  %28 = load %class.b2Body*, %class.b2Body** %27, align 8
  %29 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %30 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %28, %struct.b2Vec2* dereferenceable(8) %29)
  %31 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 4
  %32 = bitcast %struct.b2Vec2* %25 to i8*
  %33 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %9, i32 0, i32 3
  %35 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %36 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %35, i32 0, i32 3
  %37 = load %class.b2Body*, %class.b2Body** %36, align 8
  %38 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %39 = call <2 x float> @_ZNK6b2Body14GetLocalVectorERK6b2Vec2(%class.b2Body* %37, %struct.b2Vec2* dereferenceable(8) %38)
  %40 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %39, <2 x float>* %40, align 4
  %41 = bitcast %struct.b2Vec2* %34 to i8*
  %42 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  %43 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %44 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %43, i32 0, i32 4
  %45 = load %class.b2Body*, %class.b2Body** %44, align 8
  %46 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %45)
  %47 = bitcast %struct.b2PrismaticJointDef* %9 to %struct.b2JointDef*
  %48 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %47, i32 0, i32 3
  %49 = load %class.b2Body*, %class.b2Body** %48, align 8
  %50 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %49)
  %51 = fsub float %46, %50
  %52 = getelementptr inbounds %struct.b2PrismaticJointDef, %struct.b2PrismaticJointDef* %9, i32 0, i32 4
  store float %51, float* %52, align 4
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZNK6b2Body14GetLocalVectorERK6b2Vec2(%class.b2Body* %this, %struct.b2Vec2* dereferenceable(8) %worldVector) #1 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %struct.b2Vec2* %worldVector, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %6 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 1
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define float @_ZNK16b2PrismaticJoint19GetJointTranslationEv(%class.b2PrismaticJoint* %this) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %pA = alloca %struct.b2Vec2, align 4
  %pB = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %axis = alloca %struct.b2Vec2, align 4
  %translation = alloca float, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 1
  %7 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %pA to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %10 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %9, i32 0, i32 7
  %11 = load %class.b2Body*, %class.b2Body** %10, align 8
  %12 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 2
  %13 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %11, %struct.b2Vec2* dereferenceable(8) %12)
  %14 = bitcast %struct.b2Vec2* %pB to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 4
  %15 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pB, %struct.b2Vec2* dereferenceable(8) %pA)
  %16 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 4
  %17 = bitcast %class.b2PrismaticJoint* %2 to %class.b2Joint*
  %18 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %17, i32 0, i32 6
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  %20 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 3
  %21 = call <2 x float> @_ZNK6b2Body14GetWorldVectorERK6b2Vec2(%class.b2Body* %19, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %axis to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %axis)
  store float %23, float* %translation, align 4
  %24 = load float, float* %translation, align 4
  ret float %24
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_ZNK6b2Body14GetWorldVectorERK6b2Vec2(%class.b2Body* %this, %struct.b2Vec2* dereferenceable(8) %localVector) #1 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %struct.b2Vec2* %localVector, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %6 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 1
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %8 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %7)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %8, <2 x float>* %9, align 4
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  ret <2 x float> %11
}

; Function Attrs: uwtable
define float @_ZNK16b2PrismaticJoint13GetJointSpeedEv(%class.b2PrismaticJoint* %this) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  %rA = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %axis = alloca %struct.b2Vec2, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %wB = alloca float, align 4
  %speed = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %10 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %11 = bitcast %class.b2PrismaticJoint* %10 to %class.b2Joint*
  %12 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %11, i32 0, i32 6
  %13 = load %class.b2Body*, %class.b2Body** %12, align 8
  store %class.b2Body* %13, %class.b2Body** %bA, align 8
  %14 = bitcast %class.b2PrismaticJoint* %10 to %class.b2Joint*
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 7
  %16 = load %class.b2Body*, %class.b2Body** %15, align 8
  store %class.b2Body* %16, %class.b2Body** %bB, align 8
  %17 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %18 = getelementptr inbounds %class.b2Body, %class.b2Body* %17, i32 0, i32 3
  %19 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %18, i32 0, i32 1
  %20 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %10, i32 0, i32 1
  %21 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %21, i32 0, i32 4
  %23 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %22, i32 0, i32 0
  %24 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %23)
  %25 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %24, <2 x float>* %25, align 4
  %26 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %2)
  %27 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %26, <2 x float>* %27, align 4
  %28 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %28, i32 0, i32 3
  %30 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %29, i32 0, i32 1
  %31 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %10, i32 0, i32 2
  %32 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %32, i32 0, i32 4
  %34 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %33, i32 0, i32 0
  %35 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %31, %struct.b2Vec2* dereferenceable(8) %34)
  %36 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %35, <2 x float>* %36, align 4
  %37 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %30, %struct.b2Vec2* dereferenceable(8) %3)
  %38 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 4
  %39 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %39, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %40, i32 0, i32 2
  %42 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %41, %struct.b2Vec2* dereferenceable(8) %rA)
  %43 = bitcast %struct.b2Vec2* %p1 to <2 x float>*
  store <2 x float> %42, <2 x float>* %43, align 4
  %44 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %45 = getelementptr inbounds %class.b2Body, %class.b2Body* %44, i32 0, i32 4
  %46 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %45, i32 0, i32 2
  %47 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %46, %struct.b2Vec2* dereferenceable(8) %rB)
  %48 = bitcast %struct.b2Vec2* %p2 to <2 x float>*
  store <2 x float> %47, <2 x float>* %48, align 4
  %49 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %50 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %52 = getelementptr inbounds %class.b2Body, %class.b2Body* %51, i32 0, i32 3
  %53 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %52, i32 0, i32 1
  %54 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %10, i32 0, i32 3
  %55 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %53, %struct.b2Vec2* dereferenceable(8) %54)
  %56 = bitcast %struct.b2Vec2* %axis to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 4
  %57 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %58 = getelementptr inbounds %class.b2Body, %class.b2Body* %57, i32 0, i32 5
  %59 = bitcast %struct.b2Vec2* %vA to i8*
  %60 = bitcast %struct.b2Vec2* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 4, i1 false)
  %61 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %61, i32 0, i32 5
  %63 = bitcast %struct.b2Vec2* %vB to i8*
  %64 = bitcast %struct.b2Vec2* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 4, i1 false)
  %65 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %66 = getelementptr inbounds %class.b2Body, %class.b2Body* %65, i32 0, i32 6
  %67 = load float, float* %66, align 8
  store float %67, float* %wA, align 4
  %68 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %69 = getelementptr inbounds %class.b2Body, %class.b2Body* %68, i32 0, i32 6
  %70 = load float, float* %69, align 8
  store float %70, float* %wB, align 4
  %71 = load float, float* %wA, align 4
  %72 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %71, %struct.b2Vec2* dereferenceable(8) %axis)
  %73 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %4)
  %75 = load float, float* %wB, align 4
  %76 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %75, %struct.b2Vec2* dereferenceable(8) %rB)
  %77 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %8)
  %79 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %vA)
  %81 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = load float, float* %wA, align 4
  %83 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %82, %struct.b2Vec2* dereferenceable(8) %rA)
  %84 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %83, <2 x float>* %84, align 4
  %85 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %9)
  %86 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  %87 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %axis, %struct.b2Vec2* dereferenceable(8) %5)
  %88 = fadd float %74, %87
  store float %88, float* %speed, align 4
  %89 = load float, float* %speed, align 4
  ret float %89
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK16b2PrismaticJoint14IsLimitEnabledEv(%class.b2PrismaticJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 12
  %4 = load i8, i8* %3, align 4
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint11EnableLimitEb(%class.b2PrismaticJoint* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca i8, align 1
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 12
  %9 = load i8, i8* %8, align 4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %7, %11
  br i1 %12, label %13, label %26

; <label>:13                                      ; preds = %0
  %14 = bitcast %class.b2PrismaticJoint* %4 to %class.b2Joint*
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 6
  %16 = load %class.b2Body*, %class.b2Body** %15, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %16, i1 zeroext true)
  %17 = bitcast %class.b2PrismaticJoint* %4 to %class.b2Joint*
  %18 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %17, i32 0, i32 7
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %19, i1 zeroext true)
  %20 = load i8, i8* %2, align 1
  %21 = trunc i8 %20 to i1
  %22 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 12
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 4
  %24 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 6
  %25 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %24, i32 0, i32 2
  store float 0.000000e+00, float* %25, align 4
  br label %26

; <label>:26                                      ; preds = %13, %0
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK16b2PrismaticJoint13GetLowerLimitEv(%class.b2PrismaticJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 8
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: nounwind uwtable
define float @_ZNK16b2PrismaticJoint13GetUpperLimitEv(%class.b2PrismaticJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 9
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint9SetLimitsEff(%class.b2PrismaticJoint* %this, float %lower, float %upper) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store float %lower, float* %2, align 4
  store float %upper, float* %3, align 4
  %4 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %5 = load float, float* %2, align 4
  %6 = load float, float* %3, align 4
  %7 = fcmp ole float %5, %6
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1.70, i32 0, i32 0), i32 571, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN16b2PrismaticJoint9SetLimitsEff, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = load float, float* %2, align 4
  %13 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 8
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %12, %14
  br i1 %15, label %21, label %16

; <label>:16                                      ; preds = %11
  %17 = load float, float* %3, align 4
  %18 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 9
  %19 = load float, float* %18, align 8
  %20 = fcmp une float %17, %19
  br i1 %20, label %21, label %34

; <label>:21                                      ; preds = %16, %11
  %22 = bitcast %class.b2PrismaticJoint* %4 to %class.b2Joint*
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %22, i32 0, i32 6
  %24 = load %class.b2Body*, %class.b2Body** %23, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %24, i1 zeroext true)
  %25 = bitcast %class.b2PrismaticJoint* %4 to %class.b2Joint*
  %26 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %25, i32 0, i32 7
  %27 = load %class.b2Body*, %class.b2Body** %26, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %27, i1 zeroext true)
  %28 = load float, float* %2, align 4
  %29 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 8
  store float %28, float* %29, align 4
  %30 = load float, float* %3, align 4
  %31 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 9
  store float %30, float* %31, align 8
  %32 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 6
  %33 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %32, i32 0, i32 2
  store float 0.000000e+00, float* %33, align 4
  br label %34

; <label>:34                                      ; preds = %21, %16
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK16b2PrismaticJoint14IsMotorEnabledEv(%class.b2PrismaticJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %2 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %2, i32 0, i32 13
  %4 = load i8, i8* %3, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint11EnableMotorEb(%class.b2PrismaticJoint* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca i8, align 1
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %5 = bitcast %class.b2PrismaticJoint* %4 to %class.b2Joint*
  %6 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %5, i32 0, i32 6
  %7 = load %class.b2Body*, %class.b2Body** %6, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %7, i1 zeroext true)
  %8 = bitcast %class.b2PrismaticJoint* %4 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %10, i1 zeroext true)
  %11 = load i8, i8* %2, align 1
  %12 = trunc i8 %11 to i1
  %13 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %4, i32 0, i32 13
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 1
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint13SetMotorSpeedEf(%class.b2PrismaticJoint* %this, float %speed) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store float %speed, float* %2, align 4
  %3 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %4 = bitcast %class.b2PrismaticJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %6, i1 zeroext true)
  %7 = bitcast %class.b2PrismaticJoint* %3 to %class.b2Joint*
  %8 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %7, i32 0, i32 7
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %9, i1 zeroext true)
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %3, i32 0, i32 11
  store float %10, float* %11, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2PrismaticJoint16SetMaxMotorForceEf(%class.b2PrismaticJoint* %this, float %force) #0 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store float %force, float* %2, align 4
  %3 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %4 = bitcast %class.b2PrismaticJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %6, i1 zeroext true)
  %7 = bitcast %class.b2PrismaticJoint* %3 to %class.b2Joint*
  %8 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %7, i32 0, i32 7
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %9, i1 zeroext true)
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %3, i32 0, i32 10
  store float %10, float* %11, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK16b2PrismaticJoint13GetMotorForceEf(%class.b2PrismaticJoint* %this, float %inv_dt) #2 align 2 {
  %1 = alloca %class.b2PrismaticJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2PrismaticJoint* %this, %class.b2PrismaticJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2PrismaticJoint*, %class.b2PrismaticJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2PrismaticJoint, %class.b2PrismaticJoint* %3, i32 0, i32 7
  %6 = load float, float* %5, align 8
  %7 = fmul float %4, %6
  ret float %7
}

; Function Attrs: uwtable
define void @_ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f(%struct.b2PulleyJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB, %struct.b2Vec2* dereferenceable(8) %groundA, %struct.b2Vec2* dereferenceable(8) %groundB, %struct.b2Vec2* dereferenceable(8) %anchorA, %struct.b2Vec2* dereferenceable(8) %anchorB, float %r) #0 align 2 {
  %1 = alloca %struct.b2PulleyJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2*, align 8
  %6 = alloca %struct.b2Vec2*, align 8
  %7 = alloca %struct.b2Vec2*, align 8
  %8 = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %dA = alloca %struct.b2Vec2, align 4
  %dB = alloca %struct.b2Vec2, align 4
  store %struct.b2PulleyJointDef* %this, %struct.b2PulleyJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %groundA, %struct.b2Vec2** %4, align 8
  store %struct.b2Vec2* %groundB, %struct.b2Vec2** %5, align 8
  store %struct.b2Vec2* %anchorA, %struct.b2Vec2** %6, align 8
  store %struct.b2Vec2* %anchorB, %struct.b2Vec2** %7, align 8
  store float %r, float* %8, align 4
  %11 = load %struct.b2PulleyJointDef*, %struct.b2PulleyJointDef** %1, align 8
  %12 = load %class.b2Body*, %class.b2Body** %2, align 8
  %13 = bitcast %struct.b2PulleyJointDef* %11 to %struct.b2JointDef*
  %14 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %13, i32 0, i32 3
  store %class.b2Body* %12, %class.b2Body** %14, align 8
  %15 = load %class.b2Body*, %class.b2Body** %3, align 8
  %16 = bitcast %struct.b2PulleyJointDef* %11 to %struct.b2JointDef*
  %17 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %16, i32 0, i32 4
  store %class.b2Body* %15, %class.b2Body** %17, align 8
  %18 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 1
  %19 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %20 = bitcast %struct.b2Vec2* %18 to i8*
  %21 = bitcast %struct.b2Vec2* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 4, i1 false)
  %22 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 2
  %23 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %24 = bitcast %struct.b2Vec2* %22 to i8*
  %25 = bitcast %struct.b2Vec2* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false)
  %26 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 3
  %27 = bitcast %struct.b2PulleyJointDef* %11 to %struct.b2JointDef*
  %28 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %27, i32 0, i32 3
  %29 = load %class.b2Body*, %class.b2Body** %28, align 8
  %30 = load %struct.b2Vec2*, %struct.b2Vec2** %6, align 8
  %31 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %29, %struct.b2Vec2* dereferenceable(8) %30)
  %32 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %31, <2 x float>* %32, align 4
  %33 = bitcast %struct.b2Vec2* %26 to i8*
  %34 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false)
  %35 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 4
  %36 = bitcast %struct.b2PulleyJointDef* %11 to %struct.b2JointDef*
  %37 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %36, i32 0, i32 4
  %38 = load %class.b2Body*, %class.b2Body** %37, align 8
  %39 = load %struct.b2Vec2*, %struct.b2Vec2** %7, align 8
  %40 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %38, %struct.b2Vec2* dereferenceable(8) %39)
  %41 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %40, <2 x float>* %41, align 4
  %42 = bitcast %struct.b2Vec2* %35 to i8*
  %43 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = load %struct.b2Vec2*, %struct.b2Vec2** %6, align 8
  %45 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %46 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %44, %struct.b2Vec2* dereferenceable(8) %45)
  %47 = bitcast %struct.b2Vec2* %dA to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 4
  %48 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %dA)
  %49 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 5
  store float %48, float* %49, align 4
  %50 = load %struct.b2Vec2*, %struct.b2Vec2** %7, align 8
  %51 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %52 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %50, %struct.b2Vec2* dereferenceable(8) %51)
  %53 = bitcast %struct.b2Vec2* %dB to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %dB)
  %55 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 6
  store float %54, float* %55, align 8
  %56 = load float, float* %8, align 4
  %57 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 7
  store float %56, float* %57, align 4
  %58 = getelementptr inbounds %struct.b2PulleyJointDef, %struct.b2PulleyJointDef* %11, i32 0, i32 7
  %59 = load float, float* %58, align 4
  %60 = fcmp ogt float %59, 0x3E80000000000000
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %0
  br label %64

; <label>:62                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.86, i32 0, i32 0), i32 51, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @__PRETTY_FUNCTION__._ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64                                      ; preds = %63, %61
  ret void
}

; Function Attrs: nounwind uwtable
define <2 x float> @_ZNK13b2PulleyJoint16GetGroundAnchorAEv(%class.b2PulleyJoint* %this) #2 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %2, align 8
  %3 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %2, align 8
  %4 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %3, i32 0, i32 1
  %5 = bitcast %struct.b2Vec2* %1 to i8*
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false)
  %7 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  ret <2 x float> %8
}

; Function Attrs: nounwind uwtable
define <2 x float> @_ZNK13b2PulleyJoint16GetGroundAnchorBEv(%class.b2PulleyJoint* %this) #2 align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %2, align 8
  %3 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %2, align 8
  %4 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %3, i32 0, i32 2
  %5 = bitcast %struct.b2Vec2* %1 to i8*
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false)
  %7 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  ret <2 x float> %8
}

; Function Attrs: nounwind uwtable
define float @_ZNK13b2PulleyJoint10GetLengthAEv(%class.b2PulleyJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 3
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: nounwind uwtable
define float @_ZNK13b2PulleyJoint10GetLengthBEv(%class.b2PulleyJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 4
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: nounwind uwtable
define float @_ZNK13b2PulleyJoint8GetRatioEv(%class.b2PulleyJoint* %this) #2 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 8
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: uwtable
define float @_ZNK13b2PulleyJoint17GetCurrentLengthAEv(%class.b2PulleyJoint* %this) #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %p = alloca %struct.b2Vec2, align 4
  %s = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 5
  %7 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %p to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 1
  %10 = bitcast %struct.b2Vec2* %s to i8*
  %11 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p, %struct.b2Vec2* dereferenceable(8) %s)
  %13 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %d)
  ret float %14
}

; Function Attrs: uwtable
define float @_ZNK13b2PulleyJoint17GetCurrentLengthBEv(%class.b2PulleyJoint* %this) #0 align 2 {
  %1 = alloca %class.b2PulleyJoint*, align 8
  %p = alloca %struct.b2Vec2, align 4
  %s = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  store %class.b2PulleyJoint* %this, %class.b2PulleyJoint** %1, align 8
  %2 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %1, align 8
  %3 = bitcast %class.b2PulleyJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 7
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 6
  %7 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %p to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = getelementptr inbounds %class.b2PulleyJoint, %class.b2PulleyJoint* %2, i32 0, i32 2
  %10 = bitcast %struct.b2Vec2* %s to i8*
  %11 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p, %struct.b2Vec2* dereferenceable(8) %s)
  %13 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %d)
  ret float %14
}

; Function Attrs: uwtable
define void @_ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2(%struct.b2RevoluteJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB, %struct.b2Vec2* dereferenceable(8) %anchor) #0 align 2 {
  %1 = alloca %struct.b2RevoluteJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %struct.b2RevoluteJointDef* %this, %struct.b2RevoluteJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %anchor, %struct.b2Vec2** %4, align 8
  %7 = load %struct.b2RevoluteJointDef*, %struct.b2RevoluteJointDef** %1, align 8
  %8 = load %class.b2Body*, %class.b2Body** %2, align 8
  %9 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  %10 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %9, i32 0, i32 3
  store %class.b2Body* %8, %class.b2Body** %10, align 8
  %11 = load %class.b2Body*, %class.b2Body** %3, align 8
  %12 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  %13 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %12, i32 0, i32 4
  store %class.b2Body* %11, %class.b2Body** %13, align 8
  %14 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %7, i32 0, i32 1
  %15 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  %16 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %15, i32 0, i32 3
  %17 = load %class.b2Body*, %class.b2Body** %16, align 8
  %18 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %19 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %17, %struct.b2Vec2* dereferenceable(8) %18)
  %20 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %19, <2 x float>* %20, align 4
  %21 = bitcast %struct.b2Vec2* %14 to i8*
  %22 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %7, i32 0, i32 2
  %24 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  %25 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %24, i32 0, i32 4
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %28 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %26, %struct.b2Vec2* dereferenceable(8) %27)
  %29 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = bitcast %struct.b2Vec2* %23 to i8*
  %31 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  %32 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  %33 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %32, i32 0, i32 4
  %34 = load %class.b2Body*, %class.b2Body** %33, align 8
  %35 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %34)
  %36 = bitcast %struct.b2RevoluteJointDef* %7 to %struct.b2JointDef*
  %37 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %36, i32 0, i32 3
  %38 = load %class.b2Body*, %class.b2Body** %37, align 8
  %39 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %38)
  %40 = fsub float %35, %39
  %41 = getelementptr inbounds %struct.b2RevoluteJointDef, %struct.b2RevoluteJointDef* %7, i32 0, i32 3
  store float %40, float* %41, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2RevoluteJoint13GetJointAngleEv(%class.b2RevoluteJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  store %class.b2Body* %5, %class.b2Body** %bA, align 8
  %6 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %7 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %6, i32 0, i32 7
  %8 = load %class.b2Body*, %class.b2Body** %7, align 8
  store %class.b2Body* %8, %class.b2Body** %bB, align 8
  %9 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %9, i32 0, i32 4
  %11 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %10, i32 0, i32 4
  %12 = load float, float* %11, align 4
  %13 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %13, i32 0, i32 4
  %15 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %14, i32 0, i32 4
  %16 = load float, float* %15, align 4
  %17 = fsub float %12, %16
  %18 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 9
  %19 = load float, float* %18, align 8
  %20 = fsub float %17, %19
  ret float %20
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2RevoluteJoint13GetJointSpeedEv(%class.b2RevoluteJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  store %class.b2Body* %5, %class.b2Body** %bA, align 8
  %6 = bitcast %class.b2RevoluteJoint* %2 to %class.b2Joint*
  %7 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %6, i32 0, i32 7
  %8 = load %class.b2Body*, %class.b2Body** %7, align 8
  store %class.b2Body* %8, %class.b2Body** %bB, align 8
  %9 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %9, i32 0, i32 6
  %11 = load float, float* %10, align 8
  %12 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %12, i32 0, i32 6
  %14 = load float, float* %13, align 8
  %15 = fsub float %11, %14
  ret float %15
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK15b2RevoluteJoint14IsMotorEnabledEv(%class.b2RevoluteJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 5
  %4 = load i8, i8* %3, align 8
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint11EnableMotorEb(%class.b2RevoluteJoint* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca i8, align 1
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %5 = bitcast %class.b2RevoluteJoint* %4 to %class.b2Joint*
  %6 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %5, i32 0, i32 6
  %7 = load %class.b2Body*, %class.b2Body** %6, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %7, i1 zeroext true)
  %8 = bitcast %class.b2RevoluteJoint* %4 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %10, i1 zeroext true)
  %11 = load i8, i8* %2, align 1
  %12 = trunc i8 %11 to i1
  %13 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 5
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2RevoluteJoint14GetMotorTorqueEf(%class.b2RevoluteJoint* %this, float %inv_dt) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %3, i32 0, i32 4
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  ret float %7
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint13SetMotorSpeedEf(%class.b2RevoluteJoint* %this, float %speed) #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store float %speed, float* %2, align 4
  %3 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %4 = bitcast %class.b2RevoluteJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %6, i1 zeroext true)
  %7 = bitcast %class.b2RevoluteJoint* %3 to %class.b2Joint*
  %8 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %7, i32 0, i32 7
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %9, i1 zeroext true)
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %3, i32 0, i32 7
  store float %10, float* %11, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint17SetMaxMotorTorqueEf(%class.b2RevoluteJoint* %this, float %torque) #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store float %torque, float* %2, align 4
  %3 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %4 = bitcast %class.b2RevoluteJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %6, i1 zeroext true)
  %7 = bitcast %class.b2RevoluteJoint* %3 to %class.b2Joint*
  %8 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %7, i32 0, i32 7
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %9, i1 zeroext true)
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %3, i32 0, i32 6
  store float %10, float* %11, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK15b2RevoluteJoint14IsLimitEnabledEv(%class.b2RevoluteJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 8
  %4 = load i8, i8* %3, align 4
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint11EnableLimitEb(%class.b2RevoluteJoint* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca i8, align 1
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 8
  %9 = load i8, i8* %8, align 4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %7, %11
  br i1 %12, label %13, label %26

; <label>:13                                      ; preds = %0
  %14 = bitcast %class.b2RevoluteJoint* %4 to %class.b2Joint*
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 6
  %16 = load %class.b2Body*, %class.b2Body** %15, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %16, i1 zeroext true)
  %17 = bitcast %class.b2RevoluteJoint* %4 to %class.b2Joint*
  %18 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %17, i32 0, i32 7
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %19, i1 zeroext true)
  %20 = load i8, i8* %2, align 1
  %21 = trunc i8 %20 to i1
  %22 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 8
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 4
  %24 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 3
  %25 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %24, i32 0, i32 2
  store float 0.000000e+00, float* %25, align 8
  br label %26

; <label>:26                                      ; preds = %13, %0
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2RevoluteJoint13GetLowerLimitEv(%class.b2RevoluteJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 10
  %4 = load float, float* %3, align 4
  ret float %4
}

; Function Attrs: nounwind uwtable
define float @_ZNK15b2RevoluteJoint13GetUpperLimitEv(%class.b2RevoluteJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  %2 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %2, i32 0, i32 11
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: uwtable
define void @_ZN15b2RevoluteJoint9SetLimitsEff(%class.b2RevoluteJoint* %this, float %lower, float %upper) #0 align 2 {
  %1 = alloca %class.b2RevoluteJoint*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  store %class.b2RevoluteJoint* %this, %class.b2RevoluteJoint** %1, align 8
  store float %lower, float* %2, align 4
  store float %upper, float* %3, align 4
  %4 = load %class.b2RevoluteJoint*, %class.b2RevoluteJoint** %1, align 8
  %5 = load float, float* %2, align 4
  %6 = load float, float* %3, align 4
  %7 = fcmp ole float %5, %6
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.105, i32 0, i32 0), i32 471, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN15b2RevoluteJoint9SetLimitsEff, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = load float, float* %2, align 4
  %13 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 10
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %12, %14
  br i1 %15, label %21, label %16

; <label>:16                                      ; preds = %11
  %17 = load float, float* %3, align 4
  %18 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 11
  %19 = load float, float* %18, align 8
  %20 = fcmp une float %17, %19
  br i1 %20, label %21, label %34

; <label>:21                                      ; preds = %16, %11
  %22 = bitcast %class.b2RevoluteJoint* %4 to %class.b2Joint*
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %22, i32 0, i32 6
  %24 = load %class.b2Body*, %class.b2Body** %23, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %24, i1 zeroext true)
  %25 = bitcast %class.b2RevoluteJoint* %4 to %class.b2Joint*
  %26 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %25, i32 0, i32 7
  %27 = load %class.b2Body*, %class.b2Body** %26, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %27, i1 zeroext true)
  %28 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 3
  %29 = getelementptr inbounds %struct.b2Vec3, %struct.b2Vec3* %28, i32 0, i32 2
  store float 0.000000e+00, float* %29, align 8
  %30 = load float, float* %2, align 4
  %31 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 10
  store float %30, float* %31, align 4
  %32 = load float, float* %3, align 4
  %33 = getelementptr inbounds %class.b2RevoluteJoint, %class.b2RevoluteJoint* %4, i32 0, i32 11
  store float %32, float* %33, align 8
  br label %34

; <label>:34                                      ; preds = %21, %16
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK11b2RopeJoint12GetMaxLengthEv(%class.b2RopeJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  %2 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 3
  %4 = load float, float* %3, align 8
  ret float %4
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK11b2RopeJoint13GetLimitStateEv(%class.b2RopeJoint* %this) #2 align 2 {
  %1 = alloca %class.b2RopeJoint*, align 8
  store %class.b2RopeJoint* %this, %class.b2RopeJoint** %1, align 8
  %2 = load %class.b2RopeJoint*, %class.b2RopeJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2RopeJoint, %class.b2RopeJoint* %2, i32 0, i32 18
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: uwtable
define void @_ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2(%struct.b2DistanceJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB, %struct.b2Vec2* dereferenceable(8) %anchor) #0 align 2 {
  %1 = alloca %struct.b2DistanceJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %struct.b2DistanceJointDef* %this, %struct.b2DistanceJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %anchor, %struct.b2Vec2** %4, align 8
  %7 = load %struct.b2DistanceJointDef*, %struct.b2DistanceJointDef** %1, align 8
  %8 = load %class.b2Body*, %class.b2Body** %2, align 8
  %9 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  %10 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %9, i32 0, i32 3
  store %class.b2Body* %8, %class.b2Body** %10, align 8
  %11 = load %class.b2Body*, %class.b2Body** %3, align 8
  %12 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  %13 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %12, i32 0, i32 4
  store %class.b2Body* %11, %class.b2Body** %13, align 8
  %14 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %7, i32 0, i32 1
  %15 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  %16 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %15, i32 0, i32 3
  %17 = load %class.b2Body*, %class.b2Body** %16, align 8
  %18 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %19 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %17, %struct.b2Vec2* dereferenceable(8) %18)
  %20 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %19, <2 x float>* %20, align 4
  %21 = bitcast %struct.b2Vec2* %14 to i8*
  %22 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %7, i32 0, i32 2
  %24 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  %25 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %24, i32 0, i32 4
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %28 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %26, %struct.b2Vec2* dereferenceable(8) %27)
  %29 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = bitcast %struct.b2Vec2* %23 to i8*
  %31 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  %32 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  %33 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %32, i32 0, i32 4
  %34 = load %class.b2Body*, %class.b2Body** %33, align 8
  %35 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %34)
  %36 = bitcast %struct.b2DistanceJointDef* %7 to %struct.b2JointDef*
  %37 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %36, i32 0, i32 3
  %38 = load %class.b2Body*, %class.b2Body** %37, align 8
  %39 = call float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %38)
  %40 = fsub float %35, %39
  %41 = getelementptr inbounds %struct.b2DistanceJointDef, %struct.b2DistanceJointDef* %7, i32 0, i32 3
  store float %40, float* %41, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_(%struct.b2WheelJointDef* %this, %class.b2Body* %bA, %class.b2Body* %bB, %struct.b2Vec2* dereferenceable(8) %anchor, %struct.b2Vec2* dereferenceable(8) %axis) #0 align 2 {
  %1 = alloca %struct.b2WheelJointDef*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca %struct.b2Vec2*, align 8
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %struct.b2WheelJointDef* %this, %struct.b2WheelJointDef** %1, align 8
  store %class.b2Body* %bA, %class.b2Body** %2, align 8
  store %class.b2Body* %bB, %class.b2Body** %3, align 8
  store %struct.b2Vec2* %anchor, %struct.b2Vec2** %4, align 8
  store %struct.b2Vec2* %axis, %struct.b2Vec2** %5, align 8
  %9 = load %struct.b2WheelJointDef*, %struct.b2WheelJointDef** %1, align 8
  %10 = load %class.b2Body*, %class.b2Body** %2, align 8
  %11 = bitcast %struct.b2WheelJointDef* %9 to %struct.b2JointDef*
  %12 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %11, i32 0, i32 3
  store %class.b2Body* %10, %class.b2Body** %12, align 8
  %13 = load %class.b2Body*, %class.b2Body** %3, align 8
  %14 = bitcast %struct.b2WheelJointDef* %9 to %struct.b2JointDef*
  %15 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %14, i32 0, i32 4
  store %class.b2Body* %13, %class.b2Body** %15, align 8
  %16 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %9, i32 0, i32 1
  %17 = bitcast %struct.b2WheelJointDef* %9 to %struct.b2JointDef*
  %18 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %17, i32 0, i32 3
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  %20 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %21 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %19, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = bitcast %struct.b2Vec2* %16 to i8*
  %24 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false)
  %25 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %9, i32 0, i32 2
  %26 = bitcast %struct.b2WheelJointDef* %9 to %struct.b2JointDef*
  %27 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %26, i32 0, i32 4
  %28 = load %class.b2Body*, %class.b2Body** %27, align 8
  %29 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %30 = call <2 x float> @_ZNK6b2Body13GetLocalPointERK6b2Vec2(%class.b2Body* %28, %struct.b2Vec2* dereferenceable(8) %29)
  %31 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 4
  %32 = bitcast %struct.b2Vec2* %25 to i8*
  %33 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = getelementptr inbounds %struct.b2WheelJointDef, %struct.b2WheelJointDef* %9, i32 0, i32 3
  %35 = bitcast %struct.b2WheelJointDef* %9 to %struct.b2JointDef*
  %36 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %35, i32 0, i32 3
  %37 = load %class.b2Body*, %class.b2Body** %36, align 8
  %38 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %39 = call <2 x float> @_ZNK6b2Body14GetLocalVectorERK6b2Vec2(%class.b2Body* %37, %struct.b2Vec2* dereferenceable(8) %38)
  %40 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %39, <2 x float>* %40, align 4
  %41 = bitcast %struct.b2Vec2* %34 to i8*
  %42 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define float @_ZNK12b2WheelJoint19GetJointTranslationEv(%class.b2WheelJoint* %this) #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  %pA = alloca %struct.b2Vec2, align 4
  %pB = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %axis = alloca %struct.b2Vec2, align 4
  %translation = alloca float, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %2 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %3 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  store %class.b2Body* %5, %class.b2Body** %bA, align 8
  %6 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %7 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %6, i32 0, i32 7
  %8 = load %class.b2Body*, %class.b2Body** %7, align 8
  store %class.b2Body* %8, %class.b2Body** %bB, align 8
  %9 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %10 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 3
  %11 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %9, %struct.b2Vec2* dereferenceable(8) %10)
  %12 = bitcast %struct.b2Vec2* %pA to <2 x float>*
  store <2 x float> %11, <2 x float>* %12, align 4
  %13 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %14 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 4
  %15 = call <2 x float> @_ZNK6b2Body13GetWorldPointERK6b2Vec2(%class.b2Body* %13, %struct.b2Vec2* dereferenceable(8) %14)
  %16 = bitcast %struct.b2Vec2* %pB to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 4
  %17 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pB, %struct.b2Vec2* dereferenceable(8) %pA)
  %18 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 4
  %19 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %20 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 5
  %21 = call <2 x float> @_ZNK6b2Body14GetWorldVectorERK6b2Vec2(%class.b2Body* %19, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %axis to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %axis)
  store float %23, float* %translation, align 4
  %24 = load float, float* %translation, align 4
  ret float %24
}

; Function Attrs: uwtable
define float @_ZNK12b2WheelJoint19GetJointLinearSpeedEv(%class.b2WheelJoint* %this) #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  %rA = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %axis = alloca %struct.b2Vec2, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %wB = alloca float, align 4
  %speed = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %10 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %11 = bitcast %class.b2WheelJoint* %10 to %class.b2Joint*
  %12 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %11, i32 0, i32 6
  %13 = load %class.b2Body*, %class.b2Body** %12, align 8
  store %class.b2Body* %13, %class.b2Body** %bA, align 8
  %14 = bitcast %class.b2WheelJoint* %10 to %class.b2Joint*
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 7
  %16 = load %class.b2Body*, %class.b2Body** %15, align 8
  store %class.b2Body* %16, %class.b2Body** %bB, align 8
  %17 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %18 = getelementptr inbounds %class.b2Body, %class.b2Body* %17, i32 0, i32 3
  %19 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %18, i32 0, i32 1
  %20 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 3
  %21 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %21, i32 0, i32 4
  %23 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %22, i32 0, i32 0
  %24 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %23)
  %25 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %24, <2 x float>* %25, align 4
  %26 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %2)
  %27 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %26, <2 x float>* %27, align 4
  %28 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %28, i32 0, i32 3
  %30 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %29, i32 0, i32 1
  %31 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 4
  %32 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %32, i32 0, i32 4
  %34 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %33, i32 0, i32 0
  %35 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %31, %struct.b2Vec2* dereferenceable(8) %34)
  %36 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %35, <2 x float>* %36, align 4
  %37 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %30, %struct.b2Vec2* dereferenceable(8) %3)
  %38 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 4
  %39 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %39, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %40, i32 0, i32 2
  %42 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %41, %struct.b2Vec2* dereferenceable(8) %rA)
  %43 = bitcast %struct.b2Vec2* %p1 to <2 x float>*
  store <2 x float> %42, <2 x float>* %43, align 4
  %44 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %45 = getelementptr inbounds %class.b2Body, %class.b2Body* %44, i32 0, i32 4
  %46 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %45, i32 0, i32 2
  %47 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %46, %struct.b2Vec2* dereferenceable(8) %rB)
  %48 = bitcast %struct.b2Vec2* %p2 to <2 x float>*
  store <2 x float> %47, <2 x float>* %48, align 4
  %49 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %50 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %52 = getelementptr inbounds %class.b2Body, %class.b2Body* %51, i32 0, i32 3
  %53 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %52, i32 0, i32 1
  %54 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %10, i32 0, i32 5
  %55 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %53, %struct.b2Vec2* dereferenceable(8) %54)
  %56 = bitcast %struct.b2Vec2* %axis to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 4
  %57 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %58 = getelementptr inbounds %class.b2Body, %class.b2Body* %57, i32 0, i32 5
  %59 = bitcast %struct.b2Vec2* %vA to i8*
  %60 = bitcast %struct.b2Vec2* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 4, i1 false)
  %61 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %61, i32 0, i32 5
  %63 = bitcast %struct.b2Vec2* %vB to i8*
  %64 = bitcast %struct.b2Vec2* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 4, i1 false)
  %65 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %66 = getelementptr inbounds %class.b2Body, %class.b2Body* %65, i32 0, i32 6
  %67 = load float, float* %66, align 8
  store float %67, float* %wA, align 4
  %68 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %69 = getelementptr inbounds %class.b2Body, %class.b2Body* %68, i32 0, i32 6
  %70 = load float, float* %69, align 8
  store float %70, float* %wB, align 4
  %71 = load float, float* %wA, align 4
  %72 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %71, %struct.b2Vec2* dereferenceable(8) %axis)
  %73 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d, %struct.b2Vec2* dereferenceable(8) %4)
  %75 = load float, float* %wB, align 4
  %76 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %75, %struct.b2Vec2* dereferenceable(8) %rB)
  %77 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %8)
  %79 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %vA)
  %81 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = load float, float* %wA, align 4
  %83 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %82, %struct.b2Vec2* dereferenceable(8) %rA)
  %84 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %83, <2 x float>* %84, align 4
  %85 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %9)
  %86 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  %87 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %axis, %struct.b2Vec2* dereferenceable(8) %5)
  %88 = fadd float %74, %87
  store float %88, float* %speed, align 4
  %89 = load float, float* %speed, align 4
  ret float %89
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2WheelJoint13GetJointAngleEv(%class.b2WheelJoint* %this) #2 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %2 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %3 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  store %class.b2Body* %5, %class.b2Body** %bA, align 8
  %6 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %7 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %6, i32 0, i32 7
  %8 = load %class.b2Body*, %class.b2Body** %7, align 8
  store %class.b2Body* %8, %class.b2Body** %bB, align 8
  %9 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %9, i32 0, i32 4
  %11 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %10, i32 0, i32 4
  %12 = load float, float* %11, align 4
  %13 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %13, i32 0, i32 4
  %15 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %14, i32 0, i32 4
  %16 = load float, float* %15, align 4
  %17 = fsub float %12, %16
  ret float %17
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2WheelJoint20GetJointAngularSpeedEv(%class.b2WheelJoint* %this) #2 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %wA = alloca float, align 4
  %wB = alloca float, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %2 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %3 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %4 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %3, i32 0, i32 6
  %5 = load %class.b2Body*, %class.b2Body** %4, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 6
  %7 = load float, float* %6, align 8
  store float %7, float* %wA, align 4
  %8 = bitcast %class.b2WheelJoint* %2 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %10, i32 0, i32 6
  %12 = load float, float* %11, align 8
  store float %12, float* %wB, align 4
  %13 = load float, float* %wB, align 4
  %14 = load float, float* %wA, align 4
  %15 = fsub float %13, %14
  ret float %15
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZNK12b2WheelJoint14IsMotorEnabledEv(%class.b2WheelJoint* %this) #2 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %2 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %3 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %2, i32 0, i32 12
  %4 = load i8, i8* %3, align 4
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJoint11EnableMotorEb(%class.b2WheelJoint* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca i8, align 1
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %5 = bitcast %class.b2WheelJoint* %4 to %class.b2Joint*
  %6 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %5, i32 0, i32 6
  %7 = load %class.b2Body*, %class.b2Body** %6, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %7, i1 zeroext true)
  %8 = bitcast %class.b2WheelJoint* %4 to %class.b2Joint*
  %9 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %8, i32 0, i32 7
  %10 = load %class.b2Body*, %class.b2Body** %9, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %10, i1 zeroext true)
  %11 = load i8, i8* %2, align 1
  %12 = trunc i8 %11 to i1
  %13 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %4, i32 0, i32 12
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJoint13SetMotorSpeedEf(%class.b2WheelJoint* %this, float %speed) #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store float %speed, float* %2, align 4
  %3 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %4 = bitcast %class.b2WheelJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %6, i1 zeroext true)
  %7 = bitcast %class.b2WheelJoint* %3 to %class.b2Joint*
  %8 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %7, i32 0, i32 7
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %9, i1 zeroext true)
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %3, i32 0, i32 11
  store float %10, float* %11, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2WheelJoint17SetMaxMotorTorqueEf(%class.b2WheelJoint* %this, float %torque) #0 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store float %torque, float* %2, align 4
  %3 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %4 = bitcast %class.b2WheelJoint* %3 to %class.b2Joint*
  %5 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %4, i32 0, i32 6
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %6, i1 zeroext true)
  %7 = bitcast %class.b2WheelJoint* %3 to %class.b2Joint*
  %8 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %7, i32 0, i32 7
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %9, i1 zeroext true)
  %10 = load float, float* %2, align 4
  %11 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %3, i32 0, i32 10
  store float %10, float* %11, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZNK12b2WheelJoint14GetMotorTorqueEf(%class.b2WheelJoint* %this, float %inv_dt) #2 align 2 {
  %1 = alloca %class.b2WheelJoint*, align 8
  %2 = alloca float, align 4
  store %class.b2WheelJoint* %this, %class.b2WheelJoint** %1, align 8
  store float %inv_dt, float* %2, align 4
  %3 = load %class.b2WheelJoint*, %class.b2WheelJoint** %1, align 8
  %4 = load float, float* %2, align 4
  %5 = getelementptr inbounds %class.b2WheelJoint, %class.b2WheelJoint* %3, i32 0, i32 8
  %6 = load float, float* %5, align 4
  %7 = fmul float %4, %6
  ret float %7
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32, %class.b2Fixture* %fixtureB, i32, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2Fixture*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %3, align 8
  store i32 %0, i32* %4, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %7, align 8
  %8 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %7, align 8
  %9 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %8, i32 208)
  store i8* %9, i8** %mem, align 8
  %10 = load i8*, i8** %mem, align 8
  %11 = bitcast i8* %10 to %class.b2CircleContact*
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load %class.b2Fixture*, %class.b2Fixture** %5, align 8
  call void @_ZN15b2CircleContactC1EP9b2FixtureS1_(%class.b2CircleContact* %11, %class.b2Fixture* %12, %class.b2Fixture* %13)
  %14 = bitcast %class.b2CircleContact* %11 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN15b2CircleContactC2EP9b2FixtureS1_(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, %class.b2Fixture* %fixtureB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  %6 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %7 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %8 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %9 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %7, %class.b2Fixture* %8, i32 0, %class.b2Fixture* %9, i32 0)
  %10 = bitcast %class.b2CircleContact* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV15b2CircleContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %11, i32 0, i32 7
  %13 = load %class.b2Fixture*, %class.b2Fixture** %12, align 8
  %14 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %13)
          to label %15 unwind label %19

; <label>:15                                      ; preds = %0
  %16 = icmp eq i32 %14, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %15
  br label %25

; <label>:18                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.146, i32 0, i32 0), i32 43, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN15b2CircleContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable

; <label>:19                                      ; preds = %25, %0
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %4, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %5, align 4
  %23 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %23)
          to label %36 unwind label %42
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %17
  %26 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %27 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %26, i32 0, i32 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %27, align 8
  %29 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %28)
          to label %30 unwind label %19

; <label>:30                                      ; preds = %25
  %31 = icmp eq i32 %29, 0
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %30
  br label %35

; <label>:33                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.147, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.146, i32 0, i32 0), i32 44, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN15b2CircleContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %35

; <label>:35                                      ; preds = %34, %32
  ret void

; <label>:36                                      ; preds = %19
  br label %37

; <label>:37                                      ; preds = %36
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %5, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41

; <label>:42                                      ; preds = %19
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  call void @__clang_call_terminate(i8* %44) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %this, %class.b2Fixture* %fA, i32 %indexA, %class.b2Fixture* %fB, i32 %indexB) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %class.b2Fixture*, align 8
  %5 = alloca i32, align 4
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  store %class.b2Fixture* %fA, %class.b2Fixture** %2, align 8
  store i32 %indexA, i32* %3, align 4
  store %class.b2Fixture* %fB, %class.b2Fixture** %4, align 8
  store i32 %indexB, i32* %5, align 4
  %6 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %7 = bitcast %class.b2Contact* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV9b2Contact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 5
  %9 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 6
  %10 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 11
  call void @_ZN10b2ManifoldC2Ev(%struct.b2Manifold* %10)
  %11 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 1
  store i32 4, i32* %11, align 8
  %12 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %13 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 7
  store %class.b2Fixture* %12, %class.b2Fixture** %13, align 8
  %14 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %15 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 8
  store %class.b2Fixture* %14, %class.b2Fixture** %15, align 8
  %16 = load i32, i32* %3, align 4
  %17 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 9
  store i32 %16, i32* %17, align 8
  %18 = load i32, i32* %5, align 4
  %19 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 10
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 11
  %21 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %20, i32 0, i32 4
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 3
  store %class.b2Contact* null, %class.b2Contact** %22, align 8
  %23 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 4
  store %class.b2Contact* null, %class.b2Contact** %23, align 8
  %24 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 5
  %25 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %24, i32 0, i32 1
  store %class.b2Contact* null, %class.b2Contact** %25, align 8
  %26 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 5
  %27 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %26, i32 0, i32 2
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %27, align 8
  %28 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 5
  %29 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %28, i32 0, i32 3
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %29, align 8
  %30 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 5
  %31 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %30, i32 0, i32 0
  store %class.b2Body* null, %class.b2Body** %31, align 8
  %32 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 6
  %33 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %32, i32 0, i32 1
  store %class.b2Contact* null, %class.b2Contact** %33, align 8
  %34 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 6
  %35 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %34, i32 0, i32 2
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %35, align 8
  %36 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 6
  %37 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %36, i32 0, i32 3
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %37, align 8
  %38 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 6
  %39 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %38, i32 0, i32 0
  store %class.b2Body* null, %class.b2Body** %39, align 8
  %40 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 12
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 7
  %42 = load %class.b2Fixture*, %class.b2Fixture** %41, align 8
  %43 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %42, i32 0, i32 4
  %44 = load float, float* %43, align 8
  %45 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 8
  %46 = load %class.b2Fixture*, %class.b2Fixture** %45, align 8
  %47 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %46, i32 0, i32 4
  %48 = load float, float* %47, align 8
  %49 = call float @_Z13b2MixFrictionff(float %44, float %48)
  %50 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 14
  store float %49, float* %50, align 8
  %51 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 7
  %52 = load %class.b2Fixture*, %class.b2Fixture** %51, align 8
  %53 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %52, i32 0, i32 5
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 8
  %56 = load %class.b2Fixture*, %class.b2Fixture** %55, align 8
  %57 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %56, i32 0, i32 5
  %58 = load float, float* %57, align 4
  %59 = call float @_Z16b2MixRestitutionff(float %54, float %58)
  %60 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 15
  store float %59, float* %60, align 4
  %61 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %6, i32 0, i32 16
  store float 0.000000e+00, float* %61, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN9b2ContactD0Ev(%class.b2Contact* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %4 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2Contact* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2Contact* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN10b2ManifoldC2Ev(%struct.b2Manifold* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2Manifold*, align 8
  store %struct.b2Manifold* %this, %struct.b2Manifold** %1, align 8
  %2 = load %struct.b2Manifold*, %struct.b2Manifold** %1, align 8
  %3 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %2, i32 0, i32 0
  %4 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %4, i64 2
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %struct.b2ManifoldPoint* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN15b2ManifoldPointC2Ev(%struct.b2ManifoldPoint* %7)
  %8 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %7, i64 1
  %9 = icmp eq %struct.b2ManifoldPoint* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
  %12 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %2, i32 0, i32 2
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %12)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2ManifoldPointC2Ev(%struct.b2ManifoldPoint* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2ManifoldPoint*, align 8
  store %struct.b2ManifoldPoint* %this, %struct.b2ManifoldPoint** %1, align 8
  %2 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %1, align 8
  %3 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %2, i32 0, i32 3
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z13b2MixFrictionff(float %friction1, float %friction2) #5 comdat {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  store float %friction1, float* %1, align 4
  store float %friction2, float* %2, align 4
  %3 = load float, float* %1, align 4
  %4 = load float, float* %2, align 4
  %5 = fmul float %3, %4
  %6 = call float @sqrtf(float %5) #3
  ret float %6
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr float @_Z16b2MixRestitutionff(float %restitution1, float %restitution2) #5 comdat {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  store float %restitution1, float* %1, align 4
  store float %restitution2, float* %2, align 4
  %3 = load float, float* %1, align 4
  %4 = load float, float* %2, align 4
  %5 = fcmp ogt float %3, %4
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load float, float* %1, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load float, float* %2, align 4
  br label %10

; <label>:10                                      ; preds = %8, %6
  %11 = phi float [ %7, %6 ], [ %9, %8 ]
  ret float %11
}

; Function Attrs: inlinehint uwtable
define linkonce_odr i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %this) #1 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 3
  %4 = load %class.b2Shape*, %class.b2Shape** %3, align 8
  %5 = call i32 @_ZNK7b2Shape7GetTypeEv(%class.b2Shape* %4)
  ret i32 %5
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK7b2Shape7GetTypeEv(%class.b2Shape* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Shape*, align 8
  store %class.b2Shape* %this, %class.b2Shape** %1, align 8
  %2 = load %class.b2Shape*, %class.b2Shape** %1, align 8
  %3 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: uwtable
define void @_ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Contact19InitializeRegistersEv() #0 align 2 {
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 0, i32 0)
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 2, i32 0)
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 2, i32 2)
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 1, i32 0)
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 1, i32 2)
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 3, i32 0)
  call void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* @_ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, void (%class.b2Contact*, %class.b2BlockAllocator*)* @_ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator, i32 3, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(%class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* %createFcn, void (%class.b2Contact*, %class.b2BlockAllocator*)* %destoryFcn, i32 %type1, i32 %type2) #2 align 2 {
  %1 = alloca %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, align 8
  %2 = alloca void (%class.b2Contact*, %class.b2BlockAllocator*)*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* %createFcn, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %1, align 8
  store void (%class.b2Contact*, %class.b2BlockAllocator*)* %destoryFcn, void (%class.b2Contact*, %class.b2BlockAllocator*)** %2, align 8
  store i32 %type1, i32* %3, align 4
  store i32 %type2, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp sle i32 0, %5
  br i1 %6, label %7, label %11

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 4
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %7
  br label %13

; <label>:11                                      ; preds = %7, %0
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 54, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %13

; <label>:13                                      ; preds = %12, %10
  %14 = load i32, i32* %4, align 4
  %15 = icmp sle i32 0, %14
  br i1 %15, label %16, label %20

; <label>:16                                      ; preds = %13
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 4
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %16
  br label %22

; <label>:20                                      ; preds = %16, %13
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.150, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 55, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %22

; <label>:22                                      ; preds = %21, %19
  %23 = load %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %1, align 8
  %24 = load i32, i32* %4, align 4
  %25 = zext i32 %24 to i64
  %26 = load i32, i32* %3, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %27
  %29 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %28, i64 0, i64 %25
  %30 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %29, i32 0, i32 0
  store %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* %23, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %30, align 8
  %31 = load void (%class.b2Contact*, %class.b2BlockAllocator*)*, void (%class.b2Contact*, %class.b2BlockAllocator*)** %2, align 8
  %32 = load i32, i32* %4, align 4
  %33 = zext i32 %32 to i64
  %34 = load i32, i32* %3, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %35
  %37 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %36, i64 0, i64 %33
  %38 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %37, i32 0, i32 1
  store void (%class.b2Contact*, %class.b2BlockAllocator*)* %31, void (%class.b2Contact*, %class.b2BlockAllocator*)** %38, align 8
  %39 = load i32, i32* %4, align 4
  %40 = zext i32 %39 to i64
  %41 = load i32, i32* %3, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %42
  %44 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %43, i64 0, i64 %40
  %45 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %44, i32 0, i32 2
  store i8 1, i8* %45, align 8
  %46 = load i32, i32* %3, align 4
  %47 = load i32, i32* %4, align 4
  %48 = icmp ne i32 %46, %47
  br i1 %48, label %49, label %73

; <label>:49                                      ; preds = %22
  %50 = load %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %1, align 8
  %51 = load i32, i32* %3, align 4
  %52 = zext i32 %51 to i64
  %53 = load i32, i32* %4, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %54
  %56 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %55, i64 0, i64 %52
  %57 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %56, i32 0, i32 0
  store %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* %50, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %57, align 8
  %58 = load void (%class.b2Contact*, %class.b2BlockAllocator*)*, void (%class.b2Contact*, %class.b2BlockAllocator*)** %2, align 8
  %59 = load i32, i32* %3, align 4
  %60 = zext i32 %59 to i64
  %61 = load i32, i32* %4, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %62
  %64 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %63, i64 0, i64 %60
  %65 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %64, i32 0, i32 1
  store void (%class.b2Contact*, %class.b2BlockAllocator*)* %58, void (%class.b2Contact*, %class.b2BlockAllocator*)** %65, align 8
  %66 = load i32, i32* %3, align 4
  %67 = zext i32 %66 to i64
  %68 = load i32, i32* %4, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %69
  %71 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %70, i64 0, i64 %67
  %72 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %71, i32 0, i32 2
  store i8 0, i8* %72, align 8
  br label %73

; <label>:73                                      ; preds = %49, %22
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32, %class.b2Fixture* %fixtureB, i32, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2Fixture*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %3, align 8
  store i32 %0, i32* %4, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %7, align 8
  %8 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %7, align 8
  %9 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %8, i32 208)
  store i8* %9, i8** %mem, align 8
  %10 = load i8*, i8** %mem, align 8
  %11 = bitcast i8* %10 to %class.b2CircleContact*
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load %class.b2Fixture*, %class.b2Fixture** %5, align 8
  call void @_ZN25b2PolygonAndCircleContactC1EP9b2FixtureS1_(%class.b2CircleContact* %11, %class.b2Fixture* %12, %class.b2Fixture* %13)
  %14 = bitcast %class.b2CircleContact* %11 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, %class.b2Fixture* %fixtureB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  %6 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %7 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %8 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %9 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %7, %class.b2Fixture* %8, i32 0, %class.b2Fixture* %9, i32 0)
  %10 = bitcast %class.b2CircleContact* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV25b2PolygonAndCircleContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %11, i32 0, i32 7
  %13 = load %class.b2Fixture*, %class.b2Fixture** %12, align 8
  %14 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %13)
          to label %15 unwind label %19

; <label>:15                                      ; preds = %0
  %16 = icmp eq i32 %14, 2
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %15
  br label %25

; <label>:18                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.1.164, i32 0, i32 0), i32 40, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable

; <label>:19                                      ; preds = %25, %0
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %4, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %5, align 4
  %23 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %23)
          to label %36 unwind label %42
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %17
  %26 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %27 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %26, i32 0, i32 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %27, align 8
  %29 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %28)
          to label %30 unwind label %19

; <label>:30                                      ; preds = %25
  %31 = icmp eq i32 %29, 0
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %30
  br label %35

; <label>:33                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.165, i32 0, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.1.164, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %35

; <label>:35                                      ; preds = %34, %32
  ret void

; <label>:36                                      ; preds = %19
  br label %37

; <label>:37                                      ; preds = %36
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %5, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41

; <label>:42                                      ; preds = %19
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  call void @__clang_call_terminate(i8* %44) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32, %class.b2Fixture* %fixtureB, i32, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2Fixture*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %3, align 8
  store i32 %0, i32* %4, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %7, align 8
  %8 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %7, align 8
  %9 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %8, i32 208)
  store i8* %9, i8** %mem, align 8
  %10 = load i8*, i8** %mem, align 8
  %11 = bitcast i8* %10 to %class.b2CircleContact*
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load %class.b2Fixture*, %class.b2Fixture** %5, align 8
  call void @_ZN16b2PolygonContactC1EP9b2FixtureS1_(%class.b2CircleContact* %11, %class.b2Fixture* %12, %class.b2Fixture* %13)
  %14 = bitcast %class.b2CircleContact* %11 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN16b2PolygonContactC2EP9b2FixtureS1_(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, %class.b2Fixture* %fixtureB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  %6 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %7 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %8 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %9 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %7, %class.b2Fixture* %8, i32 0, %class.b2Fixture* %9, i32 0)
  %10 = bitcast %class.b2CircleContact* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV16b2PolygonContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %11, i32 0, i32 7
  %13 = load %class.b2Fixture*, %class.b2Fixture** %12, align 8
  %14 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %13)
          to label %15 unwind label %19

; <label>:15                                      ; preds = %0
  %16 = icmp eq i32 %14, 2
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %15
  br label %25

; <label>:18                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1.199, i32 0, i32 0), i32 43, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN16b2PolygonContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable

; <label>:19                                      ; preds = %25, %0
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %4, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %5, align 4
  %23 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %23)
          to label %36 unwind label %42
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %17
  %26 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %27 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %26, i32 0, i32 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %27, align 8
  %29 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %28)
          to label %30 unwind label %19

; <label>:30                                      ; preds = %25
  %31 = icmp eq i32 %29, 2
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %30
  br label %35

; <label>:33                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.200, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1.199, i32 0, i32 0), i32 44, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN16b2PolygonContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %35

; <label>:35                                      ; preds = %34, %32
  ret void

; <label>:36                                      ; preds = %19
  br label %37

; <label>:37                                      ; preds = %36
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %5, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41

; <label>:42                                      ; preds = %19
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  call void @__clang_call_terminate(i8* %44) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32, %class.b2Fixture* %fixtureB, i32, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2Fixture*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %3, align 8
  store i32 %0, i32* %4, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %7, align 8
  %8 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %7, align 8
  %9 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %8, i32 208)
  store i8* %9, i8** %mem, align 8
  %10 = load i8*, i8** %mem, align 8
  %11 = bitcast i8* %10 to %class.b2CircleContact*
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load %class.b2Fixture*, %class.b2Fixture** %5, align 8
  call void @_ZN22b2EdgeAndCircleContactC1EP9b2FixtureS1_(%class.b2CircleContact* %11, %class.b2Fixture* %12, %class.b2Fixture* %13)
  %14 = bitcast %class.b2CircleContact* %11 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, %class.b2Fixture* %fixtureB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  %6 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %7 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %8 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %9 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %7, %class.b2Fixture* %8, i32 0, %class.b2Fixture* %9, i32 0)
  %10 = bitcast %class.b2CircleContact* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV22b2EdgeAndCircleContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %11, i32 0, i32 7
  %13 = load %class.b2Fixture*, %class.b2Fixture** %12, align 8
  %14 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %13)
          to label %15 unwind label %19

; <label>:15                                      ; preds = %0
  %16 = icmp eq i32 %14, 1
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %15
  br label %25

; <label>:18                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1.171, i32 0, i32 0), i32 40, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable

; <label>:19                                      ; preds = %25, %0
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %4, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %5, align 4
  %23 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %23)
          to label %36 unwind label %42
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %17
  %26 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %27 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %26, i32 0, i32 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %27, align 8
  %29 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %28)
          to label %30 unwind label %19

; <label>:30                                      ; preds = %25
  %31 = icmp eq i32 %29, 0
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %30
  br label %35

; <label>:33                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.172, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1.171, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %35

; <label>:35                                      ; preds = %34, %32
  ret void

; <label>:36                                      ; preds = %19
  br label %37

; <label>:37                                      ; preds = %36
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %5, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41

; <label>:42                                      ; preds = %19
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  call void @__clang_call_terminate(i8* %44) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32, %class.b2Fixture* %fixtureB, i32, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2Fixture*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %3, align 8
  store i32 %0, i32* %4, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %7, align 8
  %8 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %7, align 8
  %9 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %8, i32 208)
  store i8* %9, i8** %mem, align 8
  %10 = load i8*, i8** %mem, align 8
  %11 = bitcast i8* %10 to %class.b2CircleContact*
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load %class.b2Fixture*, %class.b2Fixture** %5, align 8
  call void @_ZN23b2EdgeAndPolygonContactC1EP9b2FixtureS1_(%class.b2CircleContact* %11, %class.b2Fixture* %12, %class.b2Fixture* %13)
  %14 = bitcast %class.b2CircleContact* %11 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, %class.b2Fixture* %fixtureB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  %6 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %7 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %8 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %9 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %7, %class.b2Fixture* %8, i32 0, %class.b2Fixture* %9, i32 0)
  %10 = bitcast %class.b2CircleContact* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV23b2EdgeAndPolygonContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %11, i32 0, i32 7
  %13 = load %class.b2Fixture*, %class.b2Fixture** %12, align 8
  %14 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %13)
          to label %15 unwind label %19

; <label>:15                                      ; preds = %0
  %16 = icmp eq i32 %14, 1
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %15
  br label %25

; <label>:18                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1.178, i32 0, i32 0), i32 40, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable

; <label>:19                                      ; preds = %25, %0
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %4, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %5, align 4
  %23 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %23)
          to label %36 unwind label %42
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %17
  %26 = bitcast %class.b2CircleContact* %6 to %class.b2Contact*
  %27 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %26, i32 0, i32 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %27, align 8
  %29 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %28)
          to label %30 unwind label %19

; <label>:30                                      ; preds = %25
  %31 = icmp eq i32 %29, 2
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %30
  br label %35

; <label>:33                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.179, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1.178, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %35

; <label>:35                                      ; preds = %34, %32
  ret void

; <label>:36                                      ; preds = %19
  br label %37

; <label>:37                                      ; preds = %36
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %5, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41

; <label>:42                                      ; preds = %19
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  call void @__clang_call_terminate(i8* %44) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32 %indexA, %class.b2Fixture* %fixtureB, i32 %indexB, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %1, align 8
  store i32 %indexA, i32* %2, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  store i32 %indexB, i32* %4, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %5, align 8
  %6 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %5, align 8
  %7 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %6, i32 208)
  store i8* %7, i8** %mem, align 8
  %8 = load i8*, i8** %mem, align 8
  %9 = bitcast i8* %8 to %class.b2CircleContact*
  %10 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %11 = load i32, i32* %2, align 4
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load i32, i32* %4, align 4
  call void @_ZN23b2ChainAndCircleContactC1EP9b2FixtureiS1_i(%class.b2CircleContact* %9, %class.b2Fixture* %10, i32 %11, %class.b2Fixture* %12, i32 %13)
  %14 = bitcast %class.b2CircleContact* %9 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, i32 %indexA, %class.b2Fixture* %fixtureB, i32 %indexB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %class.b2Fixture*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store i32 %indexA, i32* %3, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %4, align 8
  store i32 %indexB, i32* %5, align 4
  %8 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %9 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  %10 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %11 = load i32, i32* %3, align 4
  %12 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %13 = load i32, i32* %5, align 4
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %9, %class.b2Fixture* %10, i32 %11, %class.b2Fixture* %12, i32 %13)
  %14 = bitcast %class.b2CircleContact* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV23b2ChainAndCircleContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  %16 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %15, i32 0, i32 7
  %17 = load %class.b2Fixture*, %class.b2Fixture** %16, align 8
  %18 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %17)
          to label %19 unwind label %23

; <label>:19                                      ; preds = %0
  %20 = icmp eq i32 %18, 3
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %19
  br label %29

; <label>:22                                      ; preds = %19
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1.185, i32 0, i32 0), i32 42, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i, i32 0, i32 0)) #15
  unreachable

; <label>:23                                      ; preds = %29, %0
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %6, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %7, align 4
  %27 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %27)
          to label %40 unwind label %46
                                                  ; No predecessors!
  br label %29

; <label>:29                                      ; preds = %28, %21
  %30 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  %31 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %30, i32 0, i32 8
  %32 = load %class.b2Fixture*, %class.b2Fixture** %31, align 8
  %33 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %32)
          to label %34 unwind label %23

; <label>:34                                      ; preds = %29
  %35 = icmp eq i32 %33, 0
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %34
  br label %39

; <label>:37                                      ; preds = %34
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.186, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1.185, i32 0, i32 0), i32 43, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %39

; <label>:39                                      ; preds = %38, %36
  ret void

; <label>:40                                      ; preds = %23
  br label %41

; <label>:41                                      ; preds = %40
  %42 = load i8*, i8** %6, align 8
  %43 = load i32, i32* %7, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46                                      ; preds = %23
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32 %indexA, %class.b2Fixture* %fixtureB, i32 %indexB, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %class.b2Fixture*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.b2BlockAllocator*, align 8
  %mem = alloca i8*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %1, align 8
  store i32 %indexA, i32* %2, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %3, align 8
  store i32 %indexB, i32* %4, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %5, align 8
  %6 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %5, align 8
  %7 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %6, i32 208)
  store i8* %7, i8** %mem, align 8
  %8 = load i8*, i8** %mem, align 8
  %9 = bitcast i8* %8 to %class.b2CircleContact*
  %10 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %11 = load i32, i32* %2, align 4
  %12 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  %13 = load i32, i32* %4, align 4
  call void @_ZN24b2ChainAndPolygonContactC1EP9b2FixtureiS1_i(%class.b2CircleContact* %9, %class.b2Fixture* %10, i32 %11, %class.b2Fixture* %12, i32 %13)
  %14 = bitcast %class.b2CircleContact* %9 to %class.b2Contact*
  ret %class.b2Contact* %14
}

; Function Attrs: uwtable
define void @_ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i(%class.b2CircleContact* %this, %class.b2Fixture* %fixtureA, i32 %indexA, %class.b2Fixture* %fixtureB, i32 %indexB) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2CircleContact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %class.b2Fixture*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  store %class.b2CircleContact* %this, %class.b2CircleContact** %1, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store i32 %indexA, i32* %3, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %4, align 8
  store i32 %indexB, i32* %5, align 4
  %8 = load %class.b2CircleContact*, %class.b2CircleContact** %1, align 8
  %9 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  %10 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %11 = load i32, i32* %3, align 4
  %12 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %13 = load i32, i32* %5, align 4
  call void @_ZN9b2ContactC2EP9b2FixtureiS1_i(%class.b2Contact* %9, %class.b2Fixture* %10, i32 %11, %class.b2Fixture* %12, i32 %13)
  %14 = bitcast %class.b2CircleContact* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZTV24b2ChainAndPolygonContact, i64 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  %16 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %15, i32 0, i32 7
  %17 = load %class.b2Fixture*, %class.b2Fixture** %16, align 8
  %18 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %17)
          to label %19 unwind label %23

; <label>:19                                      ; preds = %0
  %20 = icmp eq i32 %18, 3
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %19
  br label %29

; <label>:22                                      ; preds = %19
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.1.192, i32 0, i32 0), i32 42, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i, i32 0, i32 0)) #15
  unreachable

; <label>:23                                      ; preds = %29, %0
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %6, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %7, align 4
  %27 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  invoke void @_ZN9b2ContactD2Ev(%class.b2Contact* %27)
          to label %40 unwind label %46
                                                  ; No predecessors!
  br label %29

; <label>:29                                      ; preds = %28, %21
  %30 = bitcast %class.b2CircleContact* %8 to %class.b2Contact*
  %31 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %30, i32 0, i32 8
  %32 = load %class.b2Fixture*, %class.b2Fixture** %31, align 8
  %33 = invoke i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %32)
          to label %34 unwind label %23

; <label>:34                                      ; preds = %29
  %35 = icmp eq i32 %33, 2
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %34
  br label %39

; <label>:37                                      ; preds = %34
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.193, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.1.192, i32 0, i32 0), i32 43, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %39

; <label>:39                                      ; preds = %38, %36
  ret void

; <label>:40                                      ; preds = %23
  br label %41

; <label>:41                                      ; preds = %40
  %42 = load i8*, i8** %6, align 8
  %43 = load i32, i32* %7, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46                                      ; preds = %23
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  call void @__clang_call_terminate(i8* %48) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = bitcast %class.b2Contact* %3 to %class.b2CircleContact*
  %5 = bitcast %class.b2CircleContact* %4 to void (%class.b2CircleContact*)***
  %6 = load void (%class.b2CircleContact*)**, void (%class.b2CircleContact*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %6, i64 1
  %8 = load void (%class.b2CircleContact*)*, void (%class.b2CircleContact*)** %7, align 8
  call void %8(%class.b2CircleContact* %4)
  %9 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %10 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %11 = bitcast %class.b2Contact* %10 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %9, i8* %11, i32 208)
  ret void
}

; Function Attrs: uwtable
define %class.b2Contact* @_ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %fixtureA, i32 %indexA, %class.b2Fixture* %fixtureB, i32 %indexB, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %class.b2Fixture*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.b2BlockAllocator*, align 8
  %type1 = alloca i32, align 4
  %type2 = alloca i32, align 4
  %createFcn = alloca %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, align 8
  store %class.b2Fixture* %fixtureA, %class.b2Fixture** %2, align 8
  store i32 %indexA, i32* %3, align 4
  store %class.b2Fixture* %fixtureB, %class.b2Fixture** %4, align 8
  store i32 %indexB, i32* %5, align 4
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %6, align 8
  %7 = load i8, i8* @_ZN9b2Contact13s_initializedE, align 1
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  call void @_ZN9b2Contact19InitializeRegistersEv()
  store i8 1, i8* @_ZN9b2Contact13s_initializedE, align 1
  br label %12

; <label>:12                                      ; preds = %11, %0
  %13 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %14 = call i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %13)
  store i32 %14, i32* %type1, align 4
  %15 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %16 = call i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %15)
  store i32 %16, i32* %type2, align 4
  %17 = load i32, i32* %type1, align 4
  %18 = icmp sle i32 0, %17
  br i1 %18, label %19, label %23

; <label>:19                                      ; preds = %12
  %20 = load i32, i32* %type1, align 4
  %21 = icmp slt i32 %20, 4
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %19
  br label %25

; <label>:23                                      ; preds = %19, %12
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 80, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %22
  %26 = load i32, i32* %type2, align 4
  %27 = icmp sle i32 0, %26
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %25
  %29 = load i32, i32* %type2, align 4
  %30 = icmp slt i32 %29, 4
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %28
  br label %34

; <label>:32                                      ; preds = %28, %25
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.150, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 81, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %34

; <label>:34                                      ; preds = %33, %31
  %35 = load i32, i32* %type2, align 4
  %36 = zext i32 %35 to i64
  %37 = load i32, i32* %type1, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %38
  %40 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %39, i64 0, i64 %36
  %41 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %40, i32 0, i32 0
  %42 = load %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %41, align 8
  store %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* %42, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %createFcn, align 8
  %43 = load %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %createFcn, align 8
  %44 = icmp ne %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)* %43, null
  br i1 %44, label %45, label %71

; <label>:45                                      ; preds = %34
  %46 = load i32, i32* %type2, align 4
  %47 = zext i32 %46 to i64
  %48 = load i32, i32* %type1, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %49
  %51 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %50, i64 0, i64 %47
  %52 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %51, i32 0, i32 2
  %53 = load i8, i8* %52, align 8
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %63

; <label>:55                                      ; preds = %45
  %56 = load %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %createFcn, align 8
  %57 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %58 = load i32, i32* %3, align 4
  %59 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %60 = load i32, i32* %5, align 4
  %61 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %6, align 8
  %62 = call %class.b2Contact* %56(%class.b2Fixture* %57, i32 %58, %class.b2Fixture* %59, i32 %60, %class.b2BlockAllocator* %61)
  store %class.b2Contact* %62, %class.b2Contact** %1, align 8
  br label %72

; <label>:63                                      ; preds = %45
  %64 = load %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)*, %class.b2Contact* (%class.b2Fixture*, i32, %class.b2Fixture*, i32, %class.b2BlockAllocator*)** %createFcn, align 8
  %65 = load %class.b2Fixture*, %class.b2Fixture** %4, align 8
  %66 = load i32, i32* %5, align 4
  %67 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %68 = load i32, i32* %3, align 4
  %69 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %6, align 8
  %70 = call %class.b2Contact* %64(%class.b2Fixture* %65, i32 %66, %class.b2Fixture* %67, i32 %68, %class.b2BlockAllocator* %69)
  store %class.b2Contact* %70, %class.b2Contact** %1, align 8
  br label %72

; <label>:71                                      ; preds = %34
  store %class.b2Contact* null, %class.b2Contact** %1, align 8
  br label %72

; <label>:72                                      ; preds = %71, %63, %55
  %73 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  ret %class.b2Contact* %73
}

; Function Attrs: uwtable
define void @_ZN9b2Contact7DestroyEPS_P16b2BlockAllocator(%class.b2Contact* %contact, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %typeA = alloca i32, align 4
  %typeB = alloca i32, align 4
  %destroyFcn = alloca void (%class.b2Contact*, %class.b2BlockAllocator*)*, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load i8, i8* @_ZN9b2Contact13s_initializedE, align 1
  %4 = trunc i8 %3 to i1
  %5 = zext i1 %4 to i32
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.151, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 103, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact7DestroyEPS_P16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %11, i32 0, i32 7
  %13 = load %class.b2Fixture*, %class.b2Fixture** %12, align 8
  store %class.b2Fixture* %13, %class.b2Fixture** %fixtureA, align 8
  %14 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %15 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %14, i32 0, i32 8
  %16 = load %class.b2Fixture*, %class.b2Fixture** %15, align 8
  store %class.b2Fixture* %16, %class.b2Fixture** %fixtureB, align 8
  %17 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %18 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %17, i32 0, i32 11
  %19 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %37

; <label>:22                                      ; preds = %10
  %23 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %24 = call zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %23)
  %25 = zext i1 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %37

; <label>:27                                      ; preds = %22
  %28 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %29 = call zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %28)
  %30 = zext i1 %29 to i32
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

; <label>:32                                      ; preds = %27
  %33 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %34 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %33)
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %34, i1 zeroext true)
  %35 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %36 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %35)
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %36, i1 zeroext true)
  br label %37

; <label>:37                                      ; preds = %32, %27, %22, %10
  %38 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %39 = call i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %38)
  store i32 %39, i32* %typeA, align 4
  %40 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %41 = call i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %40)
  store i32 %41, i32* %typeB, align 4
  %42 = load i32, i32* %typeA, align 4
  %43 = icmp sle i32 0, %42
  br i1 %43, label %44, label %48

; <label>:44                                      ; preds = %37
  %45 = load i32, i32* %typeB, align 4
  %46 = icmp slt i32 %45, 4
  br i1 %46, label %47, label %48

; <label>:47                                      ; preds = %44
  br label %50

; <label>:48                                      ; preds = %44, %37
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4.152, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 119, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact7DestroyEPS_P16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %50

; <label>:50                                      ; preds = %49, %47
  %51 = load i32, i32* %typeA, align 4
  %52 = icmp sle i32 0, %51
  br i1 %52, label %53, label %57

; <label>:53                                      ; preds = %50
  %54 = load i32, i32* %typeB, align 4
  %55 = icmp slt i32 %54, 4
  br i1 %55, label %56, label %57

; <label>:56                                      ; preds = %53
  br label %59

; <label>:57                                      ; preds = %53, %50
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4.152, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1.149, i32 0, i32 0), i32 120, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN9b2Contact7DestroyEPS_P16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %59

; <label>:59                                      ; preds = %58, %56
  %60 = load i32, i32* %typeB, align 4
  %61 = zext i32 %60 to i64
  %62 = load i32, i32* %typeA, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [4 x [4 x %struct.b2ContactRegister]], [4 x [4 x %struct.b2ContactRegister]]* @_ZN9b2Contact11s_registersE, i64 0, i64 %63
  %65 = getelementptr inbounds [4 x %struct.b2ContactRegister], [4 x %struct.b2ContactRegister]* %64, i64 0, i64 %61
  %66 = getelementptr inbounds %struct.b2ContactRegister, %struct.b2ContactRegister* %65, i32 0, i32 1
  %67 = load void (%class.b2Contact*, %class.b2BlockAllocator*)*, void (%class.b2Contact*, %class.b2BlockAllocator*)** %66, align 8
  store void (%class.b2Contact*, %class.b2BlockAllocator*)* %67, void (%class.b2Contact*, %class.b2BlockAllocator*)** %destroyFcn, align 8
  %68 = load void (%class.b2Contact*, %class.b2BlockAllocator*)*, void (%class.b2Contact*, %class.b2BlockAllocator*)** %destroyFcn, align 8
  %69 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %70 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  call void %68(%class.b2Contact* %69, %class.b2BlockAllocator* %70)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 9
  %4 = load i8, i8* %3, align 2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; Function Attrs: uwtable
define void @_ZN9b2Contact6UpdateEP17b2ContactListener(%class.b2Contact* %this, %class.b2ContactFilter* %listener) #0 align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca %class.b2ContactFilter*, align 8
  %oldManifold = alloca %struct.b2Manifold, align 4
  %touching = alloca i8, align 1
  %wasTouching = alloca i8, align 1
  %sensorA = alloca i8, align 1
  %sensorB = alloca i8, align 1
  %sensor = alloca i8, align 1
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %xfA = alloca %struct.b2Transform*, align 8
  %xfB = alloca %struct.b2Transform*, align 8
  %shapeA = alloca %class.b2Shape*, align 8
  %shapeB = alloca %class.b2Shape*, align 8
  %i = alloca i32, align 4
  %mp2 = alloca %struct.b2ManifoldPoint*, align 8
  %id2 = alloca %union.anon, align 4
  %j = alloca i32, align 4
  %mp1 = alloca %struct.b2ManifoldPoint*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  store %class.b2ContactFilter* %listener, %class.b2ContactFilter** %2, align 8
  %3 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %4 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 11
  %5 = bitcast %struct.b2Manifold* %oldManifold to i8*
  %6 = bitcast %struct.b2Manifold* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 64, i32 4, i1 false)
  %7 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = or i32 %8, 4
  store i32 %9, i32* %7, align 8
  store i8 0, i8* %touching, align 1
  %10 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 2
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %wasTouching, align 1
  %15 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 7
  %16 = load %class.b2Fixture*, %class.b2Fixture** %15, align 8
  %17 = call zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %16)
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %sensorA, align 1
  %19 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 8
  %20 = load %class.b2Fixture*, %class.b2Fixture** %19, align 8
  %21 = call zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %20)
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %sensorB, align 1
  %23 = load i8, i8* %sensorA, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %28, label %25

; <label>:25                                      ; preds = %0
  %26 = load i8, i8* %sensorB, align 1
  %27 = trunc i8 %26 to i1
  br label %28

; <label>:28                                      ; preds = %25, %0
  %29 = phi i1 [ true, %0 ], [ %27, %25 ]
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %sensor, align 1
  %31 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 7
  %32 = load %class.b2Fixture*, %class.b2Fixture** %31, align 8
  %33 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %32)
  store %class.b2Body* %33, %class.b2Body** %bodyA, align 8
  %34 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 8
  %35 = load %class.b2Fixture*, %class.b2Fixture** %34, align 8
  %36 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %35)
  store %class.b2Body* %36, %class.b2Body** %bodyB, align 8
  %37 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %38 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %37)
  store %struct.b2Transform* %38, %struct.b2Transform** %xfA, align 8
  %39 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %40 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %39)
  store %struct.b2Transform* %40, %struct.b2Transform** %xfB, align 8
  %41 = load i8, i8* %sensor, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %62

; <label>:43                                      ; preds = %28
  %44 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 7
  %45 = load %class.b2Fixture*, %class.b2Fixture** %44, align 8
  %46 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %45)
  store %class.b2Shape* %46, %class.b2Shape** %shapeA, align 8
  %47 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 8
  %48 = load %class.b2Fixture*, %class.b2Fixture** %47, align 8
  %49 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %48)
  store %class.b2Shape* %49, %class.b2Shape** %shapeB, align 8
  %50 = load %class.b2Shape*, %class.b2Shape** %shapeA, align 8
  %51 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 9
  %52 = load i32, i32* %51, align 8
  %53 = load %class.b2Shape*, %class.b2Shape** %shapeB, align 8
  %54 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 10
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.b2Transform*, %struct.b2Transform** %xfA, align 8
  %57 = load %struct.b2Transform*, %struct.b2Transform** %xfB, align 8
  %58 = call zeroext i1 @_Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_(%class.b2Shape* %50, i32 %52, %class.b2Shape* %53, i32 %55, %struct.b2Transform* dereferenceable(16) %56, %struct.b2Transform* dereferenceable(16) %57)
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %touching, align 1
  %60 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 11
  %61 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %60, i32 0, i32 4
  store i32 0, i32* %61, align 4
  br label %145

; <label>:62                                      ; preds = %28
  %63 = bitcast %class.b2Contact* %3 to void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)***
  %64 = load void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)**, void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)*, void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)** %64, i64 0
  %66 = load void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)*, void (%class.b2Contact*, %struct.b2Manifold*, %struct.b2Transform*, %struct.b2Transform*)** %65, align 8
  %67 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 11
  %68 = load %struct.b2Transform*, %struct.b2Transform** %xfA, align 8
  %69 = load %struct.b2Transform*, %struct.b2Transform** %xfB, align 8
  call void %66(%class.b2Contact* %3, %struct.b2Manifold* %67, %struct.b2Transform* dereferenceable(16) %68, %struct.b2Transform* dereferenceable(16) %69)
  %70 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 11
  %71 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %70, i32 0, i32 4
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %touching, align 1
  store i32 0, i32* %i, align 4
  br label %75

; <label>:75                                      ; preds = %130, %62
  %76 = load i32, i32* %i, align 4
  %77 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 11
  %78 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %77, i32 0, i32 4
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %76, %79
  br i1 %80, label %81, label %133

; <label>:81                                      ; preds = %75
  %82 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 11
  %83 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %82, i32 0, i32 0
  %84 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %83, i32 0, i32 0
  %85 = load i32, i32* %i, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %84, i64 %86
  store %struct.b2ManifoldPoint* %87, %struct.b2ManifoldPoint** %mp2, align 8
  %88 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp2, align 8
  %89 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %88, i32 0, i32 1
  store float 0.000000e+00, float* %89, align 4
  %90 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp2, align 8
  %91 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %90, i32 0, i32 2
  store float 0.000000e+00, float* %91, align 4
  %92 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp2, align 8
  %93 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %92, i32 0, i32 3
  %94 = bitcast %union.anon* %id2 to i8*
  %95 = bitcast %union.anon* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 4, i32 4, i1 false)
  store i32 0, i32* %j, align 4
  br label %96

; <label>:96                                      ; preds = %126, %81
  %97 = load i32, i32* %j, align 4
  %98 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %oldManifold, i32 0, i32 4
  %99 = load i32, i32* %98, align 4
  %100 = icmp slt i32 %97, %99
  br i1 %100, label %101, label %129

; <label>:101                                     ; preds = %96
  %102 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %oldManifold, i32 0, i32 0
  %103 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %102, i32 0, i32 0
  %104 = load i32, i32* %j, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %103, i64 %105
  store %struct.b2ManifoldPoint* %106, %struct.b2ManifoldPoint** %mp1, align 8
  %107 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp1, align 8
  %108 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %107, i32 0, i32 3
  %109 = bitcast %union.anon* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %union.anon* %id2 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %110, %112
  br i1 %113, label %114, label %125

; <label>:114                                     ; preds = %101
  %115 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp1, align 8
  %116 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %115, i32 0, i32 1
  %117 = load float, float* %116, align 4
  %118 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp2, align 8
  %119 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %118, i32 0, i32 1
  store float %117, float* %119, align 4
  %120 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp1, align 8
  %121 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %120, i32 0, i32 2
  %122 = load float, float* %121, align 4
  %123 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %mp2, align 8
  %124 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %123, i32 0, i32 2
  store float %122, float* %124, align 4
  br label %129

; <label>:125                                     ; preds = %101
  br label %126

; <label>:126                                     ; preds = %125
  %127 = load i32, i32* %j, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %j, align 4
  br label %96

; <label>:129                                     ; preds = %114, %96
  br label %130

; <label>:130                                     ; preds = %129
  %131 = load i32, i32* %i, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %i, align 4
  br label %75

; <label>:133                                     ; preds = %75
  %134 = load i8, i8* %touching, align 1
  %135 = trunc i8 %134 to i1
  %136 = zext i1 %135 to i32
  %137 = load i8, i8* %wasTouching, align 1
  %138 = trunc i8 %137 to i1
  %139 = zext i1 %138 to i32
  %140 = icmp ne i32 %136, %139
  br i1 %140, label %141, label %144

; <label>:141                                     ; preds = %133
  %142 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %142, i1 zeroext true)
  %143 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %143, i1 zeroext true)
  br label %144

; <label>:144                                     ; preds = %141, %133
  br label %145

; <label>:145                                     ; preds = %144, %43
  %146 = load i8, i8* %touching, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %148, label %152

; <label>:148                                     ; preds = %145
  %149 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = or i32 %150, 2
  store i32 %151, i32* %149, align 8
  br label %156

; <label>:152                                     ; preds = %145
  %153 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %3, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, -3
  store i32 %155, i32* %153, align 8
  br label %156

; <label>:156                                     ; preds = %152, %148
  %157 = load i8, i8* %wasTouching, align 1
  %158 = trunc i8 %157 to i1
  %159 = zext i1 %158 to i32
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %175

; <label>:161                                     ; preds = %156
  %162 = load i8, i8* %touching, align 1
  %163 = trunc i8 %162 to i1
  %164 = zext i1 %163 to i32
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %175

; <label>:166                                     ; preds = %161
  %167 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %168 = icmp ne %class.b2ContactFilter* %167, null
  br i1 %168, label %169, label %175

; <label>:169                                     ; preds = %166
  %170 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %171 = bitcast %class.b2ContactFilter* %170 to void (%class.b2ContactFilter*, %class.b2Contact*)***
  %172 = load void (%class.b2ContactFilter*, %class.b2Contact*)**, void (%class.b2ContactFilter*, %class.b2Contact*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Contact*)*, void (%class.b2ContactFilter*, %class.b2Contact*)** %172, i64 2
  %174 = load void (%class.b2ContactFilter*, %class.b2Contact*)*, void (%class.b2ContactFilter*, %class.b2Contact*)** %173, align 8
  call void %174(%class.b2ContactFilter* %170, %class.b2Contact* %3)
  br label %175

; <label>:175                                     ; preds = %169, %166, %161, %156
  %176 = load i8, i8* %wasTouching, align 1
  %177 = trunc i8 %176 to i1
  %178 = zext i1 %177 to i32
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %194

; <label>:180                                     ; preds = %175
  %181 = load i8, i8* %touching, align 1
  %182 = trunc i8 %181 to i1
  %183 = zext i1 %182 to i32
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %194

; <label>:185                                     ; preds = %180
  %186 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %187 = icmp ne %class.b2ContactFilter* %186, null
  br i1 %187, label %188, label %194

; <label>:188                                     ; preds = %185
  %189 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %190 = bitcast %class.b2ContactFilter* %189 to void (%class.b2ContactFilter*, %class.b2Contact*)***
  %191 = load void (%class.b2ContactFilter*, %class.b2Contact*)**, void (%class.b2ContactFilter*, %class.b2Contact*)*** %190, align 8
  %192 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Contact*)*, void (%class.b2ContactFilter*, %class.b2Contact*)** %191, i64 3
  %193 = load void (%class.b2ContactFilter*, %class.b2Contact*)*, void (%class.b2ContactFilter*, %class.b2Contact*)** %192, align 8
  call void %193(%class.b2ContactFilter* %189, %class.b2Contact* %3)
  br label %194

; <label>:194                                     ; preds = %188, %185, %180, %175
  %195 = load i8, i8* %sensor, align 1
  %196 = trunc i8 %195 to i1
  %197 = zext i1 %196 to i32
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

; <label>:199                                     ; preds = %194
  %200 = load i8, i8* %touching, align 1
  %201 = trunc i8 %200 to i1
  br i1 %201, label %202, label %211

; <label>:202                                     ; preds = %199
  %203 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %204 = icmp ne %class.b2ContactFilter* %203, null
  br i1 %204, label %205, label %211

; <label>:205                                     ; preds = %202
  %206 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %207 = bitcast %class.b2ContactFilter* %206 to void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)***
  %208 = load void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)**, void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)*** %207, align 8
  %209 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)*, void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)** %208, i64 4
  %210 = load void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)*, void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2Manifold*)** %209, align 8
  call void %210(%class.b2ContactFilter* %206, %class.b2Contact* %3, %struct.b2Manifold* %oldManifold)
  br label %211

; <label>:211                                     ; preds = %205, %202, %199, %194
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_(%class.b2Shape* %shapeA, i32 %indexA, %class.b2Shape* %shapeB, i32 %indexB, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB) #0 {
  %1 = alloca %class.b2Shape*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %class.b2Shape*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.b2Transform*, align 8
  %6 = alloca %struct.b2Transform*, align 8
  %input = alloca %struct.b2DistanceInput, align 8
  %cache = alloca %struct.b2SimplexCache, align 4
  %output = alloca %struct.b2DistanceOutput, align 4
  store %class.b2Shape* %shapeA, %class.b2Shape** %1, align 8
  store i32 %indexA, i32* %2, align 4
  store %class.b2Shape* %shapeB, %class.b2Shape** %3, align 8
  store i32 %indexB, i32* %4, align 4
  store %struct.b2Transform* %xfA, %struct.b2Transform** %5, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %6, align 8
  call void @_ZN15b2DistanceInputC2Ev(%struct.b2DistanceInput* %input)
  %7 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %input, i32 0, i32 0
  %8 = load %class.b2Shape*, %class.b2Shape** %1, align 8
  %9 = load i32, i32* %2, align 4
  call void @_ZN15b2DistanceProxy3SetEPK7b2Shapei(%struct.b2DistanceProxy* %7, %class.b2Shape* %8, i32 %9)
  %10 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %input, i32 0, i32 1
  %11 = load %class.b2Shape*, %class.b2Shape** %3, align 8
  %12 = load i32, i32* %4, align 4
  call void @_ZN15b2DistanceProxy3SetEPK7b2Shapei(%struct.b2DistanceProxy* %10, %class.b2Shape* %11, i32 %12)
  %13 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %input, i32 0, i32 2
  %14 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %15 = bitcast %struct.b2Transform* %13 to i8*
  %16 = bitcast %struct.b2Transform* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 16, i32 4, i1 false)
  %17 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %input, i32 0, i32 3
  %18 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %19 = bitcast %struct.b2Transform* %17 to i8*
  %20 = bitcast %struct.b2Transform* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 4, i1 false)
  %21 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %input, i32 0, i32 4
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %cache, i32 0, i32 1
  store i16 0, i16* %22, align 4
  call void @_ZN16b2DistanceOutputC2Ev(%struct.b2DistanceOutput* %output)
  call void @_Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput(%struct.b2DistanceOutput* %output, %struct.b2SimplexCache* %cache, %struct.b2DistanceInput* %input)
  %23 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %output, i32 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = fcmp olt float %24, 0x3EB4000000000000
  ret i1 %25
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2DistanceInputC2Ev(%struct.b2DistanceInput* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2DistanceInput*, align 8
  store %struct.b2DistanceInput* %this, %struct.b2DistanceInput** %1, align 8
  %2 = load %struct.b2DistanceInput*, %struct.b2DistanceInput** %1, align 8
  %3 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %2, i32 0, i32 0
  call void @_ZN15b2DistanceProxyC2Ev(%struct.b2DistanceProxy* %3)
  %4 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %2, i32 0, i32 1
  call void @_ZN15b2DistanceProxyC2Ev(%struct.b2DistanceProxy* %4)
  %5 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %2, i32 0, i32 2
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %5)
  %6 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %2, i32 0, i32 3
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %6)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN15b2DistanceProxyC2Ev(%struct.b2DistanceProxy* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.b2DistanceProxy*, align 8
  store %struct.b2DistanceProxy* %this, %struct.b2DistanceProxy** %1, align 8
  %2 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %1, align 8
  %3 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %2, i32 0, i32 0
  %4 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %4, i64 2
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %struct.b2Vec2* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i64 1
  %9 = icmp eq %struct.b2Vec2* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %2, i32 0, i32 1
  store %struct.b2Vec2* null, %struct.b2Vec2** %11, align 8
  %12 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %2, i32 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %2, i32 0, i32 3
  store float 0.000000e+00, float* %13, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2DistanceProxy3SetEPK7b2Shapei(%struct.b2DistanceProxy* %this, %class.b2Shape* %shape, i32 %index) #0 align 2 {
  %1 = alloca %struct.b2DistanceProxy*, align 8
  %2 = alloca %class.b2Shape*, align 8
  %3 = alloca i32, align 4
  %circle = alloca %class.b2CircleShape*, align 8
  %polygon = alloca %class.b2PolygonShape*, align 8
  %chain = alloca %class.b2ChainShape*, align 8
  %edge = alloca %class.b2EdgeShape*, align 8
  store %struct.b2DistanceProxy* %this, %struct.b2DistanceProxy** %1, align 8
  store %class.b2Shape* %shape, %class.b2Shape** %2, align 8
  store i32 %index, i32* %3, align 4
  %4 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %1, align 8
  %5 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %6 = call i32 @_ZNK7b2Shape7GetTypeEv(%class.b2Shape* %5)
  switch i32 %6, label %109 [
    i32 0, label %7
    i32 2, label %19
    i32 3, label %35
    i32 1, label %97
  ]

; <label>:7                                       ; preds = %0
  %8 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %9 = bitcast %class.b2Shape* %8 to %class.b2CircleShape*
  store %class.b2CircleShape* %9, %class.b2CircleShape** %circle, align 8
  %10 = load %class.b2CircleShape*, %class.b2CircleShape** %circle, align 8
  %11 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 1
  store %struct.b2Vec2* %11, %struct.b2Vec2** %12, align 8
  %13 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 2
  store i32 1, i32* %13, align 8
  %14 = load %class.b2CircleShape*, %class.b2CircleShape** %circle, align 8
  %15 = bitcast %class.b2CircleShape* %14 to %class.b2Shape*
  %16 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %15, i32 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 3
  store float %17, float* %18, align 4
  br label %110

; <label>:19                                      ; preds = %0
  %20 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %21 = bitcast %class.b2Shape* %20 to %class.b2PolygonShape*
  store %class.b2PolygonShape* %21, %class.b2PolygonShape** %polygon, align 8
  %22 = load %class.b2PolygonShape*, %class.b2PolygonShape** %polygon, align 8
  %23 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %22, i32 0, i32 2
  %24 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 1
  store %struct.b2Vec2* %24, %struct.b2Vec2** %25, align 8
  %26 = load %class.b2PolygonShape*, %class.b2PolygonShape** %polygon, align 8
  %27 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %26, i32 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = load %class.b2PolygonShape*, %class.b2PolygonShape** %polygon, align 8
  %31 = bitcast %class.b2PolygonShape* %30 to %class.b2Shape*
  %32 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %31, i32 0, i32 2
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 3
  store float %33, float* %34, align 4
  br label %110

; <label>:35                                      ; preds = %0
  %36 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %37 = bitcast %class.b2Shape* %36 to %class.b2ChainShape*
  store %class.b2ChainShape* %37, %class.b2ChainShape** %chain, align 8
  %38 = load i32, i32* %3, align 4
  %39 = icmp sle i32 0, %38
  br i1 %39, label %40, label %47

; <label>:40                                      ; preds = %35
  %41 = load i32, i32* %3, align 4
  %42 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %43 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp slt i32 %41, %44
  br i1 %45, label %46, label %47

; <label>:46                                      ; preds = %40
  br label %49

; <label>:47                                      ; preds = %40, %35
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 53, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN15b2DistanceProxy3SetEPK7b2Shapei, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %49

; <label>:49                                      ; preds = %48, %46
  %50 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 0
  %51 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %50, i64 0, i64 0
  %52 = load i32, i32* %3, align 4
  %53 = sext i32 %52 to i64
  %54 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %55 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %54, i32 0, i32 1
  %56 = load %struct.b2Vec2*, %struct.b2Vec2** %55, align 8
  %57 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %56, i64 %53
  %58 = bitcast %struct.b2Vec2* %51 to i8*
  %59 = bitcast %struct.b2Vec2* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false)
  %60 = load i32, i32* %3, align 4
  %61 = add nsw i32 %60, 1
  %62 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %63 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %62, i32 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp slt i32 %61, %64
  br i1 %65, label %66, label %78

; <label>:66                                      ; preds = %49
  %67 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 0
  %68 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %67, i64 0, i64 1
  %69 = load i32, i32* %3, align 4
  %70 = add nsw i32 %69, 1
  %71 = sext i32 %70 to i64
  %72 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %73 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %72, i32 0, i32 1
  %74 = load %struct.b2Vec2*, %struct.b2Vec2** %73, align 8
  %75 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %74, i64 %71
  %76 = bitcast %struct.b2Vec2* %68 to i8*
  %77 = bitcast %struct.b2Vec2* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false)
  br label %87

; <label>:78                                      ; preds = %49
  %79 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 0
  %80 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %79, i64 0, i64 1
  %81 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %82 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %81, i32 0, i32 1
  %83 = load %struct.b2Vec2*, %struct.b2Vec2** %82, align 8
  %84 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %83, i64 0
  %85 = bitcast %struct.b2Vec2* %80 to i8*
  %86 = bitcast %struct.b2Vec2* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 4, i1 false)
  br label %87

; <label>:87                                      ; preds = %78, %66
  %88 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 0
  %89 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %88, i32 0, i32 0
  %90 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 1
  store %struct.b2Vec2* %89, %struct.b2Vec2** %90, align 8
  %91 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 2
  store i32 2, i32* %91, align 8
  %92 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %93 = bitcast %class.b2ChainShape* %92 to %class.b2Shape*
  %94 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %93, i32 0, i32 2
  %95 = load float, float* %94, align 4
  %96 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 3
  store float %95, float* %96, align 4
  br label %110

; <label>:97                                      ; preds = %0
  %98 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %99 = bitcast %class.b2Shape* %98 to %class.b2EdgeShape*
  store %class.b2EdgeShape* %99, %class.b2EdgeShape** %edge, align 8
  %100 = load %class.b2EdgeShape*, %class.b2EdgeShape** %edge, align 8
  %101 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 1
  store %struct.b2Vec2* %101, %struct.b2Vec2** %102, align 8
  %103 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 2
  store i32 2, i32* %103, align 8
  %104 = load %class.b2EdgeShape*, %class.b2EdgeShape** %edge, align 8
  %105 = bitcast %class.b2EdgeShape* %104 to %class.b2Shape*
  %106 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %105, i32 0, i32 2
  %107 = load float, float* %106, align 4
  %108 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %4, i32 0, i32 3
  store float %107, float* %108, align 4
  br label %110

; <label>:109                                     ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 81, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN15b2DistanceProxy3SetEPK7b2Shapei, i32 0, i32 0)) #15
  unreachable

; <label>:110                                     ; preds = %97, %87, %19, %7
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN16b2DistanceOutputC2Ev(%struct.b2DistanceOutput* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2DistanceOutput*, align 8
  store %struct.b2DistanceOutput* %this, %struct.b2DistanceOutput** %1, align 8
  %2 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %3 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  ret void
}

; Function Attrs: uwtable
define void @_Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput(%struct.b2DistanceOutput* %output, %struct.b2SimplexCache* %cache, %struct.b2DistanceInput* %input) #0 {
  %1 = alloca %struct.b2DistanceOutput*, align 8
  %2 = alloca %struct.b2SimplexCache*, align 8
  %3 = alloca %struct.b2DistanceInput*, align 8
  %proxyA = alloca %struct.b2DistanceProxy*, align 8
  %proxyB = alloca %struct.b2DistanceProxy*, align 8
  %transformA = alloca %struct.b2Transform, align 4
  %transformB = alloca %struct.b2Transform, align 4
  %simplex = alloca %struct.b2Simplex, align 4
  %vertices = alloca %struct.b2SimplexVertex*, align 8
  %k_maxIters = alloca i32, align 4
  %saveA = alloca [3 x i32], align 4
  %saveB = alloca [3 x i32], align 4
  %saveCount = alloca i32, align 4
  %distanceSqr1 = alloca float, align 4
  %iter = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.b2Vec2, align 4
  %distanceSqr2 = alloca float, align 4
  %d = alloca %struct.b2Vec2, align 4
  %vertex = alloca %struct.b2SimplexVertex*, align 8
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %wBLocal = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %duplicate = alloca i8, align 1
  %i1 = alloca i32, align 4
  %rA = alloca float, align 4
  %rB = alloca float, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  store %struct.b2DistanceOutput* %output, %struct.b2DistanceOutput** %1, align 8
  store %struct.b2SimplexCache* %cache, %struct.b2SimplexCache** %2, align 8
  store %struct.b2DistanceInput* %input, %struct.b2DistanceInput** %3, align 8
  %13 = load i32, i32* @b2_gjkCalls, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @b2_gjkCalls, align 4
  %15 = load %struct.b2DistanceInput*, %struct.b2DistanceInput** %3, align 8
  %16 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %15, i32 0, i32 0
  store %struct.b2DistanceProxy* %16, %struct.b2DistanceProxy** %proxyA, align 8
  %17 = load %struct.b2DistanceInput*, %struct.b2DistanceInput** %3, align 8
  %18 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %17, i32 0, i32 1
  store %struct.b2DistanceProxy* %18, %struct.b2DistanceProxy** %proxyB, align 8
  %19 = load %struct.b2DistanceInput*, %struct.b2DistanceInput** %3, align 8
  %20 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %19, i32 0, i32 2
  %21 = bitcast %struct.b2Transform* %transformA to i8*
  %22 = bitcast %struct.b2Transform* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 4, i1 false)
  %23 = load %struct.b2DistanceInput*, %struct.b2DistanceInput** %3, align 8
  %24 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %23, i32 0, i32 3
  %25 = bitcast %struct.b2Transform* %transformB to i8*
  %26 = bitcast %struct.b2Transform* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 4, i1 false)
  call void @_ZN9b2SimplexC2Ev(%struct.b2Simplex* %simplex)
  %27 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %28 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyA, align 8
  %29 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyB, align 8
  call void @_ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_(%struct.b2Simplex* %simplex, %struct.b2SimplexCache* %27, %struct.b2DistanceProxy* %28, %struct.b2Transform* dereferenceable(16) %transformA, %struct.b2DistanceProxy* %29, %struct.b2Transform* dereferenceable(16) %transformB)
  %30 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %simplex, i32 0, i32 0
  store %struct.b2SimplexVertex* %30, %struct.b2SimplexVertex** %vertices, align 8
  store i32 20, i32* %k_maxIters, align 4
  store i32 0, i32* %saveCount, align 4
  store float 0x47EFFFFFE0000000, float* %distanceSqr1, align 4
  store i32 0, i32* %iter, align 4
  br label %31

; <label>:31                                      ; preds = %179, %0
  %32 = load i32, i32* %iter, align 4
  %33 = icmp slt i32 %32, 20
  br i1 %33, label %34, label %183

; <label>:34                                      ; preds = %31
  %35 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %simplex, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %saveCount, align 4
  store i32 0, i32* %i, align 4
  br label %37

; <label>:37                                      ; preds = %60, %34
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %saveCount, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %63

; <label>:41                                      ; preds = %37
  %42 = load i32, i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %45 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %44, i64 %43
  %46 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %45, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %i, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [3 x i32], [3 x i32]* %saveA, i64 0, i64 %49
  store i32 %47, i32* %50, align 4
  %51 = load i32, i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %54 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %53, i64 %52
  %55 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %54, i32 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %i, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [3 x i32], [3 x i32]* %saveB, i64 0, i64 %58
  store i32 %56, i32* %59, align 4
  br label %60

; <label>:60                                      ; preds = %41
  %61 = load i32, i32* %i, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %i, align 4
  br label %37

; <label>:63                                      ; preds = %37
  %64 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %simplex, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %69 [
    i32 1, label %66
    i32 2, label %67
    i32 3, label %68
  ]

; <label>:66                                      ; preds = %63
  br label %70

; <label>:67                                      ; preds = %63
  call void @_ZN9b2Simplex6Solve2Ev(%struct.b2Simplex* %simplex)
  br label %70

; <label>:68                                      ; preds = %63
  call void @_ZN9b2Simplex6Solve3Ev(%struct.b2Simplex* %simplex)
  br label %70

; <label>:69                                      ; preds = %63
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 497, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput, i32 0, i32 0)) #15
  unreachable

; <label>:70                                      ; preds = %68, %67, %66
  %71 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %simplex, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 3
  br i1 %73, label %74, label %75

; <label>:74                                      ; preds = %70
  br label %183

; <label>:75                                      ; preds = %70
  %76 = call <2 x float> @_ZNK9b2Simplex15GetClosestPointEv(%struct.b2Simplex* %simplex)
  %77 = bitcast %struct.b2Vec2* %p to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %p)
  store float %78, float* %distanceSqr2, align 4
  %79 = load float, float* %distanceSqr2, align 4
  %80 = load float, float* %distanceSqr1, align 4
  %81 = fcmp oge float %79, %80
  br i1 %81, label %82, label %83

; <label>:82                                      ; preds = %75
  br label %83

; <label>:83                                      ; preds = %82, %75
  %84 = load float, float* %distanceSqr2, align 4
  store float %84, float* %distanceSqr1, align 4
  %85 = call <2 x float> @_ZNK9b2Simplex18GetSearchDirectionEv(%struct.b2Simplex* %simplex)
  %86 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  %87 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %d)
  %88 = fcmp olt float %87, 0x3D10000000000000
  br i1 %88, label %89, label %90

; <label>:89                                      ; preds = %83
  br label %183

; <label>:90                                      ; preds = %83
  %91 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %92 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %simplex, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %91, i64 %94
  store %struct.b2SimplexVertex* %95, %struct.b2SimplexVertex** %vertex, align 8
  %96 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyA, align 8
  %97 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %transformA, i32 0, i32 1
  %98 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %d)
  %99 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %98, <2 x float>* %99, align 4
  %100 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %97, %struct.b2Vec2* dereferenceable(8) %5)
  %101 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %100, <2 x float>* %101, align 4
  %102 = call i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %96, %struct.b2Vec2* dereferenceable(8) %4)
  %103 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %104 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %103, i32 0, i32 4
  store i32 %102, i32* %104, align 4
  %105 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %106 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %105, i32 0, i32 0
  %107 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyA, align 8
  %108 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %109 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %108, i32 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %107, i32 %110)
  %112 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %transformA, %struct.b2Vec2* dereferenceable(8) %111)
  %113 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %112, <2 x float>* %113, align 4
  %114 = bitcast %struct.b2Vec2* %106 to i8*
  %115 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 4, i1 false)
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %wBLocal)
  %116 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyB, align 8
  %117 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %transformB, i32 0, i32 1
  %118 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %117, %struct.b2Vec2* dereferenceable(8) %d)
  %119 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = call i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %116, %struct.b2Vec2* dereferenceable(8) %7)
  %121 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %122 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %121, i32 0, i32 5
  store i32 %120, i32* %122, align 4
  %123 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %124 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %123, i32 0, i32 1
  %125 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyB, align 8
  %126 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %127 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %126, i32 0, i32 5
  %128 = load i32, i32* %127, align 4
  %129 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %125, i32 %128)
  %130 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %transformB, %struct.b2Vec2* dereferenceable(8) %129)
  %131 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %130, <2 x float>* %131, align 4
  %132 = bitcast %struct.b2Vec2* %124 to i8*
  %133 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 4, i1 false)
  %134 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %135 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %134, i32 0, i32 2
  %136 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %137 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %136, i32 0, i32 1
  %138 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %139 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %138, i32 0, i32 0
  %140 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %137, %struct.b2Vec2* dereferenceable(8) %139)
  %141 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %140, <2 x float>* %141, align 4
  %142 = bitcast %struct.b2Vec2* %135 to i8*
  %143 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %143, i64 8, i32 4, i1 false)
  %144 = load i32, i32* %iter, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %iter, align 4
  %146 = load i32, i32* @b2_gjkIters, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* @b2_gjkIters, align 4
  store i8 0, i8* %duplicate, align 1
  store i32 0, i32* %i1, align 4
  br label %148

; <label>:148                                     ; preds = %172, %90
  %149 = load i32, i32* %i1, align 4
  %150 = load i32, i32* %saveCount, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %152, label %175

; <label>:152                                     ; preds = %148
  %153 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %154 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %153, i32 0, i32 4
  %155 = load i32, i32* %154, align 4
  %156 = load i32, i32* %i1, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [3 x i32], [3 x i32]* %saveA, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %155, %159
  br i1 %160, label %161, label %171

; <label>:161                                     ; preds = %152
  %162 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertex, align 8
  %163 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %162, i32 0, i32 5
  %164 = load i32, i32* %163, align 4
  %165 = load i32, i32* %i1, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [3 x i32], [3 x i32]* %saveB, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %164, %168
  br i1 %169, label %170, label %171

; <label>:170                                     ; preds = %161
  store i8 1, i8* %duplicate, align 1
  br label %175

; <label>:171                                     ; preds = %161, %152
  br label %172

; <label>:172                                     ; preds = %171
  %173 = load i32, i32* %i1, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %i1, align 4
  br label %148

; <label>:175                                     ; preds = %170, %148
  %176 = load i8, i8* %duplicate, align 1
  %177 = trunc i8 %176 to i1
  br i1 %177, label %178, label %179

; <label>:178                                     ; preds = %175
  br label %183

; <label>:179                                     ; preds = %175
  %180 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %simplex, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %180, align 4
  br label %31

; <label>:183                                     ; preds = %178, %89, %74, %31
  %184 = load i32, i32* @b2_gjkMaxIters, align 4
  %185 = load i32, i32* %iter, align 4
  %186 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %184, i32 %185)
  store i32 %186, i32* @b2_gjkMaxIters, align 4
  %187 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %188 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %187, i32 0, i32 0
  %189 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %190 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %189, i32 0, i32 1
  call void @_ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_(%struct.b2Simplex* %simplex, %struct.b2Vec2* %188, %struct.b2Vec2* %190)
  %191 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %192 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %191, i32 0, i32 0
  %193 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %194 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %193, i32 0, i32 1
  %195 = call float @_Z10b2DistanceRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %192, %struct.b2Vec2* dereferenceable(8) %194)
  %196 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %197 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %196, i32 0, i32 2
  store float %195, float* %197, align 4
  %198 = load i32, i32* %iter, align 4
  %199 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %200 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %199, i32 0, i32 3
  store i32 %198, i32* %200, align 4
  %201 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  call void @_ZNK9b2Simplex10WriteCacheEP14b2SimplexCache(%struct.b2Simplex* %simplex, %struct.b2SimplexCache* %201)
  %202 = load %struct.b2DistanceInput*, %struct.b2DistanceInput** %3, align 8
  %203 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %202, i32 0, i32 4
  %204 = load i8, i8* %203, align 8
  %205 = trunc i8 %204 to i1
  br i1 %205, label %206, label %270

; <label>:206                                     ; preds = %183
  %207 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyA, align 8
  %208 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %207, i32 0, i32 3
  %209 = load float, float* %208, align 4
  store float %209, float* %rA, align 4
  %210 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyB, align 8
  %211 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %210, i32 0, i32 3
  %212 = load float, float* %211, align 4
  store float %212, float* %rB, align 4
  %213 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %214 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %213, i32 0, i32 2
  %215 = load float, float* %214, align 4
  %216 = load float, float* %rA, align 4
  %217 = load float, float* %rB, align 4
  %218 = fadd float %216, %217
  %219 = fcmp ogt float %215, %218
  br i1 %219, label %220, label %250

; <label>:220                                     ; preds = %206
  %221 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %222 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %221, i32 0, i32 2
  %223 = load float, float* %222, align 4
  %224 = fcmp ogt float %223, 0x3E80000000000000
  br i1 %224, label %225, label %250

; <label>:225                                     ; preds = %220
  %226 = load float, float* %rA, align 4
  %227 = load float, float* %rB, align 4
  %228 = fadd float %226, %227
  %229 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %230 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %229, i32 0, i32 2
  %231 = load float, float* %230, align 4
  %232 = fsub float %231, %228
  store float %232, float* %230, align 4
  %233 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %234 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %233, i32 0, i32 1
  %235 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %236 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %235, i32 0, i32 0
  %237 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %234, %struct.b2Vec2* dereferenceable(8) %236)
  %238 = bitcast %struct.b2Vec2* %normal to <2 x float>*
  store <2 x float> %237, <2 x float>* %238, align 4
  %239 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %normal)
  %240 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %241 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %240, i32 0, i32 0
  %242 = load float, float* %rA, align 4
  %243 = call <2 x float> @_ZmlfRK6b2Vec2(float %242, %struct.b2Vec2* dereferenceable(8) %normal)
  %244 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %243, <2 x float>* %244, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %241, %struct.b2Vec2* dereferenceable(8) %10)
  %245 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %246 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %245, i32 0, i32 1
  %247 = load float, float* %rB, align 4
  %248 = call <2 x float> @_ZmlfRK6b2Vec2(float %247, %struct.b2Vec2* dereferenceable(8) %normal)
  %249 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %248, <2 x float>* %249, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %246, %struct.b2Vec2* dereferenceable(8) %11)
  br label %269

; <label>:250                                     ; preds = %220, %206
  %251 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %252 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %251, i32 0, i32 0
  %253 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %254 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %253, i32 0, i32 1
  %255 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %252, %struct.b2Vec2* dereferenceable(8) %254)
  %256 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %255, <2 x float>* %256, align 4
  %257 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %12)
  %258 = bitcast %struct.b2Vec2* %p2 to <2 x float>*
  store <2 x float> %257, <2 x float>* %258, align 4
  %259 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %260 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %259, i32 0, i32 0
  %261 = bitcast %struct.b2Vec2* %260 to i8*
  %262 = bitcast %struct.b2Vec2* %p2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %262, i64 8, i32 4, i1 false)
  %263 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %264 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %263, i32 0, i32 1
  %265 = bitcast %struct.b2Vec2* %264 to i8*
  %266 = bitcast %struct.b2Vec2* %p2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %265, i8* %266, i64 8, i32 4, i1 false)
  %267 = load %struct.b2DistanceOutput*, %struct.b2DistanceOutput** %1, align 8
  %268 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %267, i32 0, i32 2
  store float 0.000000e+00, float* %268, align 4
  br label %269

; <label>:269                                     ; preds = %250, %225
  br label %270

; <label>:270                                     ; preds = %269, %183
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN9b2SimplexC2Ev(%struct.b2Simplex* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2Simplex*, align 8
  store %struct.b2Simplex* %this, %struct.b2Simplex** %1, align 8
  %2 = load %struct.b2Simplex*, %struct.b2Simplex** %1, align 8
  %3 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  call void @_ZN15b2SimplexVertexC2Ev(%struct.b2SimplexVertex* %3)
  %4 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  call void @_ZN15b2SimplexVertexC2Ev(%struct.b2SimplexVertex* %4)
  %5 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  call void @_ZN15b2SimplexVertexC2Ev(%struct.b2SimplexVertex* %5)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2SimplexVertexC2Ev(%struct.b2SimplexVertex* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2SimplexVertex*, align 8
  store %struct.b2SimplexVertex* %this, %struct.b2SimplexVertex** %1, align 8
  %2 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %1, align 8
  %3 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  %5 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %2, i32 0, i32 2
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %5)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_(%struct.b2Simplex* %this, %struct.b2SimplexCache* %cache, %struct.b2DistanceProxy* %proxyA, %struct.b2Transform* dereferenceable(16) %transformA, %struct.b2DistanceProxy* %proxyB, %struct.b2Transform* dereferenceable(16) %transformB) #0 comdat align 2 {
  %1 = alloca %struct.b2Simplex*, align 8
  %2 = alloca %struct.b2SimplexCache*, align 8
  %3 = alloca %struct.b2DistanceProxy*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %5 = alloca %struct.b2DistanceProxy*, align 8
  %6 = alloca %struct.b2Transform*, align 8
  %vertices = alloca %struct.b2SimplexVertex*, align 8
  %i = alloca i32, align 4
  %v = alloca %struct.b2SimplexVertex*, align 8
  %wALocal = alloca %struct.b2Vec2, align 4
  %wBLocal = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %metric1 = alloca float, align 4
  %metric2 = alloca float, align 4
  %v1 = alloca %struct.b2SimplexVertex*, align 8
  %wALocal2 = alloca %struct.b2Vec2, align 4
  %wBLocal3 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %1, align 8
  store %struct.b2SimplexCache* %cache, %struct.b2SimplexCache** %2, align 8
  store %struct.b2DistanceProxy* %proxyA, %struct.b2DistanceProxy** %3, align 8
  store %struct.b2Transform* %transformA, %struct.b2Transform** %4, align 8
  store %struct.b2DistanceProxy* %proxyB, %struct.b2DistanceProxy** %5, align 8
  store %struct.b2Transform* %transformB, %struct.b2Transform** %6, align 8
  %13 = load %struct.b2Simplex*, %struct.b2Simplex** %1, align 8
  %14 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %15 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %14, i32 0, i32 1
  %16 = load i16, i16* %15, align 4
  %17 = zext i16 %16 to i32
  %18 = icmp sle i32 %17, 3
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %0
  br label %22

; <label>:20                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.420, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 102, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %22

; <label>:22                                      ; preds = %21, %19
  %23 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %24 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %23, i32 0, i32 1
  %25 = load i16, i16* %24, align 4
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 3
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 0
  store %struct.b2SimplexVertex* %28, %struct.b2SimplexVertex** %vertices, align 8
  store i32 0, i32* %i, align 4
  br label %29

; <label>:29                                      ; preds = %97, %22
  %30 = load i32, i32* %i, align 4
  %31 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, %32
  br i1 %33, label %34, label %100

; <label>:34                                      ; preds = %29
  %35 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %36 = load i32, i32* %i, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %35, i64 %37
  store %struct.b2SimplexVertex* %38, %struct.b2SimplexVertex** %v, align 8
  %39 = load i32, i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %42 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %41, i32 0, i32 2
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* %42, i64 0, i64 %40
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %47 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %46, i32 0, i32 4
  store i32 %45, i32* %47, align 4
  %48 = load i32, i32* %i, align 4
  %49 = sext i32 %48 to i64
  %50 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %51 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %50, i32 0, i32 3
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* %51, i64 0, i64 %49
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %56 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %55, i32 0, i32 5
  store i32 %54, i32* %56, align 4
  %57 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %3, align 8
  %58 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %59 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %58, i32 0, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %57, i32 %60)
  %62 = bitcast %struct.b2Vec2* %wALocal to i8*
  %63 = bitcast %struct.b2Vec2* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 4, i1 false)
  %64 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %5, align 8
  %65 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %66 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %65, i32 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %64, i32 %67)
  %69 = bitcast %struct.b2Vec2* %wBLocal to i8*
  %70 = bitcast %struct.b2Vec2* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 4, i1 false)
  %71 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %72 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %71, i32 0, i32 0
  %73 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %74 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %73, %struct.b2Vec2* dereferenceable(8) %wALocal)
  %75 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %74, <2 x float>* %75, align 4
  %76 = bitcast %struct.b2Vec2* %72 to i8*
  %77 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false)
  %78 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %79 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %78, i32 0, i32 1
  %80 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %81 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %80, %struct.b2Vec2* dereferenceable(8) %wBLocal)
  %82 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %81, <2 x float>* %82, align 4
  %83 = bitcast %struct.b2Vec2* %79 to i8*
  %84 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false)
  %85 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %86 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %85, i32 0, i32 2
  %87 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %88 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %87, i32 0, i32 1
  %89 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %90 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %89, i32 0, i32 0
  %91 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %88, %struct.b2Vec2* dereferenceable(8) %90)
  %92 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %91, <2 x float>* %92, align 4
  %93 = bitcast %struct.b2Vec2* %86 to i8*
  %94 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 4, i1 false)
  %95 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v, align 8
  %96 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %95, i32 0, i32 3
  store float 0.000000e+00, float* %96, align 4
  br label %97

; <label>:97                                      ; preds = %34
  %98 = load i32, i32* %i, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %i, align 4
  br label %29

; <label>:100                                     ; preds = %29
  %101 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, 1
  br i1 %103, label %104, label %124

; <label>:104                                     ; preds = %100
  %105 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %106 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %105, i32 0, i32 0
  %107 = load float, float* %106, align 4
  store float %107, float* %metric1, align 4
  %108 = call float @_ZNK9b2Simplex9GetMetricEv(%struct.b2Simplex* %13)
  store float %108, float* %metric2, align 4
  %109 = load float, float* %metric2, align 4
  %110 = load float, float* %metric1, align 4
  %111 = fmul float 5.000000e-01, %110
  %112 = fcmp olt float %109, %111
  br i1 %112, label %121, label %113

; <label>:113                                     ; preds = %104
  %114 = load float, float* %metric1, align 4
  %115 = fmul float 2.000000e+00, %114
  %116 = load float, float* %metric2, align 4
  %117 = fcmp olt float %115, %116
  br i1 %117, label %121, label %118

; <label>:118                                     ; preds = %113
  %119 = load float, float* %metric2, align 4
  %120 = fcmp olt float %119, 0x3E80000000000000
  br i1 %120, label %121, label %123

; <label>:121                                     ; preds = %118, %113, %104
  %122 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 3
  store i32 0, i32* %122, align 4
  br label %123

; <label>:123                                     ; preds = %121, %118
  br label %124

; <label>:124                                     ; preds = %123, %100
  %125 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %170

; <label>:128                                     ; preds = %124
  %129 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %130 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %129, i64 0
  store %struct.b2SimplexVertex* %130, %struct.b2SimplexVertex** %v1, align 8
  %131 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %132 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %131, i32 0, i32 4
  store i32 0, i32* %132, align 4
  %133 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %134 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %133, i32 0, i32 5
  store i32 0, i32* %134, align 4
  %135 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %3, align 8
  %136 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %135, i32 0)
  %137 = bitcast %struct.b2Vec2* %wALocal2 to i8*
  %138 = bitcast %struct.b2Vec2* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 8, i32 4, i1 false)
  %139 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %5, align 8
  %140 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %139, i32 0)
  %141 = bitcast %struct.b2Vec2* %wBLocal3 to i8*
  %142 = bitcast %struct.b2Vec2* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 4, i1 false)
  %143 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %144 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %143, i32 0, i32 0
  %145 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %146 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %145, %struct.b2Vec2* dereferenceable(8) %wALocal2)
  %147 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  %148 = bitcast %struct.b2Vec2* %144 to i8*
  %149 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 8, i32 4, i1 false)
  %150 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %151 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %150, i32 0, i32 1
  %152 = load %struct.b2Transform*, %struct.b2Transform** %6, align 8
  %153 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %152, %struct.b2Vec2* dereferenceable(8) %wBLocal3)
  %154 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %153, <2 x float>* %154, align 4
  %155 = bitcast %struct.b2Vec2* %151 to i8*
  %156 = bitcast %struct.b2Vec2* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 8, i32 4, i1 false)
  %157 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %158 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %157, i32 0, i32 2
  %159 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %160 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %159, i32 0, i32 1
  %161 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %162 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %161, i32 0, i32 0
  %163 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %160, %struct.b2Vec2* dereferenceable(8) %162)
  %164 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %163, <2 x float>* %164, align 4
  %165 = bitcast %struct.b2Vec2* %158 to i8*
  %166 = bitcast %struct.b2Vec2* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %165, i8* %166, i64 8, i32 4, i1 false)
  %167 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %v1, align 8
  %168 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %167, i32 0, i32 3
  store float 1.000000e+00, float* %168, align 4
  %169 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %13, i32 0, i32 3
  store i32 1, i32* %169, align 4
  br label %170

; <label>:170                                     ; preds = %128, %124
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %this, i32 %index) #5 comdat align 2 {
  %1 = alloca %struct.b2DistanceProxy*, align 8
  %2 = alloca i32, align 4
  store %struct.b2DistanceProxy* %this, %struct.b2DistanceProxy** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp sle i32 0, %4
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %3, i32 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  br label %14

; <label>:12                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.421, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.5.422, i32 0, i32 0), i32 103, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZNK15b2DistanceProxy9GetVertexEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %3, i32 0, i32 1
  %18 = load %struct.b2Vec2*, %struct.b2Vec2** %17, align 8
  %19 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %18, i64 %16
  ret %struct.b2Vec2* %19
}

; Function Attrs: uwtable
define linkonce_odr float @_ZNK9b2Simplex9GetMetricEv(%struct.b2Simplex* %this) #0 comdat align 2 {
  %1 = alloca float, align 4
  %2 = alloca %struct.b2Simplex*, align 8
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %2, align 8
  %5 = load %struct.b2Simplex*, %struct.b2Simplex** %2, align 8
  %6 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %30 [
    i32 0, label %8
    i32 1, label %9
    i32 2, label %10
    i32 3, label %16
  ]

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 247, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex9GetMetricEv, i32 0, i32 0)) #15
  unreachable

; <label>:9                                       ; preds = %0
  store float 0.000000e+00, float* %1, align 4
  br label %31

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 0
  %12 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %11, i32 0, i32 2
  %13 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %13, i32 0, i32 2
  %15 = call float @_Z10b2DistanceRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %14)
  store float %15, float* %1, align 4
  br label %31

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 1
  %18 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %17, i32 0, i32 2
  %19 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 0
  %20 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %19, i32 0, i32 2
  %21 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %18, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 2
  %24 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %23, i32 0, i32 2
  %25 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 0
  %26 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %25, i32 0, i32 2
  %27 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %24, %struct.b2Vec2* dereferenceable(8) %26)
  %28 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %27, <2 x float>* %28, align 4
  %29 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %4)
  store float %29, float* %1, align 4
  br label %31

; <label>:30                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 260, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex9GetMetricEv, i32 0, i32 0)) #15
  unreachable

; <label>:31                                      ; preds = %16, %10, %9
  %32 = load float, float* %1, align 4
  ret float %32
}

; Function Attrs: inlinehint uwtable
define linkonce_odr float @_Z10b2DistanceRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #1 comdat {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %c = alloca %struct.b2Vec2, align 4
  store %struct.b2Vec2* %a, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %5 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %4)
  %6 = bitcast %struct.b2Vec2* %c to <2 x float>*
  store <2 x float> %5, <2 x float>* %6, align 4
  %7 = call float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %c)
  ret float %7
}

; Function Attrs: uwtable
define void @_ZN9b2Simplex6Solve2Ev(%struct.b2Simplex* %this) #0 align 2 {
  %1 = alloca %struct.b2Simplex*, align 8
  %w1 = alloca %struct.b2Vec2, align 4
  %w2 = alloca %struct.b2Vec2, align 4
  %e12 = alloca %struct.b2Vec2, align 4
  %d12_2 = alloca float, align 4
  %d12_1 = alloca float, align 4
  %inv_d12 = alloca float, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %1, align 8
  %2 = load %struct.b2Simplex*, %struct.b2Simplex** %1, align 8
  %3 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %4 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %3, i32 0, i32 2
  %5 = bitcast %struct.b2Vec2* %w1 to i8*
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false)
  %7 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %8 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %7, i32 0, i32 2
  %9 = bitcast %struct.b2Vec2* %w2 to i8*
  %10 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 4, i1 false)
  %11 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w2, %struct.b2Vec2* dereferenceable(8) %w1)
  %12 = bitcast %struct.b2Vec2* %e12 to <2 x float>*
  store <2 x float> %11, <2 x float>* %12, align 4
  %13 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w1, %struct.b2Vec2* dereferenceable(8) %e12)
  %14 = fsub float -0.000000e+00, %13
  store float %14, float* %d12_2, align 4
  %15 = load float, float* %d12_2, align 4
  %16 = fcmp ole float %15, 0.000000e+00
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %0
  %18 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %19 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %18, i32 0, i32 3
  store float 1.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 1, i32* %20, align 4
  br label %49

; <label>:21                                      ; preds = %0
  %22 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w2, %struct.b2Vec2* dereferenceable(8) %e12)
  store float %22, float* %d12_1, align 4
  %23 = load float, float* %d12_1, align 4
  %24 = fcmp ole float %23, 0.000000e+00
  br i1 %24, label %25, label %33

; <label>:25                                      ; preds = %21
  %26 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %27 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %26, i32 0, i32 3
  store float 1.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %30 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %31 = bitcast %struct.b2SimplexVertex* %29 to i8*
  %32 = bitcast %struct.b2SimplexVertex* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 36, i32 4, i1 false)
  br label %49

; <label>:33                                      ; preds = %21
  %34 = load float, float* %d12_1, align 4
  %35 = load float, float* %d12_2, align 4
  %36 = fadd float %34, %35
  %37 = fdiv float 1.000000e+00, %36
  store float %37, float* %inv_d12, align 4
  %38 = load float, float* %d12_1, align 4
  %39 = load float, float* %inv_d12, align 4
  %40 = fmul float %38, %39
  %41 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %42 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %41, i32 0, i32 3
  store float %40, float* %42, align 4
  %43 = load float, float* %d12_2, align 4
  %44 = load float, float* %inv_d12, align 4
  %45 = fmul float %43, %44
  %46 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %47 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %46, i32 0, i32 3
  store float %45, float* %47, align 4
  %48 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 2, i32* %48, align 4
  br label %49

; <label>:49                                      ; preds = %33, %25, %17
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Simplex6Solve3Ev(%struct.b2Simplex* %this) #0 align 2 {
  %1 = alloca %struct.b2Simplex*, align 8
  %w1 = alloca %struct.b2Vec2, align 4
  %w2 = alloca %struct.b2Vec2, align 4
  %w3 = alloca %struct.b2Vec2, align 4
  %e12 = alloca %struct.b2Vec2, align 4
  %w1e12 = alloca float, align 4
  %w2e12 = alloca float, align 4
  %d12_1 = alloca float, align 4
  %d12_2 = alloca float, align 4
  %e13 = alloca %struct.b2Vec2, align 4
  %w1e13 = alloca float, align 4
  %w3e13 = alloca float, align 4
  %d13_1 = alloca float, align 4
  %d13_2 = alloca float, align 4
  %e23 = alloca %struct.b2Vec2, align 4
  %w2e23 = alloca float, align 4
  %w3e23 = alloca float, align 4
  %d23_1 = alloca float, align 4
  %d23_2 = alloca float, align 4
  %n123 = alloca float, align 4
  %d123_1 = alloca float, align 4
  %d123_2 = alloca float, align 4
  %d123_3 = alloca float, align 4
  %inv_d12 = alloca float, align 4
  %inv_d13 = alloca float, align 4
  %inv_d23 = alloca float, align 4
  %inv_d123 = alloca float, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %1, align 8
  %2 = load %struct.b2Simplex*, %struct.b2Simplex** %1, align 8
  %3 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %4 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %3, i32 0, i32 2
  %5 = bitcast %struct.b2Vec2* %w1 to i8*
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false)
  %7 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %8 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %7, i32 0, i32 2
  %9 = bitcast %struct.b2Vec2* %w2 to i8*
  %10 = bitcast %struct.b2Vec2* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 4, i1 false)
  %11 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %12 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %11, i32 0, i32 2
  %13 = bitcast %struct.b2Vec2* %w3 to i8*
  %14 = bitcast %struct.b2Vec2* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false)
  %15 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w2, %struct.b2Vec2* dereferenceable(8) %w1)
  %16 = bitcast %struct.b2Vec2* %e12 to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 4
  %17 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w1, %struct.b2Vec2* dereferenceable(8) %e12)
  store float %17, float* %w1e12, align 4
  %18 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w2, %struct.b2Vec2* dereferenceable(8) %e12)
  store float %18, float* %w2e12, align 4
  %19 = load float, float* %w2e12, align 4
  store float %19, float* %d12_1, align 4
  %20 = load float, float* %w1e12, align 4
  %21 = fsub float -0.000000e+00, %20
  store float %21, float* %d12_2, align 4
  %22 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w3, %struct.b2Vec2* dereferenceable(8) %w1)
  %23 = bitcast %struct.b2Vec2* %e13 to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w1, %struct.b2Vec2* dereferenceable(8) %e13)
  store float %24, float* %w1e13, align 4
  %25 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w3, %struct.b2Vec2* dereferenceable(8) %e13)
  store float %25, float* %w3e13, align 4
  %26 = load float, float* %w3e13, align 4
  store float %26, float* %d13_1, align 4
  %27 = load float, float* %w1e13, align 4
  %28 = fsub float -0.000000e+00, %27
  store float %28, float* %d13_2, align 4
  %29 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w3, %struct.b2Vec2* dereferenceable(8) %w2)
  %30 = bitcast %struct.b2Vec2* %e23 to <2 x float>*
  store <2 x float> %29, <2 x float>* %30, align 4
  %31 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w2, %struct.b2Vec2* dereferenceable(8) %e23)
  store float %31, float* %w2e23, align 4
  %32 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w3, %struct.b2Vec2* dereferenceable(8) %e23)
  store float %32, float* %w3e23, align 4
  %33 = load float, float* %w3e23, align 4
  store float %33, float* %d23_1, align 4
  %34 = load float, float* %w2e23, align 4
  %35 = fsub float -0.000000e+00, %34
  store float %35, float* %d23_2, align 4
  %36 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e12, %struct.b2Vec2* dereferenceable(8) %e13)
  store float %36, float* %n123, align 4
  %37 = load float, float* %n123, align 4
  %38 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w2, %struct.b2Vec2* dereferenceable(8) %w3)
  %39 = fmul float %37, %38
  store float %39, float* %d123_1, align 4
  %40 = load float, float* %n123, align 4
  %41 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w3, %struct.b2Vec2* dereferenceable(8) %w1)
  %42 = fmul float %40, %41
  store float %42, float* %d123_2, align 4
  %43 = load float, float* %n123, align 4
  %44 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %w1, %struct.b2Vec2* dereferenceable(8) %w2)
  %45 = fmul float %43, %44
  store float %45, float* %d123_3, align 4
  %46 = load float, float* %d12_2, align 4
  %47 = fcmp ole float %46, 0.000000e+00
  br i1 %47, label %48, label %55

; <label>:48                                      ; preds = %0
  %49 = load float, float* %d13_2, align 4
  %50 = fcmp ole float %49, 0.000000e+00
  br i1 %50, label %51, label %55

; <label>:51                                      ; preds = %48
  %52 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %53 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %52, i32 0, i32 3
  store float 1.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 1, i32* %54, align 4
  br label %189

; <label>:55                                      ; preds = %48, %0
  %56 = load float, float* %d12_1, align 4
  %57 = fcmp ogt float %56, 0.000000e+00
  br i1 %57, label %58, label %80

; <label>:58                                      ; preds = %55
  %59 = load float, float* %d12_2, align 4
  %60 = fcmp ogt float %59, 0.000000e+00
  br i1 %60, label %61, label %80

; <label>:61                                      ; preds = %58
  %62 = load float, float* %d123_3, align 4
  %63 = fcmp ole float %62, 0.000000e+00
  br i1 %63, label %64, label %80

; <label>:64                                      ; preds = %61
  %65 = load float, float* %d12_1, align 4
  %66 = load float, float* %d12_2, align 4
  %67 = fadd float %65, %66
  %68 = fdiv float 1.000000e+00, %67
  store float %68, float* %inv_d12, align 4
  %69 = load float, float* %d12_1, align 4
  %70 = load float, float* %inv_d12, align 4
  %71 = fmul float %69, %70
  %72 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %73 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %72, i32 0, i32 3
  store float %71, float* %73, align 4
  %74 = load float, float* %d12_2, align 4
  %75 = load float, float* %inv_d12, align 4
  %76 = fmul float %74, %75
  %77 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %78 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %77, i32 0, i32 3
  store float %76, float* %78, align 4
  %79 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 2, i32* %79, align 4
  br label %189

; <label>:80                                      ; preds = %61, %58, %55
  %81 = load float, float* %d13_1, align 4
  %82 = fcmp ogt float %81, 0.000000e+00
  br i1 %82, label %83, label %109

; <label>:83                                      ; preds = %80
  %84 = load float, float* %d13_2, align 4
  %85 = fcmp ogt float %84, 0.000000e+00
  br i1 %85, label %86, label %109

; <label>:86                                      ; preds = %83
  %87 = load float, float* %d123_2, align 4
  %88 = fcmp ole float %87, 0.000000e+00
  br i1 %88, label %89, label %109

; <label>:89                                      ; preds = %86
  %90 = load float, float* %d13_1, align 4
  %91 = load float, float* %d13_2, align 4
  %92 = fadd float %90, %91
  %93 = fdiv float 1.000000e+00, %92
  store float %93, float* %inv_d13, align 4
  %94 = load float, float* %d13_1, align 4
  %95 = load float, float* %inv_d13, align 4
  %96 = fmul float %94, %95
  %97 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %98 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %97, i32 0, i32 3
  store float %96, float* %98, align 4
  %99 = load float, float* %d13_2, align 4
  %100 = load float, float* %inv_d13, align 4
  %101 = fmul float %99, %100
  %102 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %103 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %102, i32 0, i32 3
  store float %101, float* %103, align 4
  %104 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 2, i32* %104, align 4
  %105 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %106 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %107 = bitcast %struct.b2SimplexVertex* %105 to i8*
  %108 = bitcast %struct.b2SimplexVertex* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 36, i32 4, i1 false)
  br label %189

; <label>:109                                     ; preds = %86, %83, %80
  %110 = load float, float* %d12_1, align 4
  %111 = fcmp ole float %110, 0.000000e+00
  br i1 %111, label %112, label %123

; <label>:112                                     ; preds = %109
  %113 = load float, float* %d23_2, align 4
  %114 = fcmp ole float %113, 0.000000e+00
  br i1 %114, label %115, label %123

; <label>:115                                     ; preds = %112
  %116 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %117 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %116, i32 0, i32 3
  store float 1.000000e+00, float* %117, align 4
  %118 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 1, i32* %118, align 4
  %119 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %120 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %121 = bitcast %struct.b2SimplexVertex* %119 to i8*
  %122 = bitcast %struct.b2SimplexVertex* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 36, i32 4, i1 false)
  br label %189

; <label>:123                                     ; preds = %112, %109
  %124 = load float, float* %d13_1, align 4
  %125 = fcmp ole float %124, 0.000000e+00
  br i1 %125, label %126, label %137

; <label>:126                                     ; preds = %123
  %127 = load float, float* %d23_1, align 4
  %128 = fcmp ole float %127, 0.000000e+00
  br i1 %128, label %129, label %137

; <label>:129                                     ; preds = %126
  %130 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %131 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %130, i32 0, i32 3
  store float 1.000000e+00, float* %131, align 4
  %132 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 1, i32* %132, align 4
  %133 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %134 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %135 = bitcast %struct.b2SimplexVertex* %133 to i8*
  %136 = bitcast %struct.b2SimplexVertex* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 36, i32 4, i1 false)
  br label %189

; <label>:137                                     ; preds = %126, %123
  %138 = load float, float* %d23_1, align 4
  %139 = fcmp ogt float %138, 0.000000e+00
  br i1 %139, label %140, label %166

; <label>:140                                     ; preds = %137
  %141 = load float, float* %d23_2, align 4
  %142 = fcmp ogt float %141, 0.000000e+00
  br i1 %142, label %143, label %166

; <label>:143                                     ; preds = %140
  %144 = load float, float* %d123_1, align 4
  %145 = fcmp ole float %144, 0.000000e+00
  br i1 %145, label %146, label %166

; <label>:146                                     ; preds = %143
  %147 = load float, float* %d23_1, align 4
  %148 = load float, float* %d23_2, align 4
  %149 = fadd float %147, %148
  %150 = fdiv float 1.000000e+00, %149
  store float %150, float* %inv_d23, align 4
  %151 = load float, float* %d23_1, align 4
  %152 = load float, float* %inv_d23, align 4
  %153 = fmul float %151, %152
  %154 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %155 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %154, i32 0, i32 3
  store float %153, float* %155, align 4
  %156 = load float, float* %d23_2, align 4
  %157 = load float, float* %inv_d23, align 4
  %158 = fmul float %156, %157
  %159 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %160 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %159, i32 0, i32 3
  store float %158, float* %160, align 4
  %161 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 2, i32* %161, align 4
  %162 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %163 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %164 = bitcast %struct.b2SimplexVertex* %162 to i8*
  %165 = bitcast %struct.b2SimplexVertex* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 36, i32 4, i1 false)
  br label %189

; <label>:166                                     ; preds = %143, %140, %137
  %167 = load float, float* %d123_1, align 4
  %168 = load float, float* %d123_2, align 4
  %169 = fadd float %167, %168
  %170 = load float, float* %d123_3, align 4
  %171 = fadd float %169, %170
  %172 = fdiv float 1.000000e+00, %171
  store float %172, float* %inv_d123, align 4
  %173 = load float, float* %d123_1, align 4
  %174 = load float, float* %inv_d123, align 4
  %175 = fmul float %173, %174
  %176 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 0
  %177 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %176, i32 0, i32 3
  store float %175, float* %177, align 4
  %178 = load float, float* %d123_2, align 4
  %179 = load float, float* %inv_d123, align 4
  %180 = fmul float %178, %179
  %181 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 1
  %182 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %181, i32 0, i32 3
  store float %180, float* %182, align 4
  %183 = load float, float* %d123_3, align 4
  %184 = load float, float* %inv_d123, align 4
  %185 = fmul float %183, %184
  %186 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 2
  %187 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %186, i32 0, i32 3
  store float %185, float* %187, align 4
  %188 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %2, i32 0, i32 3
  store i32 3, i32* %188, align 4
  br label %189

; <label>:189                                     ; preds = %166, %146, %129, %115, %89, %64, %51
  ret void
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK9b2Simplex15GetClosestPointEv(%struct.b2Simplex* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Simplex*, align 8
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %2, align 8
  %5 = load %struct.b2Simplex*, %struct.b2Simplex** %2, align 8
  %6 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %33 [
    i32 0, label %8
    i32 1, label %9
    i32 2, label %14
    i32 3, label %31
  ]

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 195, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex15GetClosestPointEv, i32 0, i32 0)) #15
  unreachable

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 0
  %11 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %10, i32 0, i32 2
  %12 = bitcast %struct.b2Vec2* %1 to i8*
  %13 = bitcast %struct.b2Vec2* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  br label %34

; <label>:14                                      ; preds = %0
  %15 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 0
  %16 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %15, i32 0, i32 3
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 0
  %19 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %18, i32 0, i32 2
  %20 = call <2 x float> @_ZmlfRK6b2Vec2(float %17, %struct.b2Vec2* dereferenceable(8) %19)
  %21 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %20, <2 x float>* %21, align 4
  %22 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 1
  %23 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %22, i32 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %5, i32 0, i32 1
  %26 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %25, i32 0, i32 2
  %27 = call <2 x float> @_ZmlfRK6b2Vec2(float %24, %struct.b2Vec2* dereferenceable(8) %26)
  %28 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %27, <2 x float>* %28, align 4
  %29 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %4)
  %30 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %29, <2 x float>* %30, align 4
  br label %34

; <label>:31                                      ; preds = %0
  %32 = bitcast %struct.b2Vec2* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* bitcast (%struct.b2Vec2* @b2Vec2_zero to i8*), i64 8, i32 4, i1 false)
  br label %34

; <label>:33                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 208, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex15GetClosestPointEv, i32 0, i32 0)) #15
  unreachable

; <label>:34                                      ; preds = %31, %14, %9
  %35 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  ret <2 x float> %36
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK9b2Simplex18GetSearchDirectionEv(%struct.b2Simplex* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Simplex*, align 8
  %e12 = alloca %struct.b2Vec2, align 4
  %sgn = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %2, align 8
  %4 = load %struct.b2Simplex*, %struct.b2Simplex** %2, align 8
  %5 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %4, i32 0, i32 3
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %32 [
    i32 1, label %7
    i32 2, label %12
  ]

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %4, i32 0, i32 0
  %9 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %8, i32 0, i32 2
  %10 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %9)
  %11 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %10, <2 x float>* %11, align 4
  br label %33

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %4, i32 0, i32 1
  %14 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %13, i32 0, i32 2
  %15 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %4, i32 0, i32 0
  %16 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %15, i32 0, i32 2
  %17 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %14, %struct.b2Vec2* dereferenceable(8) %16)
  %18 = bitcast %struct.b2Vec2* %e12 to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 4
  %19 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %4, i32 0, i32 0
  %20 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %19, i32 0, i32 2
  %21 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %20)
  %22 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e12, %struct.b2Vec2* dereferenceable(8) %3)
  store float %23, float* %sgn, align 4
  %24 = load float, float* %sgn, align 4
  %25 = fcmp ogt float %24, 0.000000e+00
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %12
  %27 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float 1.000000e+00, %struct.b2Vec2* dereferenceable(8) %e12)
  %28 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %27, <2 x float>* %28, align 4
  br label %33

; <label>:29                                      ; preds = %12
  %30 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %e12, float 1.000000e+00)
  %31 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 4
  br label %33

; <label>:32                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 185, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex18GetSearchDirectionEv, i32 0, i32 0)) #15
  unreachable

; <label>:33                                      ; preds = %29, %26, %7
  %34 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  ret <2 x float> %35
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %this, %struct.b2Vec2* dereferenceable(8) %d) #5 comdat align 2 {
  %1 = alloca %struct.b2DistanceProxy*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %bestIndex = alloca i32, align 4
  %bestValue = alloca float, align 4
  %i = alloca i32, align 4
  %value = alloca float, align 4
  store %struct.b2DistanceProxy* %this, %struct.b2DistanceProxy** %1, align 8
  store %struct.b2Vec2* %d, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %1, align 8
  store i32 0, i32* %bestIndex, align 4
  %4 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %3, i32 0, i32 1
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i64 0
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %8 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %7)
  store float %8, float* %bestValue, align 4
  store i32 1, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %29, %0
  %10 = load i32, i32* %i, align 4
  %11 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %3, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %32

; <label>:14                                      ; preds = %9
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %3, i32 0, i32 1
  %18 = load %struct.b2Vec2*, %struct.b2Vec2** %17, align 8
  %19 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %18, i64 %16
  %20 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %21 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %20)
  store float %21, float* %value, align 4
  %22 = load float, float* %value, align 4
  %23 = load float, float* %bestValue, align 4
  %24 = fcmp ogt float %22, %23
  br i1 %24, label %25, label %28

; <label>:25                                      ; preds = %14
  %26 = load i32, i32* %i, align 4
  store i32 %26, i32* %bestIndex, align 4
  %27 = load float, float* %value, align 4
  store float %27, float* %bestValue, align 4
  br label %28

; <label>:28                                      ; preds = %25, %14
  br label %29

; <label>:29                                      ; preds = %28
  %30 = load i32, i32* %i, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %i, align 4
  br label %9

; <label>:32                                      ; preds = %9
  %33 = load i32, i32* %bestIndex, align 4
  ret i32 %33
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_Z5b2MaxIiET_S0_S0_(i32 %a, i32 %b) #5 comdat {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  store i32 %b, i32* %2, align 4
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp sgt i32 %3, %4
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %1, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %2, align 4
  br label %10

; <label>:10                                      ; preds = %8, %6
  %11 = phi i32 [ %7, %6 ], [ %9, %8 ]
  ret i32 %11
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_(%struct.b2Simplex* %this, %struct.b2Vec2* %pA, %struct.b2Vec2* %pB) #0 comdat align 2 {
  %1 = alloca %struct.b2Simplex*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %1, align 8
  store %struct.b2Vec2* %pA, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %pB, %struct.b2Vec2** %3, align 8
  %15 = load %struct.b2Simplex*, %struct.b2Simplex** %1, align 8
  %16 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %102 [
    i32 0, label %18
    i32 1, label %19
    i32 2, label %30
    i32 3, label %69
  ]

; <label>:18                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 218, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_, i32 0, i32 0)) #15
  unreachable

; <label>:19                                      ; preds = %0
  %20 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %21 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %22 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %21, i32 0, i32 0
  %23 = bitcast %struct.b2Vec2* %20 to i8*
  %24 = bitcast %struct.b2Vec2* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false)
  %25 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %26 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %27 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %26, i32 0, i32 1
  %28 = bitcast %struct.b2Vec2* %25 to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  br label %103

; <label>:30                                      ; preds = %0
  %31 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %32 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %33 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %32, i32 0, i32 3
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %36 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %35, i32 0, i32 0
  %37 = call <2 x float> @_ZmlfRK6b2Vec2(float %34, %struct.b2Vec2* dereferenceable(8) %36)
  %38 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 4
  %39 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 1
  %40 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %39, i32 0, i32 3
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 1
  %43 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %42, i32 0, i32 0
  %44 = call <2 x float> @_ZmlfRK6b2Vec2(float %41, %struct.b2Vec2* dereferenceable(8) %43)
  %45 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %44, <2 x float>* %45, align 4
  %46 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %47 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 4
  %48 = bitcast %struct.b2Vec2* %31 to i8*
  %49 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false)
  %50 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %51 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %52 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %51, i32 0, i32 3
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %55 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %54, i32 0, i32 1
  %56 = call <2 x float> @_ZmlfRK6b2Vec2(float %53, %struct.b2Vec2* dereferenceable(8) %55)
  %57 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  %58 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 1
  %59 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %58, i32 0, i32 3
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 1
  %62 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %61, i32 0, i32 1
  %63 = call <2 x float> @_ZmlfRK6b2Vec2(float %60, %struct.b2Vec2* dereferenceable(8) %62)
  %64 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %63, <2 x float>* %64, align 4
  %65 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %9)
  %66 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 4
  %67 = bitcast %struct.b2Vec2* %50 to i8*
  %68 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 4, i1 false)
  br label %103

; <label>:69                                      ; preds = %0
  %70 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %71 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %72 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %71, i32 0, i32 3
  %73 = load float, float* %72, align 4
  %74 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 0
  %75 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %74, i32 0, i32 0
  %76 = call <2 x float> @_ZmlfRK6b2Vec2(float %73, %struct.b2Vec2* dereferenceable(8) %75)
  %77 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 1
  %79 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %78, i32 0, i32 3
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 1
  %82 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %81, i32 0, i32 0
  %83 = call <2 x float> @_ZmlfRK6b2Vec2(float %80, %struct.b2Vec2* dereferenceable(8) %82)
  %84 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %83, <2 x float>* %84, align 4
  %85 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %13)
  %86 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  %87 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 2
  %88 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %87, i32 0, i32 3
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %15, i32 0, i32 2
  %91 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %90, i32 0, i32 0
  %92 = call <2 x float> @_ZmlfRK6b2Vec2(float %89, %struct.b2Vec2* dereferenceable(8) %91)
  %93 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %92, <2 x float>* %93, align 4
  %94 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %14)
  %95 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %94, <2 x float>* %95, align 4
  %96 = bitcast %struct.b2Vec2* %70 to i8*
  %97 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 4, i1 false)
  %98 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %99 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %100 = bitcast %struct.b2Vec2* %98 to i8*
  %101 = bitcast %struct.b2Vec2* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 4, i1 false)
  br label %103

; <label>:102                                     ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.417, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1.416, i32 0, i32 0), i32 237, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_, i32 0, i32 0)) #15
  unreachable

; <label>:103                                     ; preds = %69, %30, %19
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNK9b2Simplex10WriteCacheEP14b2SimplexCache(%struct.b2Simplex* %this, %struct.b2SimplexCache* %cache) #0 comdat align 2 {
  %1 = alloca %struct.b2Simplex*, align 8
  %2 = alloca %struct.b2SimplexCache*, align 8
  %vertices = alloca %struct.b2SimplexVertex*, align 8
  %i = alloca i32, align 4
  store %struct.b2Simplex* %this, %struct.b2Simplex** %1, align 8
  store %struct.b2SimplexCache* %cache, %struct.b2SimplexCache** %2, align 8
  %3 = load %struct.b2Simplex*, %struct.b2Simplex** %1, align 8
  %4 = call float @_ZNK9b2Simplex9GetMetricEv(%struct.b2Simplex* %3)
  %5 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %6 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %5, i32 0, i32 0
  store float %4, float* %6, align 4
  %7 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %3, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i16
  %10 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %11 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %10, i32 0, i32 1
  store i16 %9, i16* %11, align 4
  %12 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %3, i32 0, i32 0
  store %struct.b2SimplexVertex* %12, %struct.b2SimplexVertex** %vertices, align 8
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %43, %0
  %14 = load i32, i32* %i, align 4
  %15 = getelementptr inbounds %struct.b2Simplex, %struct.b2Simplex* %3, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %46

; <label>:18                                      ; preds = %13
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %22 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %21, i64 %20
  %23 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = trunc i32 %24 to i8
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %29 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %28, i32 0, i32 2
  %30 = getelementptr inbounds [3 x i8], [3 x i8]* %29, i64 0, i64 %27
  store i8 %25, i8* %30, align 1
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = load %struct.b2SimplexVertex*, %struct.b2SimplexVertex** %vertices, align 8
  %34 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %33, i64 %32
  %35 = getelementptr inbounds %struct.b2SimplexVertex, %struct.b2SimplexVertex* %34, i32 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = trunc i32 %36 to i8
  %38 = load i32, i32* %i, align 4
  %39 = sext i32 %38 to i64
  %40 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %2, align 8
  %41 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %40, i32 0, i32 3
  %42 = getelementptr inbounds [3 x i8], [3 x i8]* %41, i64 0, i64 %39
  store i8 %37, i8* %42, align 1
  br label %43

; <label>:43                                      ; preds = %18
  %44 = load i32, i32* %i, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %i, align 4
  br label %13

; <label>:46                                      ; preds = %13
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2ContactSolverC2EP18b2ContactSolverDef(%class.b2ContactSolver* %this, %struct.b2ContactSolverDef* %def) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %2 = alloca %struct.b2ContactSolverDef*, align 8
  %i = alloca i32, align 4
  %contact = alloca %class.b2Contact*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %shapeA = alloca %class.b2Shape*, align 8
  %shapeB = alloca %class.b2Shape*, align 8
  %radiusA = alloca float, align 4
  %radiusB = alloca float, align 4
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %manifold = alloca %struct.b2Manifold*, align 8
  %pointCount = alloca i32, align 4
  %vc = alloca %struct.b2ContactVelocityConstraint*, align 8
  %pc = alloca %struct.b2ContactPositionConstraint*, align 8
  %j = alloca i32, align 4
  %cp = alloca %struct.b2ManifoldPoint*, align 8
  %vcp = alloca %struct.b2VelocityConstraintPoint*, align 8
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  store %struct.b2ContactSolverDef* %def, %struct.b2ContactSolverDef** %2, align 8
  %3 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  %4 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 0
  %6 = load %struct.b2ContactSolverDef*, %struct.b2ContactSolverDef** %2, align 8
  %7 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %6, i32 0, i32 0
  %8 = bitcast %struct.b2TimeStep* %5 to i8*
  %9 = bitcast %struct.b2TimeStep* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 24, i32 8, i1 false)
  %10 = load %struct.b2ContactSolverDef*, %struct.b2ContactSolverDef** %2, align 8
  %11 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %10, i32 0, i32 5
  %12 = load %class.b2StackAllocator*, %class.b2StackAllocator** %11, align 8
  %13 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 3
  store %class.b2StackAllocator* %12, %class.b2StackAllocator** %13, align 8
  %14 = load %struct.b2ContactSolverDef*, %struct.b2ContactSolverDef** %2, align 8
  %15 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 7
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 3
  %19 = load %class.b2StackAllocator*, %class.b2StackAllocator** %18, align 8
  %20 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = mul i64 %22, 88
  %24 = trunc i64 %23 to i32
  %25 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %19, i32 %24)
  %26 = bitcast i8* %25 to %struct.b2ContactPositionConstraint*
  %27 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 4
  store %struct.b2ContactPositionConstraint* %26, %struct.b2ContactPositionConstraint** %27, align 8
  %28 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 3
  %29 = load %class.b2StackAllocator*, %class.b2StackAllocator** %28, align 8
  %30 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = mul i64 %32, 156
  %34 = trunc i64 %33 to i32
  %35 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %29, i32 %34)
  %36 = bitcast i8* %35 to %struct.b2ContactVelocityConstraint*
  %37 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 5
  store %struct.b2ContactVelocityConstraint* %36, %struct.b2ContactVelocityConstraint** %37, align 8
  %38 = load %struct.b2ContactSolverDef*, %struct.b2ContactSolverDef** %2, align 8
  %39 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %38, i32 0, i32 3
  %40 = load %struct.b2Position*, %struct.b2Position** %39, align 8
  %41 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 1
  store %struct.b2Position* %40, %struct.b2Position** %41, align 8
  %42 = load %struct.b2ContactSolverDef*, %struct.b2ContactSolverDef** %2, align 8
  %43 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %42, i32 0, i32 4
  %44 = load %struct.b2Position*, %struct.b2Position** %43, align 8
  %45 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 2
  store %struct.b2Position* %44, %struct.b2Position** %45, align 8
  %46 = load %struct.b2ContactSolverDef*, %struct.b2ContactSolverDef** %2, align 8
  %47 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %46, i32 0, i32 1
  %48 = load %class.b2Contact**, %class.b2Contact*** %47, align 8
  %49 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 6
  store %class.b2Contact** %48, %class.b2Contact*** %49, align 8
  store i32 0, i32* %i, align 4
  br label %50

; <label>:50                                      ; preds = %297, %0
  %51 = load i32, i32* %i, align 4
  %52 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 7
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %55, label %300

; <label>:55                                      ; preds = %50
  %56 = load i32, i32* %i, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 6
  %59 = load %class.b2Contact**, %class.b2Contact*** %58, align 8
  %60 = getelementptr inbounds %class.b2Contact*, %class.b2Contact** %59, i64 %57
  %61 = load %class.b2Contact*, %class.b2Contact** %60, align 8
  store %class.b2Contact* %61, %class.b2Contact** %contact, align 8
  %62 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %63 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %62, i32 0, i32 7
  %64 = load %class.b2Fixture*, %class.b2Fixture** %63, align 8
  store %class.b2Fixture* %64, %class.b2Fixture** %fixtureA, align 8
  %65 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %66 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %65, i32 0, i32 8
  %67 = load %class.b2Fixture*, %class.b2Fixture** %66, align 8
  store %class.b2Fixture* %67, %class.b2Fixture** %fixtureB, align 8
  %68 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %69 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %68)
  store %class.b2Shape* %69, %class.b2Shape** %shapeA, align 8
  %70 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %71 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %70)
  store %class.b2Shape* %71, %class.b2Shape** %shapeB, align 8
  %72 = load %class.b2Shape*, %class.b2Shape** %shapeA, align 8
  %73 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %72, i32 0, i32 2
  %74 = load float, float* %73, align 4
  store float %74, float* %radiusA, align 4
  %75 = load %class.b2Shape*, %class.b2Shape** %shapeB, align 8
  %76 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %75, i32 0, i32 2
  %77 = load float, float* %76, align 4
  store float %77, float* %radiusB, align 4
  %78 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %79 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %78)
  store %class.b2Body* %79, %class.b2Body** %bodyA, align 8
  %80 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %81 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %80)
  store %class.b2Body* %81, %class.b2Body** %bodyB, align 8
  %82 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %83 = call %struct.b2Manifold* @_ZN9b2Contact11GetManifoldEv(%class.b2Contact* %82)
  store %struct.b2Manifold* %83, %struct.b2Manifold** %manifold, align 8
  %84 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %85 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %84, i32 0, i32 4
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %pointCount, align 4
  %87 = load i32, i32* %pointCount, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %90

; <label>:89                                      ; preds = %55
  br label %92

; <label>:90                                      ; preds = %55
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.156, i32 0, i32 0), i32 74, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN15b2ContactSolverC2EP18b2ContactSolverDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %92

; <label>:92                                      ; preds = %91, %89
  %93 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 5
  %94 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %93, align 8
  %95 = load i32, i32* %i, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %94, i64 %96
  store %struct.b2ContactVelocityConstraint* %97, %struct.b2ContactVelocityConstraint** %vc, align 8
  %98 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %99 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %98, i32 0, i32 14
  %100 = load float, float* %99, align 8
  %101 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %102 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %101, i32 0, i32 10
  store float %100, float* %102, align 4
  %103 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %104 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %103, i32 0, i32 15
  %105 = load float, float* %104, align 4
  %106 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %107 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %106, i32 0, i32 11
  store float %105, float* %107, align 4
  %108 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %109 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %108, i32 0, i32 16
  %110 = load float, float* %109, align 8
  %111 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %112 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %111, i32 0, i32 12
  store float %110, float* %112, align 4
  %113 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %114 = getelementptr inbounds %class.b2Body, %class.b2Body* %113, i32 0, i32 2
  %115 = load i32, i32* %114, align 8
  %116 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %117 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %116, i32 0, i32 4
  store i32 %115, i32* %117, align 4
  %118 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %119 = getelementptr inbounds %class.b2Body, %class.b2Body* %118, i32 0, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %122 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %121, i32 0, i32 5
  store i32 %120, i32* %122, align 4
  %123 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %124 = getelementptr inbounds %class.b2Body, %class.b2Body* %123, i32 0, i32 17
  %125 = load float, float* %124, align 4
  %126 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %127 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %126, i32 0, i32 6
  store float %125, float* %127, align 4
  %128 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %129 = getelementptr inbounds %class.b2Body, %class.b2Body* %128, i32 0, i32 17
  %130 = load float, float* %129, align 4
  %131 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %132 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %131, i32 0, i32 7
  store float %130, float* %132, align 4
  %133 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %134 = getelementptr inbounds %class.b2Body, %class.b2Body* %133, i32 0, i32 19
  %135 = load float, float* %134, align 4
  %136 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %137 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %136, i32 0, i32 8
  store float %135, float* %137, align 4
  %138 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %139 = getelementptr inbounds %class.b2Body, %class.b2Body* %138, i32 0, i32 19
  %140 = load float, float* %139, align 4
  %141 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %142 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %141, i32 0, i32 9
  store float %140, float* %142, align 4
  %143 = load i32, i32* %i, align 4
  %144 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %145 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %144, i32 0, i32 14
  store i32 %143, i32* %145, align 4
  %146 = load i32, i32* %pointCount, align 4
  %147 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %148 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %147, i32 0, i32 13
  store i32 %146, i32* %148, align 4
  %149 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %150 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %149, i32 0, i32 3
  call void @_ZN7b2Mat227SetZeroEv(%struct.b2Transform* %150)
  %151 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %152 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %151, i32 0, i32 2
  call void @_ZN7b2Mat227SetZeroEv(%struct.b2Transform* %152)
  %153 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 4
  %154 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %153, align 8
  %155 = load i32, i32* %i, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %154, i64 %156
  store %struct.b2ContactPositionConstraint* %157, %struct.b2ContactPositionConstraint** %pc, align 8
  %158 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %159 = getelementptr inbounds %class.b2Body, %class.b2Body* %158, i32 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %162 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %161, i32 0, i32 3
  store i32 %160, i32* %162, align 4
  %163 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %164 = getelementptr inbounds %class.b2Body, %class.b2Body* %163, i32 0, i32 2
  %165 = load i32, i32* %164, align 8
  %166 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %167 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %166, i32 0, i32 4
  store i32 %165, i32* %167, align 4
  %168 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %169 = getelementptr inbounds %class.b2Body, %class.b2Body* %168, i32 0, i32 17
  %170 = load float, float* %169, align 4
  %171 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %172 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %171, i32 0, i32 5
  store float %170, float* %172, align 4
  %173 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %174 = getelementptr inbounds %class.b2Body, %class.b2Body* %173, i32 0, i32 17
  %175 = load float, float* %174, align 4
  %176 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %177 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %176, i32 0, i32 6
  store float %175, float* %177, align 4
  %178 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %179 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %178, i32 0, i32 7
  %180 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %181 = getelementptr inbounds %class.b2Body, %class.b2Body* %180, i32 0, i32 4
  %182 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %181, i32 0, i32 0
  %183 = bitcast %struct.b2Vec2* %179 to i8*
  %184 = bitcast %struct.b2Vec2* %182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %183, i8* %184, i64 8, i32 4, i1 false)
  %185 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %186 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %185, i32 0, i32 8
  %187 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %188 = getelementptr inbounds %class.b2Body, %class.b2Body* %187, i32 0, i32 4
  %189 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %188, i32 0, i32 0
  %190 = bitcast %struct.b2Vec2* %186 to i8*
  %191 = bitcast %struct.b2Vec2* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %191, i64 8, i32 4, i1 false)
  %192 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %193 = getelementptr inbounds %class.b2Body, %class.b2Body* %192, i32 0, i32 19
  %194 = load float, float* %193, align 4
  %195 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %196 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %195, i32 0, i32 9
  store float %194, float* %196, align 4
  %197 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %198 = getelementptr inbounds %class.b2Body, %class.b2Body* %197, i32 0, i32 19
  %199 = load float, float* %198, align 4
  %200 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %201 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %200, i32 0, i32 10
  store float %199, float* %201, align 4
  %202 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %203 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %202, i32 0, i32 1
  %204 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %205 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %204, i32 0, i32 1
  %206 = bitcast %struct.b2Vec2* %203 to i8*
  %207 = bitcast %struct.b2Vec2* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %206, i8* %207, i64 8, i32 4, i1 false)
  %208 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %209 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %208, i32 0, i32 2
  %210 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %211 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %210, i32 0, i32 2
  %212 = bitcast %struct.b2Vec2* %209 to i8*
  %213 = bitcast %struct.b2Vec2* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %213, i64 8, i32 4, i1 false)
  %214 = load i32, i32* %pointCount, align 4
  %215 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %216 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %215, i32 0, i32 14
  store i32 %214, i32* %216, align 4
  %217 = load float, float* %radiusA, align 4
  %218 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %219 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %218, i32 0, i32 12
  store float %217, float* %219, align 4
  %220 = load float, float* %radiusB, align 4
  %221 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %222 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %221, i32 0, i32 13
  store float %220, float* %222, align 4
  %223 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %224 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %223, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %227 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %226, i32 0, i32 11
  store i32 %225, i32* %227, align 4
  store i32 0, i32* %j, align 4
  br label %228

; <label>:228                                     ; preds = %293, %92
  %229 = load i32, i32* %j, align 4
  %230 = load i32, i32* %pointCount, align 4
  %231 = icmp slt i32 %229, %230
  br i1 %231, label %232, label %296

; <label>:232                                     ; preds = %228
  %233 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %234 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %233, i32 0, i32 0
  %235 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %234, i32 0, i32 0
  %236 = load i32, i32* %j, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %235, i64 %237
  store %struct.b2ManifoldPoint* %238, %struct.b2ManifoldPoint** %cp, align 8
  %239 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %240 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %239, i32 0, i32 0
  %241 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %240, i32 0, i32 0
  %242 = load i32, i32* %j, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %241, i64 %243
  store %struct.b2VelocityConstraintPoint* %244, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %245 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 0
  %246 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %245, i32 0, i32 5
  %247 = load i8, i8* %246, align 4
  %248 = trunc i8 %247 to i1
  br i1 %248, label %249, label %268

; <label>:249                                     ; preds = %232
  %250 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 0
  %251 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %250, i32 0, i32 2
  %252 = load float, float* %251, align 8
  %253 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %254 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %253, i32 0, i32 1
  %255 = load float, float* %254, align 4
  %256 = fmul float %252, %255
  %257 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %258 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %257, i32 0, i32 2
  store float %256, float* %258, align 4
  %259 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %3, i32 0, i32 0
  %260 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %259, i32 0, i32 2
  %261 = load float, float* %260, align 8
  %262 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %263 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %262, i32 0, i32 2
  %264 = load float, float* %263, align 4
  %265 = fmul float %261, %264
  %266 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %267 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %266, i32 0, i32 3
  store float %265, float* %267, align 4
  br label %273

; <label>:268                                     ; preds = %232
  %269 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %270 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %269, i32 0, i32 2
  store float 0.000000e+00, float* %270, align 4
  %271 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %272 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %271, i32 0, i32 3
  store float 0.000000e+00, float* %272, align 4
  br label %273

; <label>:273                                     ; preds = %268, %249
  %274 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %275 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %274, i32 0, i32 0
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %275)
  %276 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %277 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %276, i32 0, i32 1
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %277)
  %278 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %279 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %278, i32 0, i32 4
  store float 0.000000e+00, float* %279, align 4
  %280 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %281 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %280, i32 0, i32 5
  store float 0.000000e+00, float* %281, align 4
  %282 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %283 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %282, i32 0, i32 6
  store float 0.000000e+00, float* %283, align 4
  %284 = load i32, i32* %j, align 4
  %285 = sext i32 %284 to i64
  %286 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %287 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %286, i32 0, i32 0
  %288 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %287, i64 0, i64 %285
  %289 = load %struct.b2ManifoldPoint*, %struct.b2ManifoldPoint** %cp, align 8
  %290 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %289, i32 0, i32 0
  %291 = bitcast %struct.b2Vec2* %288 to i8*
  %292 = bitcast %struct.b2Vec2* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %291, i8* %292, i64 8, i32 4, i1 false)
  br label %293

; <label>:293                                     ; preds = %273
  %294 = load i32, i32* %j, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %j, align 4
  br label %228

; <label>:296                                     ; preds = %228
  br label %297

; <label>:297                                     ; preds = %296
  %298 = load i32, i32* %i, align 4
  %299 = add nsw i32 %298, 1
  store i32 %299, i32* %i, align 4
  br label %50

; <label>:300                                     ; preds = %50
  ret void
}

; Function Attrs: uwtable
define i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %this, i32 %size) #0 align 2 {
  %1 = alloca %class.b2StackAllocator*, align 8
  %2 = alloca i32, align 4
  %entry = alloca %struct.b2StackEntry*, align 8
  store %class.b2StackAllocator* %this, %class.b2StackAllocator** %1, align 8
  store i32 %size, i32* %2, align 4
  %3 = load %class.b2StackAllocator*, %class.b2StackAllocator** %1, align 8
  %4 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 32
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3.344, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.340, i32 0, i32 0), i32 38, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN16b2StackAllocator8AllocateEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 5
  %12 = getelementptr inbounds [32 x %struct.b2StackEntry], [32 x %struct.b2StackEntry]* %11, i32 0, i32 0
  %13 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %12, i64 %15
  store %struct.b2StackEntry* %16, %struct.b2StackEntry** %entry, align 8
  %17 = load i32, i32* %2, align 4
  %18 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %19 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %18, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = load i32, i32* %2, align 4
  %23 = add nsw i32 %21, %22
  %24 = icmp sgt i32 %23, 102400
  br i1 %24, label %25, label %32

; <label>:25                                      ; preds = %10
  %26 = load i32, i32* %2, align 4
  %27 = call i8* @_Z7b2Alloci(i32 %26)
  %28 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %29 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %28, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %31 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %30, i32 0, i32 2
  store i8 1, i8* %31, align 4
  br label %47

; <label>:32                                      ; preds = %10
  %33 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 0
  %34 = getelementptr inbounds [102400 x i8], [102400 x i8]* %33, i32 0, i32 0
  %35 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %40 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %39, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %42 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %41, i32 0, i32 2
  store i8 0, i8* %42, align 4
  %43 = load i32, i32* %2, align 4
  %44 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %45, %43
  store i32 %46, i32* %44, align 8
  br label %47

; <label>:47                                      ; preds = %32, %25
  %48 = load i32, i32* %2, align 4
  %49 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %48
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %53, i32 %55)
  %57 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 3
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 6
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 8
  %61 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %62 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %61, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  ret i8* %63
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %struct.b2Manifold* @_ZN9b2Contact11GetManifoldEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 11
  ret %struct.b2Manifold* %3
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7b2Mat227SetZeroEv(%struct.b2Transform* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  %2 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  %3 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i32 0, i32 0
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 1
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %9, i32 0, i32 1
  store float 0.000000e+00, float* %10, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2ContactSolverD2Ev(%class.b2ContactSolver* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  %2 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  %3 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 3
  %4 = load %class.b2StackAllocator*, %class.b2StackAllocator** %3, align 8
  %5 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 5
  %6 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %5, align 8
  %7 = bitcast %struct.b2ContactVelocityConstraint* %6 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %4, i8* %7)
  %8 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 3
  %9 = load %class.b2StackAllocator*, %class.b2StackAllocator** %8, align 8
  %10 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 4
  %11 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %10, align 8
  %12 = bitcast %struct.b2ContactPositionConstraint* %11 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %9, i8* %12)
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %this, i8* %p) #0 align 2 {
  %1 = alloca %class.b2StackAllocator*, align 8
  %2 = alloca i8*, align 8
  %entry = alloca %struct.b2StackEntry*, align 8
  store %class.b2StackAllocator* %this, %class.b2StackAllocator** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.b2StackAllocator*, %class.b2StackAllocator** %1, align 8
  %4 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.347, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.340, i32 0, i32 0), i32 63, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN16b2StackAllocator4FreeEPv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 5
  %12 = getelementptr inbounds [32 x %struct.b2StackEntry], [32 x %struct.b2StackEntry]* %11, i32 0, i32 0
  %13 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %12, i64 %15
  %17 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %16, i64 -1
  store %struct.b2StackEntry* %17, %struct.b2StackEntry** %entry, align 8
  %18 = load i8*, i8** %2, align 8
  %19 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %20 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %18, %21
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %10
  br label %26

; <label>:24                                      ; preds = %10
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.340, i32 0, i32 0), i32 65, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN16b2StackAllocator4FreeEPv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %26

; <label>:26                                      ; preds = %25, %23
  %27 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %28 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %27, i32 0, i32 2
  %29 = load i8, i8* %28, align 4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %33

; <label>:31                                      ; preds = %26
  %32 = load i8*, i8** %2, align 8
  call void @_Z6b2FreePv(i8* %32)
  br label %40

; <label>:33                                      ; preds = %26
  %34 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %35 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = sub nsw i32 %38, %36
  store i32 %39, i32* %37, align 8
  br label %40

; <label>:40                                      ; preds = %33, %31
  %41 = load %struct.b2StackEntry*, %struct.b2StackEntry** %entry, align 8
  %42 = getelementptr inbounds %struct.b2StackEntry, %struct.b2StackEntry* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %45, %43
  store i32 %46, i32* %44, align 4
  %47 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %3, i32 0, i32 6
  %48 = load i32, i32* %47, align 8
  %49 = add nsw i32 %48, -1
  store i32 %49, i32* %47, align 8
  store i8* null, i8** %2, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2ContactSolver29InitializeVelocityConstraintsEv(%class.b2ContactSolver* %this) #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %i = alloca i32, align 4
  %vc = alloca %struct.b2ContactVelocityConstraint*, align 8
  %pc = alloca %struct.b2ContactPositionConstraint*, align 8
  %radiusA = alloca float, align 4
  %radiusB = alloca float, align 4
  %manifold = alloca %struct.b2Manifold*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %mA = alloca float, align 4
  %mB = alloca float, align 4
  %iA = alloca float, align 4
  %iB = alloca float, align 4
  %localCenterA = alloca %struct.b2Vec2, align 4
  %localCenterB = alloca %struct.b2Vec2, align 4
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %worldManifold = alloca %struct.b2WorldManifold, align 4
  %pointCount = alloca i32, align 4
  %j = alloca i32, align 4
  %vcp = alloca %struct.b2VelocityConstraintPoint*, align 8
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %rnA = alloca float, align 4
  %rnB = alloca float, align 4
  %kNormal = alloca float, align 4
  %tangent = alloca %struct.b2Vec2, align 4
  %rtA = alloca float, align 4
  %rtB = alloca float, align 4
  %kTangent = alloca float, align 4
  %vRel = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %vcp1 = alloca %struct.b2VelocityConstraintPoint*, align 8
  %vcp2 = alloca %struct.b2VelocityConstraintPoint*, align 8
  %rn1A = alloca float, align 4
  %rn1B = alloca float, align 4
  %rn2A = alloca float, align 4
  %rn2B = alloca float, align 4
  %k11 = alloca float, align 4
  %k22 = alloca float, align 4
  %k12 = alloca float, align 4
  %k_maxConditionNumber = alloca float, align 4
  %13 = alloca %struct.b2Transform, align 4
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  %14 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  store i32 0, i32* %i, align 4
  br label %15

; <label>:15                                      ; preds = %430, %0
  %16 = load i32, i32* %i, align 4
  %17 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %433

; <label>:20                                      ; preds = %15
  %21 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 5
  %22 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %21, align 8
  %23 = load i32, i32* %i, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %22, i64 %24
  store %struct.b2ContactVelocityConstraint* %25, %struct.b2ContactVelocityConstraint** %vc, align 8
  %26 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 4
  %27 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %26, align 8
  %28 = load i32, i32* %i, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %27, i64 %29
  store %struct.b2ContactPositionConstraint* %30, %struct.b2ContactPositionConstraint** %pc, align 8
  %31 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %32 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %31, i32 0, i32 12
  %33 = load float, float* %32, align 4
  store float %33, float* %radiusA, align 4
  %34 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %35 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %34, i32 0, i32 13
  %36 = load float, float* %35, align 4
  store float %36, float* %radiusB, align 4
  %37 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %38 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %37, i32 0, i32 14
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 6
  %42 = load %class.b2Contact**, %class.b2Contact*** %41, align 8
  %43 = getelementptr inbounds %class.b2Contact*, %class.b2Contact** %42, i64 %40
  %44 = load %class.b2Contact*, %class.b2Contact** %43, align 8
  %45 = call %struct.b2Manifold* @_ZN9b2Contact11GetManifoldEv(%class.b2Contact* %44)
  store %struct.b2Manifold* %45, %struct.b2Manifold** %manifold, align 8
  %46 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %47 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %46, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %indexA, align 4
  %49 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %50 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %49, i32 0, i32 5
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %indexB, align 4
  %52 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %53 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %52, i32 0, i32 6
  %54 = load float, float* %53, align 4
  store float %54, float* %mA, align 4
  %55 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %56 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %55, i32 0, i32 7
  %57 = load float, float* %56, align 4
  store float %57, float* %mB, align 4
  %58 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %59 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %58, i32 0, i32 8
  %60 = load float, float* %59, align 4
  store float %60, float* %iA, align 4
  %61 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %62 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %61, i32 0, i32 9
  %63 = load float, float* %62, align 4
  store float %63, float* %iB, align 4
  %64 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %65 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %64, i32 0, i32 7
  %66 = bitcast %struct.b2Vec2* %localCenterA to i8*
  %67 = bitcast %struct.b2Vec2* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 4, i1 false)
  %68 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %69 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %68, i32 0, i32 8
  %70 = bitcast %struct.b2Vec2* %localCenterB to i8*
  %71 = bitcast %struct.b2Vec2* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 4, i1 false)
  %72 = load i32, i32* %indexA, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 1
  %75 = load %struct.b2Position*, %struct.b2Position** %74, align 8
  %76 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %75, i64 %73
  %77 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %76, i32 0, i32 0
  %78 = bitcast %struct.b2Vec2* %cA to i8*
  %79 = bitcast %struct.b2Vec2* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 4, i1 false)
  %80 = load i32, i32* %indexA, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 1
  %83 = load %struct.b2Position*, %struct.b2Position** %82, align 8
  %84 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %83, i64 %81
  %85 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %84, i32 0, i32 1
  %86 = load float, float* %85, align 4
  store float %86, float* %aA, align 4
  %87 = load i32, i32* %indexA, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 2
  %90 = load %struct.b2Position*, %struct.b2Position** %89, align 8
  %91 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %90, i64 %88
  %92 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %91, i32 0, i32 0
  %93 = bitcast %struct.b2Vec2* %vA to i8*
  %94 = bitcast %struct.b2Vec2* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 4, i1 false)
  %95 = load i32, i32* %indexA, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 2
  %98 = load %struct.b2Position*, %struct.b2Position** %97, align 8
  %99 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %98, i64 %96
  %100 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %99, i32 0, i32 1
  %101 = load float, float* %100, align 4
  store float %101, float* %wA, align 4
  %102 = load i32, i32* %indexB, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 1
  %105 = load %struct.b2Position*, %struct.b2Position** %104, align 8
  %106 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %105, i64 %103
  %107 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %106, i32 0, i32 0
  %108 = bitcast %struct.b2Vec2* %cB to i8*
  %109 = bitcast %struct.b2Vec2* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 8, i32 4, i1 false)
  %110 = load i32, i32* %indexB, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 1
  %113 = load %struct.b2Position*, %struct.b2Position** %112, align 8
  %114 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %113, i64 %111
  %115 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %114, i32 0, i32 1
  %116 = load float, float* %115, align 4
  store float %116, float* %aB, align 4
  %117 = load i32, i32* %indexB, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 2
  %120 = load %struct.b2Position*, %struct.b2Position** %119, align 8
  %121 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %120, i64 %118
  %122 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %121, i32 0, i32 0
  %123 = bitcast %struct.b2Vec2* %vB to i8*
  %124 = bitcast %struct.b2Vec2* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 8, i32 4, i1 false)
  %125 = load i32, i32* %indexB, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %14, i32 0, i32 2
  %128 = load %struct.b2Position*, %struct.b2Position** %127, align 8
  %129 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %128, i64 %126
  %130 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %129, i32 0, i32 1
  %131 = load float, float* %130, align 4
  store float %131, float* %wB, align 4
  %132 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %133 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %132, i32 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %137

; <label>:136                                     ; preds = %20
  br label %139

; <label>:137                                     ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.157, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.156, i32 0, i32 0), i32 172, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN15b2ContactSolver29InitializeVelocityConstraintsEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %139

; <label>:139                                     ; preds = %138, %136
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %140 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %141 = load float, float* %aA, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %140, float %141)
  %142 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %143 = load float, float* %aB, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %142, float %143)
  %144 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 0
  %145 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %146 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %145, %struct.b2Vec2* dereferenceable(8) %localCenterA)
  %147 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  %148 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %3)
  %149 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  %150 = bitcast %struct.b2Vec2* %144 to i8*
  %151 = bitcast %struct.b2Vec2* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 4, i1 false)
  %152 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 0
  %153 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %154 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %153, %struct.b2Vec2* dereferenceable(8) %localCenterB)
  %155 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %154, <2 x float>* %155, align 4
  %156 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %5)
  %157 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = bitcast %struct.b2Vec2* %152 to i8*
  %159 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %159, i64 8, i32 4, i1 false)
  call void @_ZN15b2WorldManifoldC2Ev(%struct.b2WorldManifold* %worldManifold)
  %160 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %161 = load float, float* %radiusA, align 4
  %162 = load float, float* %radiusB, align 4
  call void @_ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f(%struct.b2WorldManifold* %worldManifold, %struct.b2Manifold* %160, %struct.b2Transform* dereferenceable(16) %xfA, float %161, %struct.b2Transform* dereferenceable(16) %xfB, float %162)
  %163 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %164 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %163, i32 0, i32 1
  %165 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %worldManifold, i32 0, i32 0
  %166 = bitcast %struct.b2Vec2* %164 to i8*
  %167 = bitcast %struct.b2Vec2* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %166, i8* %167, i64 8, i32 4, i1 false)
  %168 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %169 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %168, i32 0, i32 13
  %170 = load i32, i32* %169, align 4
  store i32 %170, i32* %pointCount, align 4
  store i32 0, i32* %j, align 4
  br label %171

; <label>:171                                     ; preds = %305, %139
  %172 = load i32, i32* %j, align 4
  %173 = load i32, i32* %pointCount, align 4
  %174 = icmp slt i32 %172, %173
  br i1 %174, label %175, label %308

; <label>:175                                     ; preds = %171
  %176 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %177 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %176, i32 0, i32 0
  %178 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %177, i32 0, i32 0
  %179 = load i32, i32* %j, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %178, i64 %180
  store %struct.b2VelocityConstraintPoint* %181, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %182 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %183 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %182, i32 0, i32 0
  %184 = load i32, i32* %j, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %worldManifold, i32 0, i32 1
  %187 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %186, i64 0, i64 %185
  %188 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %187, %struct.b2Vec2* dereferenceable(8) %cA)
  %189 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %188, <2 x float>* %189, align 4
  %190 = bitcast %struct.b2Vec2* %183 to i8*
  %191 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %191, i64 8, i32 4, i1 false)
  %192 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %193 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %192, i32 0, i32 1
  %194 = load i32, i32* %j, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %worldManifold, i32 0, i32 1
  %197 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %196, i64 0, i64 %195
  %198 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %197, %struct.b2Vec2* dereferenceable(8) %cB)
  %199 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %198, <2 x float>* %199, align 4
  %200 = bitcast %struct.b2Vec2* %193 to i8*
  %201 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %200, i8* %201, i64 8, i32 4, i1 false)
  %202 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %203 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %202, i32 0, i32 0
  %204 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %205 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %204, i32 0, i32 1
  %206 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %203, %struct.b2Vec2* dereferenceable(8) %205)
  store float %206, float* %rnA, align 4
  %207 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %208 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %207, i32 0, i32 1
  %209 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %210 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %209, i32 0, i32 1
  %211 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %208, %struct.b2Vec2* dereferenceable(8) %210)
  store float %211, float* %rnB, align 4
  %212 = load float, float* %mA, align 4
  %213 = load float, float* %mB, align 4
  %214 = fadd float %212, %213
  %215 = load float, float* %iA, align 4
  %216 = load float, float* %rnA, align 4
  %217 = fmul float %215, %216
  %218 = load float, float* %rnA, align 4
  %219 = fmul float %217, %218
  %220 = fadd float %214, %219
  %221 = load float, float* %iB, align 4
  %222 = load float, float* %rnB, align 4
  %223 = fmul float %221, %222
  %224 = load float, float* %rnB, align 4
  %225 = fmul float %223, %224
  %226 = fadd float %220, %225
  store float %226, float* %kNormal, align 4
  %227 = load float, float* %kNormal, align 4
  %228 = fcmp ogt float %227, 0.000000e+00
  br i1 %228, label %229, label %232

; <label>:229                                     ; preds = %175
  %230 = load float, float* %kNormal, align 4
  %231 = fdiv float 1.000000e+00, %230
  br label %233

; <label>:232                                     ; preds = %175
  br label %233

; <label>:233                                     ; preds = %232, %229
  %234 = phi float [ %231, %229 ], [ 0.000000e+00, %232 ]
  %235 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %236 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %235, i32 0, i32 4
  store float %234, float* %236, align 4
  %237 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %238 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %237, i32 0, i32 1
  %239 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %238, float 1.000000e+00)
  %240 = bitcast %struct.b2Vec2* %tangent to <2 x float>*
  store <2 x float> %239, <2 x float>* %240, align 4
  %241 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %242 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %241, i32 0, i32 0
  %243 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %242, %struct.b2Vec2* dereferenceable(8) %tangent)
  store float %243, float* %rtA, align 4
  %244 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %245 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %244, i32 0, i32 1
  %246 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %245, %struct.b2Vec2* dereferenceable(8) %tangent)
  store float %246, float* %rtB, align 4
  %247 = load float, float* %mA, align 4
  %248 = load float, float* %mB, align 4
  %249 = fadd float %247, %248
  %250 = load float, float* %iA, align 4
  %251 = load float, float* %rtA, align 4
  %252 = fmul float %250, %251
  %253 = load float, float* %rtA, align 4
  %254 = fmul float %252, %253
  %255 = fadd float %249, %254
  %256 = load float, float* %iB, align 4
  %257 = load float, float* %rtB, align 4
  %258 = fmul float %256, %257
  %259 = load float, float* %rtB, align 4
  %260 = fmul float %258, %259
  %261 = fadd float %255, %260
  store float %261, float* %kTangent, align 4
  %262 = load float, float* %kTangent, align 4
  %263 = fcmp ogt float %262, 0.000000e+00
  br i1 %263, label %264, label %267

; <label>:264                                     ; preds = %233
  %265 = load float, float* %kTangent, align 4
  %266 = fdiv float 1.000000e+00, %265
  br label %268

; <label>:267                                     ; preds = %233
  br label %268

; <label>:268                                     ; preds = %267, %264
  %269 = phi float [ %266, %264 ], [ 0.000000e+00, %267 ]
  %270 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %271 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %270, i32 0, i32 5
  store float %269, float* %271, align 4
  %272 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %273 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %272, i32 0, i32 6
  store float 0.000000e+00, float* %273, align 4
  %274 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %275 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %274, i32 0, i32 1
  %276 = load float, float* %wB, align 4
  %277 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %278 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %277, i32 0, i32 1
  %279 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %276, %struct.b2Vec2* dereferenceable(8) %278)
  %280 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %279, <2 x float>* %280, align 4
  %281 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %11)
  %282 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %281, <2 x float>* %282, align 4
  %283 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %10, %struct.b2Vec2* dereferenceable(8) %vA)
  %284 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %283, <2 x float>* %284, align 4
  %285 = load float, float* %wA, align 4
  %286 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %287 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %286, i32 0, i32 0
  %288 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %285, %struct.b2Vec2* dereferenceable(8) %287)
  %289 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %288, <2 x float>* %289, align 4
  %290 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %12)
  %291 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %290, <2 x float>* %291, align 4
  %292 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %275, %struct.b2Vec2* dereferenceable(8) %8)
  store float %292, float* %vRel, align 4
  %293 = load float, float* %vRel, align 4
  %294 = fcmp olt float %293, -1.000000e+00
  br i1 %294, label %295, label %304

; <label>:295                                     ; preds = %268
  %296 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %297 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %296, i32 0, i32 11
  %298 = load float, float* %297, align 4
  %299 = fsub float -0.000000e+00, %298
  %300 = load float, float* %vRel, align 4
  %301 = fmul float %299, %300
  %302 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %303 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %302, i32 0, i32 6
  store float %301, float* %303, align 4
  br label %304

; <label>:304                                     ; preds = %295, %268
  br label %305

; <label>:305                                     ; preds = %304
  %306 = load i32, i32* %j, align 4
  %307 = add nsw i32 %306, 1
  store i32 %307, i32* %j, align 4
  br label %171

; <label>:308                                     ; preds = %171
  %309 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %310 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %309, i32 0, i32 13
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, 2
  br i1 %312, label %313, label %429

; <label>:313                                     ; preds = %308
  %314 = load i8, i8* @g_blockSolve, align 1
  %315 = trunc i8 %314 to i1
  br i1 %315, label %316, label %429

; <label>:316                                     ; preds = %313
  %317 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %318 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %317, i32 0, i32 0
  %319 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %318, i32 0, i32 0
  %320 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %319, i64 0
  store %struct.b2VelocityConstraintPoint* %320, %struct.b2VelocityConstraintPoint** %vcp1, align 8
  %321 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %322 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %321, i32 0, i32 0
  %323 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %322, i32 0, i32 0
  %324 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %323, i64 1
  store %struct.b2VelocityConstraintPoint* %324, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %325 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp1, align 8
  %326 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %325, i32 0, i32 0
  %327 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %328 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %327, i32 0, i32 1
  %329 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %326, %struct.b2Vec2* dereferenceable(8) %328)
  store float %329, float* %rn1A, align 4
  %330 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp1, align 8
  %331 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %330, i32 0, i32 1
  %332 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %333 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %332, i32 0, i32 1
  %334 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %331, %struct.b2Vec2* dereferenceable(8) %333)
  store float %334, float* %rn1B, align 4
  %335 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %336 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %335, i32 0, i32 0
  %337 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %338 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %337, i32 0, i32 1
  %339 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %336, %struct.b2Vec2* dereferenceable(8) %338)
  store float %339, float* %rn2A, align 4
  %340 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %341 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %340, i32 0, i32 1
  %342 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %343 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %342, i32 0, i32 1
  %344 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %341, %struct.b2Vec2* dereferenceable(8) %343)
  store float %344, float* %rn2B, align 4
  %345 = load float, float* %mA, align 4
  %346 = load float, float* %mB, align 4
  %347 = fadd float %345, %346
  %348 = load float, float* %iA, align 4
  %349 = load float, float* %rn1A, align 4
  %350 = fmul float %348, %349
  %351 = load float, float* %rn1A, align 4
  %352 = fmul float %350, %351
  %353 = fadd float %347, %352
  %354 = load float, float* %iB, align 4
  %355 = load float, float* %rn1B, align 4
  %356 = fmul float %354, %355
  %357 = load float, float* %rn1B, align 4
  %358 = fmul float %356, %357
  %359 = fadd float %353, %358
  store float %359, float* %k11, align 4
  %360 = load float, float* %mA, align 4
  %361 = load float, float* %mB, align 4
  %362 = fadd float %360, %361
  %363 = load float, float* %iA, align 4
  %364 = load float, float* %rn2A, align 4
  %365 = fmul float %363, %364
  %366 = load float, float* %rn2A, align 4
  %367 = fmul float %365, %366
  %368 = fadd float %362, %367
  %369 = load float, float* %iB, align 4
  %370 = load float, float* %rn2B, align 4
  %371 = fmul float %369, %370
  %372 = load float, float* %rn2B, align 4
  %373 = fmul float %371, %372
  %374 = fadd float %368, %373
  store float %374, float* %k22, align 4
  %375 = load float, float* %mA, align 4
  %376 = load float, float* %mB, align 4
  %377 = fadd float %375, %376
  %378 = load float, float* %iA, align 4
  %379 = load float, float* %rn1A, align 4
  %380 = fmul float %378, %379
  %381 = load float, float* %rn2A, align 4
  %382 = fmul float %380, %381
  %383 = fadd float %377, %382
  %384 = load float, float* %iB, align 4
  %385 = load float, float* %rn1B, align 4
  %386 = fmul float %384, %385
  %387 = load float, float* %rn2B, align 4
  %388 = fmul float %386, %387
  %389 = fadd float %383, %388
  store float %389, float* %k12, align 4
  store float 1.000000e+03, float* %k_maxConditionNumber, align 4
  %390 = load float, float* %k11, align 4
  %391 = load float, float* %k11, align 4
  %392 = fmul float %390, %391
  %393 = load float, float* %k11, align 4
  %394 = load float, float* %k22, align 4
  %395 = fmul float %393, %394
  %396 = load float, float* %k12, align 4
  %397 = load float, float* %k12, align 4
  %398 = fmul float %396, %397
  %399 = fsub float %395, %398
  %400 = fmul float 1.000000e+03, %399
  %401 = fcmp olt float %392, %400
  br i1 %401, label %402, label %425

; <label>:402                                     ; preds = %316
  %403 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %404 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %403, i32 0, i32 3
  %405 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %404, i32 0, i32 0
  %406 = load float, float* %k11, align 4
  %407 = load float, float* %k12, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %405, float %406, float %407)
  %408 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %409 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %408, i32 0, i32 3
  %410 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %409, i32 0, i32 1
  %411 = load float, float* %k12, align 4
  %412 = load float, float* %k22, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %410, float %411, float %412)
  %413 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %414 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %413, i32 0, i32 2
  %415 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %416 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %415, i32 0, i32 3
  %417 = call { <2 x float>, <2 x float> } @_ZNK7b2Mat2210GetInverseEv(%struct.b2Transform* %416)
  %418 = bitcast %struct.b2Transform* %13 to { <2 x float>, <2 x float> }*
  %419 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %418, i32 0, i32 0
  %420 = extractvalue { <2 x float>, <2 x float> } %417, 0
  store <2 x float> %420, <2 x float>* %419, align 4
  %421 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %418, i32 0, i32 1
  %422 = extractvalue { <2 x float>, <2 x float> } %417, 1
  store <2 x float> %422, <2 x float>* %421, align 4
  %423 = bitcast %struct.b2Transform* %414 to i8*
  %424 = bitcast %struct.b2Transform* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %423, i8* %424, i64 16, i32 4, i1 false)
  br label %428

; <label>:425                                     ; preds = %316
  %426 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %427 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %426, i32 0, i32 13
  store i32 1, i32* %427, align 4
  br label %428

; <label>:428                                     ; preds = %425, %402
  br label %429

; <label>:429                                     ; preds = %428, %313, %308
  br label %430

; <label>:430                                     ; preds = %429
  %431 = load i32, i32* %i, align 4
  %432 = add nsw i32 %431, 1
  store i32 %432, i32* %i, align 4
  br label %15

; <label>:433                                     ; preds = %15
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2WorldManifoldC2Ev(%struct.b2WorldManifold* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2WorldManifold*, align 8
  store %struct.b2WorldManifold* %this, %struct.b2WorldManifold** %1, align 8
  %2 = load %struct.b2WorldManifold*, %struct.b2WorldManifold** %1, align 8
  %3 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %2, i32 0, i32 1
  %5 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %5, i64 2
  br label %7

; <label>:7                                       ; preds = %7, %0
  %8 = phi %struct.b2Vec2* [ %5, %0 ], [ %9, %7 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %8)
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i64 1
  %10 = icmp eq %struct.b2Vec2* %9, %6
  br i1 %10, label %11, label %7

; <label>:11                                      ; preds = %7
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f(%struct.b2WorldManifold* %this, %struct.b2Manifold* %manifold, %struct.b2Transform* dereferenceable(16) %xfA, float %radiusA, %struct.b2Transform* dereferenceable(16) %xfB, float %radiusB) #0 align 2 {
  %1 = alloca %struct.b2WorldManifold*, align 8
  %2 = alloca %struct.b2Manifold*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca float, align 4
  %5 = alloca %struct.b2Transform*, align 8
  %6 = alloca float, align 4
  %pointA = alloca %struct.b2Vec2, align 4
  %pointB = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %cA = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %planePoint = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %clipPoint = alloca %struct.b2Vec2, align 4
  %cA1 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %cB2 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  %19 = alloca %struct.b2Vec2, align 4
  %20 = alloca %struct.b2Vec2, align 4
  %planePoint3 = alloca %struct.b2Vec2, align 4
  %i4 = alloca i32, align 4
  %clipPoint5 = alloca %struct.b2Vec2, align 4
  %cB6 = alloca %struct.b2Vec2, align 4
  %21 = alloca %struct.b2Vec2, align 4
  %22 = alloca %struct.b2Vec2, align 4
  %cA7 = alloca %struct.b2Vec2, align 4
  %23 = alloca %struct.b2Vec2, align 4
  %24 = alloca %struct.b2Vec2, align 4
  %25 = alloca %struct.b2Vec2, align 4
  %26 = alloca %struct.b2Vec2, align 4
  %27 = alloca %struct.b2Vec2, align 4
  store %struct.b2WorldManifold* %this, %struct.b2WorldManifold** %1, align 8
  store %struct.b2Manifold* %manifold, %struct.b2Manifold** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store float %radiusA, float* %4, align 4
  store %struct.b2Transform* %xfB, %struct.b2Transform** %5, align 8
  store float %radiusB, float* %6, align 4
  %28 = load %struct.b2WorldManifold*, %struct.b2WorldManifold** %1, align 8
  %29 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %30 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %0
  br label %235

; <label>:34                                      ; preds = %0
  %35 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %36 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  switch i32 %37, label %235 [
    i32 0, label %38
    i32 1, label %89
    i32 2, label %159
  ]

; <label>:38                                      ; preds = %34
  %39 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %39, float 1.000000e+00, float 0.000000e+00)
  %40 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %41 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %42 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %41, i32 0, i32 2
  %43 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %40, %struct.b2Vec2* dereferenceable(8) %42)
  %44 = bitcast %struct.b2Vec2* %pointA to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 4
  %45 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %46 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %47 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %46, i32 0, i32 0
  %48 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %47, i64 0, i64 0
  %49 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %48, i32 0, i32 0
  %50 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %45, %struct.b2Vec2* dereferenceable(8) %49)
  %51 = bitcast %struct.b2Vec2* %pointB to <2 x float>*
  store <2 x float> %50, <2 x float>* %51, align 4
  %52 = call float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointA, %struct.b2Vec2* dereferenceable(8) %pointB)
  %53 = fcmp ogt float %52, 0x3D10000000000000
  br i1 %53, label %54, label %62

; <label>:54                                      ; preds = %38
  %55 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %56 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %pointA)
  %57 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  %58 = bitcast %struct.b2Vec2* %55 to i8*
  %59 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false)
  %60 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %61 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %60)
  br label %62

; <label>:62                                      ; preds = %54, %38
  %63 = load float, float* %4, align 4
  %64 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %65 = call <2 x float> @_ZmlfRK6b2Vec2(float %63, %struct.b2Vec2* dereferenceable(8) %64)
  %66 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 4
  %67 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointA, %struct.b2Vec2* dereferenceable(8) %8)
  %68 = bitcast %struct.b2Vec2* %cA to <2 x float>*
  store <2 x float> %67, <2 x float>* %68, align 4
  %69 = load float, float* %6, align 4
  %70 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %71 = call <2 x float> @_ZmlfRK6b2Vec2(float %69, %struct.b2Vec2* dereferenceable(8) %70)
  %72 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %71, <2 x float>* %72, align 4
  %73 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %9)
  %74 = bitcast %struct.b2Vec2* %cB to <2 x float>*
  store <2 x float> %73, <2 x float>* %74, align 4
  %75 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 1
  %76 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %75, i64 0, i64 0
  %77 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %cB)
  %78 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %77, <2 x float>* %78, align 4
  %79 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %11)
  %80 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %79, <2 x float>* %80, align 4
  %81 = bitcast %struct.b2Vec2* %76 to i8*
  %82 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 4, i1 false)
  %83 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %cA)
  %84 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %83, <2 x float>* %84, align 4
  %85 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %86 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %85)
  %87 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 2
  %88 = getelementptr inbounds [2 x float], [2 x float]* %87, i64 0, i64 0
  store float %86, float* %88, align 4
  br label %235

; <label>:89                                      ; preds = %34
  %90 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %91 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %92 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %91, i32 0, i32 1
  %93 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %94 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %93, i32 0, i32 1
  %95 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %92, %struct.b2Vec2* dereferenceable(8) %94)
  %96 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %95, <2 x float>* %96, align 4
  %97 = bitcast %struct.b2Vec2* %90 to i8*
  %98 = bitcast %struct.b2Vec2* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 4, i1 false)
  %99 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %100 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %101 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %100, i32 0, i32 2
  %102 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %99, %struct.b2Vec2* dereferenceable(8) %101)
  %103 = bitcast %struct.b2Vec2* %planePoint to <2 x float>*
  store <2 x float> %102, <2 x float>* %103, align 4
  store i32 0, i32* %i, align 4
  br label %104

; <label>:104                                     ; preds = %155, %89
  %105 = load i32, i32* %i, align 4
  %106 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %107 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %106, i32 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %105, %108
  br i1 %109, label %110, label %158

; <label>:110                                     ; preds = %104
  %111 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %112 = load i32, i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %115 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %114, i32 0, i32 0
  %116 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %115, i64 0, i64 %113
  %117 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %116, i32 0, i32 0
  %118 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %111, %struct.b2Vec2* dereferenceable(8) %117)
  %119 = bitcast %struct.b2Vec2* %clipPoint to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = load float, float* %4, align 4
  %121 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint, %struct.b2Vec2* dereferenceable(8) %planePoint)
  %122 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %121, <2 x float>* %122, align 4
  %123 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %124 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %15, %struct.b2Vec2* dereferenceable(8) %123)
  %125 = fsub float %120, %124
  %126 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %127 = call <2 x float> @_ZmlfRK6b2Vec2(float %125, %struct.b2Vec2* dereferenceable(8) %126)
  %128 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %127, <2 x float>* %128, align 4
  %129 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint, %struct.b2Vec2* dereferenceable(8) %14)
  %130 = bitcast %struct.b2Vec2* %cA1 to <2 x float>*
  store <2 x float> %129, <2 x float>* %130, align 4
  %131 = load float, float* %6, align 4
  %132 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %133 = call <2 x float> @_ZmlfRK6b2Vec2(float %131, %struct.b2Vec2* dereferenceable(8) %132)
  %134 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %133, <2 x float>* %134, align 4
  %135 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint, %struct.b2Vec2* dereferenceable(8) %16)
  %136 = bitcast %struct.b2Vec2* %cB2 to <2 x float>*
  store <2 x float> %135, <2 x float>* %136, align 4
  %137 = load i32, i32* %i, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 1
  %140 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %139, i64 0, i64 %138
  %141 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA1, %struct.b2Vec2* dereferenceable(8) %cB2)
  %142 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %141, <2 x float>* %142, align 4
  %143 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %18)
  %144 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %143, <2 x float>* %144, align 4
  %145 = bitcast %struct.b2Vec2* %140 to i8*
  %146 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 8, i32 4, i1 false)
  %147 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB2, %struct.b2Vec2* dereferenceable(8) %cA1)
  %148 = bitcast %struct.b2Vec2* %19 to <2 x float>*
  store <2 x float> %147, <2 x float>* %148, align 4
  %149 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %150 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %149)
  %151 = load i32, i32* %i, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 2
  %154 = getelementptr inbounds [2 x float], [2 x float]* %153, i64 0, i64 %152
  store float %150, float* %154, align 4
  br label %155

; <label>:155                                     ; preds = %110
  %156 = load i32, i32* %i, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %i, align 4
  br label %104

; <label>:158                                     ; preds = %104
  br label %235

; <label>:159                                     ; preds = %34
  %160 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %161 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %162 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %161, i32 0, i32 1
  %163 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %164 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %163, i32 0, i32 1
  %165 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %162, %struct.b2Vec2* dereferenceable(8) %164)
  %166 = bitcast %struct.b2Vec2* %20 to <2 x float>*
  store <2 x float> %165, <2 x float>* %166, align 4
  %167 = bitcast %struct.b2Vec2* %160 to i8*
  %168 = bitcast %struct.b2Vec2* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 8, i32 4, i1 false)
  %169 = load %struct.b2Transform*, %struct.b2Transform** %5, align 8
  %170 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %171 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %170, i32 0, i32 2
  %172 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %169, %struct.b2Vec2* dereferenceable(8) %171)
  %173 = bitcast %struct.b2Vec2* %planePoint3 to <2 x float>*
  store <2 x float> %172, <2 x float>* %173, align 4
  store i32 0, i32* %i4, align 4
  br label %174

; <label>:174                                     ; preds = %225, %159
  %175 = load i32, i32* %i4, align 4
  %176 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %177 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %176, i32 0, i32 4
  %178 = load i32, i32* %177, align 4
  %179 = icmp slt i32 %175, %178
  br i1 %179, label %180, label %228

; <label>:180                                     ; preds = %174
  %181 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %182 = load i32, i32* %i4, align 4
  %183 = sext i32 %182 to i64
  %184 = load %struct.b2Manifold*, %struct.b2Manifold** %2, align 8
  %185 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %184, i32 0, i32 0
  %186 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %185, i64 0, i64 %183
  %187 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %186, i32 0, i32 0
  %188 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %181, %struct.b2Vec2* dereferenceable(8) %187)
  %189 = bitcast %struct.b2Vec2* %clipPoint5 to <2 x float>*
  store <2 x float> %188, <2 x float>* %189, align 4
  %190 = load float, float* %6, align 4
  %191 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint5, %struct.b2Vec2* dereferenceable(8) %planePoint3)
  %192 = bitcast %struct.b2Vec2* %22 to <2 x float>*
  store <2 x float> %191, <2 x float>* %192, align 4
  %193 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %194 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %22, %struct.b2Vec2* dereferenceable(8) %193)
  %195 = fsub float %190, %194
  %196 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %197 = call <2 x float> @_ZmlfRK6b2Vec2(float %195, %struct.b2Vec2* dereferenceable(8) %196)
  %198 = bitcast %struct.b2Vec2* %21 to <2 x float>*
  store <2 x float> %197, <2 x float>* %198, align 4
  %199 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint5, %struct.b2Vec2* dereferenceable(8) %21)
  %200 = bitcast %struct.b2Vec2* %cB6 to <2 x float>*
  store <2 x float> %199, <2 x float>* %200, align 4
  %201 = load float, float* %4, align 4
  %202 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %203 = call <2 x float> @_ZmlfRK6b2Vec2(float %201, %struct.b2Vec2* dereferenceable(8) %202)
  %204 = bitcast %struct.b2Vec2* %23 to <2 x float>*
  store <2 x float> %203, <2 x float>* %204, align 4
  %205 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint5, %struct.b2Vec2* dereferenceable(8) %23)
  %206 = bitcast %struct.b2Vec2* %cA7 to <2 x float>*
  store <2 x float> %205, <2 x float>* %206, align 4
  %207 = load i32, i32* %i4, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 1
  %210 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %209, i64 0, i64 %208
  %211 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA7, %struct.b2Vec2* dereferenceable(8) %cB6)
  %212 = bitcast %struct.b2Vec2* %25 to <2 x float>*
  store <2 x float> %211, <2 x float>* %212, align 4
  %213 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %25)
  %214 = bitcast %struct.b2Vec2* %24 to <2 x float>*
  store <2 x float> %213, <2 x float>* %214, align 4
  %215 = bitcast %struct.b2Vec2* %210 to i8*
  %216 = bitcast %struct.b2Vec2* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %215, i8* %216, i64 8, i32 4, i1 false)
  %217 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA7, %struct.b2Vec2* dereferenceable(8) %cB6)
  %218 = bitcast %struct.b2Vec2* %26 to <2 x float>*
  store <2 x float> %217, <2 x float>* %218, align 4
  %219 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %220 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %26, %struct.b2Vec2* dereferenceable(8) %219)
  %221 = load i32, i32* %i4, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 2
  %224 = getelementptr inbounds [2 x float], [2 x float]* %223, i64 0, i64 %222
  store float %220, float* %224, align 4
  br label %225

; <label>:225                                     ; preds = %180
  %226 = load i32, i32* %i4, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %i4, align 4
  br label %174

; <label>:228                                     ; preds = %174
  %229 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %230 = getelementptr inbounds %struct.b2WorldManifold, %struct.b2WorldManifold* %28, i32 0, i32 0
  %231 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %230)
  %232 = bitcast %struct.b2Vec2* %27 to <2 x float>*
  store <2 x float> %231, <2 x float>* %232, align 4
  %233 = bitcast %struct.b2Vec2* %229 to i8*
  %234 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %233, i8* %234, i64 8, i32 4, i1 false)
  br label %235

; <label>:235                                     ; preds = %228, %158, %62, %34, %33
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2ContactSolver9WarmStartEv(%class.b2ContactSolver* %this) #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %i = alloca i32, align 4
  %vc = alloca %struct.b2ContactVelocityConstraint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %mA = alloca float, align 4
  %iA = alloca float, align 4
  %mB = alloca float, align 4
  %iB = alloca float, align 4
  %pointCount = alloca i32, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %tangent = alloca %struct.b2Vec2, align 4
  %j = alloca i32, align 4
  %vcp = alloca %struct.b2VelocityConstraintPoint*, align 8
  %P = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  %6 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  store i32 0, i32* %i, align 4
  br label %7

; <label>:7                                       ; preds = %152, %0
  %8 = load i32, i32* %i, align 4
  %9 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %155

; <label>:12                                      ; preds = %7
  %13 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 5
  %14 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %13, align 8
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %14, i64 %16
  store %struct.b2ContactVelocityConstraint* %17, %struct.b2ContactVelocityConstraint** %vc, align 8
  %18 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %19 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %18, i32 0, i32 4
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %indexA, align 4
  %21 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %22 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %21, i32 0, i32 5
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %indexB, align 4
  %24 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %25 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %24, i32 0, i32 6
  %26 = load float, float* %25, align 4
  store float %26, float* %mA, align 4
  %27 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %28 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %27, i32 0, i32 8
  %29 = load float, float* %28, align 4
  store float %29, float* %iA, align 4
  %30 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %31 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %30, i32 0, i32 7
  %32 = load float, float* %31, align 4
  store float %32, float* %mB, align 4
  %33 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %34 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %33, i32 0, i32 9
  %35 = load float, float* %34, align 4
  store float %35, float* %iB, align 4
  %36 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %37 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %36, i32 0, i32 13
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %pointCount, align 4
  %39 = load i32, i32* %indexA, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %42 = load %struct.b2Position*, %struct.b2Position** %41, align 8
  %43 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %42, i64 %40
  %44 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %43, i32 0, i32 0
  %45 = bitcast %struct.b2Vec2* %vA to i8*
  %46 = bitcast %struct.b2Vec2* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false)
  %47 = load i32, i32* %indexA, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %50 = load %struct.b2Position*, %struct.b2Position** %49, align 8
  %51 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %50, i64 %48
  %52 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %51, i32 0, i32 1
  %53 = load float, float* %52, align 4
  store float %53, float* %wA, align 4
  %54 = load i32, i32* %indexB, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %57 = load %struct.b2Position*, %struct.b2Position** %56, align 8
  %58 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %57, i64 %55
  %59 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %58, i32 0, i32 0
  %60 = bitcast %struct.b2Vec2* %vB to i8*
  %61 = bitcast %struct.b2Vec2* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 8, i32 4, i1 false)
  %62 = load i32, i32* %indexB, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %65 = load %struct.b2Position*, %struct.b2Position** %64, align 8
  %66 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %65, i64 %63
  %67 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %66, i32 0, i32 1
  %68 = load float, float* %67, align 4
  store float %68, float* %wB, align 4
  %69 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %70 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %69, i32 0, i32 1
  %71 = bitcast %struct.b2Vec2* %normal to i8*
  %72 = bitcast %struct.b2Vec2* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 4, i1 false)
  %73 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %normal, float 1.000000e+00)
  %74 = bitcast %struct.b2Vec2* %tangent to <2 x float>*
  store <2 x float> %73, <2 x float>* %74, align 4
  store i32 0, i32* %j, align 4
  br label %75

; <label>:75                                      ; preds = %118, %12
  %76 = load i32, i32* %j, align 4
  %77 = load i32, i32* %pointCount, align 4
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %79, label %121

; <label>:79                                      ; preds = %75
  %80 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %81 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %80, i32 0, i32 0
  %82 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %81, i32 0, i32 0
  %83 = load i32, i32* %j, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %82, i64 %84
  store %struct.b2VelocityConstraintPoint* %85, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %86 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %87 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %86, i32 0, i32 2
  %88 = load float, float* %87, align 4
  %89 = call <2 x float> @_ZmlfRK6b2Vec2(float %88, %struct.b2Vec2* dereferenceable(8) %normal)
  %90 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %89, <2 x float>* %90, align 4
  %91 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %92 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %91, i32 0, i32 3
  %93 = load float, float* %92, align 4
  %94 = call <2 x float> @_ZmlfRK6b2Vec2(float %93, %struct.b2Vec2* dereferenceable(8) %tangent)
  %95 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %94, <2 x float>* %95, align 4
  %96 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %2, %struct.b2Vec2* dereferenceable(8) %3)
  %97 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %96, <2 x float>* %97, align 4
  %98 = load float, float* %iA, align 4
  %99 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %100 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %99, i32 0, i32 0
  %101 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %100, %struct.b2Vec2* dereferenceable(8) %P)
  %102 = fmul float %98, %101
  %103 = load float, float* %wA, align 4
  %104 = fsub float %103, %102
  store float %104, float* %wA, align 4
  %105 = load float, float* %mA, align 4
  %106 = call <2 x float> @_ZmlfRK6b2Vec2(float %105, %struct.b2Vec2* dereferenceable(8) %P)
  %107 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %106, <2 x float>* %107, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %4)
  %108 = load float, float* %iB, align 4
  %109 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %110 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %109, i32 0, i32 1
  %111 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %110, %struct.b2Vec2* dereferenceable(8) %P)
  %112 = fmul float %108, %111
  %113 = load float, float* %wB, align 4
  %114 = fadd float %113, %112
  store float %114, float* %wB, align 4
  %115 = load float, float* %mB, align 4
  %116 = call <2 x float> @_ZmlfRK6b2Vec2(float %115, %struct.b2Vec2* dereferenceable(8) %P)
  %117 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %116, <2 x float>* %117, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %5)
  br label %118

; <label>:118                                     ; preds = %79
  %119 = load i32, i32* %j, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %j, align 4
  br label %75

; <label>:121                                     ; preds = %75
  %122 = load i32, i32* %indexA, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %125 = load %struct.b2Position*, %struct.b2Position** %124, align 8
  %126 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %125, i64 %123
  %127 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %126, i32 0, i32 0
  %128 = bitcast %struct.b2Vec2* %127 to i8*
  %129 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 4, i1 false)
  %130 = load float, float* %wA, align 4
  %131 = load i32, i32* %indexA, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %134 = load %struct.b2Position*, %struct.b2Position** %133, align 8
  %135 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %134, i64 %132
  %136 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %135, i32 0, i32 1
  store float %130, float* %136, align 4
  %137 = load i32, i32* %indexB, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %140 = load %struct.b2Position*, %struct.b2Position** %139, align 8
  %141 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %140, i64 %138
  %142 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %141, i32 0, i32 0
  %143 = bitcast %struct.b2Vec2* %142 to i8*
  %144 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 4, i1 false)
  %145 = load float, float* %wB, align 4
  %146 = load i32, i32* %indexB, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %6, i32 0, i32 2
  %149 = load %struct.b2Position*, %struct.b2Position** %148, align 8
  %150 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %149, i64 %147
  %151 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %150, i32 0, i32 1
  store float %145, float* %151, align 4
  br label %152

; <label>:152                                     ; preds = %121
  %153 = load i32, i32* %i, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %i, align 4
  br label %7

; <label>:155                                     ; preds = %7
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2ContactSolver24SolveVelocityConstraintsEv(%class.b2ContactSolver* %this) #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %i = alloca i32, align 4
  %vc = alloca %struct.b2ContactVelocityConstraint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %mA = alloca float, align 4
  %iA = alloca float, align 4
  %mB = alloca float, align 4
  %iB = alloca float, align 4
  %pointCount = alloca i32, align 4
  %vA = alloca %struct.b2Vec2, align 4
  %wA = alloca float, align 4
  %vB = alloca %struct.b2Vec2, align 4
  %wB = alloca float, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %tangent = alloca %struct.b2Vec2, align 4
  %friction = alloca float, align 4
  %j = alloca i32, align 4
  %vcp = alloca %struct.b2VelocityConstraintPoint*, align 8
  %dv = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %vt = alloca float, align 4
  %lambda = alloca float, align 4
  %maxFriction = alloca float, align 4
  %newImpulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %j1 = alloca i32, align 4
  %vcp2 = alloca %struct.b2VelocityConstraintPoint*, align 8
  %dv3 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %vn = alloca float, align 4
  %lambda4 = alloca float, align 4
  %newImpulse5 = alloca float, align 4
  %P6 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %cp1 = alloca %struct.b2VelocityConstraintPoint*, align 8
  %cp2 = alloca %struct.b2VelocityConstraintPoint*, align 8
  %a = alloca %struct.b2Vec2, align 4
  %dv1 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %dv2 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  %19 = alloca %struct.b2Vec2, align 4
  %20 = alloca %struct.b2Vec2, align 4
  %21 = alloca %struct.b2Vec2, align 4
  %vn1 = alloca float, align 4
  %vn2 = alloca float, align 4
  %b = alloca %struct.b2Vec2, align 4
  %22 = alloca %struct.b2Vec2, align 4
  %k_errorTol = alloca float, align 4
  %x = alloca %struct.b2Vec2, align 4
  %23 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %P1 = alloca %struct.b2Vec2, align 4
  %P2 = alloca %struct.b2Vec2, align 4
  %24 = alloca %struct.b2Vec2, align 4
  %25 = alloca %struct.b2Vec2, align 4
  %26 = alloca %struct.b2Vec2, align 4
  %27 = alloca %struct.b2Vec2, align 4
  %d7 = alloca %struct.b2Vec2, align 4
  %P18 = alloca %struct.b2Vec2, align 4
  %P29 = alloca %struct.b2Vec2, align 4
  %28 = alloca %struct.b2Vec2, align 4
  %29 = alloca %struct.b2Vec2, align 4
  %30 = alloca %struct.b2Vec2, align 4
  %31 = alloca %struct.b2Vec2, align 4
  %d10 = alloca %struct.b2Vec2, align 4
  %P111 = alloca %struct.b2Vec2, align 4
  %P212 = alloca %struct.b2Vec2, align 4
  %32 = alloca %struct.b2Vec2, align 4
  %33 = alloca %struct.b2Vec2, align 4
  %34 = alloca %struct.b2Vec2, align 4
  %35 = alloca %struct.b2Vec2, align 4
  %d13 = alloca %struct.b2Vec2, align 4
  %P114 = alloca %struct.b2Vec2, align 4
  %P215 = alloca %struct.b2Vec2, align 4
  %36 = alloca %struct.b2Vec2, align 4
  %37 = alloca %struct.b2Vec2, align 4
  %38 = alloca %struct.b2Vec2, align 4
  %39 = alloca %struct.b2Vec2, align 4
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  %40 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  store i32 0, i32* %i, align 4
  br label %41

; <label>:41                                      ; preds = %688, %0
  %42 = load i32, i32* %i, align 4
  %43 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 7
  %44 = load i32, i32* %43, align 8
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %46, label %691

; <label>:46                                      ; preds = %41
  %47 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 5
  %48 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %47, align 8
  %49 = load i32, i32* %i, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %48, i64 %50
  store %struct.b2ContactVelocityConstraint* %51, %struct.b2ContactVelocityConstraint** %vc, align 8
  %52 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %53 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %52, i32 0, i32 4
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %indexA, align 4
  %55 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %56 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %55, i32 0, i32 5
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %indexB, align 4
  %58 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %59 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %58, i32 0, i32 6
  %60 = load float, float* %59, align 4
  store float %60, float* %mA, align 4
  %61 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %62 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %61, i32 0, i32 8
  %63 = load float, float* %62, align 4
  store float %63, float* %iA, align 4
  %64 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %65 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %64, i32 0, i32 7
  %66 = load float, float* %65, align 4
  store float %66, float* %mB, align 4
  %67 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %68 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %67, i32 0, i32 9
  %69 = load float, float* %68, align 4
  store float %69, float* %iB, align 4
  %70 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %71 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %70, i32 0, i32 13
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %pointCount, align 4
  %73 = load i32, i32* %indexA, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %76 = load %struct.b2Position*, %struct.b2Position** %75, align 8
  %77 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %76, i64 %74
  %78 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %77, i32 0, i32 0
  %79 = bitcast %struct.b2Vec2* %vA to i8*
  %80 = bitcast %struct.b2Vec2* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false)
  %81 = load i32, i32* %indexA, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %84 = load %struct.b2Position*, %struct.b2Position** %83, align 8
  %85 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %84, i64 %82
  %86 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %85, i32 0, i32 1
  %87 = load float, float* %86, align 4
  store float %87, float* %wA, align 4
  %88 = load i32, i32* %indexB, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %91 = load %struct.b2Position*, %struct.b2Position** %90, align 8
  %92 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %91, i64 %89
  %93 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %92, i32 0, i32 0
  %94 = bitcast %struct.b2Vec2* %vB to i8*
  %95 = bitcast %struct.b2Vec2* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 4, i1 false)
  %96 = load i32, i32* %indexB, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %99 = load %struct.b2Position*, %struct.b2Position** %98, align 8
  %100 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %99, i64 %97
  %101 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %100, i32 0, i32 1
  %102 = load float, float* %101, align 4
  store float %102, float* %wB, align 4
  %103 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %104 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %103, i32 0, i32 1
  %105 = bitcast %struct.b2Vec2* %normal to i8*
  %106 = bitcast %struct.b2Vec2* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 4, i1 false)
  %107 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %normal, float 1.000000e+00)
  %108 = bitcast %struct.b2Vec2* %tangent to <2 x float>*
  store <2 x float> %107, <2 x float>* %108, align 4
  %109 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %110 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %109, i32 0, i32 10
  %111 = load float, float* %110, align 4
  store float %111, float* %friction, align 4
  %112 = load i32, i32* %pointCount, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %117, label %114

; <label>:114                                     ; preds = %46
  %115 = load i32, i32* %pointCount, align 4
  %116 = icmp eq i32 %115, 2
  br i1 %116, label %117, label %118

; <label>:117                                     ; preds = %114, %46
  br label %120

; <label>:118                                     ; preds = %114
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.158, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.156, i32 0, i32 0), i32 315, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZN15b2ContactSolver24SolveVelocityConstraintsEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %120

; <label>:120                                     ; preds = %119, %117
  store i32 0, i32* %j, align 4
  br label %121

; <label>:121                                     ; preds = %204, %120
  %122 = load i32, i32* %j, align 4
  %123 = load i32, i32* %pointCount, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %125, label %207

; <label>:125                                     ; preds = %121
  %126 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %127 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %126, i32 0, i32 0
  %128 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %127, i32 0, i32 0
  %129 = load i32, i32* %j, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %128, i64 %130
  store %struct.b2VelocityConstraintPoint* %131, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %132 = load float, float* %wB, align 4
  %133 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %134 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %133, i32 0, i32 1
  %135 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %132, %struct.b2Vec2* dereferenceable(8) %134)
  %136 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %135, <2 x float>* %136, align 4
  %137 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %4)
  %138 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %137, <2 x float>* %138, align 4
  %139 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %3, %struct.b2Vec2* dereferenceable(8) %vA)
  %140 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %139, <2 x float>* %140, align 4
  %141 = load float, float* %wA, align 4
  %142 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %143 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %142, i32 0, i32 0
  %144 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %141, %struct.b2Vec2* dereferenceable(8) %143)
  %145 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %144, <2 x float>* %145, align 4
  %146 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %2, %struct.b2Vec2* dereferenceable(8) %5)
  %147 = bitcast %struct.b2Vec2* %dv to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  %148 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %dv, %struct.b2Vec2* dereferenceable(8) %tangent)
  %149 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %150 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %149, i32 0, i32 12
  %151 = load float, float* %150, align 4
  %152 = fsub float %148, %151
  store float %152, float* %vt, align 4
  %153 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %154 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %153, i32 0, i32 5
  %155 = load float, float* %154, align 4
  %156 = load float, float* %vt, align 4
  %157 = fsub float -0.000000e+00, %156
  %158 = fmul float %155, %157
  store float %158, float* %lambda, align 4
  %159 = load float, float* %friction, align 4
  %160 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %161 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %160, i32 0, i32 2
  %162 = load float, float* %161, align 4
  %163 = fmul float %159, %162
  store float %163, float* %maxFriction, align 4
  %164 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %165 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %164, i32 0, i32 3
  %166 = load float, float* %165, align 4
  %167 = load float, float* %lambda, align 4
  %168 = fadd float %166, %167
  %169 = load float, float* %maxFriction, align 4
  %170 = fsub float -0.000000e+00, %169
  %171 = load float, float* %maxFriction, align 4
  %172 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %168, float %170, float %171)
  store float %172, float* %newImpulse, align 4
  %173 = load float, float* %newImpulse, align 4
  %174 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %175 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %174, i32 0, i32 3
  %176 = load float, float* %175, align 4
  %177 = fsub float %173, %176
  store float %177, float* %lambda, align 4
  %178 = load float, float* %newImpulse, align 4
  %179 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %180 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %179, i32 0, i32 3
  store float %178, float* %180, align 4
  %181 = load float, float* %lambda, align 4
  %182 = call <2 x float> @_ZmlfRK6b2Vec2(float %181, %struct.b2Vec2* dereferenceable(8) %tangent)
  %183 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %182, <2 x float>* %183, align 4
  %184 = load float, float* %mA, align 4
  %185 = call <2 x float> @_ZmlfRK6b2Vec2(float %184, %struct.b2Vec2* dereferenceable(8) %P)
  %186 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %185, <2 x float>* %186, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %6)
  %187 = load float, float* %iA, align 4
  %188 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %189 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %188, i32 0, i32 0
  %190 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %189, %struct.b2Vec2* dereferenceable(8) %P)
  %191 = fmul float %187, %190
  %192 = load float, float* %wA, align 4
  %193 = fsub float %192, %191
  store float %193, float* %wA, align 4
  %194 = load float, float* %mB, align 4
  %195 = call <2 x float> @_ZmlfRK6b2Vec2(float %194, %struct.b2Vec2* dereferenceable(8) %P)
  %196 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %195, <2 x float>* %196, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %7)
  %197 = load float, float* %iB, align 4
  %198 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp, align 8
  %199 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %198, i32 0, i32 1
  %200 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %199, %struct.b2Vec2* dereferenceable(8) %P)
  %201 = fmul float %197, %200
  %202 = load float, float* %wB, align 4
  %203 = fadd float %202, %201
  store float %203, float* %wB, align 4
  br label %204

; <label>:204                                     ; preds = %125
  %205 = load i32, i32* %j, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %j, align 4
  br label %121

; <label>:207                                     ; preds = %121
  %208 = load i32, i32* %pointCount, align 4
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %215, label %210

; <label>:210                                     ; preds = %207
  %211 = load i8, i8* @g_blockSolve, align 1
  %212 = trunc i8 %211 to i1
  %213 = zext i1 %212 to i32
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %295

; <label>:215                                     ; preds = %210, %207
  store i32 0, i32* %j1, align 4
  br label %216

; <label>:216                                     ; preds = %291, %215
  %217 = load i32, i32* %j1, align 4
  %218 = load i32, i32* %pointCount, align 4
  %219 = icmp slt i32 %217, %218
  br i1 %219, label %220, label %294

; <label>:220                                     ; preds = %216
  %221 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %222 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %221, i32 0, i32 0
  %223 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %222, i32 0, i32 0
  %224 = load i32, i32* %j1, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %223, i64 %225
  store %struct.b2VelocityConstraintPoint* %226, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %227 = load float, float* %wB, align 4
  %228 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %229 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %228, i32 0, i32 1
  %230 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %227, %struct.b2Vec2* dereferenceable(8) %229)
  %231 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %230, <2 x float>* %231, align 4
  %232 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %10)
  %233 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %232, <2 x float>* %233, align 4
  %234 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %vA)
  %235 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %234, <2 x float>* %235, align 4
  %236 = load float, float* %wA, align 4
  %237 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %238 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %237, i32 0, i32 0
  %239 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %236, %struct.b2Vec2* dereferenceable(8) %238)
  %240 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %239, <2 x float>* %240, align 4
  %241 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %11)
  %242 = bitcast %struct.b2Vec2* %dv3 to <2 x float>*
  store <2 x float> %241, <2 x float>* %242, align 4
  %243 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %dv3, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %243, float* %vn, align 4
  %244 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %245 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %244, i32 0, i32 4
  %246 = load float, float* %245, align 4
  %247 = fsub float -0.000000e+00, %246
  %248 = load float, float* %vn, align 4
  %249 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %250 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %249, i32 0, i32 6
  %251 = load float, float* %250, align 4
  %252 = fsub float %248, %251
  %253 = fmul float %247, %252
  store float %253, float* %lambda4, align 4
  %254 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %255 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %254, i32 0, i32 2
  %256 = load float, float* %255, align 4
  %257 = load float, float* %lambda4, align 4
  %258 = fadd float %256, %257
  %259 = call float @_Z5b2MaxIfET_S0_S0_(float %258, float 0.000000e+00)
  store float %259, float* %newImpulse5, align 4
  %260 = load float, float* %newImpulse5, align 4
  %261 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %262 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %261, i32 0, i32 2
  %263 = load float, float* %262, align 4
  %264 = fsub float %260, %263
  store float %264, float* %lambda4, align 4
  %265 = load float, float* %newImpulse5, align 4
  %266 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %267 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %266, i32 0, i32 2
  store float %265, float* %267, align 4
  %268 = load float, float* %lambda4, align 4
  %269 = call <2 x float> @_ZmlfRK6b2Vec2(float %268, %struct.b2Vec2* dereferenceable(8) %normal)
  %270 = bitcast %struct.b2Vec2* %P6 to <2 x float>*
  store <2 x float> %269, <2 x float>* %270, align 4
  %271 = load float, float* %mA, align 4
  %272 = call <2 x float> @_ZmlfRK6b2Vec2(float %271, %struct.b2Vec2* dereferenceable(8) %P6)
  %273 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %272, <2 x float>* %273, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %12)
  %274 = load float, float* %iA, align 4
  %275 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %276 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %275, i32 0, i32 0
  %277 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %276, %struct.b2Vec2* dereferenceable(8) %P6)
  %278 = fmul float %274, %277
  %279 = load float, float* %wA, align 4
  %280 = fsub float %279, %278
  store float %280, float* %wA, align 4
  %281 = load float, float* %mB, align 4
  %282 = call <2 x float> @_ZmlfRK6b2Vec2(float %281, %struct.b2Vec2* dereferenceable(8) %P6)
  %283 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %282, <2 x float>* %283, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %13)
  %284 = load float, float* %iB, align 4
  %285 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %vcp2, align 8
  %286 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %285, i32 0, i32 1
  %287 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %286, %struct.b2Vec2* dereferenceable(8) %P6)
  %288 = fmul float %284, %287
  %289 = load float, float* %wB, align 4
  %290 = fadd float %289, %288
  store float %290, float* %wB, align 4
  br label %291

; <label>:291                                     ; preds = %220
  %292 = load i32, i32* %j1, align 4
  %293 = add nsw i32 %292, 1
  store i32 %293, i32* %j1, align 4
  br label %216

; <label>:294                                     ; preds = %216
  br label %657

; <label>:295                                     ; preds = %210
  %296 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %297 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %296, i32 0, i32 0
  %298 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %297, i32 0, i32 0
  %299 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %298, i64 0
  store %struct.b2VelocityConstraintPoint* %299, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %300 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %301 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %300, i32 0, i32 0
  %302 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %301, i32 0, i32 0
  %303 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %302, i64 1
  store %struct.b2VelocityConstraintPoint* %303, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %304 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %305 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %304, i32 0, i32 2
  %306 = load float, float* %305, align 4
  %307 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %308 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %307, i32 0, i32 2
  %309 = load float, float* %308, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %a, float %306, float %309)
  %310 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %a, i32 0, i32 0
  %311 = load float, float* %310, align 4
  %312 = fcmp oge float %311, 0.000000e+00
  br i1 %312, label %313, label %318

; <label>:313                                     ; preds = %295
  %314 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %a, i32 0, i32 1
  %315 = load float, float* %314, align 4
  %316 = fcmp oge float %315, 0.000000e+00
  br i1 %316, label %317, label %318

; <label>:317                                     ; preds = %313
  br label %320

; <label>:318                                     ; preds = %313, %295
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.159, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.156, i32 0, i32 0), i32 413, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZN15b2ContactSolver24SolveVelocityConstraintsEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %320

; <label>:320                                     ; preds = %319, %317
  %321 = load float, float* %wB, align 4
  %322 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %323 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %322, i32 0, i32 1
  %324 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %321, %struct.b2Vec2* dereferenceable(8) %323)
  %325 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %324, <2 x float>* %325, align 4
  %326 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %16)
  %327 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %326, <2 x float>* %327, align 4
  %328 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %15, %struct.b2Vec2* dereferenceable(8) %vA)
  %329 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %328, <2 x float>* %329, align 4
  %330 = load float, float* %wA, align 4
  %331 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %332 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %331, i32 0, i32 0
  %333 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %330, %struct.b2Vec2* dereferenceable(8) %332)
  %334 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %333, <2 x float>* %334, align 4
  %335 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %14, %struct.b2Vec2* dereferenceable(8) %17)
  %336 = bitcast %struct.b2Vec2* %dv1 to <2 x float>*
  store <2 x float> %335, <2 x float>* %336, align 4
  %337 = load float, float* %wB, align 4
  %338 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %339 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %338, i32 0, i32 1
  %340 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %337, %struct.b2Vec2* dereferenceable(8) %339)
  %341 = bitcast %struct.b2Vec2* %20 to <2 x float>*
  store <2 x float> %340, <2 x float>* %341, align 4
  %342 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %vB, %struct.b2Vec2* dereferenceable(8) %20)
  %343 = bitcast %struct.b2Vec2* %19 to <2 x float>*
  store <2 x float> %342, <2 x float>* %343, align 4
  %344 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %19, %struct.b2Vec2* dereferenceable(8) %vA)
  %345 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %344, <2 x float>* %345, align 4
  %346 = load float, float* %wA, align 4
  %347 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %348 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %347, i32 0, i32 0
  %349 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %346, %struct.b2Vec2* dereferenceable(8) %348)
  %350 = bitcast %struct.b2Vec2* %21 to <2 x float>*
  store <2 x float> %349, <2 x float>* %350, align 4
  %351 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %18, %struct.b2Vec2* dereferenceable(8) %21)
  %352 = bitcast %struct.b2Vec2* %dv2 to <2 x float>*
  store <2 x float> %351, <2 x float>* %352, align 4
  %353 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %dv1, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %353, float* %vn1, align 4
  %354 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %dv2, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %354, float* %vn2, align 4
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %b)
  %355 = load float, float* %vn1, align 4
  %356 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %357 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %356, i32 0, i32 6
  %358 = load float, float* %357, align 4
  %359 = fsub float %355, %358
  %360 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 0
  store float %359, float* %360, align 4
  %361 = load float, float* %vn2, align 4
  %362 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %363 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %362, i32 0, i32 6
  %364 = load float, float* %363, align 4
  %365 = fsub float %361, %364
  %366 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 1
  store float %365, float* %366, align 4
  %367 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %368 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %367, i32 0, i32 3
  %369 = call <2 x float> @_Z5b2MulRK7b2Mat22RK6b2Vec2(%struct.b2Transform* dereferenceable(16) %368, %struct.b2Vec2* dereferenceable(8) %a)
  %370 = bitcast %struct.b2Vec2* %22 to <2 x float>*
  store <2 x float> %369, <2 x float>* %370, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %b, %struct.b2Vec2* dereferenceable(8) %22)
  store float 0x3F50624DE0000000, float* %k_errorTol, align 4
  br label %371

; <label>:371                                     ; preds = %320
  %372 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %373 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %372, i32 0, i32 2
  %374 = call <2 x float> @_Z5b2MulRK7b2Mat22RK6b2Vec2(%struct.b2Transform* dereferenceable(16) %373, %struct.b2Vec2* dereferenceable(8) %b)
  %375 = bitcast %struct.b2Vec2* %23 to <2 x float>*
  store <2 x float> %374, <2 x float>* %375, align 4
  %376 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %23)
  %377 = bitcast %struct.b2Vec2* %x to <2 x float>*
  store <2 x float> %376, <2 x float>* %377, align 4
  %378 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %379 = load float, float* %378, align 4
  %380 = fcmp oge float %379, 0.000000e+00
  br i1 %380, label %381, label %436

; <label>:381                                     ; preds = %371
  %382 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %383 = load float, float* %382, align 4
  %384 = fcmp oge float %383, 0.000000e+00
  br i1 %384, label %385, label %436

; <label>:385                                     ; preds = %381
  %386 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %x, %struct.b2Vec2* dereferenceable(8) %a)
  %387 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %386, <2 x float>* %387, align 4
  %388 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 0
  %389 = load float, float* %388, align 4
  %390 = call <2 x float> @_ZmlfRK6b2Vec2(float %389, %struct.b2Vec2* dereferenceable(8) %normal)
  %391 = bitcast %struct.b2Vec2* %P1 to <2 x float>*
  store <2 x float> %390, <2 x float>* %391, align 4
  %392 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 1
  %393 = load float, float* %392, align 4
  %394 = call <2 x float> @_ZmlfRK6b2Vec2(float %393, %struct.b2Vec2* dereferenceable(8) %normal)
  %395 = bitcast %struct.b2Vec2* %P2 to <2 x float>*
  store <2 x float> %394, <2 x float>* %395, align 4
  %396 = load float, float* %mA, align 4
  %397 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P1, %struct.b2Vec2* dereferenceable(8) %P2)
  %398 = bitcast %struct.b2Vec2* %25 to <2 x float>*
  store <2 x float> %397, <2 x float>* %398, align 4
  %399 = call <2 x float> @_ZmlfRK6b2Vec2(float %396, %struct.b2Vec2* dereferenceable(8) %25)
  %400 = bitcast %struct.b2Vec2* %24 to <2 x float>*
  store <2 x float> %399, <2 x float>* %400, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %24)
  %401 = load float, float* %iA, align 4
  %402 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %403 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %402, i32 0, i32 0
  %404 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %403, %struct.b2Vec2* dereferenceable(8) %P1)
  %405 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %406 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %405, i32 0, i32 0
  %407 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %406, %struct.b2Vec2* dereferenceable(8) %P2)
  %408 = fadd float %404, %407
  %409 = fmul float %401, %408
  %410 = load float, float* %wA, align 4
  %411 = fsub float %410, %409
  store float %411, float* %wA, align 4
  %412 = load float, float* %mB, align 4
  %413 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P1, %struct.b2Vec2* dereferenceable(8) %P2)
  %414 = bitcast %struct.b2Vec2* %27 to <2 x float>*
  store <2 x float> %413, <2 x float>* %414, align 4
  %415 = call <2 x float> @_ZmlfRK6b2Vec2(float %412, %struct.b2Vec2* dereferenceable(8) %27)
  %416 = bitcast %struct.b2Vec2* %26 to <2 x float>*
  store <2 x float> %415, <2 x float>* %416, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %26)
  %417 = load float, float* %iB, align 4
  %418 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %419 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %418, i32 0, i32 1
  %420 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %419, %struct.b2Vec2* dereferenceable(8) %P1)
  %421 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %422 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %421, i32 0, i32 1
  %423 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %422, %struct.b2Vec2* dereferenceable(8) %P2)
  %424 = fadd float %420, %423
  %425 = fmul float %417, %424
  %426 = load float, float* %wB, align 4
  %427 = fadd float %426, %425
  store float %427, float* %wB, align 4
  %428 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %429 = load float, float* %428, align 4
  %430 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %431 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %430, i32 0, i32 2
  store float %429, float* %431, align 4
  %432 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %433 = load float, float* %432, align 4
  %434 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %435 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %434, i32 0, i32 2
  store float %433, float* %435, align 4
  br label %656

; <label>:436                                     ; preds = %381, %371
  %437 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %438 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %437, i32 0, i32 4
  %439 = load float, float* %438, align 4
  %440 = fsub float -0.000000e+00, %439
  %441 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 0
  %442 = load float, float* %441, align 4
  %443 = fmul float %440, %442
  %444 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  store float %443, float* %444, align 4
  %445 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  store float 0.000000e+00, float* %445, align 4
  store float 0.000000e+00, float* %vn1, align 4
  %446 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %447 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %446, i32 0, i32 3
  %448 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %447, i32 0, i32 0
  %449 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %448, i32 0, i32 1
  %450 = load float, float* %449, align 4
  %451 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %452 = load float, float* %451, align 4
  %453 = fmul float %450, %452
  %454 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 1
  %455 = load float, float* %454, align 4
  %456 = fadd float %453, %455
  store float %456, float* %vn2, align 4
  %457 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %458 = load float, float* %457, align 4
  %459 = fcmp oge float %458, 0.000000e+00
  br i1 %459, label %460, label %514

; <label>:460                                     ; preds = %436
  %461 = load float, float* %vn2, align 4
  %462 = fcmp oge float %461, 0.000000e+00
  br i1 %462, label %463, label %514

; <label>:463                                     ; preds = %460
  %464 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %x, %struct.b2Vec2* dereferenceable(8) %a)
  %465 = bitcast %struct.b2Vec2* %d7 to <2 x float>*
  store <2 x float> %464, <2 x float>* %465, align 4
  %466 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d7, i32 0, i32 0
  %467 = load float, float* %466, align 4
  %468 = call <2 x float> @_ZmlfRK6b2Vec2(float %467, %struct.b2Vec2* dereferenceable(8) %normal)
  %469 = bitcast %struct.b2Vec2* %P18 to <2 x float>*
  store <2 x float> %468, <2 x float>* %469, align 4
  %470 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d7, i32 0, i32 1
  %471 = load float, float* %470, align 4
  %472 = call <2 x float> @_ZmlfRK6b2Vec2(float %471, %struct.b2Vec2* dereferenceable(8) %normal)
  %473 = bitcast %struct.b2Vec2* %P29 to <2 x float>*
  store <2 x float> %472, <2 x float>* %473, align 4
  %474 = load float, float* %mA, align 4
  %475 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P18, %struct.b2Vec2* dereferenceable(8) %P29)
  %476 = bitcast %struct.b2Vec2* %29 to <2 x float>*
  store <2 x float> %475, <2 x float>* %476, align 4
  %477 = call <2 x float> @_ZmlfRK6b2Vec2(float %474, %struct.b2Vec2* dereferenceable(8) %29)
  %478 = bitcast %struct.b2Vec2* %28 to <2 x float>*
  store <2 x float> %477, <2 x float>* %478, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %28)
  %479 = load float, float* %iA, align 4
  %480 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %481 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %480, i32 0, i32 0
  %482 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %481, %struct.b2Vec2* dereferenceable(8) %P18)
  %483 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %484 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %483, i32 0, i32 0
  %485 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %484, %struct.b2Vec2* dereferenceable(8) %P29)
  %486 = fadd float %482, %485
  %487 = fmul float %479, %486
  %488 = load float, float* %wA, align 4
  %489 = fsub float %488, %487
  store float %489, float* %wA, align 4
  %490 = load float, float* %mB, align 4
  %491 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P18, %struct.b2Vec2* dereferenceable(8) %P29)
  %492 = bitcast %struct.b2Vec2* %31 to <2 x float>*
  store <2 x float> %491, <2 x float>* %492, align 4
  %493 = call <2 x float> @_ZmlfRK6b2Vec2(float %490, %struct.b2Vec2* dereferenceable(8) %31)
  %494 = bitcast %struct.b2Vec2* %30 to <2 x float>*
  store <2 x float> %493, <2 x float>* %494, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %30)
  %495 = load float, float* %iB, align 4
  %496 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %497 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %496, i32 0, i32 1
  %498 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %497, %struct.b2Vec2* dereferenceable(8) %P18)
  %499 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %500 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %499, i32 0, i32 1
  %501 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %500, %struct.b2Vec2* dereferenceable(8) %P29)
  %502 = fadd float %498, %501
  %503 = fmul float %495, %502
  %504 = load float, float* %wB, align 4
  %505 = fadd float %504, %503
  store float %505, float* %wB, align 4
  %506 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %507 = load float, float* %506, align 4
  %508 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %509 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %508, i32 0, i32 2
  store float %507, float* %509, align 4
  %510 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %511 = load float, float* %510, align 4
  %512 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %513 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %512, i32 0, i32 2
  store float %511, float* %513, align 4
  br label %656

; <label>:514                                     ; preds = %460, %436
  %515 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  store float 0.000000e+00, float* %515, align 4
  %516 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %517 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %516, i32 0, i32 4
  %518 = load float, float* %517, align 4
  %519 = fsub float -0.000000e+00, %518
  %520 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 1
  %521 = load float, float* %520, align 4
  %522 = fmul float %519, %521
  %523 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  store float %522, float* %523, align 4
  %524 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %525 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %524, i32 0, i32 3
  %526 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %525, i32 0, i32 1
  %527 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %526, i32 0, i32 0
  %528 = load float, float* %527, align 4
  %529 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %530 = load float, float* %529, align 4
  %531 = fmul float %528, %530
  %532 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 0
  %533 = load float, float* %532, align 4
  %534 = fadd float %531, %533
  store float %534, float* %vn1, align 4
  store float 0.000000e+00, float* %vn2, align 4
  %535 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %536 = load float, float* %535, align 4
  %537 = fcmp oge float %536, 0.000000e+00
  br i1 %537, label %538, label %592

; <label>:538                                     ; preds = %514
  %539 = load float, float* %vn1, align 4
  %540 = fcmp oge float %539, 0.000000e+00
  br i1 %540, label %541, label %592

; <label>:541                                     ; preds = %538
  %542 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %x, %struct.b2Vec2* dereferenceable(8) %a)
  %543 = bitcast %struct.b2Vec2* %d10 to <2 x float>*
  store <2 x float> %542, <2 x float>* %543, align 4
  %544 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d10, i32 0, i32 0
  %545 = load float, float* %544, align 4
  %546 = call <2 x float> @_ZmlfRK6b2Vec2(float %545, %struct.b2Vec2* dereferenceable(8) %normal)
  %547 = bitcast %struct.b2Vec2* %P111 to <2 x float>*
  store <2 x float> %546, <2 x float>* %547, align 4
  %548 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d10, i32 0, i32 1
  %549 = load float, float* %548, align 4
  %550 = call <2 x float> @_ZmlfRK6b2Vec2(float %549, %struct.b2Vec2* dereferenceable(8) %normal)
  %551 = bitcast %struct.b2Vec2* %P212 to <2 x float>*
  store <2 x float> %550, <2 x float>* %551, align 4
  %552 = load float, float* %mA, align 4
  %553 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P111, %struct.b2Vec2* dereferenceable(8) %P212)
  %554 = bitcast %struct.b2Vec2* %33 to <2 x float>*
  store <2 x float> %553, <2 x float>* %554, align 4
  %555 = call <2 x float> @_ZmlfRK6b2Vec2(float %552, %struct.b2Vec2* dereferenceable(8) %33)
  %556 = bitcast %struct.b2Vec2* %32 to <2 x float>*
  store <2 x float> %555, <2 x float>* %556, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %32)
  %557 = load float, float* %iA, align 4
  %558 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %559 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %558, i32 0, i32 0
  %560 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %559, %struct.b2Vec2* dereferenceable(8) %P111)
  %561 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %562 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %561, i32 0, i32 0
  %563 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %562, %struct.b2Vec2* dereferenceable(8) %P212)
  %564 = fadd float %560, %563
  %565 = fmul float %557, %564
  %566 = load float, float* %wA, align 4
  %567 = fsub float %566, %565
  store float %567, float* %wA, align 4
  %568 = load float, float* %mB, align 4
  %569 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P111, %struct.b2Vec2* dereferenceable(8) %P212)
  %570 = bitcast %struct.b2Vec2* %35 to <2 x float>*
  store <2 x float> %569, <2 x float>* %570, align 4
  %571 = call <2 x float> @_ZmlfRK6b2Vec2(float %568, %struct.b2Vec2* dereferenceable(8) %35)
  %572 = bitcast %struct.b2Vec2* %34 to <2 x float>*
  store <2 x float> %571, <2 x float>* %572, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %34)
  %573 = load float, float* %iB, align 4
  %574 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %575 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %574, i32 0, i32 1
  %576 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %575, %struct.b2Vec2* dereferenceable(8) %P111)
  %577 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %578 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %577, i32 0, i32 1
  %579 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %578, %struct.b2Vec2* dereferenceable(8) %P212)
  %580 = fadd float %576, %579
  %581 = fmul float %573, %580
  %582 = load float, float* %wB, align 4
  %583 = fadd float %582, %581
  store float %583, float* %wB, align 4
  %584 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %585 = load float, float* %584, align 4
  %586 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %587 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %586, i32 0, i32 2
  store float %585, float* %587, align 4
  %588 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %589 = load float, float* %588, align 4
  %590 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %591 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %590, i32 0, i32 2
  store float %589, float* %591, align 4
  br label %656

; <label>:592                                     ; preds = %538, %514
  %593 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  store float 0.000000e+00, float* %593, align 4
  %594 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  store float 0.000000e+00, float* %594, align 4
  %595 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 0
  %596 = load float, float* %595, align 4
  store float %596, float* %vn1, align 4
  %597 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %b, i32 0, i32 1
  %598 = load float, float* %597, align 4
  store float %598, float* %vn2, align 4
  %599 = load float, float* %vn1, align 4
  %600 = fcmp oge float %599, 0.000000e+00
  br i1 %600, label %601, label %655

; <label>:601                                     ; preds = %592
  %602 = load float, float* %vn2, align 4
  %603 = fcmp oge float %602, 0.000000e+00
  br i1 %603, label %604, label %655

; <label>:604                                     ; preds = %601
  %605 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %x, %struct.b2Vec2* dereferenceable(8) %a)
  %606 = bitcast %struct.b2Vec2* %d13 to <2 x float>*
  store <2 x float> %605, <2 x float>* %606, align 4
  %607 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d13, i32 0, i32 0
  %608 = load float, float* %607, align 4
  %609 = call <2 x float> @_ZmlfRK6b2Vec2(float %608, %struct.b2Vec2* dereferenceable(8) %normal)
  %610 = bitcast %struct.b2Vec2* %P114 to <2 x float>*
  store <2 x float> %609, <2 x float>* %610, align 4
  %611 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d13, i32 0, i32 1
  %612 = load float, float* %611, align 4
  %613 = call <2 x float> @_ZmlfRK6b2Vec2(float %612, %struct.b2Vec2* dereferenceable(8) %normal)
  %614 = bitcast %struct.b2Vec2* %P215 to <2 x float>*
  store <2 x float> %613, <2 x float>* %614, align 4
  %615 = load float, float* %mA, align 4
  %616 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P114, %struct.b2Vec2* dereferenceable(8) %P215)
  %617 = bitcast %struct.b2Vec2* %37 to <2 x float>*
  store <2 x float> %616, <2 x float>* %617, align 4
  %618 = call <2 x float> @_ZmlfRK6b2Vec2(float %615, %struct.b2Vec2* dereferenceable(8) %37)
  %619 = bitcast %struct.b2Vec2* %36 to <2 x float>*
  store <2 x float> %618, <2 x float>* %619, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %vA, %struct.b2Vec2* dereferenceable(8) %36)
  %620 = load float, float* %iA, align 4
  %621 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %622 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %621, i32 0, i32 0
  %623 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %622, %struct.b2Vec2* dereferenceable(8) %P114)
  %624 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %625 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %624, i32 0, i32 0
  %626 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %625, %struct.b2Vec2* dereferenceable(8) %P215)
  %627 = fadd float %623, %626
  %628 = fmul float %620, %627
  %629 = load float, float* %wA, align 4
  %630 = fsub float %629, %628
  store float %630, float* %wA, align 4
  %631 = load float, float* %mB, align 4
  %632 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %P114, %struct.b2Vec2* dereferenceable(8) %P215)
  %633 = bitcast %struct.b2Vec2* %39 to <2 x float>*
  store <2 x float> %632, <2 x float>* %633, align 4
  %634 = call <2 x float> @_ZmlfRK6b2Vec2(float %631, %struct.b2Vec2* dereferenceable(8) %39)
  %635 = bitcast %struct.b2Vec2* %38 to <2 x float>*
  store <2 x float> %634, <2 x float>* %635, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %vB, %struct.b2Vec2* dereferenceable(8) %38)
  %636 = load float, float* %iB, align 4
  %637 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %638 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %637, i32 0, i32 1
  %639 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %638, %struct.b2Vec2* dereferenceable(8) %P114)
  %640 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %641 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %640, i32 0, i32 1
  %642 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %641, %struct.b2Vec2* dereferenceable(8) %P215)
  %643 = fadd float %639, %642
  %644 = fmul float %636, %643
  %645 = load float, float* %wB, align 4
  %646 = fadd float %645, %644
  store float %646, float* %wB, align 4
  %647 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 0
  %648 = load float, float* %647, align 4
  %649 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp1, align 8
  %650 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %649, i32 0, i32 2
  store float %648, float* %650, align 4
  %651 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %x, i32 0, i32 1
  %652 = load float, float* %651, align 4
  %653 = load %struct.b2VelocityConstraintPoint*, %struct.b2VelocityConstraintPoint** %cp2, align 8
  %654 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %653, i32 0, i32 2
  store float %652, float* %654, align 4
  br label %656

; <label>:655                                     ; preds = %601, %592
  br label %656

; <label>:656                                     ; preds = %655, %604, %541, %463, %385
  br label %657

; <label>:657                                     ; preds = %656, %294
  %658 = load i32, i32* %indexA, align 4
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %661 = load %struct.b2Position*, %struct.b2Position** %660, align 8
  %662 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %661, i64 %659
  %663 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %662, i32 0, i32 0
  %664 = bitcast %struct.b2Vec2* %663 to i8*
  %665 = bitcast %struct.b2Vec2* %vA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %664, i8* %665, i64 8, i32 4, i1 false)
  %666 = load float, float* %wA, align 4
  %667 = load i32, i32* %indexA, align 4
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %670 = load %struct.b2Position*, %struct.b2Position** %669, align 8
  %671 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %670, i64 %668
  %672 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %671, i32 0, i32 1
  store float %666, float* %672, align 4
  %673 = load i32, i32* %indexB, align 4
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %676 = load %struct.b2Position*, %struct.b2Position** %675, align 8
  %677 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %676, i64 %674
  %678 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %677, i32 0, i32 0
  %679 = bitcast %struct.b2Vec2* %678 to i8*
  %680 = bitcast %struct.b2Vec2* %vB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %679, i8* %680, i64 8, i32 4, i1 false)
  %681 = load float, float* %wB, align 4
  %682 = load i32, i32* %indexB, align 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %40, i32 0, i32 2
  %685 = load %struct.b2Position*, %struct.b2Position** %684, align 8
  %686 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %685, i64 %683
  %687 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %686, i32 0, i32 1
  store float %681, float* %687, align 4
  br label %688

; <label>:688                                     ; preds = %657
  %689 = load i32, i32* %i, align 4
  %690 = add nsw i32 %689, 1
  store i32 %690, i32* %i, align 4
  br label %41

; <label>:691                                     ; preds = %41
  ret void
}

; Function Attrs: uwtable
define void @_ZN15b2ContactSolver13StoreImpulsesEv(%class.b2ContactSolver* %this) #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %i = alloca i32, align 4
  %vc = alloca %struct.b2ContactVelocityConstraint*, align 8
  %manifold = alloca %struct.b2Manifold*, align 8
  %j = alloca i32, align 4
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  %2 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %60, %0
  %4 = load i32, i32* %i, align 4
  %5 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %63

; <label>:8                                       ; preds = %3
  %9 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 5
  %10 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %9, align 8
  %11 = load i32, i32* %i, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %10, i64 %12
  store %struct.b2ContactVelocityConstraint* %13, %struct.b2ContactVelocityConstraint** %vc, align 8
  %14 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %15 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %14, i32 0, i32 14
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %2, i32 0, i32 6
  %19 = load %class.b2Contact**, %class.b2Contact*** %18, align 8
  %20 = getelementptr inbounds %class.b2Contact*, %class.b2Contact** %19, i64 %17
  %21 = load %class.b2Contact*, %class.b2Contact** %20, align 8
  %22 = call %struct.b2Manifold* @_ZN9b2Contact11GetManifoldEv(%class.b2Contact* %21)
  store %struct.b2Manifold* %22, %struct.b2Manifold** %manifold, align 8
  store i32 0, i32* %j, align 4
  br label %23

; <label>:23                                      ; preds = %56, %8
  %24 = load i32, i32* %j, align 4
  %25 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %26 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %25, i32 0, i32 13
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %59

; <label>:29                                      ; preds = %23
  %30 = load i32, i32* %j, align 4
  %31 = sext i32 %30 to i64
  %32 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %33 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %32, i32 0, i32 0
  %34 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %33, i64 0, i64 %31
  %35 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %34, i32 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = load i32, i32* %j, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %40 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %39, i32 0, i32 0
  %41 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %40, i64 0, i64 %38
  %42 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %41, i32 0, i32 1
  store float %36, float* %42, align 4
  %43 = load i32, i32* %j, align 4
  %44 = sext i32 %43 to i64
  %45 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %46 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %45, i32 0, i32 0
  %47 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %46, i64 0, i64 %44
  %48 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %47, i32 0, i32 3
  %49 = load float, float* %48, align 4
  %50 = load i32, i32* %j, align 4
  %51 = sext i32 %50 to i64
  %52 = load %struct.b2Manifold*, %struct.b2Manifold** %manifold, align 8
  %53 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %52, i32 0, i32 0
  %54 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %53, i64 0, i64 %51
  %55 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %54, i32 0, i32 2
  store float %49, float* %55, align 4
  br label %56

; <label>:56                                      ; preds = %29
  %57 = load i32, i32* %j, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %j, align 4
  br label %23

; <label>:59                                      ; preds = %23
  br label %60

; <label>:60                                      ; preds = %59
  %61 = load i32, i32* %i, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %i, align 4
  br label %3

; <label>:63                                      ; preds = %3
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN15b2ContactSolver24SolvePositionConstraintsEv(%class.b2ContactSolver* %this) #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %minSeparation = alloca float, align 4
  %i = alloca i32, align 4
  %pc = alloca %struct.b2ContactPositionConstraint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %localCenterA = alloca %struct.b2Vec2, align 4
  %mA = alloca float, align 4
  %iA = alloca float, align 4
  %localCenterB = alloca %struct.b2Vec2, align 4
  %mB = alloca float, align 4
  %iB = alloca float, align 4
  %pointCount = alloca i32, align 4
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %j = alloca i32, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %psm = alloca %struct.b2PositionSolverManifold, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %point = alloca %struct.b2Vec2, align 4
  %separation = alloca float, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %C = alloca float, align 4
  %rnA = alloca float, align 4
  %rnB = alloca float, align 4
  %K = alloca float, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  %8 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  store float 0.000000e+00, float* %minSeparation, align 4
  store i32 0, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %205, %0
  %10 = load i32, i32* %i, align 4
  %11 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %208

; <label>:14                                      ; preds = %9
  %15 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 4
  %16 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %15, align 8
  %17 = load i32, i32* %i, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %16, i64 %18
  store %struct.b2ContactPositionConstraint* %19, %struct.b2ContactPositionConstraint** %pc, align 8
  %20 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %21 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %indexA, align 4
  %23 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %24 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %indexB, align 4
  %26 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %27 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %26, i32 0, i32 7
  %28 = bitcast %struct.b2Vec2* %localCenterA to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %31 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %30, i32 0, i32 5
  %32 = load float, float* %31, align 4
  store float %32, float* %mA, align 4
  %33 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %34 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %33, i32 0, i32 9
  %35 = load float, float* %34, align 4
  store float %35, float* %iA, align 4
  %36 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %37 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %36, i32 0, i32 8
  %38 = bitcast %struct.b2Vec2* %localCenterB to i8*
  %39 = bitcast %struct.b2Vec2* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  %40 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %41 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %40, i32 0, i32 6
  %42 = load float, float* %41, align 4
  store float %42, float* %mB, align 4
  %43 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %44 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %43, i32 0, i32 10
  %45 = load float, float* %44, align 4
  store float %45, float* %iB, align 4
  %46 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %47 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %46, i32 0, i32 14
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %pointCount, align 4
  %49 = load i32, i32* %indexA, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %52 = load %struct.b2Position*, %struct.b2Position** %51, align 8
  %53 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %52, i64 %50
  %54 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %53, i32 0, i32 0
  %55 = bitcast %struct.b2Vec2* %cA to i8*
  %56 = bitcast %struct.b2Vec2* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false)
  %57 = load i32, i32* %indexA, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %60 = load %struct.b2Position*, %struct.b2Position** %59, align 8
  %61 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %60, i64 %58
  %62 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %61, i32 0, i32 1
  %63 = load float, float* %62, align 4
  store float %63, float* %aA, align 4
  %64 = load i32, i32* %indexB, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %67 = load %struct.b2Position*, %struct.b2Position** %66, align 8
  %68 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %67, i64 %65
  %69 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %68, i32 0, i32 0
  %70 = bitcast %struct.b2Vec2* %cB to i8*
  %71 = bitcast %struct.b2Vec2* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 4, i1 false)
  %72 = load i32, i32* %indexB, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %75 = load %struct.b2Position*, %struct.b2Position** %74, align 8
  %76 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %75, i64 %73
  %77 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %76, i32 0, i32 1
  %78 = load float, float* %77, align 4
  store float %78, float* %aB, align 4
  store i32 0, i32* %j, align 4
  br label %79

; <label>:79                                      ; preds = %171, %14
  %80 = load i32, i32* %j, align 4
  %81 = load i32, i32* %pointCount, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %83, label %174

; <label>:83                                      ; preds = %79
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %84 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %85 = load float, float* %aA, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %84, float %85)
  %86 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %87 = load float, float* %aB, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %86, float %87)
  %88 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 0
  %89 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %90 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %89, %struct.b2Vec2* dereferenceable(8) %localCenterA)
  %91 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %90, <2 x float>* %91, align 4
  %92 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %3)
  %93 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %92, <2 x float>* %93, align 4
  %94 = bitcast %struct.b2Vec2* %88 to i8*
  %95 = bitcast %struct.b2Vec2* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 4, i1 false)
  %96 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 0
  %97 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %98 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %97, %struct.b2Vec2* dereferenceable(8) %localCenterB)
  %99 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %98, <2 x float>* %99, align 4
  %100 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %5)
  %101 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %100, <2 x float>* %101, align 4
  %102 = bitcast %struct.b2Vec2* %96 to i8*
  %103 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 8, i32 4, i1 false)
  call void @_ZN24b2PositionSolverManifoldC2Ev(%struct.b2PositionSolverManifold* %psm)
  %104 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %105 = load i32, i32* %j, align 4
  call void @_ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i(%struct.b2PositionSolverManifold* %psm, %struct.b2ContactPositionConstraint* %104, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB, i32 %105)
  %106 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %psm, i32 0, i32 0
  %107 = bitcast %struct.b2Vec2* %normal to i8*
  %108 = bitcast %struct.b2Vec2* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 4, i1 false)
  %109 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %psm, i32 0, i32 1
  %110 = bitcast %struct.b2Vec2* %point to i8*
  %111 = bitcast %struct.b2Vec2* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 8, i32 4, i1 false)
  %112 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %psm, i32 0, i32 2
  %113 = load float, float* %112, align 4
  store float %113, float* %separation, align 4
  %114 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %point, %struct.b2Vec2* dereferenceable(8) %cA)
  %115 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %114, <2 x float>* %115, align 4
  %116 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %point, %struct.b2Vec2* dereferenceable(8) %cB)
  %117 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %116, <2 x float>* %117, align 4
  %118 = load float, float* %minSeparation, align 4
  %119 = load float, float* %separation, align 4
  %120 = call float @_Z5b2MinIfET_S0_S0_(float %118, float %119)
  store float %120, float* %minSeparation, align 4
  %121 = load float, float* %separation, align 4
  %122 = fadd float %121, 0x3F747AE140000000
  %123 = fmul float 0x3FC99999A0000000, %122
  %124 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %123, float 0xBFC99999A0000000, float 0.000000e+00)
  store float %124, float* %C, align 4
  %125 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %125, float* %rnA, align 4
  %126 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %126, float* %rnB, align 4
  %127 = load float, float* %mA, align 4
  %128 = load float, float* %mB, align 4
  %129 = fadd float %127, %128
  %130 = load float, float* %iA, align 4
  %131 = load float, float* %rnA, align 4
  %132 = fmul float %130, %131
  %133 = load float, float* %rnA, align 4
  %134 = fmul float %132, %133
  %135 = fadd float %129, %134
  %136 = load float, float* %iB, align 4
  %137 = load float, float* %rnB, align 4
  %138 = fmul float %136, %137
  %139 = load float, float* %rnB, align 4
  %140 = fmul float %138, %139
  %141 = fadd float %135, %140
  store float %141, float* %K, align 4
  %142 = load float, float* %K, align 4
  %143 = fcmp ogt float %142, 0.000000e+00
  br i1 %143, label %144, label %149

; <label>:144                                     ; preds = %83
  %145 = load float, float* %C, align 4
  %146 = fsub float -0.000000e+00, %145
  %147 = load float, float* %K, align 4
  %148 = fdiv float %146, %147
  br label %150

; <label>:149                                     ; preds = %83
  br label %150

; <label>:150                                     ; preds = %149, %144
  %151 = phi float [ %148, %144 ], [ 0.000000e+00, %149 ]
  store float %151, float* %impulse, align 4
  %152 = load float, float* %impulse, align 4
  %153 = call <2 x float> @_ZmlfRK6b2Vec2(float %152, %struct.b2Vec2* dereferenceable(8) %normal)
  %154 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %153, <2 x float>* %154, align 4
  %155 = load float, float* %mA, align 4
  %156 = call <2 x float> @_ZmlfRK6b2Vec2(float %155, %struct.b2Vec2* dereferenceable(8) %P)
  %157 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %6)
  %158 = load float, float* %iA, align 4
  %159 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %P)
  %160 = fmul float %158, %159
  %161 = load float, float* %aA, align 4
  %162 = fsub float %161, %160
  store float %162, float* %aA, align 4
  %163 = load float, float* %mB, align 4
  %164 = call <2 x float> @_ZmlfRK6b2Vec2(float %163, %struct.b2Vec2* dereferenceable(8) %P)
  %165 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %164, <2 x float>* %165, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %7)
  %166 = load float, float* %iB, align 4
  %167 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %P)
  %168 = fmul float %166, %167
  %169 = load float, float* %aB, align 4
  %170 = fadd float %169, %168
  store float %170, float* %aB, align 4
  br label %171

; <label>:171                                     ; preds = %150
  %172 = load i32, i32* %j, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %j, align 4
  br label %79

; <label>:174                                     ; preds = %79
  %175 = load i32, i32* %indexA, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %178 = load %struct.b2Position*, %struct.b2Position** %177, align 8
  %179 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %178, i64 %176
  %180 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %179, i32 0, i32 0
  %181 = bitcast %struct.b2Vec2* %180 to i8*
  %182 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 8, i32 4, i1 false)
  %183 = load float, float* %aA, align 4
  %184 = load i32, i32* %indexA, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %187 = load %struct.b2Position*, %struct.b2Position** %186, align 8
  %188 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %187, i64 %185
  %189 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %188, i32 0, i32 1
  store float %183, float* %189, align 4
  %190 = load i32, i32* %indexB, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %193 = load %struct.b2Position*, %struct.b2Position** %192, align 8
  %194 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %193, i64 %191
  %195 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %194, i32 0, i32 0
  %196 = bitcast %struct.b2Vec2* %195 to i8*
  %197 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %197, i64 8, i32 4, i1 false)
  %198 = load float, float* %aB, align 4
  %199 = load i32, i32* %indexB, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %8, i32 0, i32 1
  %202 = load %struct.b2Position*, %struct.b2Position** %201, align 8
  %203 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %202, i64 %200
  %204 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %203, i32 0, i32 1
  store float %198, float* %204, align 4
  br label %205

; <label>:205                                     ; preds = %174
  %206 = load i32, i32* %i, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %i, align 4
  br label %9

; <label>:208                                     ; preds = %9
  %209 = load float, float* %minSeparation, align 4
  %210 = fcmp oge float %209, 0xBF8EB851E0000000
  ret i1 %210
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN24b2PositionSolverManifoldC2Ev(%struct.b2PositionSolverManifold* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2PositionSolverManifold*, align 8
  store %struct.b2PositionSolverManifold* %this, %struct.b2PositionSolverManifold** %1, align 8
  %2 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %1, align 8
  %3 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i(%struct.b2PositionSolverManifold* %this, %struct.b2ContactPositionConstraint* %pc, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB, i32 %index) #0 comdat align 2 {
  %1 = alloca %struct.b2PositionSolverManifold*, align 8
  %2 = alloca %struct.b2ContactPositionConstraint*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %5 = alloca i32, align 4
  %pointA = alloca %struct.b2Vec2, align 4
  %pointB = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %planePoint = alloca %struct.b2Vec2, align 4
  %clipPoint = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %planePoint1 = alloca %struct.b2Vec2, align 4
  %clipPoint2 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  store %struct.b2PositionSolverManifold* %this, %struct.b2PositionSolverManifold** %1, align 8
  store %struct.b2ContactPositionConstraint* %pc, %struct.b2ContactPositionConstraint** %2, align 8
  store %struct.b2Transform* %xfA, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %xfB, %struct.b2Transform** %4, align 8
  store i32 %index, i32* %5, align 4
  %15 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %1, align 8
  %16 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %17 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %16, i32 0, i32 14
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  br label %23

; <label>:21                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.160, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1.156, i32 0, i32 0), i32 623, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %23

; <label>:23                                      ; preds = %22, %20
  %24 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %25 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %24, i32 0, i32 11
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %150 [
    i32 0, label %27
    i32 1, label %66
    i32 2, label %105
  ]

; <label>:27                                      ; preds = %23
  %28 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %29 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %30 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %29, i32 0, i32 2
  %31 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %28, %struct.b2Vec2* dereferenceable(8) %30)
  %32 = bitcast %struct.b2Vec2* %pointA to <2 x float>*
  store <2 x float> %31, <2 x float>* %32, align 4
  %33 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %34 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %35 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %34, i32 0, i32 0
  %36 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %35, i64 0, i64 0
  %37 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %33, %struct.b2Vec2* dereferenceable(8) %36)
  %38 = bitcast %struct.b2Vec2* %pointB to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 4
  %39 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %40 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %pointA)
  %41 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %40, <2 x float>* %41, align 4
  %42 = bitcast %struct.b2Vec2* %39 to i8*
  %43 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %45 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %44)
  %46 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 1
  %47 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointA, %struct.b2Vec2* dereferenceable(8) %pointB)
  %48 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %47, <2 x float>* %48, align 4
  %49 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %8)
  %50 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = bitcast %struct.b2Vec2* %46 to i8*
  %52 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false)
  %53 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %pointA)
  %54 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %53, <2 x float>* %54, align 4
  %55 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %56 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %55)
  %57 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %58 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %57, i32 0, i32 12
  %59 = load float, float* %58, align 4
  %60 = fsub float %56, %59
  %61 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %62 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %61, i32 0, i32 13
  %63 = load float, float* %62, align 4
  %64 = fsub float %60, %63
  %65 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 2
  store float %64, float* %65, align 4
  br label %150

; <label>:66                                      ; preds = %23
  %67 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %68 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %69 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %68, i32 0, i32 1
  %70 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %71 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %70, i32 0, i32 1
  %72 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %69, %struct.b2Vec2* dereferenceable(8) %71)
  %73 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = bitcast %struct.b2Vec2* %67 to i8*
  %75 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 4, i1 false)
  %76 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %77 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %78 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %77, i32 0, i32 2
  %79 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %76, %struct.b2Vec2* dereferenceable(8) %78)
  %80 = bitcast %struct.b2Vec2* %planePoint to <2 x float>*
  store <2 x float> %79, <2 x float>* %80, align 4
  %81 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %82 = load i32, i32* %5, align 4
  %83 = sext i32 %82 to i64
  %84 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %85 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %84, i32 0, i32 0
  %86 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %85, i64 0, i64 %83
  %87 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %81, %struct.b2Vec2* dereferenceable(8) %86)
  %88 = bitcast %struct.b2Vec2* %clipPoint to <2 x float>*
  store <2 x float> %87, <2 x float>* %88, align 4
  %89 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint, %struct.b2Vec2* dereferenceable(8) %planePoint)
  %90 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %89, <2 x float>* %90, align 4
  %91 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %92 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %91)
  %93 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %94 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %93, i32 0, i32 12
  %95 = load float, float* %94, align 4
  %96 = fsub float %92, %95
  %97 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %98 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %97, i32 0, i32 13
  %99 = load float, float* %98, align 4
  %100 = fsub float %96, %99
  %101 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 2
  store float %100, float* %101, align 4
  %102 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 1
  %103 = bitcast %struct.b2Vec2* %102 to i8*
  %104 = bitcast %struct.b2Vec2* %clipPoint to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 8, i32 4, i1 false)
  br label %150

; <label>:105                                     ; preds = %23
  %106 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %107 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %108 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %107, i32 0, i32 1
  %109 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %110 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %109, i32 0, i32 1
  %111 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %108, %struct.b2Vec2* dereferenceable(8) %110)
  %112 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %111, <2 x float>* %112, align 4
  %113 = bitcast %struct.b2Vec2* %106 to i8*
  %114 = bitcast %struct.b2Vec2* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 4, i1 false)
  %115 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %116 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %117 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %116, i32 0, i32 2
  %118 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %115, %struct.b2Vec2* dereferenceable(8) %117)
  %119 = bitcast %struct.b2Vec2* %planePoint1 to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %121 = load i32, i32* %5, align 4
  %122 = sext i32 %121 to i64
  %123 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %124 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %123, i32 0, i32 0
  %125 = getelementptr inbounds [2 x %struct.b2Vec2], [2 x %struct.b2Vec2]* %124, i64 0, i64 %122
  %126 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %120, %struct.b2Vec2* dereferenceable(8) %125)
  %127 = bitcast %struct.b2Vec2* %clipPoint2 to <2 x float>*
  store <2 x float> %126, <2 x float>* %127, align 4
  %128 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %clipPoint2, %struct.b2Vec2* dereferenceable(8) %planePoint1)
  %129 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %128, <2 x float>* %129, align 4
  %130 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %131 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %13, %struct.b2Vec2* dereferenceable(8) %130)
  %132 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %133 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %132, i32 0, i32 12
  %134 = load float, float* %133, align 4
  %135 = fsub float %131, %134
  %136 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %2, align 8
  %137 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %136, i32 0, i32 13
  %138 = load float, float* %137, align 4
  %139 = fsub float %135, %138
  %140 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 2
  store float %139, float* %140, align 4
  %141 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 1
  %142 = bitcast %struct.b2Vec2* %141 to i8*
  %143 = bitcast %struct.b2Vec2* %clipPoint2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %143, i64 8, i32 4, i1 false)
  %144 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %145 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %15, i32 0, i32 0
  %146 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %145)
  %147 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %146, <2 x float>* %147, align 4
  %148 = bitcast %struct.b2Vec2* %144 to i8*
  %149 = bitcast %struct.b2Vec2* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 8, i32 4, i1 false)
  br label %150

; <label>:150                                     ; preds = %105, %66, %27, %23
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN15b2ContactSolver27SolveTOIPositionConstraintsEii(%class.b2ContactSolver* %this, i32 %toiIndexA, i32 %toiIndexB) #0 align 2 {
  %1 = alloca %class.b2ContactSolver*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %minSeparation = alloca float, align 4
  %i = alloca i32, align 4
  %pc = alloca %struct.b2ContactPositionConstraint*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %localCenterA = alloca %struct.b2Vec2, align 4
  %localCenterB = alloca %struct.b2Vec2, align 4
  %pointCount = alloca i32, align 4
  %mA = alloca float, align 4
  %iA = alloca float, align 4
  %mB = alloca float, align 4
  %iB = alloca float, align 4
  %cA = alloca %struct.b2Vec2, align 4
  %aA = alloca float, align 4
  %cB = alloca %struct.b2Vec2, align 4
  %aB = alloca float, align 4
  %j = alloca i32, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %psm = alloca %struct.b2PositionSolverManifold, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %point = alloca %struct.b2Vec2, align 4
  %separation = alloca float, align 4
  %rA = alloca %struct.b2Vec2, align 4
  %rB = alloca %struct.b2Vec2, align 4
  %C = alloca float, align 4
  %rnA = alloca float, align 4
  %rnB = alloca float, align 4
  %K = alloca float, align 4
  %impulse = alloca float, align 4
  %P = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  store %class.b2ContactSolver* %this, %class.b2ContactSolver** %1, align 8
  store i32 %toiIndexA, i32* %2, align 4
  store i32 %toiIndexB, i32* %3, align 4
  %10 = load %class.b2ContactSolver*, %class.b2ContactSolver** %1, align 8
  store float 0.000000e+00, float* %minSeparation, align 4
  store i32 0, i32* %i, align 4
  br label %11

; <label>:11                                      ; preds = %225, %0
  %12 = load i32, i32* %i, align 4
  %13 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %228

; <label>:16                                      ; preds = %11
  %17 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 4
  %18 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %17, align 8
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %18, i64 %20
  store %struct.b2ContactPositionConstraint* %21, %struct.b2ContactPositionConstraint** %pc, align 8
  %22 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %23 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %indexA, align 4
  %25 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %26 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %indexB, align 4
  %28 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %29 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %28, i32 0, i32 7
  %30 = bitcast %struct.b2Vec2* %localCenterA to i8*
  %31 = bitcast %struct.b2Vec2* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false)
  %32 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %33 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %32, i32 0, i32 8
  %34 = bitcast %struct.b2Vec2* %localCenterB to i8*
  %35 = bitcast %struct.b2Vec2* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false)
  %36 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %37 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %36, i32 0, i32 14
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %pointCount, align 4
  store float 0.000000e+00, float* %mA, align 4
  store float 0.000000e+00, float* %iA, align 4
  %39 = load i32, i32* %indexA, align 4
  %40 = load i32, i32* %2, align 4
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %46, label %42

; <label>:42                                      ; preds = %16
  %43 = load i32, i32* %indexA, align 4
  %44 = load i32, i32* %3, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %53

; <label>:46                                      ; preds = %42, %16
  %47 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %48 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %47, i32 0, i32 5
  %49 = load float, float* %48, align 4
  store float %49, float* %mA, align 4
  %50 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %51 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %50, i32 0, i32 9
  %52 = load float, float* %51, align 4
  store float %52, float* %iA, align 4
  br label %53

; <label>:53                                      ; preds = %46, %42
  store float 0.000000e+00, float* %mB, align 4
  store float 0.000000e+00, float* %iB, align 4
  %54 = load i32, i32* %indexB, align 4
  %55 = load i32, i32* %2, align 4
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %61, label %57

; <label>:57                                      ; preds = %53
  %58 = load i32, i32* %indexB, align 4
  %59 = load i32, i32* %3, align 4
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %68

; <label>:61                                      ; preds = %57, %53
  %62 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %63 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %62, i32 0, i32 6
  %64 = load float, float* %63, align 4
  store float %64, float* %mB, align 4
  %65 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %66 = getelementptr inbounds %struct.b2ContactPositionConstraint, %struct.b2ContactPositionConstraint* %65, i32 0, i32 10
  %67 = load float, float* %66, align 4
  store float %67, float* %iB, align 4
  br label %68

; <label>:68                                      ; preds = %61, %57
  %69 = load i32, i32* %indexA, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %72 = load %struct.b2Position*, %struct.b2Position** %71, align 8
  %73 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %72, i64 %70
  %74 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %73, i32 0, i32 0
  %75 = bitcast %struct.b2Vec2* %cA to i8*
  %76 = bitcast %struct.b2Vec2* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 4, i1 false)
  %77 = load i32, i32* %indexA, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %80 = load %struct.b2Position*, %struct.b2Position** %79, align 8
  %81 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %80, i64 %78
  %82 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %81, i32 0, i32 1
  %83 = load float, float* %82, align 4
  store float %83, float* %aA, align 4
  %84 = load i32, i32* %indexB, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %87 = load %struct.b2Position*, %struct.b2Position** %86, align 8
  %88 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %87, i64 %85
  %89 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %88, i32 0, i32 0
  %90 = bitcast %struct.b2Vec2* %cB to i8*
  %91 = bitcast %struct.b2Vec2* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 4, i1 false)
  %92 = load i32, i32* %indexB, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %95 = load %struct.b2Position*, %struct.b2Position** %94, align 8
  %96 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %95, i64 %93
  %97 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %96, i32 0, i32 1
  %98 = load float, float* %97, align 4
  store float %98, float* %aB, align 4
  store i32 0, i32* %j, align 4
  br label %99

; <label>:99                                      ; preds = %191, %68
  %100 = load i32, i32* %j, align 4
  %101 = load i32, i32* %pointCount, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %194

; <label>:103                                     ; preds = %99
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %104 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %105 = load float, float* %aA, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %104, float %105)
  %106 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %107 = load float, float* %aB, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %106, float %107)
  %108 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 0
  %109 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %110 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %109, %struct.b2Vec2* dereferenceable(8) %localCenterA)
  %111 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %110, <2 x float>* %111, align 4
  %112 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cA, %struct.b2Vec2* dereferenceable(8) %5)
  %113 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %112, <2 x float>* %113, align 4
  %114 = bitcast %struct.b2Vec2* %108 to i8*
  %115 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 4, i1 false)
  %116 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 0
  %117 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %118 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %117, %struct.b2Vec2* dereferenceable(8) %localCenterB)
  %119 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %118, <2 x float>* %119, align 4
  %120 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %cB, %struct.b2Vec2* dereferenceable(8) %7)
  %121 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %120, <2 x float>* %121, align 4
  %122 = bitcast %struct.b2Vec2* %116 to i8*
  %123 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %122, i8* %123, i64 8, i32 4, i1 false)
  call void @_ZN24b2PositionSolverManifoldC2Ev(%struct.b2PositionSolverManifold* %psm)
  %124 = load %struct.b2ContactPositionConstraint*, %struct.b2ContactPositionConstraint** %pc, align 8
  %125 = load i32, i32* %j, align 4
  call void @_ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i(%struct.b2PositionSolverManifold* %psm, %struct.b2ContactPositionConstraint* %124, %struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Transform* dereferenceable(16) %xfB, i32 %125)
  %126 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %psm, i32 0, i32 0
  %127 = bitcast %struct.b2Vec2* %normal to i8*
  %128 = bitcast %struct.b2Vec2* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 4, i1 false)
  %129 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %psm, i32 0, i32 1
  %130 = bitcast %struct.b2Vec2* %point to i8*
  %131 = bitcast %struct.b2Vec2* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 4, i1 false)
  %132 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %psm, i32 0, i32 2
  %133 = load float, float* %132, align 4
  store float %133, float* %separation, align 4
  %134 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %point, %struct.b2Vec2* dereferenceable(8) %cA)
  %135 = bitcast %struct.b2Vec2* %rA to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %point, %struct.b2Vec2* dereferenceable(8) %cB)
  %137 = bitcast %struct.b2Vec2* %rB to <2 x float>*
  store <2 x float> %136, <2 x float>* %137, align 4
  %138 = load float, float* %minSeparation, align 4
  %139 = load float, float* %separation, align 4
  %140 = call float @_Z5b2MinIfET_S0_S0_(float %138, float %139)
  store float %140, float* %minSeparation, align 4
  %141 = load float, float* %separation, align 4
  %142 = fadd float %141, 0x3F747AE140000000
  %143 = fmul float 7.500000e-01, %142
  %144 = call float @_Z7b2ClampIfET_S0_S0_S0_(float %143, float 0xBFC99999A0000000, float 0.000000e+00)
  store float %144, float* %C, align 4
  %145 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %145, float* %rnA, align 4
  %146 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %146, float* %rnB, align 4
  %147 = load float, float* %mA, align 4
  %148 = load float, float* %mB, align 4
  %149 = fadd float %147, %148
  %150 = load float, float* %iA, align 4
  %151 = load float, float* %rnA, align 4
  %152 = fmul float %150, %151
  %153 = load float, float* %rnA, align 4
  %154 = fmul float %152, %153
  %155 = fadd float %149, %154
  %156 = load float, float* %iB, align 4
  %157 = load float, float* %rnB, align 4
  %158 = fmul float %156, %157
  %159 = load float, float* %rnB, align 4
  %160 = fmul float %158, %159
  %161 = fadd float %155, %160
  store float %161, float* %K, align 4
  %162 = load float, float* %K, align 4
  %163 = fcmp ogt float %162, 0.000000e+00
  br i1 %163, label %164, label %169

; <label>:164                                     ; preds = %103
  %165 = load float, float* %C, align 4
  %166 = fsub float -0.000000e+00, %165
  %167 = load float, float* %K, align 4
  %168 = fdiv float %166, %167
  br label %170

; <label>:169                                     ; preds = %103
  br label %170

; <label>:170                                     ; preds = %169, %164
  %171 = phi float [ %168, %164 ], [ 0.000000e+00, %169 ]
  store float %171, float* %impulse, align 4
  %172 = load float, float* %impulse, align 4
  %173 = call <2 x float> @_ZmlfRK6b2Vec2(float %172, %struct.b2Vec2* dereferenceable(8) %normal)
  %174 = bitcast %struct.b2Vec2* %P to <2 x float>*
  store <2 x float> %173, <2 x float>* %174, align 4
  %175 = load float, float* %mA, align 4
  %176 = call <2 x float> @_ZmlfRK6b2Vec2(float %175, %struct.b2Vec2* dereferenceable(8) %P)
  %177 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %176, <2 x float>* %177, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %cA, %struct.b2Vec2* dereferenceable(8) %8)
  %178 = load float, float* %iA, align 4
  %179 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rA, %struct.b2Vec2* dereferenceable(8) %P)
  %180 = fmul float %178, %179
  %181 = load float, float* %aA, align 4
  %182 = fsub float %181, %180
  store float %182, float* %aA, align 4
  %183 = load float, float* %mB, align 4
  %184 = call <2 x float> @_ZmlfRK6b2Vec2(float %183, %struct.b2Vec2* dereferenceable(8) %P)
  %185 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %184, <2 x float>* %185, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %cB, %struct.b2Vec2* dereferenceable(8) %9)
  %186 = load float, float* %iB, align 4
  %187 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %rB, %struct.b2Vec2* dereferenceable(8) %P)
  %188 = fmul float %186, %187
  %189 = load float, float* %aB, align 4
  %190 = fadd float %189, %188
  store float %190, float* %aB, align 4
  br label %191

; <label>:191                                     ; preds = %170
  %192 = load i32, i32* %j, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %j, align 4
  br label %99

; <label>:194                                     ; preds = %99
  %195 = load i32, i32* %indexA, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %198 = load %struct.b2Position*, %struct.b2Position** %197, align 8
  %199 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %198, i64 %196
  %200 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %199, i32 0, i32 0
  %201 = bitcast %struct.b2Vec2* %200 to i8*
  %202 = bitcast %struct.b2Vec2* %cA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 8, i32 4, i1 false)
  %203 = load float, float* %aA, align 4
  %204 = load i32, i32* %indexA, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %207 = load %struct.b2Position*, %struct.b2Position** %206, align 8
  %208 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %207, i64 %205
  %209 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %208, i32 0, i32 1
  store float %203, float* %209, align 4
  %210 = load i32, i32* %indexB, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %213 = load %struct.b2Position*, %struct.b2Position** %212, align 8
  %214 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %213, i64 %211
  %215 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %214, i32 0, i32 0
  %216 = bitcast %struct.b2Vec2* %215 to i8*
  %217 = bitcast %struct.b2Vec2* %cB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %216, i8* %217, i64 8, i32 4, i1 false)
  %218 = load float, float* %aB, align 4
  %219 = load i32, i32* %indexB, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %10, i32 0, i32 1
  %222 = load %struct.b2Position*, %struct.b2Position** %221, align 8
  %223 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %222, i64 %220
  %224 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %223, i32 0, i32 1
  store float %218, float* %224, align 4
  br label %225

; <label>:225                                     ; preds = %194
  %226 = load i32, i32* %i, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %i, align 4
  br label %11

; <label>:228                                     ; preds = %11
  %229 = load float, float* %minSeparation, align 4
  %230 = fcmp oge float %229, 0xBF7EB851E0000000
  ret i1 %230
}

; Function Attrs: uwtable
define void @_ZN6b2BodyC2EPK9b2BodyDefP7b2World(%class.b2Body* %this, %struct.b2BodyDef* %bd, %class.b2World* %world) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %struct.b2BodyDef*, align 8
  %3 = alloca %class.b2World*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store %struct.b2BodyDef* %bd, %struct.b2BodyDef** %2, align 8
  store %class.b2World* %world, %class.b2World** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %5)
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  call void @_ZN7b2SweepC2Ev(%struct.b2Sweep* %6)
  %7 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 5
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %7)
  %8 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 7
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %8)
  %9 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %10 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %9, i32 0, i32 1
  %11 = call zeroext i1 @_ZNK6b2Vec27IsValidEv(%struct.b2Vec2* %10)
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %15

; <label>:13                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 27, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %17 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %16, i32 0, i32 3
  %18 = call zeroext i1 @_ZNK6b2Vec27IsValidEv(%struct.b2Vec2* %17)
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %15
  br label %22

; <label>:20                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.205, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 28, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %22

; <label>:22                                      ; preds = %21, %19
  %23 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %24 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %23, i32 0, i32 2
  %25 = load float, float* %24, align 4
  %26 = call zeroext i1 @_Z9b2IsValidf(float %25)
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %22
  br label %30

; <label>:28                                      ; preds = %22
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3.206, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 29, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %30

; <label>:30                                      ; preds = %29, %27
  %31 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %32 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %31, i32 0, i32 4
  %33 = load float, float* %32, align 8
  %34 = call zeroext i1 @_Z9b2IsValidf(float %33)
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %30
  br label %38

; <label>:36                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4.207, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 30, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %38

; <label>:38                                      ; preds = %37, %35
  %39 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %40 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %39, i32 0, i32 6
  %41 = load float, float* %40, align 8
  %42 = call zeroext i1 @_Z9b2IsValidf(float %41)
  br i1 %42, label %43, label %49

; <label>:43                                      ; preds = %38
  %44 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %45 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %44, i32 0, i32 6
  %46 = load float, float* %45, align 8
  %47 = fcmp oge float %46, 0.000000e+00
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %43
  br label %51

; <label>:49                                      ; preds = %43, %38
  call void @__assert_fail(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.208, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 31, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %51

; <label>:51                                      ; preds = %50, %48
  %52 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %53 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %52, i32 0, i32 5
  %54 = load float, float* %53, align 4
  %55 = call zeroext i1 @_Z9b2IsValidf(float %54)
  br i1 %55, label %56, label %62

; <label>:56                                      ; preds = %51
  %57 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %58 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %57, i32 0, i32 5
  %59 = load float, float* %58, align 4
  %60 = fcmp oge float %59, 0.000000e+00
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  br label %64

; <label>:62                                      ; preds = %56, %51
  call void @__assert_fail(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6.209, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 32, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2BodyC2EPK9b2BodyDefP7b2World, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64                                      ; preds = %63, %61
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  store i16 0, i16* %65, align 4
  %66 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %67 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %66, i32 0, i32 10
  %68 = load i8, i8* %67, align 1
  %69 = trunc i8 %68 to i1
  br i1 %69, label %70, label %76

; <label>:70                                      ; preds = %64
  %71 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %72 = load i16, i16* %71, align 4
  %73 = zext i16 %72 to i32
  %74 = or i32 %73, 8
  %75 = trunc i32 %74 to i16
  store i16 %75, i16* %71, align 4
  br label %76

; <label>:76                                      ; preds = %70, %64
  %77 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %78 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %77, i32 0, i32 9
  %79 = load i8, i8* %78, align 2
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %87

; <label>:81                                      ; preds = %76
  %82 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %83 = load i16, i16* %82, align 4
  %84 = zext i16 %83 to i32
  %85 = or i32 %84, 16
  %86 = trunc i32 %85 to i16
  store i16 %86, i16* %82, align 4
  br label %87

; <label>:87                                      ; preds = %81, %76
  %88 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %89 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %88, i32 0, i32 7
  %90 = load i8, i8* %89, align 4
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %98

; <label>:92                                      ; preds = %87
  %93 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %94 = load i16, i16* %93, align 4
  %95 = zext i16 %94 to i32
  %96 = or i32 %95, 4
  %97 = trunc i32 %96 to i16
  store i16 %97, i16* %93, align 4
  br label %98

; <label>:98                                      ; preds = %92, %87
  %99 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %100 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %99, i32 0, i32 8
  %101 = load i8, i8* %100, align 1
  %102 = trunc i8 %101 to i1
  br i1 %102, label %103, label %109

; <label>:103                                     ; preds = %98
  %104 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %105 = load i16, i16* %104, align 4
  %106 = zext i16 %105 to i32
  %107 = or i32 %106, 2
  %108 = trunc i32 %107 to i16
  store i16 %108, i16* %104, align 4
  br label %109

; <label>:109                                     ; preds = %103, %98
  %110 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %111 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %110, i32 0, i32 11
  %112 = load i8, i8* %111, align 8
  %113 = trunc i8 %112 to i1
  br i1 %113, label %114, label %120

; <label>:114                                     ; preds = %109
  %115 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %116 = load i16, i16* %115, align 4
  %117 = zext i16 %116 to i32
  %118 = or i32 %117, 32
  %119 = trunc i32 %118 to i16
  store i16 %119, i16* %115, align 4
  br label %120

; <label>:120                                     ; preds = %114, %109
  %121 = load %class.b2World*, %class.b2World** %3, align 8
  %122 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  store %class.b2World* %121, %class.b2World** %122, align 8
  %123 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %124 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %123, i32 0, i32 0
  %125 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %126 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %125, i32 0, i32 1
  %127 = bitcast %struct.b2Vec2* %124 to i8*
  %128 = bitcast %struct.b2Vec2* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 4, i1 false)
  %129 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %130 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %129, i32 0, i32 1
  %131 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %132 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %131, i32 0, i32 2
  %133 = load float, float* %132, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %130, float %133)
  %134 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %135 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %134, i32 0, i32 0
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %135)
  %136 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %137 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %136, i32 0, i32 1
  %138 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %139 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %138, i32 0, i32 0
  %140 = bitcast %struct.b2Vec2* %137 to i8*
  %141 = bitcast %struct.b2Vec2* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 8, i32 4, i1 false)
  %142 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %143 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %142, i32 0, i32 2
  %144 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %145 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %144, i32 0, i32 0
  %146 = bitcast %struct.b2Vec2* %143 to i8*
  %147 = bitcast %struct.b2Vec2* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %147, i64 8, i32 4, i1 false)
  %148 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %149 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %148, i32 0, i32 2
  %150 = load float, float* %149, align 4
  %151 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %152 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %151, i32 0, i32 3
  store float %150, float* %152, align 4
  %153 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %154 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %153, i32 0, i32 2
  %155 = load float, float* %154, align 4
  %156 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %157 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %156, i32 0, i32 4
  store float %155, float* %157, align 4
  %158 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %159 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %158, i32 0, i32 5
  store float 0.000000e+00, float* %159, align 4
  %160 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 14
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %160, align 8
  %161 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 15
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %161, align 8
  %162 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 10
  store %class.b2Body* null, %class.b2Body** %162, align 8
  %163 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 11
  store %class.b2Body* null, %class.b2Body** %163, align 8
  %164 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 5
  %165 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %166 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %165, i32 0, i32 3
  %167 = bitcast %struct.b2Vec2* %164 to i8*
  %168 = bitcast %struct.b2Vec2* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 8, i32 8, i1 false)
  %169 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %170 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %169, i32 0, i32 4
  %171 = load float, float* %170, align 8
  %172 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 6
  store float %171, float* %172, align 8
  %173 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %174 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %173, i32 0, i32 5
  %175 = load float, float* %174, align 4
  %176 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 20
  store float %175, float* %176, align 8
  %177 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %178 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %177, i32 0, i32 6
  %179 = load float, float* %178, align 8
  %180 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 21
  store float %179, float* %180, align 4
  %181 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %182 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %181, i32 0, i32 14
  %183 = load float, float* %182, align 8
  %184 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 22
  store float %183, float* %184, align 8
  %185 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 7
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %185)
  %186 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 8
  store float 0.000000e+00, float* %186, align 4
  %187 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 23
  store float 0.000000e+00, float* %187, align 4
  %188 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %189 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 0
  store i32 %190, i32* %191, align 8
  %192 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 0
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 2
  br i1 %194, label %195, label %198

; <label>:195                                     ; preds = %120
  %196 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 16
  store float 1.000000e+00, float* %196, align 8
  %197 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 17
  store float 1.000000e+00, float* %197, align 4
  br label %201

; <label>:198                                     ; preds = %120
  %199 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 16
  store float 0.000000e+00, float* %199, align 8
  %200 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 17
  store float 0.000000e+00, float* %200, align 4
  br label %201

; <label>:201                                     ; preds = %198, %195
  %202 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 18
  store float 0.000000e+00, float* %202, align 8
  %203 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 19
  store float 0.000000e+00, float* %203, align 4
  %204 = load %struct.b2BodyDef*, %struct.b2BodyDef** %2, align 8
  %205 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %204, i32 0, i32 13
  %206 = load i8*, i8** %205, align 8
  %207 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 24
  store i8* %206, i8** %207, align 8
  %208 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 12
  store %class.b2Fixture* null, %class.b2Fixture** %208, align 8
  %209 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 13
  store i32 0, i32* %209, align 8
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN7b2SweepC2Ev(%struct.b2Sweep* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2Sweep*, align 8
  store %struct.b2Sweep* %this, %struct.b2Sweep** %1, align 8
  %2 = load %struct.b2Sweep*, %struct.b2Sweep** %1, align 8
  %3 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  %5 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %2, i32 0, i32 2
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %5)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN6b2BodyD2Ev(%class.b2Body* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body7SetTypeE10b2BodyType(%class.b2Body* %this, i32 %type) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca i32, align 4
  %ce = alloca %struct.b2ContactEdge*, align 8
  %ce0 = alloca %struct.b2ContactEdge*, align 8
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  %f = alloca %class.b2Fixture*, align 8
  %proxyCount = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store i32 %type, i32* %2, align 4
  %3 = load %class.b2Body*, %class.b2Body** %1, align 8
  %4 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %5 = load %class.b2World*, %class.b2World** %4, align 8
  %6 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %5)
  %7 = zext i1 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.210, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 115, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body7SetTypeE10b2BodyType, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %14 = load %class.b2World*, %class.b2World** %13, align 8
  %15 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %14)
  %16 = zext i1 %15 to i32
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %12
  br label %101

; <label>:19                                      ; preds = %12
  %20 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = load i32, i32* %2, align 4
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %19
  br label %101

; <label>:25                                      ; preds = %19
  %26 = load i32, i32* %2, align 4
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 0
  store i32 %26, i32* %27, align 8
  call void @_ZN6b2Body13ResetMassDataEv(%class.b2Body* %3)
  %28 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

; <label>:31                                      ; preds = %25
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 5
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %32)
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 6
  store float 0.000000e+00, float* %33, align 8
  %34 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 4
  %35 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %34, i32 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 4
  %38 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %37, i32 0, i32 3
  store float %36, float* %38, align 4
  %39 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 4
  %40 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %39, i32 0, i32 1
  %41 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 4
  %42 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %41, i32 0, i32 2
  %43 = bitcast %struct.b2Vec2* %40 to i8*
  %44 = bitcast %struct.b2Vec2* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 4, i1 false)
  call void @_ZN6b2Body19SynchronizeFixturesEv(%class.b2Body* %3)
  br label %45

; <label>:45                                      ; preds = %31, %25
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %3, i1 zeroext true)
  %46 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 7
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %46)
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 8
  store float 0.000000e+00, float* %47, align 4
  %48 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 15
  %49 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %48, align 8
  store %struct.b2ContactEdge* %49, %struct.b2ContactEdge** %ce, align 8
  br label %50

; <label>:50                                      ; preds = %53, %45
  %51 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %52 = icmp ne %struct.b2ContactEdge* %51, null
  br i1 %52, label %53, label %64

; <label>:53                                      ; preds = %50
  %54 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  store %struct.b2ContactEdge* %54, %struct.b2ContactEdge** %ce0, align 8
  %55 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %56 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %55, i32 0, i32 3
  %57 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %56, align 8
  store %struct.b2ContactEdge* %57, %struct.b2ContactEdge** %ce, align 8
  %58 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %59 = load %class.b2World*, %class.b2World** %58, align 8
  %60 = getelementptr inbounds %class.b2World, %class.b2World* %59, i32 0, i32 3
  %61 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce0, align 8
  %62 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %61, i32 0, i32 1
  %63 = load %class.b2Contact*, %class.b2Contact** %62, align 8
  call void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %60, %class.b2Contact* %63)
  br label %50

; <label>:64                                      ; preds = %50
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 15
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %65, align 8
  %66 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %67 = load %class.b2World*, %class.b2World** %66, align 8
  %68 = getelementptr inbounds %class.b2World, %class.b2World* %67, i32 0, i32 3
  %69 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %68, i32 0, i32 0
  store %class.b2BroadPhase* %69, %class.b2BroadPhase** %broadPhase, align 8
  %70 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 12
  %71 = load %class.b2Fixture*, %class.b2Fixture** %70, align 8
  store %class.b2Fixture* %71, %class.b2Fixture** %f, align 8
  br label %72

; <label>:72                                      ; preds = %97, %64
  %73 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %74 = icmp ne %class.b2Fixture* %73, null
  br i1 %74, label %75, label %101

; <label>:75                                      ; preds = %72
  %76 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %77 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %76, i32 0, i32 7
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %proxyCount, align 4
  store i32 0, i32* %i, align 4
  br label %79

; <label>:79                                      ; preds = %93, %75
  %80 = load i32, i32* %i, align 4
  %81 = load i32, i32* %proxyCount, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %83, label %96

; <label>:83                                      ; preds = %79
  %84 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  %85 = load i32, i32* %i, align 4
  %86 = sext i32 %85 to i64
  %87 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %88 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %87, i32 0, i32 6
  %89 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %88, align 8
  %90 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %89, i64 %86
  %91 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %90, i32 0, i32 3
  %92 = load i32, i32* %91, align 4
  call void @_ZN12b2BroadPhase10TouchProxyEi(%class.b2BroadPhase* %84, i32 %92)
  br label %93

; <label>:93                                      ; preds = %83
  %94 = load i32, i32* %i, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %i, align 4
  br label %79

; <label>:96                                      ; preds = %79
  br label %97

; <label>:97                                      ; preds = %96
  %98 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %99 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %98, i32 0, i32 1
  %100 = load %class.b2Fixture*, %class.b2Fixture** %99, align 8
  store %class.b2Fixture* %100, %class.b2Fixture** %f, align 8
  br label %72

; <label>:101                                     ; preds = %72, %24, %18
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %this) #5 comdat align 2 {
  %1 = alloca %class.b2World*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 2
  ret i1 %6
}

; Function Attrs: uwtable
define void @_ZN6b2Body13ResetMassDataEv(%class.b2Body* %this) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %localCenter = alloca %struct.b2Vec2, align 4
  %f = alloca %class.b2Fixture*, align 8
  %massData = alloca %struct.b2MassData, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %oldCenter = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %6 = load %class.b2Body*, %class.b2Body** %1, align 8
  %7 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  store float 0.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 17
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  store float 0.000000e+00, float* %9, align 8
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 19
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %12 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %11, i32 0, i32 0
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %12)
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %38

; <label>:20                                      ; preds = %16, %0
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %22 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %21, i32 0, i32 1
  %23 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 3
  %24 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %23, i32 0, i32 0
  %25 = bitcast %struct.b2Vec2* %22 to i8*
  %26 = bitcast %struct.b2Vec2* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 4, i1 false)
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %28 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %27, i32 0, i32 2
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 3
  %30 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %29, i32 0, i32 0
  %31 = bitcast %struct.b2Vec2* %28 to i8*
  %32 = bitcast %struct.b2Vec2* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 4, i1 false)
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %34 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %33, i32 0, i32 4
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %37 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %36, i32 0, i32 3
  store float %35, float* %37, align 4
  br label %156

; <label>:38                                      ; preds = %16
  %39 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %38
  br label %45

; <label>:43                                      ; preds = %38
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.211, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 304, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body13ResetMassDataEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %45

; <label>:45                                      ; preds = %44, %42
  %46 = bitcast %struct.b2Vec2* %localCenter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* bitcast (%struct.b2Vec2* @b2Vec2_zero to i8*), i64 8, i32 4, i1 false)
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 12
  %48 = load %class.b2Fixture*, %class.b2Fixture** %47, align 8
  store %class.b2Fixture* %48, %class.b2Fixture** %f, align 8
  br label %49

; <label>:49                                      ; preds = %75, %45
  %50 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %51 = icmp ne %class.b2Fixture* %50, null
  br i1 %51, label %52, label %79

; <label>:52                                      ; preds = %49
  %53 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %54 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %53, i32 0, i32 0
  %55 = load float, float* %54, align 8
  %56 = fcmp oeq float %55, 0.000000e+00
  br i1 %56, label %57, label %58

; <label>:57                                      ; preds = %52
  br label %75

; <label>:58                                      ; preds = %52
  call void @_ZN10b2MassDataC2Ev(%struct.b2MassData* %massData)
  %59 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  call void @_ZNK9b2Fixture11GetMassDataEP10b2MassData(%class.b2Fixture* %59, %struct.b2MassData* %massData)
  %60 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %massData, i32 0, i32 0
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %63 = load float, float* %62, align 8
  %64 = fadd float %63, %61
  store float %64, float* %62, align 8
  %65 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %massData, i32 0, i32 0
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %massData, i32 0, i32 1
  %68 = call <2 x float> @_ZmlfRK6b2Vec2(float %66, %struct.b2Vec2* dereferenceable(8) %67)
  %69 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %68, <2 x float>* %69, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %localCenter, %struct.b2Vec2* dereferenceable(8) %2)
  %70 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %massData, i32 0, i32 2
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %73 = load float, float* %72, align 8
  %74 = fadd float %73, %71
  store float %74, float* %72, align 8
  br label %75

; <label>:75                                      ; preds = %58, %57
  %76 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %77 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %76, i32 0, i32 1
  %78 = load %class.b2Fixture*, %class.b2Fixture** %77, align 8
  store %class.b2Fixture* %78, %class.b2Fixture** %f, align 8
  br label %49

; <label>:79                                      ; preds = %49
  %80 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %81 = load float, float* %80, align 8
  %82 = fcmp ogt float %81, 0.000000e+00
  br i1 %82, label %83, label %90

; <label>:83                                      ; preds = %79
  %84 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %85 = load float, float* %84, align 8
  %86 = fdiv float 1.000000e+00, %85
  %87 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 17
  store float %86, float* %87, align 4
  %88 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 17
  %89 = load float, float* %88, align 4
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %localCenter, float %89)
  br label %93

; <label>:90                                      ; preds = %79
  %91 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  store float 1.000000e+00, float* %91, align 8
  %92 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 17
  store float 1.000000e+00, float* %92, align 4
  br label %93

; <label>:93                                      ; preds = %90, %83
  %94 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %95 = load float, float* %94, align 8
  %96 = fcmp ogt float %95, 0.000000e+00
  br i1 %96, label %97, label %122

; <label>:97                                      ; preds = %93
  %98 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 1
  %99 = load i16, i16* %98, align 4
  %100 = zext i16 %99 to i32
  %101 = and i32 %100, 16
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %122

; <label>:103                                     ; preds = %97
  %104 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %105 = load float, float* %104, align 8
  %106 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %localCenter, %struct.b2Vec2* dereferenceable(8) %localCenter)
  %107 = fmul float %105, %106
  %108 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %109 = load float, float* %108, align 8
  %110 = fsub float %109, %107
  store float %110, float* %108, align 8
  %111 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %112 = load float, float* %111, align 8
  %113 = fcmp ogt float %112, 0.000000e+00
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %103
  br label %117

; <label>:115                                     ; preds = %103
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.212, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 339, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body13ResetMassDataEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %117

; <label>:117                                     ; preds = %116, %114
  %118 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %119 = load float, float* %118, align 8
  %120 = fdiv float 1.000000e+00, %119
  %121 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 19
  store float %120, float* %121, align 4
  br label %125

; <label>:122                                     ; preds = %97, %93
  %123 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  store float 0.000000e+00, float* %123, align 8
  %124 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 19
  store float 0.000000e+00, float* %124, align 4
  br label %125

; <label>:125                                     ; preds = %122, %117
  %126 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %127 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %126, i32 0, i32 2
  %128 = bitcast %struct.b2Vec2* %oldCenter to i8*
  %129 = bitcast %struct.b2Vec2* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 4, i1 false)
  %130 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %131 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %130, i32 0, i32 0
  %132 = bitcast %struct.b2Vec2* %131 to i8*
  %133 = bitcast %struct.b2Vec2* %localCenter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 4, i1 false)
  %134 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %135 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %134, i32 0, i32 1
  %136 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %137 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %136, i32 0, i32 2
  %138 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 3
  %139 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %140 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %139, i32 0, i32 0
  %141 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %138, %struct.b2Vec2* dereferenceable(8) %140)
  %142 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %141, <2 x float>* %142, align 4
  %143 = bitcast %struct.b2Vec2* %137 to i8*
  %144 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 4, i1 false)
  %145 = bitcast %struct.b2Vec2* %135 to i8*
  %146 = bitcast %struct.b2Vec2* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 8, i32 4, i1 false)
  %147 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 5
  %148 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 6
  %149 = load float, float* %148, align 8
  %150 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %151 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %150, i32 0, i32 2
  %152 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %151, %struct.b2Vec2* dereferenceable(8) %oldCenter)
  %153 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %152, <2 x float>* %153, align 4
  %154 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %149, %struct.b2Vec2* dereferenceable(8) %5)
  %155 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %154, <2 x float>* %155, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %147, %struct.b2Vec2* dereferenceable(8) %4)
  br label %156

; <label>:156                                     ; preds = %125, %20
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN10b2MassDataC2Ev(%struct.b2MassData* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2MassData*, align 8
  store %struct.b2MassData* %this, %struct.b2MassData** %1, align 8
  %2 = load %struct.b2MassData*, %struct.b2MassData** %1, align 8
  %3 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK9b2Fixture11GetMassDataEP10b2MassData(%class.b2Fixture* %this, %struct.b2MassData* %massData) #1 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %struct.b2MassData*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %struct.b2MassData* %massData, %struct.b2MassData** %2, align 8
  %3 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %4 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %5 = load %class.b2Shape*, %class.b2Shape** %4, align 8
  %6 = bitcast %class.b2Shape* %5 to void (%class.b2Shape*, %struct.b2MassData*, float)***
  %7 = load void (%class.b2Shape*, %struct.b2MassData*, float)**, void (%class.b2Shape*, %struct.b2MassData*, float)*** %6, align 8
  %8 = getelementptr inbounds void (%class.b2Shape*, %struct.b2MassData*, float)*, void (%class.b2Shape*, %struct.b2MassData*, float)** %7, i64 7
  %9 = load void (%class.b2Shape*, %struct.b2MassData*, float)*, void (%class.b2Shape*, %struct.b2MassData*, float)** %8, align 8
  %10 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %11 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 0
  %12 = load float, float* %11, align 8
  call void %9(%class.b2Shape* %5, %struct.b2MassData* %10, float %12)
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body19SynchronizeFixturesEv(%class.b2Body* %this) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %xf1 = alloca %struct.b2Transform, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  %f = alloca %class.b2Fixture*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xf1)
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf1, i32 0, i32 1
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %7 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %6, i32 0, i32 3
  %8 = load float, float* %7, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %5, float %8)
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf1, i32 0, i32 0
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %11 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf1, i32 0, i32 1
  %13 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %14 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %13, i32 0, i32 0
  %15 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %12, %struct.b2Vec2* dereferenceable(8) %14)
  %16 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %15, <2 x float>* %16, align 4
  %17 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %3)
  %18 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 4
  %19 = bitcast %struct.b2Vec2* %9 to i8*
  %20 = bitcast %struct.b2Vec2* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false)
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %22 = load %class.b2World*, %class.b2World** %21, align 8
  %23 = getelementptr inbounds %class.b2World, %class.b2World* %22, i32 0, i32 3
  %24 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %23, i32 0, i32 0
  store %class.b2BroadPhase* %24, %class.b2BroadPhase** %broadPhase, align 8
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 12
  %26 = load %class.b2Fixture*, %class.b2Fixture** %25, align 8
  store %class.b2Fixture* %26, %class.b2Fixture** %f, align 8
  br label %27

; <label>:27                                      ; preds = %34, %0
  %28 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %29 = icmp ne %class.b2Fixture* %28, null
  br i1 %29, label %30, label %38

; <label>:30                                      ; preds = %27
  %31 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %32 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  call void @_ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_(%class.b2Fixture* %31, %class.b2BroadPhase* %32, %struct.b2Transform* dereferenceable(16) %xf1, %struct.b2Transform* dereferenceable(16) %33)
  br label %34

; <label>:34                                      ; preds = %30
  %35 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %36 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %35, i32 0, i32 1
  %37 = load %class.b2Fixture*, %class.b2Fixture** %36, align 8
  store %class.b2Fixture* %37, %class.b2Fixture** %f, align 8
  br label %27

; <label>:38                                      ; preds = %27
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_(%class.b2Fixture* %this, %class.b2BroadPhase* %broadPhase, %struct.b2Transform* dereferenceable(16) %transform1, %struct.b2Transform* dereferenceable(16) %transform2) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %class.b2BroadPhase*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Transform*, align 8
  %i = alloca i32, align 4
  %proxy = alloca %struct.b2FixtureProxy*, align 8
  %aabb1 = alloca %struct.b2Transform, align 4
  %aabb2 = alloca %struct.b2Transform, align 4
  %displacement = alloca %struct.b2Vec2, align 4
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %class.b2BroadPhase* %broadPhase, %class.b2BroadPhase** %2, align 8
  store %struct.b2Transform* %transform1, %struct.b2Transform** %3, align 8
  store %struct.b2Transform* %transform2, %struct.b2Transform** %4, align 8
  %5 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %6 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %59

; <label>:10                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %11

; <label>:11                                      ; preds = %56, %10
  %12 = load i32, i32* %i, align 4
  %13 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %59

; <label>:16                                      ; preds = %11
  %17 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 6
  %18 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %17, align 8
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %18, i64 %20
  store %struct.b2FixtureProxy* %21, %struct.b2FixtureProxy** %proxy, align 8
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb1)
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb2)
  %22 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 3
  %23 = load %class.b2Shape*, %class.b2Shape** %22, align 8
  %24 = bitcast %class.b2Shape* %23 to void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)***
  %25 = load void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)**, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)** %25, i64 6
  %27 = load void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)** %26, align 8
  %28 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %29 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %30 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 8
  call void %27(%class.b2Shape* %23, %struct.b2Transform* %aabb1, %struct.b2Transform* dereferenceable(16) %28, i32 %31)
  %32 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 3
  %33 = load %class.b2Shape*, %class.b2Shape** %32, align 8
  %34 = bitcast %class.b2Shape* %33 to void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)***
  %35 = load void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)**, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)** %35, i64 6
  %37 = load void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)** %36, align 8
  %38 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %39 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %40 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  call void %37(%class.b2Shape* %33, %struct.b2Transform* %aabb2, %struct.b2Transform* dereferenceable(16) %38, i32 %41)
  %42 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %43 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %42, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %43, %struct.b2Transform* dereferenceable(16) %aabb1, %struct.b2Transform* dereferenceable(16) %aabb2)
  %44 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %45 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %44, i32 0, i32 0
  %46 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %47 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %46, i32 0, i32 0
  %48 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %45, %struct.b2Vec2* dereferenceable(8) %47)
  %49 = bitcast %struct.b2Vec2* %displacement to <2 x float>*
  store <2 x float> %48, <2 x float>* %49, align 4
  %50 = load %class.b2BroadPhase*, %class.b2BroadPhase** %2, align 8
  %51 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %52 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %51, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %55 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %54, i32 0, i32 0
  call void @_ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2(%class.b2BroadPhase* %50, i32 %53, %struct.b2Transform* dereferenceable(16) %55, %struct.b2Vec2* dereferenceable(8) %displacement)
  br label %56

; <label>:56                                      ; preds = %16
  %57 = load i32, i32* %i, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %i, align 4
  br label %11

; <label>:59                                      ; preds = %11, %9
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN6b2AABBC2Ev(%struct.b2Transform* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  %2 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  %3 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %this, %struct.b2Transform* dereferenceable(16) %aabb1, %struct.b2Transform* dereferenceable(16) %aabb2) #0 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  store %struct.b2Transform* %aabb1, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %aabb2, %struct.b2Transform** %3, align 8
  %6 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %6, i32 0, i32 0
  %8 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %8, i32 0, i32 0
  %10 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %11 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %10, i32 0, i32 0
  %12 = call <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %11)
  %13 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %12, <2 x float>* %13, align 4
  %14 = bitcast %struct.b2Vec2* %7 to i8*
  %15 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false)
  %16 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %6, i32 0, i32 1
  %17 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %18 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %17, i32 0, i32 1
  %19 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %20 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %19, i32 0, i32 1
  %21 = call <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %18, %struct.b2Vec2* dereferenceable(8) %20)
  %22 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = bitcast %struct.b2Vec2* %16 to i8*
  %24 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2(%class.b2BroadPhase* %this, i32 %proxyId, %struct.b2Transform* dereferenceable(16) %aabb, %struct.b2Vec2* dereferenceable(8) %displacement) #0 align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %buffer = alloca i8, align 1
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  store %struct.b2Transform* %aabb, %struct.b2Transform** %3, align 8
  store %struct.b2Vec2* %displacement, %struct.b2Vec2** %4, align 8
  %5 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %6 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %5, i32 0, i32 0
  %7 = load i32, i32* %2, align 4
  %8 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %9 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %10 = call zeroext i1 @_ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2(%class.b2DynamicTree* %6, i32 %7, %struct.b2Transform* dereferenceable(16) %8, %struct.b2Vec2* dereferenceable(8) %9)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %buffer, align 1
  %12 = load i8, i8* %buffer, align 1
  %13 = trunc i8 %12 to i1
  br i1 %13, label %14, label %16

; <label>:14                                      ; preds = %0
  %15 = load i32, i32* %2, align 4
  call void @_ZN12b2BroadPhase10BufferMoveEi(%class.b2BroadPhase* %5, i32 %15)
  br label %16

; <label>:16                                      ; preds = %14, %0
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2(%class.b2DynamicTree* %this, i32 %proxyId, %struct.b2Transform* dereferenceable(16) %aabb, %struct.b2Vec2* dereferenceable(8) %displacement) #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2DynamicTree*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.b2Transform*, align 8
  %5 = alloca %struct.b2Vec2*, align 8
  %b = alloca %struct.b2Transform, align 4
  %r = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %2, align 8
  store i32 %proxyId, i32* %3, align 4
  store %struct.b2Transform* %aabb, %struct.b2Transform** %4, align 8
  store %struct.b2Vec2* %displacement, %struct.b2Vec2** %5, align 8
  %8 = load %class.b2DynamicTree*, %class.b2DynamicTree** %2, align 8
  %9 = load i32, i32* %3, align 4
  %10 = icmp sle i32 0, %9
  br i1 %10, label %11, label %17

; <label>:11                                      ; preds = %0
  %12 = load i32, i32* %3, align 4
  %13 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %8, i32 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %11
  br label %19

; <label>:17                                      ; preds = %11, %0
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.442, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 132, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %19

; <label>:19                                      ; preds = %18, %16
  %20 = load i32, i32* %3, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %8, i32 0, i32 2
  %23 = load %struct.b2TreeNode*, %struct.b2TreeNode** %22, align 8
  %24 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %23, i64 %21
  %25 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %24)
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %19
  br label %29

; <label>:27                                      ; preds = %19
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.443, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 134, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %29

; <label>:29                                      ; preds = %28, %26
  %30 = load i32, i32* %3, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %8, i32 0, i32 2
  %33 = load %struct.b2TreeNode*, %struct.b2TreeNode** %32, align 8
  %34 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %33, i64 %31
  %35 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %34, i32 0, i32 0
  %36 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %37 = call zeroext i1 @_ZNK6b2AABB8ContainsERKS_(%struct.b2Transform* %35, %struct.b2Transform* dereferenceable(16) %36)
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %29
  store i1 false, i1* %1, align 1
  br label %104

; <label>:39                                      ; preds = %29
  %40 = load i32, i32* %3, align 4
  call void @_ZN13b2DynamicTree10RemoveLeafEi(%class.b2DynamicTree* %8, i32 %40)
  %41 = load %struct.b2Transform*, %struct.b2Transform** %4, align 8
  %42 = bitcast %struct.b2Transform* %b to i8*
  %43 = bitcast %struct.b2Transform* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 4, i1 false)
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %r, float 0x3FB99999A0000000, float 0x3FB99999A0000000)
  %44 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 0
  %45 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 0
  %46 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %45, %struct.b2Vec2* dereferenceable(8) %r)
  %47 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 4
  %48 = bitcast %struct.b2Vec2* %44 to i8*
  %49 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 4, i1 false)
  %50 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 1
  %51 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 1
  %52 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %51, %struct.b2Vec2* dereferenceable(8) %r)
  %53 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = bitcast %struct.b2Vec2* %50 to i8*
  %55 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 4, i1 false)
  %56 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %57 = call <2 x float> @_ZmlfRK6b2Vec2(float 2.000000e+00, %struct.b2Vec2* dereferenceable(8) %56)
  %58 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 0
  %60 = load float, float* %59, align 4
  %61 = fcmp olt float %60, 0.000000e+00
  br i1 %61, label %62, label %69

; <label>:62                                      ; preds = %39
  %63 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 0
  %66 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %65, i32 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = fadd float %67, %64
  store float %68, float* %66, align 4
  br label %76

; <label>:69                                      ; preds = %39
  %70 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 1
  %73 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %72, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fadd float %74, %71
  store float %75, float* %73, align 4
  br label %76

; <label>:76                                      ; preds = %69, %62
  %77 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 1
  %78 = load float, float* %77, align 4
  %79 = fcmp olt float %78, 0.000000e+00
  br i1 %79, label %80, label %87

; <label>:80                                      ; preds = %76
  %81 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 0
  %84 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %83, i32 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fadd float %85, %82
  store float %86, float* %84, align 4
  br label %94

; <label>:87                                      ; preds = %76
  %88 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d, i32 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %b, i32 0, i32 1
  %91 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %90, i32 0, i32 1
  %92 = load float, float* %91, align 4
  %93 = fadd float %92, %89
  store float %93, float* %91, align 4
  br label %94

; <label>:94                                      ; preds = %87, %80
  %95 = load i32, i32* %3, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %8, i32 0, i32 2
  %98 = load %struct.b2TreeNode*, %struct.b2TreeNode** %97, align 8
  %99 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %98, i64 %96
  %100 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %99, i32 0, i32 0
  %101 = bitcast %struct.b2Transform* %100 to i8*
  %102 = bitcast %struct.b2Transform* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 16, i32 4, i1 false)
  %103 = load i32, i32* %3, align 4
  call void @_ZN13b2DynamicTree10InsertLeafEi(%class.b2DynamicTree* %8, i32 %103)
  store i1 true, i1* %1, align 1
  br label %104

; <label>:104                                     ; preds = %94, %38
  %105 = load i1, i1* %1, align 1
  ret i1 %105
}

; Function Attrs: nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2TreeNode*, align 8
  store %struct.b2TreeNode* %this, %struct.b2TreeNode** %1, align 8
  %2 = load %struct.b2TreeNode*, %struct.b2TreeNode** %1, align 8
  %3 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %2, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK6b2AABB8ContainsERKS_(%struct.b2Transform* %this, %struct.b2Transform* dereferenceable(16) %aabb) #2 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %result = alloca i8, align 1
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  %3 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  store i8 1, i8* %result, align 1
  %4 = load i8, i8* %result, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %15

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 0
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %11 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %10, i32 0, i32 0
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp ole float %9, %13
  br label %15

; <label>:15                                      ; preds = %6, %0
  %16 = phi i1 [ false, %0 ], [ %14, %6 ]
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %result, align 1
  %18 = load i8, i8* %result, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %29

; <label>:20                                      ; preds = %15
  %21 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 0
  %22 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %21, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %25 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i32 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = fcmp ole float %23, %27
  br label %29

; <label>:29                                      ; preds = %20, %15
  %30 = phi i1 [ false, %15 ], [ %28, %20 ]
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %result, align 1
  %32 = load i8, i8* %result, align 1
  %33 = trunc i8 %32 to i1
  br i1 %33, label %34, label %43

; <label>:34                                      ; preds = %29
  %35 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %36 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %35, i32 0, i32 1
  %37 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %36, i32 0, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 1
  %40 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %39, i32 0, i32 0
  %41 = load float, float* %40, align 4
  %42 = fcmp ole float %38, %41
  br label %43

; <label>:43                                      ; preds = %34, %29
  %44 = phi i1 [ false, %29 ], [ %42, %34 ]
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %result, align 1
  %46 = load i8, i8* %result, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %57

; <label>:48                                      ; preds = %43
  %49 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %50 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %49, i32 0, i32 1
  %51 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %50, i32 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %3, i32 0, i32 1
  %54 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %53, i32 0, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ole float %52, %55
  br label %57

; <label>:57                                      ; preds = %48, %43
  %58 = phi i1 [ false, %43 ], [ %56, %48 ]
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %result, align 1
  %60 = load i8, i8* %result, align 1
  %61 = trunc i8 %60 to i1
  ret i1 %61
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTree10RemoveLeafEi(%class.b2DynamicTree* %this, i32 %leaf) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  %parent = alloca i32, align 4
  %grandParent = alloca i32, align 4
  %sibling = alloca i32, align 4
  %index = alloca i32, align 4
  %child1 = alloca i32, align 4
  %child2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %leaf, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  store i32 -1, i32* %9, align 8
  br label %172

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %2, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %14 = load %struct.b2TreeNode*, %struct.b2TreeNode** %13, align 8
  %15 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %14, i64 %12
  %16 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %15, i32 0, i32 2
  %17 = bitcast %union.anon* %16 to i32*
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %parent, align 4
  %19 = load i32, i32* %parent, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %22 = load %struct.b2TreeNode*, %struct.b2TreeNode** %21, align 8
  %23 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %22, i64 %20
  %24 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %23, i32 0, i32 2
  %25 = bitcast %union.anon* %24 to i32*
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %grandParent, align 4
  %27 = load i32, i32* %parent, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %30 = load %struct.b2TreeNode*, %struct.b2TreeNode** %29, align 8
  %31 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %30, i64 %28
  %32 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %2, align 4
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %44

; <label>:36                                      ; preds = %10
  %37 = load i32, i32* %parent, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %40 = load %struct.b2TreeNode*, %struct.b2TreeNode** %39, align 8
  %41 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %40, i64 %38
  %42 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %41, i32 0, i32 4
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %sibling, align 4
  br label %52

; <label>:44                                      ; preds = %10
  %45 = load i32, i32* %parent, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %48 = load %struct.b2TreeNode*, %struct.b2TreeNode** %47, align 8
  %49 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %48, i64 %46
  %50 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %sibling, align 4
  br label %52

; <label>:52                                      ; preds = %44, %36
  %53 = load i32, i32* %grandParent, align 4
  %54 = icmp ne i32 %53, -1
  br i1 %54, label %55, label %161

; <label>:55                                      ; preds = %52
  %56 = load i32, i32* %grandParent, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %59 = load %struct.b2TreeNode*, %struct.b2TreeNode** %58, align 8
  %60 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %59, i64 %57
  %61 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %parent, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %73

; <label>:65                                      ; preds = %55
  %66 = load i32, i32* %sibling, align 4
  %67 = load i32, i32* %grandParent, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %70 = load %struct.b2TreeNode*, %struct.b2TreeNode** %69, align 8
  %71 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %70, i64 %68
  %72 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %71, i32 0, i32 3
  store i32 %66, i32* %72, align 4
  br label %81

; <label>:73                                      ; preds = %55
  %74 = load i32, i32* %sibling, align 4
  %75 = load i32, i32* %grandParent, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %78 = load %struct.b2TreeNode*, %struct.b2TreeNode** %77, align 8
  %79 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %78, i64 %76
  %80 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %79, i32 0, i32 4
  store i32 %74, i32* %80, align 8
  br label %81

; <label>:81                                      ; preds = %73, %65
  %82 = load i32, i32* %grandParent, align 4
  %83 = load i32, i32* %sibling, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %86 = load %struct.b2TreeNode*, %struct.b2TreeNode** %85, align 8
  %87 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %86, i64 %84
  %88 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %87, i32 0, i32 2
  %89 = bitcast %union.anon* %88 to i32*
  store i32 %82, i32* %89, align 8
  %90 = load i32, i32* %parent, align 4
  call void @_ZN13b2DynamicTree8FreeNodeEi(%class.b2DynamicTree* %3, i32 %90)
  %91 = load i32, i32* %grandParent, align 4
  store i32 %91, i32* %index, align 4
  br label %92

; <label>:92                                      ; preds = %95, %81
  %93 = load i32, i32* %index, align 4
  %94 = icmp ne i32 %93, -1
  br i1 %94, label %95, label %160

; <label>:95                                      ; preds = %92
  %96 = load i32, i32* %index, align 4
  %97 = call i32 @_ZN13b2DynamicTree7BalanceEi(%class.b2DynamicTree* %3, i32 %96)
  store i32 %97, i32* %index, align 4
  %98 = load i32, i32* %index, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %101 = load %struct.b2TreeNode*, %struct.b2TreeNode** %100, align 8
  %102 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %101, i64 %99
  %103 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %102, i32 0, i32 3
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %child1, align 4
  %105 = load i32, i32* %index, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %108 = load %struct.b2TreeNode*, %struct.b2TreeNode** %107, align 8
  %109 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %108, i64 %106
  %110 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %109, i32 0, i32 4
  %111 = load i32, i32* %110, align 8
  store i32 %111, i32* %child2, align 4
  %112 = load i32, i32* %index, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %115 = load %struct.b2TreeNode*, %struct.b2TreeNode** %114, align 8
  %116 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %115, i64 %113
  %117 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %116, i32 0, i32 0
  %118 = load i32, i32* %child1, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %121 = load %struct.b2TreeNode*, %struct.b2TreeNode** %120, align 8
  %122 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %121, i64 %119
  %123 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %122, i32 0, i32 0
  %124 = load i32, i32* %child2, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %127 = load %struct.b2TreeNode*, %struct.b2TreeNode** %126, align 8
  %128 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %127, i64 %125
  %129 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %128, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %117, %struct.b2Transform* dereferenceable(16) %123, %struct.b2Transform* dereferenceable(16) %129)
  %130 = load i32, i32* %child1, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %133 = load %struct.b2TreeNode*, %struct.b2TreeNode** %132, align 8
  %134 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %133, i64 %131
  %135 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %134, i32 0, i32 5
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %child2, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %140 = load %struct.b2TreeNode*, %struct.b2TreeNode** %139, align 8
  %141 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %140, i64 %138
  %142 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %141, i32 0, i32 5
  %143 = load i32, i32* %142, align 4
  %144 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %136, i32 %143)
  %145 = add nsw i32 1, %144
  %146 = load i32, i32* %index, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %149 = load %struct.b2TreeNode*, %struct.b2TreeNode** %148, align 8
  %150 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %149, i64 %147
  %151 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %150, i32 0, i32 5
  store i32 %145, i32* %151, align 4
  %152 = load i32, i32* %index, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %155 = load %struct.b2TreeNode*, %struct.b2TreeNode** %154, align 8
  %156 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %155, i64 %153
  %157 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %156, i32 0, i32 2
  %158 = bitcast %union.anon* %157 to i32*
  %159 = load i32, i32* %158, align 8
  store i32 %159, i32* %index, align 4
  br label %92

; <label>:160                                     ; preds = %92
  br label %172

; <label>:161                                     ; preds = %52
  %162 = load i32, i32* %sibling, align 4
  %163 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  store i32 %162, i32* %163, align 8
  %164 = load i32, i32* %sibling, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %167 = load %struct.b2TreeNode*, %struct.b2TreeNode** %166, align 8
  %168 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %167, i64 %165
  %169 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %168, i32 0, i32 2
  %170 = bitcast %union.anon* %169 to i32*
  store i32 -1, i32* %170, align 8
  %171 = load i32, i32* %parent, align 4
  call void @_ZN13b2DynamicTree8FreeNodeEi(%class.b2DynamicTree* %3, i32 %171)
  br label %172

; <label>:172                                     ; preds = %161, %160, %8
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN13b2DynamicTree8FreeNodeEi(%class.b2DynamicTree* %this, i32 %nodeId) #2 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %nodeId, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp sle i32 0, %4
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  br label %14

; <label>:12                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.425, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 94, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree8FreeNodeEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 0, %16
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %14
  br label %21

; <label>:19                                      ; preds = %14
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.426, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 95, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree8FreeNodeEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %21

; <label>:21                                      ; preds = %20, %18
  %22 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = load i32, i32* %2, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %27 = load %struct.b2TreeNode*, %struct.b2TreeNode** %26, align 8
  %28 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %27, i64 %25
  %29 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %28, i32 0, i32 2
  %30 = bitcast %union.anon* %29 to i32*
  store i32 %23, i32* %30, align 8
  %31 = load i32, i32* %2, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %34 = load %struct.b2TreeNode*, %struct.b2TreeNode** %33, align 8
  %35 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %34, i64 %32
  %36 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %35, i32 0, i32 5
  store i32 -1, i32* %36, align 4
  %37 = load i32, i32* %2, align 4
  %38 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 5
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %39, align 8
  ret void
}

; Function Attrs: uwtable
define i32 @_ZN13b2DynamicTree7BalanceEi(%class.b2DynamicTree* %this, i32 %iA) #0 align 2 {
  %1 = alloca i32, align 4
  %2 = alloca %class.b2DynamicTree*, align 8
  %3 = alloca i32, align 4
  %A = alloca %struct.b2TreeNode*, align 8
  %iB = alloca i32, align 4
  %iC = alloca i32, align 4
  %B = alloca %struct.b2TreeNode*, align 8
  %C = alloca %struct.b2TreeNode*, align 8
  %balance = alloca i32, align 4
  %iF = alloca i32, align 4
  %iG = alloca i32, align 4
  %F = alloca %struct.b2TreeNode*, align 8
  %G = alloca %struct.b2TreeNode*, align 8
  %iD = alloca i32, align 4
  %iE = alloca i32, align 4
  %D = alloca %struct.b2TreeNode*, align 8
  %E = alloca %struct.b2TreeNode*, align 8
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %2, align 8
  store i32 %iA, i32* %3, align 4
  %4 = load %class.b2DynamicTree*, %class.b2DynamicTree** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = icmp ne i32 %5, -1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8.429, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 379, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %12 = load %struct.b2TreeNode*, %struct.b2TreeNode** %11, align 8
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %12, i64 %14
  store %struct.b2TreeNode* %15, %struct.b2TreeNode** %A, align 8
  %16 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %17 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %16)
  br i1 %17, label %23, label %18

; <label>:18                                      ; preds = %10
  %19 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %20 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %25

; <label>:23                                      ; preds = %18, %10
  %24 = load i32, i32* %3, align 4
  store i32 %24, i32* %1, align 4
  br label %496

; <label>:25                                      ; preds = %18
  %26 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %27 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %iB, align 4
  %29 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %30 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %iC, align 4
  %32 = load i32, i32* %iB, align 4
  %33 = icmp sle i32 0, %32
  br i1 %33, label %34, label %40

; <label>:34                                      ; preds = %25
  %35 = load i32, i32* %iB, align 4
  %36 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %34
  br label %42

; <label>:40                                      ; preds = %34, %25
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9.430, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 389, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %42

; <label>:42                                      ; preds = %41, %39
  %43 = load i32, i32* %iC, align 4
  %44 = icmp sle i32 0, %43
  br i1 %44, label %45, label %51

; <label>:45                                      ; preds = %42
  %46 = load i32, i32* %iC, align 4
  %47 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %46, %48
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %45
  br label %53

; <label>:51                                      ; preds = %45, %42
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.431, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 390, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %53

; <label>:53                                      ; preds = %52, %50
  %54 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %55 = load %struct.b2TreeNode*, %struct.b2TreeNode** %54, align 8
  %56 = load i32, i32* %iB, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %55, i64 %57
  store %struct.b2TreeNode* %58, %struct.b2TreeNode** %B, align 8
  %59 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %60 = load %struct.b2TreeNode*, %struct.b2TreeNode** %59, align 8
  %61 = load i32, i32* %iC, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %60, i64 %62
  store %struct.b2TreeNode* %63, %struct.b2TreeNode** %C, align 8
  %64 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %65 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %64, i32 0, i32 5
  %66 = load i32, i32* %65, align 4
  %67 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %68 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %67, i32 0, i32 5
  %69 = load i32, i32* %68, align 4
  %70 = sub nsw i32 %66, %69
  store i32 %70, i32* %balance, align 4
  %71 = load i32, i32* %balance, align 4
  %72 = icmp sgt i32 %71, 1
  br i1 %72, label %73, label %282

; <label>:73                                      ; preds = %53
  %74 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %75 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %74, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %iF, align 4
  %77 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %78 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %77, i32 0, i32 4
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %iG, align 4
  %80 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %81 = load %struct.b2TreeNode*, %struct.b2TreeNode** %80, align 8
  %82 = load i32, i32* %iF, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %81, i64 %83
  store %struct.b2TreeNode* %84, %struct.b2TreeNode** %F, align 8
  %85 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %86 = load %struct.b2TreeNode*, %struct.b2TreeNode** %85, align 8
  %87 = load i32, i32* %iG, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %86, i64 %88
  store %struct.b2TreeNode* %89, %struct.b2TreeNode** %G, align 8
  %90 = load i32, i32* %iF, align 4
  %91 = icmp sle i32 0, %90
  br i1 %91, label %92, label %98

; <label>:92                                      ; preds = %73
  %93 = load i32, i32* %iF, align 4
  %94 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %93, %95
  br i1 %96, label %97, label %98

; <label>:97                                      ; preds = %92
  br label %100

; <label>:98                                      ; preds = %92, %73
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.432, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 404, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %100

; <label>:100                                     ; preds = %99, %97
  %101 = load i32, i32* %iG, align 4
  %102 = icmp sle i32 0, %101
  br i1 %102, label %103, label %109

; <label>:103                                     ; preds = %100
  %104 = load i32, i32* %iG, align 4
  %105 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %104, %106
  br i1 %107, label %108, label %109

; <label>:108                                     ; preds = %103
  br label %111

; <label>:109                                     ; preds = %103, %100
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.433, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 405, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %111

; <label>:111                                     ; preds = %110, %108
  %112 = load i32, i32* %3, align 4
  %113 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %114 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %113, i32 0, i32 3
  store i32 %112, i32* %114, align 4
  %115 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %116 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %115, i32 0, i32 2
  %117 = bitcast %union.anon* %116 to i32*
  %118 = load i32, i32* %117, align 8
  %119 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %120 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %119, i32 0, i32 2
  %121 = bitcast %union.anon* %120 to i32*
  store i32 %118, i32* %121, align 8
  %122 = load i32, i32* %iC, align 4
  %123 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %124 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %123, i32 0, i32 2
  %125 = bitcast %union.anon* %124 to i32*
  store i32 %122, i32* %125, align 8
  %126 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %127 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %126, i32 0, i32 2
  %128 = bitcast %union.anon* %127 to i32*
  %129 = load i32, i32* %128, align 8
  %130 = icmp ne i32 %129, -1
  br i1 %130, label %131, label %183

; <label>:131                                     ; preds = %111
  %132 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %133 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %132, i32 0, i32 2
  %134 = bitcast %union.anon* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %138 = load %struct.b2TreeNode*, %struct.b2TreeNode** %137, align 8
  %139 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %138, i64 %136
  %140 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %139, i32 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = load i32, i32* %3, align 4
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %144, label %155

; <label>:144                                     ; preds = %131
  %145 = load i32, i32* %iC, align 4
  %146 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %147 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %146, i32 0, i32 2
  %148 = bitcast %union.anon* %147 to i32*
  %149 = load i32, i32* %148, align 8
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %152 = load %struct.b2TreeNode*, %struct.b2TreeNode** %151, align 8
  %153 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %152, i64 %150
  %154 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %153, i32 0, i32 3
  store i32 %145, i32* %154, align 4
  br label %182

; <label>:155                                     ; preds = %131
  %156 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %157 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %156, i32 0, i32 2
  %158 = bitcast %union.anon* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %162 = load %struct.b2TreeNode*, %struct.b2TreeNode** %161, align 8
  %163 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %162, i64 %160
  %164 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %163, i32 0, i32 4
  %165 = load i32, i32* %164, align 8
  %166 = load i32, i32* %3, align 4
  %167 = icmp eq i32 %165, %166
  br i1 %167, label %168, label %169

; <label>:168                                     ; preds = %155
  br label %171

; <label>:169                                     ; preds = %155
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13.434, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 421, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %171

; <label>:171                                     ; preds = %170, %168
  %172 = load i32, i32* %iC, align 4
  %173 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %174 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %173, i32 0, i32 2
  %175 = bitcast %union.anon* %174 to i32*
  %176 = load i32, i32* %175, align 8
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %179 = load %struct.b2TreeNode*, %struct.b2TreeNode** %178, align 8
  %180 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %179, i64 %177
  %181 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %180, i32 0, i32 4
  store i32 %172, i32* %181, align 8
  br label %182

; <label>:182                                     ; preds = %171, %144
  br label %186

; <label>:183                                     ; preds = %111
  %184 = load i32, i32* %iC, align 4
  %185 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 0
  store i32 %184, i32* %185, align 8
  br label %186

; <label>:186                                     ; preds = %183, %182
  %187 = load %struct.b2TreeNode*, %struct.b2TreeNode** %F, align 8
  %188 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %187, i32 0, i32 5
  %189 = load i32, i32* %188, align 4
  %190 = load %struct.b2TreeNode*, %struct.b2TreeNode** %G, align 8
  %191 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %190, i32 0, i32 5
  %192 = load i32, i32* %191, align 4
  %193 = icmp sgt i32 %189, %192
  br i1 %193, label %194, label %237

; <label>:194                                     ; preds = %186
  %195 = load i32, i32* %iF, align 4
  %196 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %197 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %196, i32 0, i32 4
  store i32 %195, i32* %197, align 8
  %198 = load i32, i32* %iG, align 4
  %199 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %200 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %199, i32 0, i32 4
  store i32 %198, i32* %200, align 8
  %201 = load i32, i32* %3, align 4
  %202 = load %struct.b2TreeNode*, %struct.b2TreeNode** %G, align 8
  %203 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %202, i32 0, i32 2
  %204 = bitcast %union.anon* %203 to i32*
  store i32 %201, i32* %204, align 8
  %205 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %206 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %205, i32 0, i32 0
  %207 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %208 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %207, i32 0, i32 0
  %209 = load %struct.b2TreeNode*, %struct.b2TreeNode** %G, align 8
  %210 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %209, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %206, %struct.b2Transform* dereferenceable(16) %208, %struct.b2Transform* dereferenceable(16) %210)
  %211 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %212 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %211, i32 0, i32 0
  %213 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %214 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %213, i32 0, i32 0
  %215 = load %struct.b2TreeNode*, %struct.b2TreeNode** %F, align 8
  %216 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %215, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %212, %struct.b2Transform* dereferenceable(16) %214, %struct.b2Transform* dereferenceable(16) %216)
  %217 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %218 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %217, i32 0, i32 5
  %219 = load i32, i32* %218, align 4
  %220 = load %struct.b2TreeNode*, %struct.b2TreeNode** %G, align 8
  %221 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %220, i32 0, i32 5
  %222 = load i32, i32* %221, align 4
  %223 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %219, i32 %222)
  %224 = add nsw i32 1, %223
  %225 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %226 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %225, i32 0, i32 5
  store i32 %224, i32* %226, align 4
  %227 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %228 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %227, i32 0, i32 5
  %229 = load i32, i32* %228, align 4
  %230 = load %struct.b2TreeNode*, %struct.b2TreeNode** %F, align 8
  %231 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %230, i32 0, i32 5
  %232 = load i32, i32* %231, align 4
  %233 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %229, i32 %232)
  %234 = add nsw i32 1, %233
  %235 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %236 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %235, i32 0, i32 5
  store i32 %234, i32* %236, align 4
  br label %280

; <label>:237                                     ; preds = %186
  %238 = load i32, i32* %iG, align 4
  %239 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %240 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %239, i32 0, i32 4
  store i32 %238, i32* %240, align 8
  %241 = load i32, i32* %iF, align 4
  %242 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %243 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %242, i32 0, i32 4
  store i32 %241, i32* %243, align 8
  %244 = load i32, i32* %3, align 4
  %245 = load %struct.b2TreeNode*, %struct.b2TreeNode** %F, align 8
  %246 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %245, i32 0, i32 2
  %247 = bitcast %union.anon* %246 to i32*
  store i32 %244, i32* %247, align 8
  %248 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %249 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %248, i32 0, i32 0
  %250 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %251 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %250, i32 0, i32 0
  %252 = load %struct.b2TreeNode*, %struct.b2TreeNode** %F, align 8
  %253 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %252, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %249, %struct.b2Transform* dereferenceable(16) %251, %struct.b2Transform* dereferenceable(16) %253)
  %254 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %255 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %254, i32 0, i32 0
  %256 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %257 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %256, i32 0, i32 0
  %258 = load %struct.b2TreeNode*, %struct.b2TreeNode** %G, align 8
  %259 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %258, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %255, %struct.b2Transform* dereferenceable(16) %257, %struct.b2Transform* dereferenceable(16) %259)
  %260 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %261 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %260, i32 0, i32 5
  %262 = load i32, i32* %261, align 4
  %263 = load %struct.b2TreeNode*, %struct.b2TreeNode** %F, align 8
  %264 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %263, i32 0, i32 5
  %265 = load i32, i32* %264, align 4
  %266 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %262, i32 %265)
  %267 = add nsw i32 1, %266
  %268 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %269 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %268, i32 0, i32 5
  store i32 %267, i32* %269, align 4
  %270 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %271 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %270, i32 0, i32 5
  %272 = load i32, i32* %271, align 4
  %273 = load %struct.b2TreeNode*, %struct.b2TreeNode** %G, align 8
  %274 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %273, i32 0, i32 5
  %275 = load i32, i32* %274, align 4
  %276 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %272, i32 %275)
  %277 = add nsw i32 1, %276
  %278 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %279 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %278, i32 0, i32 5
  store i32 %277, i32* %279, align 4
  br label %280

; <label>:280                                     ; preds = %237, %194
  %281 = load i32, i32* %iC, align 4
  store i32 %281, i32* %1, align 4
  br label %496

; <label>:282                                     ; preds = %53
  %283 = load i32, i32* %balance, align 4
  %284 = icmp slt i32 %283, -1
  br i1 %284, label %285, label %494

; <label>:285                                     ; preds = %282
  %286 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %287 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %286, i32 0, i32 3
  %288 = load i32, i32* %287, align 4
  store i32 %288, i32* %iD, align 4
  %289 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %290 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %289, i32 0, i32 4
  %291 = load i32, i32* %290, align 8
  store i32 %291, i32* %iE, align 4
  %292 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %293 = load %struct.b2TreeNode*, %struct.b2TreeNode** %292, align 8
  %294 = load i32, i32* %iD, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %293, i64 %295
  store %struct.b2TreeNode* %296, %struct.b2TreeNode** %D, align 8
  %297 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %298 = load %struct.b2TreeNode*, %struct.b2TreeNode** %297, align 8
  %299 = load i32, i32* %iE, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %298, i64 %300
  store %struct.b2TreeNode* %301, %struct.b2TreeNode** %E, align 8
  %302 = load i32, i32* %iD, align 4
  %303 = icmp sle i32 0, %302
  br i1 %303, label %304, label %310

; <label>:304                                     ; preds = %285
  %305 = load i32, i32* %iD, align 4
  %306 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %307 = load i32, i32* %306, align 4
  %308 = icmp slt i32 %305, %307
  br i1 %308, label %309, label %310

; <label>:309                                     ; preds = %304
  br label %312

; <label>:310                                     ; preds = %304, %285
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14.435, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 464, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %312

; <label>:312                                     ; preds = %311, %309
  %313 = load i32, i32* %iE, align 4
  %314 = icmp sle i32 0, %313
  br i1 %314, label %315, label %321

; <label>:315                                     ; preds = %312
  %316 = load i32, i32* %iE, align 4
  %317 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %318 = load i32, i32* %317, align 4
  %319 = icmp slt i32 %316, %318
  br i1 %319, label %320, label %321

; <label>:320                                     ; preds = %315
  br label %323

; <label>:321                                     ; preds = %315, %312
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15.436, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 465, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %323

; <label>:323                                     ; preds = %322, %320
  %324 = load i32, i32* %3, align 4
  %325 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %326 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %325, i32 0, i32 3
  store i32 %324, i32* %326, align 4
  %327 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %328 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %327, i32 0, i32 2
  %329 = bitcast %union.anon* %328 to i32*
  %330 = load i32, i32* %329, align 8
  %331 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %332 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %331, i32 0, i32 2
  %333 = bitcast %union.anon* %332 to i32*
  store i32 %330, i32* %333, align 8
  %334 = load i32, i32* %iB, align 4
  %335 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %336 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %335, i32 0, i32 2
  %337 = bitcast %union.anon* %336 to i32*
  store i32 %334, i32* %337, align 8
  %338 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %339 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %338, i32 0, i32 2
  %340 = bitcast %union.anon* %339 to i32*
  %341 = load i32, i32* %340, align 8
  %342 = icmp ne i32 %341, -1
  br i1 %342, label %343, label %395

; <label>:343                                     ; preds = %323
  %344 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %345 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %344, i32 0, i32 2
  %346 = bitcast %union.anon* %345 to i32*
  %347 = load i32, i32* %346, align 8
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %350 = load %struct.b2TreeNode*, %struct.b2TreeNode** %349, align 8
  %351 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %350, i64 %348
  %352 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %351, i32 0, i32 3
  %353 = load i32, i32* %352, align 4
  %354 = load i32, i32* %3, align 4
  %355 = icmp eq i32 %353, %354
  br i1 %355, label %356, label %367

; <label>:356                                     ; preds = %343
  %357 = load i32, i32* %iB, align 4
  %358 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %359 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %358, i32 0, i32 2
  %360 = bitcast %union.anon* %359 to i32*
  %361 = load i32, i32* %360, align 8
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %364 = load %struct.b2TreeNode*, %struct.b2TreeNode** %363, align 8
  %365 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %364, i64 %362
  %366 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %365, i32 0, i32 3
  store i32 %357, i32* %366, align 4
  br label %394

; <label>:367                                     ; preds = %343
  %368 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %369 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %368, i32 0, i32 2
  %370 = bitcast %union.anon* %369 to i32*
  %371 = load i32, i32* %370, align 8
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %374 = load %struct.b2TreeNode*, %struct.b2TreeNode** %373, align 8
  %375 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %374, i64 %372
  %376 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %375, i32 0, i32 4
  %377 = load i32, i32* %376, align 8
  %378 = load i32, i32* %3, align 4
  %379 = icmp eq i32 %377, %378
  br i1 %379, label %380, label %381

; <label>:380                                     ; preds = %367
  br label %383

; <label>:381                                     ; preds = %367
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.437, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 481, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree7BalanceEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %383

; <label>:383                                     ; preds = %382, %380
  %384 = load i32, i32* %iB, align 4
  %385 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %386 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %385, i32 0, i32 2
  %387 = bitcast %union.anon* %386 to i32*
  %388 = load i32, i32* %387, align 8
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %391 = load %struct.b2TreeNode*, %struct.b2TreeNode** %390, align 8
  %392 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %391, i64 %389
  %393 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %392, i32 0, i32 4
  store i32 %384, i32* %393, align 8
  br label %394

; <label>:394                                     ; preds = %383, %356
  br label %398

; <label>:395                                     ; preds = %323
  %396 = load i32, i32* %iB, align 4
  %397 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 0
  store i32 %396, i32* %397, align 8
  br label %398

; <label>:398                                     ; preds = %395, %394
  %399 = load %struct.b2TreeNode*, %struct.b2TreeNode** %D, align 8
  %400 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %399, i32 0, i32 5
  %401 = load i32, i32* %400, align 4
  %402 = load %struct.b2TreeNode*, %struct.b2TreeNode** %E, align 8
  %403 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %402, i32 0, i32 5
  %404 = load i32, i32* %403, align 4
  %405 = icmp sgt i32 %401, %404
  br i1 %405, label %406, label %449

; <label>:406                                     ; preds = %398
  %407 = load i32, i32* %iD, align 4
  %408 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %409 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %408, i32 0, i32 4
  store i32 %407, i32* %409, align 8
  %410 = load i32, i32* %iE, align 4
  %411 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %412 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %411, i32 0, i32 3
  store i32 %410, i32* %412, align 4
  %413 = load i32, i32* %3, align 4
  %414 = load %struct.b2TreeNode*, %struct.b2TreeNode** %E, align 8
  %415 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %414, i32 0, i32 2
  %416 = bitcast %union.anon* %415 to i32*
  store i32 %413, i32* %416, align 8
  %417 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %418 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %417, i32 0, i32 0
  %419 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %420 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %419, i32 0, i32 0
  %421 = load %struct.b2TreeNode*, %struct.b2TreeNode** %E, align 8
  %422 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %421, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %418, %struct.b2Transform* dereferenceable(16) %420, %struct.b2Transform* dereferenceable(16) %422)
  %423 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %424 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %423, i32 0, i32 0
  %425 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %426 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %425, i32 0, i32 0
  %427 = load %struct.b2TreeNode*, %struct.b2TreeNode** %D, align 8
  %428 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %427, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %424, %struct.b2Transform* dereferenceable(16) %426, %struct.b2Transform* dereferenceable(16) %428)
  %429 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %430 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %429, i32 0, i32 5
  %431 = load i32, i32* %430, align 4
  %432 = load %struct.b2TreeNode*, %struct.b2TreeNode** %E, align 8
  %433 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %432, i32 0, i32 5
  %434 = load i32, i32* %433, align 4
  %435 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %431, i32 %434)
  %436 = add nsw i32 1, %435
  %437 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %438 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %437, i32 0, i32 5
  store i32 %436, i32* %438, align 4
  %439 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %440 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %439, i32 0, i32 5
  %441 = load i32, i32* %440, align 4
  %442 = load %struct.b2TreeNode*, %struct.b2TreeNode** %D, align 8
  %443 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %442, i32 0, i32 5
  %444 = load i32, i32* %443, align 4
  %445 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %441, i32 %444)
  %446 = add nsw i32 1, %445
  %447 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %448 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %447, i32 0, i32 5
  store i32 %446, i32* %448, align 4
  br label %492

; <label>:449                                     ; preds = %398
  %450 = load i32, i32* %iE, align 4
  %451 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %452 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %451, i32 0, i32 4
  store i32 %450, i32* %452, align 8
  %453 = load i32, i32* %iD, align 4
  %454 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %455 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %454, i32 0, i32 3
  store i32 %453, i32* %455, align 4
  %456 = load i32, i32* %3, align 4
  %457 = load %struct.b2TreeNode*, %struct.b2TreeNode** %D, align 8
  %458 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %457, i32 0, i32 2
  %459 = bitcast %union.anon* %458 to i32*
  store i32 %456, i32* %459, align 8
  %460 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %461 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %460, i32 0, i32 0
  %462 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %463 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %462, i32 0, i32 0
  %464 = load %struct.b2TreeNode*, %struct.b2TreeNode** %D, align 8
  %465 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %464, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %461, %struct.b2Transform* dereferenceable(16) %463, %struct.b2Transform* dereferenceable(16) %465)
  %466 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %467 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %466, i32 0, i32 0
  %468 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %469 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %468, i32 0, i32 0
  %470 = load %struct.b2TreeNode*, %struct.b2TreeNode** %E, align 8
  %471 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %470, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %467, %struct.b2Transform* dereferenceable(16) %469, %struct.b2Transform* dereferenceable(16) %471)
  %472 = load %struct.b2TreeNode*, %struct.b2TreeNode** %C, align 8
  %473 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %472, i32 0, i32 5
  %474 = load i32, i32* %473, align 4
  %475 = load %struct.b2TreeNode*, %struct.b2TreeNode** %D, align 8
  %476 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %475, i32 0, i32 5
  %477 = load i32, i32* %476, align 4
  %478 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %474, i32 %477)
  %479 = add nsw i32 1, %478
  %480 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %481 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %480, i32 0, i32 5
  store i32 %479, i32* %481, align 4
  %482 = load %struct.b2TreeNode*, %struct.b2TreeNode** %A, align 8
  %483 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %482, i32 0, i32 5
  %484 = load i32, i32* %483, align 4
  %485 = load %struct.b2TreeNode*, %struct.b2TreeNode** %E, align 8
  %486 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %485, i32 0, i32 5
  %487 = load i32, i32* %486, align 4
  %488 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %484, i32 %487)
  %489 = add nsw i32 1, %488
  %490 = load %struct.b2TreeNode*, %struct.b2TreeNode** %B, align 8
  %491 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %490, i32 0, i32 5
  store i32 %489, i32* %491, align 4
  br label %492

; <label>:492                                     ; preds = %449, %406
  %493 = load i32, i32* %iB, align 4
  store i32 %493, i32* %1, align 4
  br label %496

; <label>:494                                     ; preds = %282
  %495 = load i32, i32* %3, align 4
  store i32 %495, i32* %1, align 4
  br label %496

; <label>:496                                     ; preds = %494, %492, %280, %23
  %497 = load i32, i32* %1, align 4
  ret i32 %497
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTree10InsertLeafEi(%class.b2DynamicTree* %this, i32 %leaf) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  %leafAABB = alloca %struct.b2Transform, align 4
  %index = alloca i32, align 4
  %child1 = alloca i32, align 4
  %child2 = alloca i32, align 4
  %area = alloca float, align 4
  %combinedAABB = alloca %struct.b2Transform, align 4
  %combinedArea = alloca float, align 4
  %cost = alloca float, align 4
  %inheritanceCost = alloca float, align 4
  %cost1 = alloca float, align 4
  %aabb = alloca %struct.b2Transform, align 4
  %aabb1 = alloca %struct.b2Transform, align 4
  %oldArea = alloca float, align 4
  %newArea = alloca float, align 4
  %cost2 = alloca float, align 4
  %aabb2 = alloca %struct.b2Transform, align 4
  %aabb3 = alloca %struct.b2Transform, align 4
  %oldArea4 = alloca float, align 4
  %newArea5 = alloca float, align 4
  %sibling = alloca i32, align 4
  %oldParent = alloca i32, align 4
  %newParent = alloca i32, align 4
  %child16 = alloca i32, align 4
  %child27 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %leaf, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %21

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %2, align 4
  %12 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %17 = load %struct.b2TreeNode*, %struct.b2TreeNode** %16, align 8
  %18 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %17, i64 %15
  %19 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %18, i32 0, i32 2
  %20 = bitcast %union.anon* %19 to i32*
  store i32 -1, i32* %20, align 8
  br label %399

; <label>:21                                      ; preds = %0
  %22 = load i32, i32* %2, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %25 = load %struct.b2TreeNode*, %struct.b2TreeNode** %24, align 8
  %26 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %25, i64 %23
  %27 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %26, i32 0, i32 0
  %28 = bitcast %struct.b2Transform* %leafAABB to i8*
  %29 = bitcast %struct.b2Transform* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 4, i1 false)
  %30 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %index, align 4
  br label %32

; <label>:32                                      ; preds = %166, %21
  %33 = load i32, i32* %index, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %36 = load %struct.b2TreeNode*, %struct.b2TreeNode** %35, align 8
  %37 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %36, i64 %34
  %38 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %37)
  %39 = zext i1 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %167

; <label>:41                                      ; preds = %32
  %42 = load i32, i32* %index, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %45 = load %struct.b2TreeNode*, %struct.b2TreeNode** %44, align 8
  %46 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %45, i64 %43
  %47 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %child1, align 4
  %49 = load i32, i32* %index, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %52 = load %struct.b2TreeNode*, %struct.b2TreeNode** %51, align 8
  %53 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %52, i64 %50
  %54 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %53, i32 0, i32 4
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %child2, align 4
  %56 = load i32, i32* %index, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %59 = load %struct.b2TreeNode*, %struct.b2TreeNode** %58, align 8
  %60 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %59, i64 %57
  %61 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %60, i32 0, i32 0
  %62 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %61)
  store float %62, float* %area, align 4
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %combinedAABB)
  %63 = load i32, i32* %index, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %66 = load %struct.b2TreeNode*, %struct.b2TreeNode** %65, align 8
  %67 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %66, i64 %64
  %68 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %67, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %combinedAABB, %struct.b2Transform* dereferenceable(16) %68, %struct.b2Transform* dereferenceable(16) %leafAABB)
  %69 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %combinedAABB)
  store float %69, float* %combinedArea, align 4
  %70 = load float, float* %combinedArea, align 4
  %71 = fmul float 2.000000e+00, %70
  store float %71, float* %cost, align 4
  %72 = load float, float* %combinedArea, align 4
  %73 = load float, float* %area, align 4
  %74 = fsub float %72, %73
  %75 = fmul float 2.000000e+00, %74
  store float %75, float* %inheritanceCost, align 4
  %76 = load i32, i32* %child1, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %79 = load %struct.b2TreeNode*, %struct.b2TreeNode** %78, align 8
  %80 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %79, i64 %77
  %81 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %80)
  br i1 %81, label %82, label %92

; <label>:82                                      ; preds = %41
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb)
  %83 = load i32, i32* %child1, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %86 = load %struct.b2TreeNode*, %struct.b2TreeNode** %85, align 8
  %87 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %86, i64 %84
  %88 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %87, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %aabb, %struct.b2Transform* dereferenceable(16) %leafAABB, %struct.b2Transform* dereferenceable(16) %88)
  %89 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %aabb)
  %90 = load float, float* %inheritanceCost, align 4
  %91 = fadd float %89, %90
  store float %91, float* %cost1, align 4
  br label %112

; <label>:92                                      ; preds = %41
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb1)
  %93 = load i32, i32* %child1, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %96 = load %struct.b2TreeNode*, %struct.b2TreeNode** %95, align 8
  %97 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %96, i64 %94
  %98 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %97, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %aabb1, %struct.b2Transform* dereferenceable(16) %leafAABB, %struct.b2Transform* dereferenceable(16) %98)
  %99 = load i32, i32* %child1, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %102 = load %struct.b2TreeNode*, %struct.b2TreeNode** %101, align 8
  %103 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %102, i64 %100
  %104 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %103, i32 0, i32 0
  %105 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %104)
  store float %105, float* %oldArea, align 4
  %106 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %aabb1)
  store float %106, float* %newArea, align 4
  %107 = load float, float* %newArea, align 4
  %108 = load float, float* %oldArea, align 4
  %109 = fsub float %107, %108
  %110 = load float, float* %inheritanceCost, align 4
  %111 = fadd float %109, %110
  store float %111, float* %cost1, align 4
  br label %112

; <label>:112                                     ; preds = %92, %82
  %113 = load i32, i32* %child2, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %116 = load %struct.b2TreeNode*, %struct.b2TreeNode** %115, align 8
  %117 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %116, i64 %114
  %118 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %117)
  br i1 %118, label %119, label %129

; <label>:119                                     ; preds = %112
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb2)
  %120 = load i32, i32* %child2, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %123 = load %struct.b2TreeNode*, %struct.b2TreeNode** %122, align 8
  %124 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %123, i64 %121
  %125 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %124, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %aabb2, %struct.b2Transform* dereferenceable(16) %leafAABB, %struct.b2Transform* dereferenceable(16) %125)
  %126 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %aabb2)
  %127 = load float, float* %inheritanceCost, align 4
  %128 = fadd float %126, %127
  store float %128, float* %cost2, align 4
  br label %149

; <label>:129                                     ; preds = %112
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb3)
  %130 = load i32, i32* %child2, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %133 = load %struct.b2TreeNode*, %struct.b2TreeNode** %132, align 8
  %134 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %133, i64 %131
  %135 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %134, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %aabb3, %struct.b2Transform* dereferenceable(16) %leafAABB, %struct.b2Transform* dereferenceable(16) %135)
  %136 = load i32, i32* %child2, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %139 = load %struct.b2TreeNode*, %struct.b2TreeNode** %138, align 8
  %140 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %139, i64 %137
  %141 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %140, i32 0, i32 0
  %142 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %141)
  store float %142, float* %oldArea4, align 4
  %143 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %aabb3)
  store float %143, float* %newArea5, align 4
  %144 = load float, float* %newArea5, align 4
  %145 = load float, float* %oldArea4, align 4
  %146 = fsub float %144, %145
  %147 = load float, float* %inheritanceCost, align 4
  %148 = fadd float %146, %147
  store float %148, float* %cost2, align 4
  br label %149

; <label>:149                                     ; preds = %129, %119
  %150 = load float, float* %cost, align 4
  %151 = load float, float* %cost1, align 4
  %152 = fcmp olt float %150, %151
  br i1 %152, label %153, label %158

; <label>:153                                     ; preds = %149
  %154 = load float, float* %cost, align 4
  %155 = load float, float* %cost2, align 4
  %156 = fcmp olt float %154, %155
  br i1 %156, label %157, label %158

; <label>:157                                     ; preds = %153
  br label %167

; <label>:158                                     ; preds = %153, %149
  %159 = load float, float* %cost1, align 4
  %160 = load float, float* %cost2, align 4
  %161 = fcmp olt float %159, %160
  br i1 %161, label %162, label %164

; <label>:162                                     ; preds = %158
  %163 = load i32, i32* %child1, align 4
  store i32 %163, i32* %index, align 4
  br label %166

; <label>:164                                     ; preds = %158
  %165 = load i32, i32* %child2, align 4
  store i32 %165, i32* %index, align 4
  br label %166

; <label>:166                                     ; preds = %164, %162
  br label %32

; <label>:167                                     ; preds = %157, %32
  %168 = load i32, i32* %index, align 4
  store i32 %168, i32* %sibling, align 4
  %169 = load i32, i32* %sibling, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %172 = load %struct.b2TreeNode*, %struct.b2TreeNode** %171, align 8
  %173 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %172, i64 %170
  %174 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %173, i32 0, i32 2
  %175 = bitcast %union.anon* %174 to i32*
  %176 = load i32, i32* %175, align 8
  store i32 %176, i32* %oldParent, align 4
  %177 = call i32 @_ZN13b2DynamicTree12AllocateNodeEv(%class.b2DynamicTree* %3)
  store i32 %177, i32* %newParent, align 4
  %178 = load i32, i32* %oldParent, align 4
  %179 = load i32, i32* %newParent, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %182 = load %struct.b2TreeNode*, %struct.b2TreeNode** %181, align 8
  %183 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %182, i64 %180
  %184 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %183, i32 0, i32 2
  %185 = bitcast %union.anon* %184 to i32*
  store i32 %178, i32* %185, align 8
  %186 = load i32, i32* %newParent, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %189 = load %struct.b2TreeNode*, %struct.b2TreeNode** %188, align 8
  %190 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %189, i64 %187
  %191 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %190, i32 0, i32 1
  store i8* null, i8** %191, align 8
  %192 = load i32, i32* %newParent, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %195 = load %struct.b2TreeNode*, %struct.b2TreeNode** %194, align 8
  %196 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %195, i64 %193
  %197 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %196, i32 0, i32 0
  %198 = load i32, i32* %sibling, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %201 = load %struct.b2TreeNode*, %struct.b2TreeNode** %200, align 8
  %202 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %201, i64 %199
  %203 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %202, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %197, %struct.b2Transform* dereferenceable(16) %leafAABB, %struct.b2Transform* dereferenceable(16) %203)
  %204 = load i32, i32* %sibling, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %207 = load %struct.b2TreeNode*, %struct.b2TreeNode** %206, align 8
  %208 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %207, i64 %205
  %209 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %208, i32 0, i32 5
  %210 = load i32, i32* %209, align 4
  %211 = add nsw i32 %210, 1
  %212 = load i32, i32* %newParent, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %215 = load %struct.b2TreeNode*, %struct.b2TreeNode** %214, align 8
  %216 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %215, i64 %213
  %217 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %216, i32 0, i32 5
  store i32 %211, i32* %217, align 4
  %218 = load i32, i32* %oldParent, align 4
  %219 = icmp ne i32 %218, -1
  br i1 %219, label %220, label %277

; <label>:220                                     ; preds = %167
  %221 = load i32, i32* %oldParent, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %224 = load %struct.b2TreeNode*, %struct.b2TreeNode** %223, align 8
  %225 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %224, i64 %222
  %226 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %225, i32 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = load i32, i32* %sibling, align 4
  %229 = icmp eq i32 %227, %228
  br i1 %229, label %230, label %238

; <label>:230                                     ; preds = %220
  %231 = load i32, i32* %newParent, align 4
  %232 = load i32, i32* %oldParent, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %235 = load %struct.b2TreeNode*, %struct.b2TreeNode** %234, align 8
  %236 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %235, i64 %233
  %237 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %236, i32 0, i32 3
  store i32 %231, i32* %237, align 4
  br label %246

; <label>:238                                     ; preds = %220
  %239 = load i32, i32* %newParent, align 4
  %240 = load i32, i32* %oldParent, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %243 = load %struct.b2TreeNode*, %struct.b2TreeNode** %242, align 8
  %244 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %243, i64 %241
  %245 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %244, i32 0, i32 4
  store i32 %239, i32* %245, align 8
  br label %246

; <label>:246                                     ; preds = %238, %230
  %247 = load i32, i32* %sibling, align 4
  %248 = load i32, i32* %newParent, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %251 = load %struct.b2TreeNode*, %struct.b2TreeNode** %250, align 8
  %252 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %251, i64 %249
  %253 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %252, i32 0, i32 3
  store i32 %247, i32* %253, align 4
  %254 = load i32, i32* %2, align 4
  %255 = load i32, i32* %newParent, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %258 = load %struct.b2TreeNode*, %struct.b2TreeNode** %257, align 8
  %259 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %258, i64 %256
  %260 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %259, i32 0, i32 4
  store i32 %254, i32* %260, align 8
  %261 = load i32, i32* %newParent, align 4
  %262 = load i32, i32* %sibling, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %265 = load %struct.b2TreeNode*, %struct.b2TreeNode** %264, align 8
  %266 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %265, i64 %263
  %267 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %266, i32 0, i32 2
  %268 = bitcast %union.anon* %267 to i32*
  store i32 %261, i32* %268, align 8
  %269 = load i32, i32* %newParent, align 4
  %270 = load i32, i32* %2, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %273 = load %struct.b2TreeNode*, %struct.b2TreeNode** %272, align 8
  %274 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %273, i64 %271
  %275 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %274, i32 0, i32 2
  %276 = bitcast %union.anon* %275 to i32*
  store i32 %269, i32* %276, align 8
  br label %310

; <label>:277                                     ; preds = %167
  %278 = load i32, i32* %sibling, align 4
  %279 = load i32, i32* %newParent, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %282 = load %struct.b2TreeNode*, %struct.b2TreeNode** %281, align 8
  %283 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %282, i64 %280
  %284 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %283, i32 0, i32 3
  store i32 %278, i32* %284, align 4
  %285 = load i32, i32* %2, align 4
  %286 = load i32, i32* %newParent, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %289 = load %struct.b2TreeNode*, %struct.b2TreeNode** %288, align 8
  %290 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %289, i64 %287
  %291 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %290, i32 0, i32 4
  store i32 %285, i32* %291, align 8
  %292 = load i32, i32* %newParent, align 4
  %293 = load i32, i32* %sibling, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %296 = load %struct.b2TreeNode*, %struct.b2TreeNode** %295, align 8
  %297 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %296, i64 %294
  %298 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %297, i32 0, i32 2
  %299 = bitcast %union.anon* %298 to i32*
  store i32 %292, i32* %299, align 8
  %300 = load i32, i32* %newParent, align 4
  %301 = load i32, i32* %2, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %304 = load %struct.b2TreeNode*, %struct.b2TreeNode** %303, align 8
  %305 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %304, i64 %302
  %306 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %305, i32 0, i32 2
  %307 = bitcast %union.anon* %306 to i32*
  store i32 %300, i32* %307, align 8
  %308 = load i32, i32* %newParent, align 4
  %309 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  store i32 %308, i32* %309, align 8
  br label %310

; <label>:310                                     ; preds = %277, %246
  %311 = load i32, i32* %2, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %314 = load %struct.b2TreeNode*, %struct.b2TreeNode** %313, align 8
  %315 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %314, i64 %312
  %316 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %315, i32 0, i32 2
  %317 = bitcast %union.anon* %316 to i32*
  %318 = load i32, i32* %317, align 8
  store i32 %318, i32* %index, align 4
  br label %319

; <label>:319                                     ; preds = %350, %310
  %320 = load i32, i32* %index, align 4
  %321 = icmp ne i32 %320, -1
  br i1 %321, label %322, label %399

; <label>:322                                     ; preds = %319
  %323 = load i32, i32* %index, align 4
  %324 = call i32 @_ZN13b2DynamicTree7BalanceEi(%class.b2DynamicTree* %3, i32 %323)
  store i32 %324, i32* %index, align 4
  %325 = load i32, i32* %index, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %328 = load %struct.b2TreeNode*, %struct.b2TreeNode** %327, align 8
  %329 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %328, i64 %326
  %330 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %329, i32 0, i32 3
  %331 = load i32, i32* %330, align 4
  store i32 %331, i32* %child16, align 4
  %332 = load i32, i32* %index, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %335 = load %struct.b2TreeNode*, %struct.b2TreeNode** %334, align 8
  %336 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %335, i64 %333
  %337 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %336, i32 0, i32 4
  %338 = load i32, i32* %337, align 8
  store i32 %338, i32* %child27, align 4
  %339 = load i32, i32* %child16, align 4
  %340 = icmp ne i32 %339, -1
  br i1 %340, label %341, label %342

; <label>:341                                     ; preds = %322
  br label %344

; <label>:342                                     ; preds = %322
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.438, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 304, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree10InsertLeafEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %344

; <label>:344                                     ; preds = %343, %341
  %345 = load i32, i32* %child27, align 4
  %346 = icmp ne i32 %345, -1
  br i1 %346, label %347, label %348

; <label>:347                                     ; preds = %344
  br label %350

; <label>:348                                     ; preds = %344
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.439, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 305, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree10InsertLeafEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %350

; <label>:350                                     ; preds = %349, %347
  %351 = load i32, i32* %child16, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %354 = load %struct.b2TreeNode*, %struct.b2TreeNode** %353, align 8
  %355 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %354, i64 %352
  %356 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %355, i32 0, i32 5
  %357 = load i32, i32* %356, align 4
  %358 = load i32, i32* %child27, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %361 = load %struct.b2TreeNode*, %struct.b2TreeNode** %360, align 8
  %362 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %361, i64 %359
  %363 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %362, i32 0, i32 5
  %364 = load i32, i32* %363, align 4
  %365 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %357, i32 %364)
  %366 = add nsw i32 1, %365
  %367 = load i32, i32* %index, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %370 = load %struct.b2TreeNode*, %struct.b2TreeNode** %369, align 8
  %371 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %370, i64 %368
  %372 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %371, i32 0, i32 5
  store i32 %366, i32* %372, align 4
  %373 = load i32, i32* %index, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %376 = load %struct.b2TreeNode*, %struct.b2TreeNode** %375, align 8
  %377 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %376, i64 %374
  %378 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %377, i32 0, i32 0
  %379 = load i32, i32* %child16, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %382 = load %struct.b2TreeNode*, %struct.b2TreeNode** %381, align 8
  %383 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %382, i64 %380
  %384 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %383, i32 0, i32 0
  %385 = load i32, i32* %child27, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %388 = load %struct.b2TreeNode*, %struct.b2TreeNode** %387, align 8
  %389 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %388, i64 %386
  %390 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %389, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %378, %struct.b2Transform* dereferenceable(16) %384, %struct.b2Transform* dereferenceable(16) %390)
  %391 = load i32, i32* %index, align 4
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %394 = load %struct.b2TreeNode*, %struct.b2TreeNode** %393, align 8
  %395 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %394, i64 %392
  %396 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %395, i32 0, i32 2
  %397 = bitcast %union.anon* %396 to i32*
  %398 = load i32, i32* %397, align 8
  store i32 %398, i32* %index, align 4
  br label %319

; <label>:399                                     ; preds = %319, %10
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %this) #2 comdat align 2 {
  %1 = alloca %struct.b2Transform*, align 8
  %wx = alloca float, align 4
  %wy = alloca float, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %1, align 8
  %2 = load %struct.b2Transform*, %struct.b2Transform** %1, align 8
  %3 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %6, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fsub float %5, %8
  store float %9, float* %wx, align 4
  %10 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 1
  %11 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %10, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %2, i32 0, i32 0
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fsub float %12, %15
  store float %16, float* %wy, align 4
  %17 = load float, float* %wx, align 4
  %18 = load float, float* %wy, align 4
  %19 = fadd float %17, %18
  %20 = fmul float 2.000000e+00, %19
  ret float %20
}

; Function Attrs: uwtable
define i32 @_ZN13b2DynamicTree12AllocateNodeEv(%class.b2DynamicTree* %this) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %oldNodes = alloca %struct.b2TreeNode*, align 8
  %i = alloca i32, align 4
  %nodeId = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %3 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %88

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %6
  br label %15

; <label>:13                                      ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 58, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree12AllocateNodeEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %17 = load %struct.b2TreeNode*, %struct.b2TreeNode** %16, align 8
  store %struct.b2TreeNode* %17, %struct.b2TreeNode** %oldNodes, align 8
  %18 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = mul nsw i32 %19, 2
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = mul i64 %23, 40
  %25 = trunc i64 %24 to i32
  %26 = call i8* @_Z7b2Alloci(i32 %25)
  %27 = bitcast i8* %26 to %struct.b2TreeNode*
  %28 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  store %struct.b2TreeNode* %27, %struct.b2TreeNode** %28, align 8
  %29 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %30 = load %struct.b2TreeNode*, %struct.b2TreeNode** %29, align 8
  %31 = bitcast %struct.b2TreeNode* %30 to i8*
  %32 = load %struct.b2TreeNode*, %struct.b2TreeNode** %oldNodes, align 8
  %33 = bitcast %struct.b2TreeNode* %32 to i8*
  %34 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = mul i64 %36, 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %33, i64 %37, i32 8, i1 false)
  %38 = load %struct.b2TreeNode*, %struct.b2TreeNode** %oldNodes, align 8
  %39 = bitcast %struct.b2TreeNode* %38 to i8*
  call void @_Z6b2FreePv(i8* %39)
  %40 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %i, align 4
  br label %42

; <label>:42                                      ; preds = %64, %15
  %43 = load i32, i32* %i, align 4
  %44 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %45, 1
  %47 = icmp slt i32 %43, %46
  br i1 %47, label %48, label %67

; <label>:48                                      ; preds = %42
  %49 = load i32, i32* %i, align 4
  %50 = add nsw i32 %49, 1
  %51 = load i32, i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %54 = load %struct.b2TreeNode*, %struct.b2TreeNode** %53, align 8
  %55 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %54, i64 %52
  %56 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %55, i32 0, i32 2
  %57 = bitcast %union.anon* %56 to i32*
  store i32 %50, i32* %57, align 8
  %58 = load i32, i32* %i, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %61 = load %struct.b2TreeNode*, %struct.b2TreeNode** %60, align 8
  %62 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %61, i64 %59
  %63 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %62, i32 0, i32 5
  store i32 -1, i32* %63, align 4
  br label %64

; <label>:64                                      ; preds = %48
  %65 = load i32, i32* %i, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %i, align 4
  br label %42

; <label>:67                                      ; preds = %42
  %68 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %69 = load i32, i32* %68, align 4
  %70 = sub nsw i32 %69, 1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %73 = load %struct.b2TreeNode*, %struct.b2TreeNode** %72, align 8
  %74 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %73, i64 %71
  %75 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %74, i32 0, i32 2
  %76 = bitcast %union.anon* %75 to i32*
  store i32 -1, i32* %76, align 8
  %77 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = sub nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %82 = load %struct.b2TreeNode*, %struct.b2TreeNode** %81, align 8
  %83 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %82, i64 %80
  %84 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %83, i32 0, i32 5
  store i32 -1, i32* %84, align 4
  %85 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 5
  store i32 %86, i32* %87, align 8
  br label %88

; <label>:88                                      ; preds = %67, %0
  %89 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 5
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %nodeId, align 4
  %91 = load i32, i32* %nodeId, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %94 = load %struct.b2TreeNode*, %struct.b2TreeNode** %93, align 8
  %95 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %94, i64 %92
  %96 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %95, i32 0, i32 2
  %97 = bitcast %union.anon* %96 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 5
  store i32 %98, i32* %99, align 8
  %100 = load i32, i32* %nodeId, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %103 = load %struct.b2TreeNode*, %struct.b2TreeNode** %102, align 8
  %104 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %103, i64 %101
  %105 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %104, i32 0, i32 2
  %106 = bitcast %union.anon* %105 to i32*
  store i32 -1, i32* %106, align 8
  %107 = load i32, i32* %nodeId, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %110 = load %struct.b2TreeNode*, %struct.b2TreeNode** %109, align 8
  %111 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %110, i64 %108
  %112 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %111, i32 0, i32 3
  store i32 -1, i32* %112, align 4
  %113 = load i32, i32* %nodeId, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %116 = load %struct.b2TreeNode*, %struct.b2TreeNode** %115, align 8
  %117 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %116, i64 %114
  %118 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %117, i32 0, i32 4
  store i32 -1, i32* %118, align 8
  %119 = load i32, i32* %nodeId, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %122 = load %struct.b2TreeNode*, %struct.b2TreeNode** %121, align 8
  %123 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %122, i64 %120
  %124 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %123, i32 0, i32 5
  store i32 0, i32* %124, align 4
  %125 = load i32, i32* %nodeId, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %128 = load %struct.b2TreeNode*, %struct.b2TreeNode** %127, align 8
  %129 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %128, i64 %126
  %130 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %129, i32 0, i32 1
  store i8* null, i8** %130, align 8
  %131 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %131, align 8
  %134 = load i32, i32* %nodeId, align 4
  ret i32 %134
}

; Function Attrs: uwtable
define void @_ZN12b2BroadPhase10BufferMoveEi(%class.b2BroadPhase* %this, i32 %proxyId) #0 align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  %oldBuffer = alloca i32*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %34

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %oldBuffer, align 8
  %12 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = mul nsw i32 %13, 2
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = mul i64 %17, 4
  %19 = trunc i64 %18 to i32
  %20 = call i8* @_Z7b2Alloci(i32 %19)
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  store i32* %21, i32** %22, align 8
  %23 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  %24 = load i32*, i32** %23, align 8
  %25 = bitcast i32* %24 to i8*
  %26 = load i32*, i32** %oldBuffer, align 8
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = mul i64 %30, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %27, i64 %31, i32 4, i1 false)
  %32 = load i32*, i32** %oldBuffer, align 8
  %33 = bitcast i32* %32 to i8*
  call void @_Z6b2FreePv(i8* %33)
  br label %34

; <label>:34                                      ; preds = %9, %0
  %35 = load i32, i32* %2, align 4
  %36 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 %38
  store i32 %35, i32* %41, align 4
  %42 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %42, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %this, %class.b2Contact* %c) #0 align 2 {
  %1 = alloca %class.b2ContactManager*, align 8
  %2 = alloca %class.b2Contact*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  store %class.b2ContactManager* %this, %class.b2ContactManager** %1, align 8
  store %class.b2Contact* %c, %class.b2Contact** %2, align 8
  %3 = load %class.b2ContactManager*, %class.b2ContactManager** %1, align 8
  %4 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %5 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %4)
  store %class.b2Fixture* %5, %class.b2Fixture** %fixtureA, align 8
  %6 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %7 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %6)
  store %class.b2Fixture* %7, %class.b2Fixture** %fixtureB, align 8
  %8 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %9 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %8)
  store %class.b2Body* %9, %class.b2Body** %bodyA, align 8
  %10 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %11 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %10)
  store %class.b2Body* %11, %class.b2Body** %bodyB, align 8
  %12 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 4
  %13 = load %class.b2ContactFilter*, %class.b2ContactFilter** %12, align 8
  %14 = icmp ne %class.b2ContactFilter* %13, null
  br i1 %14, label %15, label %26

; <label>:15                                      ; preds = %0
  %16 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %17 = call zeroext i1 @_ZNK9b2Contact10IsTouchingEv(%class.b2Contact* %16)
  br i1 %17, label %18, label %26

; <label>:18                                      ; preds = %15
  %19 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 4
  %20 = load %class.b2ContactFilter*, %class.b2ContactFilter** %19, align 8
  %21 = bitcast %class.b2ContactFilter* %20 to void (%class.b2ContactFilter*, %class.b2Contact*)***
  %22 = load void (%class.b2ContactFilter*, %class.b2Contact*)**, void (%class.b2ContactFilter*, %class.b2Contact*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Contact*)*, void (%class.b2ContactFilter*, %class.b2Contact*)** %22, i64 3
  %24 = load void (%class.b2ContactFilter*, %class.b2Contact*)*, void (%class.b2ContactFilter*, %class.b2Contact*)** %23, align 8
  %25 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  call void %24(%class.b2ContactFilter* %20, %class.b2Contact* %25)
  br label %26

; <label>:26                                      ; preds = %18, %15, %0
  %27 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %28 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %27, i32 0, i32 3
  %29 = load %class.b2Contact*, %class.b2Contact** %28, align 8
  %30 = icmp ne %class.b2Contact* %29, null
  br i1 %30, label %31, label %39

; <label>:31                                      ; preds = %26
  %32 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %33 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %32, i32 0, i32 4
  %34 = load %class.b2Contact*, %class.b2Contact** %33, align 8
  %35 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %36 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %35, i32 0, i32 3
  %37 = load %class.b2Contact*, %class.b2Contact** %36, align 8
  %38 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %37, i32 0, i32 4
  store %class.b2Contact* %34, %class.b2Contact** %38, align 8
  br label %39

; <label>:39                                      ; preds = %31, %26
  %40 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %41 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %40, i32 0, i32 4
  %42 = load %class.b2Contact*, %class.b2Contact** %41, align 8
  %43 = icmp ne %class.b2Contact* %42, null
  br i1 %43, label %44, label %52

; <label>:44                                      ; preds = %39
  %45 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %46 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %45, i32 0, i32 3
  %47 = load %class.b2Contact*, %class.b2Contact** %46, align 8
  %48 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %49 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %48, i32 0, i32 4
  %50 = load %class.b2Contact*, %class.b2Contact** %49, align 8
  %51 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %50, i32 0, i32 3
  store %class.b2Contact* %47, %class.b2Contact** %51, align 8
  br label %52

; <label>:52                                      ; preds = %44, %39
  %53 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %54 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 1
  %55 = load %class.b2Contact*, %class.b2Contact** %54, align 8
  %56 = icmp eq %class.b2Contact* %53, %55
  br i1 %56, label %57, label %62

; <label>:57                                      ; preds = %52
  %58 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %59 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %58, i32 0, i32 4
  %60 = load %class.b2Contact*, %class.b2Contact** %59, align 8
  %61 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 1
  store %class.b2Contact* %60, %class.b2Contact** %61, align 8
  br label %62

; <label>:62                                      ; preds = %57, %52
  %63 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %64 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %63, i32 0, i32 5
  %65 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %64, i32 0, i32 2
  %66 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %65, align 8
  %67 = icmp ne %struct.b2ContactEdge* %66, null
  br i1 %67, label %68, label %78

; <label>:68                                      ; preds = %62
  %69 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %70 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %69, i32 0, i32 5
  %71 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %70, i32 0, i32 3
  %72 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %71, align 8
  %73 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %74 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %73, i32 0, i32 5
  %75 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %74, i32 0, i32 2
  %76 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %75, align 8
  %77 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %76, i32 0, i32 3
  store %struct.b2ContactEdge* %72, %struct.b2ContactEdge** %77, align 8
  br label %78

; <label>:78                                      ; preds = %68, %62
  %79 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %80 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %79, i32 0, i32 5
  %81 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %80, i32 0, i32 3
  %82 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %81, align 8
  %83 = icmp ne %struct.b2ContactEdge* %82, null
  br i1 %83, label %84, label %94

; <label>:84                                      ; preds = %78
  %85 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %86 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %85, i32 0, i32 5
  %87 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %86, i32 0, i32 2
  %88 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %87, align 8
  %89 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %90 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %89, i32 0, i32 5
  %91 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %90, i32 0, i32 3
  %92 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %91, align 8
  %93 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %92, i32 0, i32 2
  store %struct.b2ContactEdge* %88, %struct.b2ContactEdge** %93, align 8
  br label %94

; <label>:94                                      ; preds = %84, %78
  %95 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %96 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %95, i32 0, i32 5
  %97 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %98 = getelementptr inbounds %class.b2Body, %class.b2Body* %97, i32 0, i32 15
  %99 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %98, align 8
  %100 = icmp eq %struct.b2ContactEdge* %96, %99
  br i1 %100, label %101, label %108

; <label>:101                                     ; preds = %94
  %102 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %103 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %102, i32 0, i32 5
  %104 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %103, i32 0, i32 3
  %105 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %104, align 8
  %106 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %107 = getelementptr inbounds %class.b2Body, %class.b2Body* %106, i32 0, i32 15
  store %struct.b2ContactEdge* %105, %struct.b2ContactEdge** %107, align 8
  br label %108

; <label>:108                                     ; preds = %101, %94
  %109 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %110 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %109, i32 0, i32 6
  %111 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %110, i32 0, i32 2
  %112 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %111, align 8
  %113 = icmp ne %struct.b2ContactEdge* %112, null
  br i1 %113, label %114, label %124

; <label>:114                                     ; preds = %108
  %115 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %116 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %115, i32 0, i32 6
  %117 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %116, i32 0, i32 3
  %118 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %117, align 8
  %119 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %120 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %119, i32 0, i32 6
  %121 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %120, i32 0, i32 2
  %122 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %121, align 8
  %123 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %122, i32 0, i32 3
  store %struct.b2ContactEdge* %118, %struct.b2ContactEdge** %123, align 8
  br label %124

; <label>:124                                     ; preds = %114, %108
  %125 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %126 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %125, i32 0, i32 6
  %127 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %126, i32 0, i32 3
  %128 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %127, align 8
  %129 = icmp ne %struct.b2ContactEdge* %128, null
  br i1 %129, label %130, label %140

; <label>:130                                     ; preds = %124
  %131 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %132 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %131, i32 0, i32 6
  %133 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %132, i32 0, i32 2
  %134 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %133, align 8
  %135 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %136 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %135, i32 0, i32 6
  %137 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %136, i32 0, i32 3
  %138 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %137, align 8
  %139 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %138, i32 0, i32 2
  store %struct.b2ContactEdge* %134, %struct.b2ContactEdge** %139, align 8
  br label %140

; <label>:140                                     ; preds = %130, %124
  %141 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %142 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %141, i32 0, i32 6
  %143 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %144 = getelementptr inbounds %class.b2Body, %class.b2Body* %143, i32 0, i32 15
  %145 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %144, align 8
  %146 = icmp eq %struct.b2ContactEdge* %142, %145
  br i1 %146, label %147, label %154

; <label>:147                                     ; preds = %140
  %148 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %149 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %148, i32 0, i32 6
  %150 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %149, i32 0, i32 3
  %151 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %150, align 8
  %152 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %153 = getelementptr inbounds %class.b2Body, %class.b2Body* %152, i32 0, i32 15
  store %struct.b2ContactEdge* %151, %struct.b2ContactEdge** %153, align 8
  br label %154

; <label>:154                                     ; preds = %147, %140
  %155 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %156 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 5
  %157 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %156, align 8
  call void @_ZN9b2Contact7DestroyEPS_P16b2BlockAllocator(%class.b2Contact* %155, %class.b2BlockAllocator* %157)
  %158 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = add nsw i32 %159, -1
  store i32 %160, i32* %158, align 8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 7
  %4 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  ret %class.b2Fixture* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 8
  %4 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  ret %class.b2Fixture* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9b2Contact10IsTouchingEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 2
  ret i1 %6
}

; Function Attrs: uwtable
define void @_ZN12b2BroadPhase10TouchProxyEi(%class.b2BroadPhase* %this, i32 %proxyId) #0 align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = load i32, i32* %2, align 4
  call void @_ZN12b2BroadPhase10BufferMoveEi(%class.b2BroadPhase* %3, i32 %4)
  ret void
}

; Function Attrs: uwtable
define %class.b2Fixture* @_ZN6b2Body13CreateFixtureEPK12b2FixtureDef(%class.b2Body* %this, %struct.b2FixtureDef* %def) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %struct.b2FixtureDef*, align 8
  %allocator = alloca %class.b2BlockAllocator*, align 8
  %memory = alloca i8*, align 8
  %fixture = alloca %class.b2Fixture*, align 8
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %struct.b2FixtureDef* %def, %struct.b2FixtureDef** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %6 = load %class.b2World*, %class.b2World** %5, align 8
  %7 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %6)
  %8 = zext i1 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %0
  br label %13

; <label>:11                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.210, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 168, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body13CreateFixtureEPK12b2FixtureDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %13

; <label>:13                                      ; preds = %12, %10
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %15 = load %class.b2World*, %class.b2World** %14, align 8
  %16 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %15)
  %17 = zext i1 %16 to i32
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %13
  store %class.b2Fixture* null, %class.b2Fixture** %1, align 8
  br label %68

; <label>:20                                      ; preds = %13
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %22 = load %class.b2World*, %class.b2World** %21, align 8
  %23 = getelementptr inbounds %class.b2World, %class.b2World* %22, i32 0, i32 0
  store %class.b2BlockAllocator* %23, %class.b2BlockAllocator** %allocator, align 8
  %24 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %allocator, align 8
  %25 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %24, i32 72)
  store i8* %25, i8** %memory, align 8
  %26 = load i8*, i8** %memory, align 8
  %27 = bitcast i8* %26 to %class.b2Fixture*
  call void @_ZN9b2FixtureC1Ev(%class.b2Fixture* %27)
  store %class.b2Fixture* %27, %class.b2Fixture** %fixture, align 8
  %28 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %29 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %allocator, align 8
  %30 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %3, align 8
  call void @_ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef(%class.b2Fixture* %28, %class.b2BlockAllocator* %29, %class.b2Body* %4, %struct.b2FixtureDef* %30)
  %31 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %32 = load i16, i16* %31, align 4
  %33 = zext i16 %32 to i32
  %34 = and i32 %33, 32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %44

; <label>:36                                      ; preds = %20
  %37 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %38 = load %class.b2World*, %class.b2World** %37, align 8
  %39 = getelementptr inbounds %class.b2World, %class.b2World* %38, i32 0, i32 3
  %40 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %39, i32 0, i32 0
  store %class.b2BroadPhase* %40, %class.b2BroadPhase** %broadPhase, align 8
  %41 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %42 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  %43 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  call void @_ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform(%class.b2Fixture* %41, %class.b2BroadPhase* %42, %struct.b2Transform* dereferenceable(16) %43)
  br label %44

; <label>:44                                      ; preds = %36, %20
  %45 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 12
  %46 = load %class.b2Fixture*, %class.b2Fixture** %45, align 8
  %47 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %48 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %47, i32 0, i32 1
  store %class.b2Fixture* %46, %class.b2Fixture** %48, align 8
  %49 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %50 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 12
  store %class.b2Fixture* %49, %class.b2Fixture** %50, align 8
  %51 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 13
  %52 = load i32, i32* %51, align 8
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %51, align 8
  %54 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %55 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %54, i32 0, i32 2
  store %class.b2Body* %4, %class.b2Body** %55, align 8
  %56 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %57 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %56, i32 0, i32 0
  %58 = load float, float* %57, align 8
  %59 = fcmp ogt float %58, 0.000000e+00
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %44
  call void @_ZN6b2Body13ResetMassDataEv(%class.b2Body* %4)
  br label %61

; <label>:61                                      ; preds = %60, %44
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %63 = load %class.b2World*, %class.b2World** %62, align 8
  %64 = getelementptr inbounds %class.b2World, %class.b2World* %63, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = or i32 %65, 1
  store i32 %66, i32* %64, align 8
  %67 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  store %class.b2Fixture* %67, %class.b2Fixture** %1, align 8
  br label %68

; <label>:68                                      ; preds = %61, %19
  %69 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  ret %class.b2Fixture* %69
}

; Function Attrs: uwtable
define void @_ZN9b2FixtureC2Ev(%class.b2Fixture* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 8
  call void @_ZN8b2FilterC2Ev(%struct.b2Filter* %3)
  %4 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 10
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 2
  store %class.b2Body* null, %class.b2Body** %5, align 8
  %6 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 1
  store %class.b2Fixture* null, %class.b2Fixture** %6, align 8
  %7 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 6
  store %struct.b2FixtureProxy* null, %struct.b2FixtureProxy** %7, align 8
  %8 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 7
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 3
  store %class.b2Shape* null, %class.b2Shape** %9, align 8
  %10 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 0
  store float 0.000000e+00, float* %10, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8b2FilterC2Ev(%struct.b2Filter* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Filter*, align 8
  store %struct.b2Filter* %this, %struct.b2Filter** %1, align 8
  %2 = load %struct.b2Filter*, %struct.b2Filter** %1, align 8
  %3 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %2, i32 0, i32 0
  store i16 1, i16* %3, align 2
  %4 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %2, i32 0, i32 1
  store i16 -1, i16* %4, align 2
  %5 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %2, i32 0, i32 2
  store i16 0, i16* %5, align 2
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef(%class.b2Fixture* %this, %class.b2BlockAllocator* %allocator, %class.b2Body* %body, %struct.b2FixtureDef* %def) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %3 = alloca %class.b2Body*, align 8
  %4 = alloca %struct.b2FixtureDef*, align 8
  %childCount = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  store %class.b2Body* %body, %class.b2Body** %3, align 8
  store %struct.b2FixtureDef* %def, %struct.b2FixtureDef** %4, align 8
  %5 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %6 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %7 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %6, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 10
  store i8* %8, i8** %9, align 8
  %10 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %11 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %10, i32 0, i32 2
  %12 = load float, float* %11, align 8
  %13 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 4
  store float %12, float* %13, align 8
  %14 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %15 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %14, i32 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 5
  store float %16, float* %17, align 4
  %18 = load %class.b2Body*, %class.b2Body** %3, align 8
  %19 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 2
  store %class.b2Body* %18, %class.b2Body** %19, align 8
  %20 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 1
  store %class.b2Fixture* null, %class.b2Fixture** %20, align 8
  %21 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 8
  %22 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %23 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %22, i32 0, i32 7
  %24 = bitcast %struct.b2Filter* %21 to i8*
  %25 = bitcast %struct.b2Filter* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 6, i32 2, i1 false)
  %26 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %27 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %26, i32 0, i32 5
  %28 = load i8, i8* %27, align 4
  %29 = trunc i8 %28 to i1
  %30 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 9
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 2
  %32 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %33 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %32, i32 0, i32 0
  %34 = load %class.b2Shape*, %class.b2Shape** %33, align 8
  %35 = bitcast %class.b2Shape* %34 to %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)***
  %36 = load %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)**, %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)*** %35, align 8
  %37 = getelementptr inbounds %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)*, %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)** %36, i64 2
  %38 = load %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)*, %class.b2Shape* (%class.b2Shape*, %class.b2BlockAllocator*)** %37, align 8
  %39 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %40 = call %class.b2Shape* %38(%class.b2Shape* %34, %class.b2BlockAllocator* %39)
  %41 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 3
  store %class.b2Shape* %40, %class.b2Shape** %41, align 8
  %42 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 3
  %43 = load %class.b2Shape*, %class.b2Shape** %42, align 8
  %44 = bitcast %class.b2Shape* %43 to i32 (%class.b2Shape*)***
  %45 = load i32 (%class.b2Shape*)**, i32 (%class.b2Shape*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%class.b2Shape*)*, i32 (%class.b2Shape*)** %45, i64 3
  %47 = load i32 (%class.b2Shape*)*, i32 (%class.b2Shape*)** %46, align 8
  %48 = call i32 %47(%class.b2Shape* %43)
  store i32 %48, i32* %childCount, align 4
  %49 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %50 = load i32, i32* %childCount, align 4
  %51 = sext i32 %50 to i64
  %52 = mul i64 %51, 32
  %53 = trunc i64 %52 to i32
  %54 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %49, i32 %53)
  %55 = bitcast i8* %54 to %struct.b2FixtureProxy*
  %56 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 6
  store %struct.b2FixtureProxy* %55, %struct.b2FixtureProxy** %56, align 8
  store i32 0, i32* %i, align 4
  br label %57

; <label>:57                                      ; preds = %74, %0
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %childCount, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %77

; <label>:61                                      ; preds = %57
  %62 = load i32, i32* %i, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 6
  %65 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %64, align 8
  %66 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %65, i64 %63
  %67 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %66, i32 0, i32 1
  store %class.b2Fixture* null, %class.b2Fixture** %67, align 8
  %68 = load i32, i32* %i, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 6
  %71 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %70, align 8
  %72 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %71, i64 %69
  %73 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %72, i32 0, i32 3
  store i32 -1, i32* %73, align 4
  br label %74

; <label>:74                                      ; preds = %61
  %75 = load i32, i32* %i, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %i, align 4
  br label %57

; <label>:77                                      ; preds = %57
  %78 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 7
  store i32 0, i32* %78, align 8
  %79 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %4, align 8
  %80 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %79, i32 0, i32 4
  %81 = load float, float* %80, align 8
  %82 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 0
  store float %81, float* %82, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform(%class.b2Fixture* %this, %class.b2BroadPhase* %broadPhase, %struct.b2Transform* dereferenceable(16) %xf) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %class.b2BroadPhase*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %i = alloca i32, align 4
  %proxy = alloca %struct.b2FixtureProxy*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %class.b2BroadPhase* %broadPhase, %class.b2BroadPhase** %2, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %3, align 8
  %4 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %5 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.233, i32 0, i32 0), i32 124, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 3
  %13 = load %class.b2Shape*, %class.b2Shape** %12, align 8
  %14 = bitcast %class.b2Shape* %13 to i32 (%class.b2Shape*)***
  %15 = load i32 (%class.b2Shape*)**, i32 (%class.b2Shape*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%class.b2Shape*)*, i32 (%class.b2Shape*)** %15, i64 3
  %17 = load i32 (%class.b2Shape*)*, i32 (%class.b2Shape*)** %16, align 8
  %18 = call i32 %17(%class.b2Shape* %13)
  %19 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 7
  store i32 %18, i32* %19, align 8
  store i32 0, i32* %i, align 4
  br label %20

; <label>:20                                      ; preds = %54, %11
  %21 = load i32, i32* %i, align 4
  %22 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %25, label %57

; <label>:25                                      ; preds = %20
  %26 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 6
  %27 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %26, align 8
  %28 = load i32, i32* %i, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %27, i64 %29
  store %struct.b2FixtureProxy* %30, %struct.b2FixtureProxy** %proxy, align 8
  %31 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 3
  %32 = load %class.b2Shape*, %class.b2Shape** %31, align 8
  %33 = bitcast %class.b2Shape* %32 to void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)***
  %34 = load void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)**, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)** %34, i64 6
  %36 = load void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)*, void (%class.b2Shape*, %struct.b2Transform*, %struct.b2Transform*, i32)** %35, align 8
  %37 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %38 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %37, i32 0, i32 0
  %39 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %40 = load i32, i32* %i, align 4
  call void %36(%class.b2Shape* %32, %struct.b2Transform* %38, %struct.b2Transform* dereferenceable(16) %39, i32 %40)
  %41 = load %class.b2BroadPhase*, %class.b2BroadPhase** %2, align 8
  %42 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %43 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %42, i32 0, i32 0
  %44 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %45 = bitcast %struct.b2FixtureProxy* %44 to i8*
  %46 = call i32 @_ZN12b2BroadPhase11CreateProxyERK6b2AABBPv(%class.b2BroadPhase* %41, %struct.b2Transform* dereferenceable(16) %43, i8* %45)
  %47 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %48 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %47, i32 0, i32 3
  store i32 %46, i32* %48, align 4
  %49 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %50 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %49, i32 0, i32 1
  store %class.b2Fixture* %4, %class.b2Fixture** %50, align 8
  %51 = load i32, i32* %i, align 4
  %52 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %53 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %52, i32 0, i32 2
  store i32 %51, i32* %53, align 8
  br label %54

; <label>:54                                      ; preds = %25
  %55 = load i32, i32* %i, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %i, align 4
  br label %20

; <label>:57                                      ; preds = %20
  ret void
}

; Function Attrs: uwtable
define i32 @_ZN12b2BroadPhase11CreateProxyERK6b2AABBPv(%class.b2BroadPhase* %this, %struct.b2Transform* dereferenceable(16) %aabb, i8* %userData) #0 align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca i8*, align 8
  %proxyId = alloca i32, align 4
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  store i8* %userData, i8** %3, align 8
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  %6 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = call i32 @_ZN13b2DynamicTree11CreateProxyERK6b2AABBPv(%class.b2DynamicTree* %5, %struct.b2Transform* dereferenceable(16) %6, i8* %7)
  store i32 %8, i32* %proxyId, align 4
  %9 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = load i32, i32* %proxyId, align 4
  call void @_ZN12b2BroadPhase10BufferMoveEi(%class.b2BroadPhase* %4, i32 %12)
  %13 = load i32, i32* %proxyId, align 4
  ret i32 %13
}

; Function Attrs: uwtable
define i32 @_ZN13b2DynamicTree11CreateProxyERK6b2AABBPv(%class.b2DynamicTree* %this, %struct.b2Transform* dereferenceable(16) %aabb, i8* %userData) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca i8*, align 8
  %proxyId = alloca i32, align 4
  %r = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %2, align 8
  store i8* %userData, i8** %3, align 8
  %6 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %7 = call i32 @_ZN13b2DynamicTree12AllocateNodeEv(%class.b2DynamicTree* %6)
  store i32 %7, i32* %proxyId, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %r, float 0x3FB99999A0000000, float 0x3FB99999A0000000)
  %8 = load i32, i32* %proxyId, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %6, i32 0, i32 2
  %11 = load %struct.b2TreeNode*, %struct.b2TreeNode** %10, align 8
  %12 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %11, i64 %9
  %13 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %12, i32 0, i32 0
  %14 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %13, i32 0, i32 0
  %15 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %16 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %15, i32 0, i32 0
  %17 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %16, %struct.b2Vec2* dereferenceable(8) %r)
  %18 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 4
  %19 = bitcast %struct.b2Vec2* %14 to i8*
  %20 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false)
  %21 = load i32, i32* %proxyId, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %6, i32 0, i32 2
  %24 = load %struct.b2TreeNode*, %struct.b2TreeNode** %23, align 8
  %25 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %24, i64 %22
  %26 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %25, i32 0, i32 0
  %27 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %26, i32 0, i32 1
  %28 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %29 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %28, i32 0, i32 1
  %30 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %29, %struct.b2Vec2* dereferenceable(8) %r)
  %31 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 4
  %32 = bitcast %struct.b2Vec2* %27 to i8*
  %33 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %proxyId, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %6, i32 0, i32 2
  %38 = load %struct.b2TreeNode*, %struct.b2TreeNode** %37, align 8
  %39 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %38, i64 %36
  %40 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %39, i32 0, i32 1
  store i8* %34, i8** %40, align 8
  %41 = load i32, i32* %proxyId, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %6, i32 0, i32 2
  %44 = load %struct.b2TreeNode*, %struct.b2TreeNode** %43, align 8
  %45 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %44, i64 %42
  %46 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %45, i32 0, i32 5
  store i32 0, i32* %46, align 4
  %47 = load i32, i32* %proxyId, align 4
  call void @_ZN13b2DynamicTree10InsertLeafEi(%class.b2DynamicTree* %6, i32 %47)
  %48 = load i32, i32* %proxyId, align 4
  ret i32 %48
}

; Function Attrs: uwtable
define %class.b2Fixture* @_ZN6b2Body13CreateFixtureEPK7b2Shapef(%class.b2Body* %this, %class.b2Shape* %shape, float %density) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %class.b2Shape*, align 8
  %3 = alloca float, align 4
  %def = alloca %struct.b2FixtureDef, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store %class.b2Shape* %shape, %class.b2Shape** %2, align 8
  store float %density, float* %3, align 4
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  call void @_ZN12b2FixtureDefC2Ev(%struct.b2FixtureDef* %def)
  %5 = load %class.b2Shape*, %class.b2Shape** %2, align 8
  %6 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %def, i32 0, i32 0
  store %class.b2Shape* %5, %class.b2Shape** %6, align 8
  %7 = load float, float* %3, align 4
  %8 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %def, i32 0, i32 4
  store float %7, float* %8, align 8
  %9 = call %class.b2Fixture* @_ZN6b2Body13CreateFixtureEPK12b2FixtureDef(%class.b2Body* %4, %struct.b2FixtureDef* %def)
  ret %class.b2Fixture* %9
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN12b2FixtureDefC2Ev(%struct.b2FixtureDef* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.b2FixtureDef*, align 8
  store %struct.b2FixtureDef* %this, %struct.b2FixtureDef** %1, align 8
  %2 = load %struct.b2FixtureDef*, %struct.b2FixtureDef** %1, align 8
  %3 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 7
  call void @_ZN8b2FilterC2Ev(%struct.b2Filter* %3)
  %4 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 0
  store %class.b2Shape* null, %class.b2Shape** %4, align 8
  %5 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 1
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 2
  store float 0x3FC99999A0000000, float* %6, align 8
  %7 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 3
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 4
  store float 0.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %2, i32 0, i32 5
  store i8 0, i8* %9, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body14DestroyFixtureEP9b2Fixture(%class.b2Body* %this, %class.b2Fixture* %fixture) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %node = alloca %class.b2Fixture**, align 8
  %found = alloca i8, align 1
  %edge = alloca %struct.b2ContactEdge*, align 8
  %c = alloca %class.b2Contact*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %allocator = alloca %class.b2BlockAllocator*, align 8
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store %class.b2Fixture* %fixture, %class.b2Fixture** %2, align 8
  %3 = load %class.b2Body*, %class.b2Body** %1, align 8
  %4 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %5 = icmp eq %class.b2Fixture* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %124

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %9 = load %class.b2World*, %class.b2World** %8, align 8
  %10 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %9)
  %11 = zext i1 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %7
  br label %16

; <label>:14                                      ; preds = %7
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.210, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 221, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body14DestroyFixtureEP9b2Fixture, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16                                      ; preds = %15, %13
  %17 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %18 = load %class.b2World*, %class.b2World** %17, align 8
  %19 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %18)
  %20 = zext i1 %19 to i32
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %16
  br label %124

; <label>:23                                      ; preds = %16
  %24 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %25 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %24, i32 0, i32 2
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  %27 = icmp eq %class.b2Body* %26, %3
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %23
  br label %31

; <label>:29                                      ; preds = %23
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.213, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 227, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body14DestroyFixtureEP9b2Fixture, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %31

; <label>:31                                      ; preds = %30, %28
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 13
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %31
  br label %38

; <label>:36                                      ; preds = %31
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.214, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 230, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body14DestroyFixtureEP9b2Fixture, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %38

; <label>:38                                      ; preds = %37, %35
  %39 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 12
  store %class.b2Fixture** %39, %class.b2Fixture*** %node, align 8
  store i8 0, i8* %found, align 1
  br label %40

; <label>:40                                      ; preds = %54, %38
  %41 = load %class.b2Fixture**, %class.b2Fixture*** %node, align 8
  %42 = load %class.b2Fixture*, %class.b2Fixture** %41, align 8
  %43 = icmp ne %class.b2Fixture* %42, null
  br i1 %43, label %44, label %58

; <label>:44                                      ; preds = %40
  %45 = load %class.b2Fixture**, %class.b2Fixture*** %node, align 8
  %46 = load %class.b2Fixture*, %class.b2Fixture** %45, align 8
  %47 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %48 = icmp eq %class.b2Fixture* %46, %47
  br i1 %48, label %49, label %54

; <label>:49                                      ; preds = %44
  %50 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %51 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %50, i32 0, i32 1
  %52 = load %class.b2Fixture*, %class.b2Fixture** %51, align 8
  %53 = load %class.b2Fixture**, %class.b2Fixture*** %node, align 8
  store %class.b2Fixture* %52, %class.b2Fixture** %53, align 8
  store i8 1, i8* %found, align 1
  br label %58

; <label>:54                                      ; preds = %44
  %55 = load %class.b2Fixture**, %class.b2Fixture*** %node, align 8
  %56 = load %class.b2Fixture*, %class.b2Fixture** %55, align 8
  %57 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %56, i32 0, i32 1
  store %class.b2Fixture** %57, %class.b2Fixture*** %node, align 8
  br label %40

; <label>:58                                      ; preds = %49, %40
  %59 = load i8, i8* %found, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %58
  br label %64

; <label>:62                                      ; preds = %58
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.215, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 246, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body14DestroyFixtureEP9b2Fixture, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64                                      ; preds = %63, %61
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 15
  %66 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %65, align 8
  store %struct.b2ContactEdge* %66, %struct.b2ContactEdge** %edge, align 8
  br label %67

; <label>:67                                      ; preds = %93, %64
  %68 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %69 = icmp ne %struct.b2ContactEdge* %68, null
  br i1 %69, label %70, label %94

; <label>:70                                      ; preds = %67
  %71 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %72 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %71, i32 0, i32 1
  %73 = load %class.b2Contact*, %class.b2Contact** %72, align 8
  store %class.b2Contact* %73, %class.b2Contact** %c, align 8
  %74 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %75 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %74, i32 0, i32 3
  %76 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %75, align 8
  store %struct.b2ContactEdge* %76, %struct.b2ContactEdge** %edge, align 8
  %77 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %78 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %77)
  store %class.b2Fixture* %78, %class.b2Fixture** %fixtureA, align 8
  %79 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %80 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %79)
  store %class.b2Fixture* %80, %class.b2Fixture** %fixtureB, align 8
  %81 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %82 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %83 = icmp eq %class.b2Fixture* %81, %82
  br i1 %83, label %88, label %84

; <label>:84                                      ; preds = %70
  %85 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %86 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %87 = icmp eq %class.b2Fixture* %85, %86
  br i1 %87, label %88, label %93

; <label>:88                                      ; preds = %84, %70
  %89 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %90 = load %class.b2World*, %class.b2World** %89, align 8
  %91 = getelementptr inbounds %class.b2World, %class.b2World* %90, i32 0, i32 3
  %92 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  call void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %91, %class.b2Contact* %92)
  br label %93

; <label>:93                                      ; preds = %88, %84
  br label %67

; <label>:94                                      ; preds = %67
  %95 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %96 = load %class.b2World*, %class.b2World** %95, align 8
  %97 = getelementptr inbounds %class.b2World, %class.b2World* %96, i32 0, i32 0
  store %class.b2BlockAllocator* %97, %class.b2BlockAllocator** %allocator, align 8
  %98 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 1
  %99 = load i16, i16* %98, align 4
  %100 = zext i16 %99 to i32
  %101 = and i32 %100, 32
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %110

; <label>:103                                     ; preds = %94
  %104 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 9
  %105 = load %class.b2World*, %class.b2World** %104, align 8
  %106 = getelementptr inbounds %class.b2World, %class.b2World* %105, i32 0, i32 3
  %107 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %106, i32 0, i32 0
  store %class.b2BroadPhase* %107, %class.b2BroadPhase** %broadPhase, align 8
  %108 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %109 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  call void @_ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase(%class.b2Fixture* %108, %class.b2BroadPhase* %109)
  br label %110

; <label>:110                                     ; preds = %103, %94
  %111 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %112 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %111, i32 0, i32 2
  store %class.b2Body* null, %class.b2Body** %112, align 8
  %113 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %114 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %113, i32 0, i32 1
  store %class.b2Fixture* null, %class.b2Fixture** %114, align 8
  %115 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %116 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %allocator, align 8
  call void @_ZN9b2Fixture7DestroyEP16b2BlockAllocator(%class.b2Fixture* %115, %class.b2BlockAllocator* %116)
  %117 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %118 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %allocator, align 8
  %119 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %120 = bitcast %class.b2Fixture* %119 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %118, i8* %120, i32 72)
  %121 = getelementptr inbounds %class.b2Body, %class.b2Body* %3, i32 0, i32 13
  %122 = load i32, i32* %121, align 8
  %123 = add nsw i32 %122, -1
  store i32 %123, i32* %121, align 8
  call void @_ZN6b2Body13ResetMassDataEv(%class.b2Body* %3)
  br label %124

; <label>:124                                     ; preds = %110, %22, %6
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase(%class.b2Fixture* %this, %class.b2BroadPhase* %broadPhase) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %class.b2BroadPhase*, align 8
  %i = alloca i32, align 4
  %proxy = alloca %struct.b2FixtureProxy*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %class.b2BroadPhase* %broadPhase, %class.b2BroadPhase** %2, align 8
  %3 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %21, %0
  %5 = load i32, i32* %i, align 4
  %6 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %24

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 6
  %11 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %10, align 8
  %12 = load i32, i32* %i, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %11, i64 %13
  store %struct.b2FixtureProxy* %14, %struct.b2FixtureProxy** %proxy, align 8
  %15 = load %class.b2BroadPhase*, %class.b2BroadPhase** %2, align 8
  %16 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %17 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  call void @_ZN12b2BroadPhase12DestroyProxyEi(%class.b2BroadPhase* %15, i32 %18)
  %19 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %20 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %19, i32 0, i32 3
  store i32 -1, i32* %20, align 4
  br label %21

; <label>:21                                      ; preds = %9
  %22 = load i32, i32* %i, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %i, align 4
  br label %4

; <label>:24                                      ; preds = %4
  %25 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 7
  store i32 0, i32* %25, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2BroadPhase12DestroyProxyEi(%class.b2BroadPhase* %this, i32 %proxyId) #0 align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = load i32, i32* %2, align 4
  call void @_ZN12b2BroadPhase12UnBufferMoveEi(%class.b2BroadPhase* %3, i32 %4)
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %9 = load i32, i32* %2, align 4
  call void @_ZN13b2DynamicTree12DestroyProxyEi(%class.b2DynamicTree* %8, i32 %9)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12b2BroadPhase12UnBufferMoveEi(%class.b2BroadPhase* %this, i32 %proxyId) #2 align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %25, %0
  %5 = load i32, i32* %i, align 4
  %6 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %28

; <label>:9                                       ; preds = %4
  %10 = load i32, i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %11
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %2, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %24

; <label>:18                                      ; preds = %9
  %19 = load i32, i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %20
  store i32 -1, i32* %23, align 4
  br label %24

; <label>:24                                      ; preds = %18, %9
  br label %25

; <label>:25                                      ; preds = %24
  %26 = load i32, i32* %i, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %i, align 4
  br label %4

; <label>:28                                      ; preds = %4
  ret void
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTree12DestroyProxyEi(%class.b2DynamicTree* %this, i32 %proxyId) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp sle i32 0, %4
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  br label %14

; <label>:12                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.442, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 123, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree12DestroyProxyEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %18 = load %struct.b2TreeNode*, %struct.b2TreeNode** %17, align 8
  %19 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %18, i64 %16
  %20 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %19)
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %14
  br label %24

; <label>:22                                      ; preds = %14
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.443, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 124, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN13b2DynamicTree12DestroyProxyEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %24

; <label>:24                                      ; preds = %23, %21
  %25 = load i32, i32* %2, align 4
  call void @_ZN13b2DynamicTree10RemoveLeafEi(%class.b2DynamicTree* %3, i32 %25)
  %26 = load i32, i32* %2, align 4
  call void @_ZN13b2DynamicTree8FreeNodeEi(%class.b2DynamicTree* %3, i32 %26)
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture7DestroyEP16b2BlockAllocator(%class.b2Fixture* %this, %class.b2BlockAllocator* %allocator) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %class.b2BlockAllocator*, align 8
  %childCount = alloca i32, align 4
  %s = alloca %class.b2CircleShape*, align 8
  %s1 = alloca %class.b2EdgeShape*, align 8
  %s2 = alloca %class.b2PolygonShape*, align 8
  %s3 = alloca %class.b2ChainShape*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %class.b2BlockAllocator* %allocator, %class.b2BlockAllocator** %2, align 8
  %3 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %4 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.233, i32 0, i32 0), i32 72, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__PRETTY_FUNCTION__._ZN9b2Fixture7DestroyEP16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %12 = load %class.b2Shape*, %class.b2Shape** %11, align 8
  %13 = bitcast %class.b2Shape* %12 to i32 (%class.b2Shape*)***
  %14 = load i32 (%class.b2Shape*)**, i32 (%class.b2Shape*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.b2Shape*)*, i32 (%class.b2Shape*)** %14, i64 3
  %16 = load i32 (%class.b2Shape*)*, i32 (%class.b2Shape*)** %15, align 8
  %17 = call i32 %16(%class.b2Shape* %12)
  store i32 %17, i32* %childCount, align 4
  %18 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %19 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 6
  %20 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %19, align 8
  %21 = bitcast %struct.b2FixtureProxy* %20 to i8*
  %22 = load i32, i32* %childCount, align 4
  %23 = sext i32 %22 to i64
  %24 = mul i64 %23, 32
  %25 = trunc i64 %24 to i32
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %18, i8* %21, i32 %25)
  %26 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 6
  store %struct.b2FixtureProxy* null, %struct.b2FixtureProxy** %26, align 8
  %27 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %28 = load %class.b2Shape*, %class.b2Shape** %27, align 8
  %29 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %79 [
    i32 0, label %31
    i32 1, label %43
    i32 2, label %55
    i32 3, label %67
  ]

; <label>:31                                      ; preds = %10
  %32 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %33 = load %class.b2Shape*, %class.b2Shape** %32, align 8
  %34 = bitcast %class.b2Shape* %33 to %class.b2CircleShape*
  store %class.b2CircleShape* %34, %class.b2CircleShape** %s, align 8
  %35 = load %class.b2CircleShape*, %class.b2CircleShape** %s, align 8
  %36 = bitcast %class.b2CircleShape* %35 to void (%class.b2CircleShape*)***
  %37 = load void (%class.b2CircleShape*)**, void (%class.b2CircleShape*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.b2CircleShape*)*, void (%class.b2CircleShape*)** %37, i64 0
  %39 = load void (%class.b2CircleShape*)*, void (%class.b2CircleShape*)** %38, align 8
  call void %39(%class.b2CircleShape* %35)
  %40 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %41 = load %class.b2CircleShape*, %class.b2CircleShape** %s, align 8
  %42 = bitcast %class.b2CircleShape* %41 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %40, i8* %42, i32 24)
  br label %80

; <label>:43                                      ; preds = %10
  %44 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %45 = load %class.b2Shape*, %class.b2Shape** %44, align 8
  %46 = bitcast %class.b2Shape* %45 to %class.b2EdgeShape*
  store %class.b2EdgeShape* %46, %class.b2EdgeShape** %s1, align 8
  %47 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %48 = bitcast %class.b2EdgeShape* %47 to void (%class.b2EdgeShape*)***
  %49 = load void (%class.b2EdgeShape*)**, void (%class.b2EdgeShape*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.b2EdgeShape*)*, void (%class.b2EdgeShape*)** %49, i64 0
  %51 = load void (%class.b2EdgeShape*)*, void (%class.b2EdgeShape*)** %50, align 8
  call void %51(%class.b2EdgeShape* %47)
  %52 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %53 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %54 = bitcast %class.b2EdgeShape* %53 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %52, i8* %54, i32 56)
  br label %80

; <label>:55                                      ; preds = %10
  %56 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %57 = load %class.b2Shape*, %class.b2Shape** %56, align 8
  %58 = bitcast %class.b2Shape* %57 to %class.b2PolygonShape*
  store %class.b2PolygonShape* %58, %class.b2PolygonShape** %s2, align 8
  %59 = load %class.b2PolygonShape*, %class.b2PolygonShape** %s2, align 8
  %60 = bitcast %class.b2PolygonShape* %59 to void (%class.b2PolygonShape*)***
  %61 = load void (%class.b2PolygonShape*)**, void (%class.b2PolygonShape*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.b2PolygonShape*)*, void (%class.b2PolygonShape*)** %61, i64 0
  %63 = load void (%class.b2PolygonShape*)*, void (%class.b2PolygonShape*)** %62, align 8
  call void %63(%class.b2PolygonShape* %59)
  %64 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %65 = load %class.b2PolygonShape*, %class.b2PolygonShape** %s2, align 8
  %66 = bitcast %class.b2PolygonShape* %65 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %64, i8* %66, i32 160)
  br label %80

; <label>:67                                      ; preds = %10
  %68 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %69 = load %class.b2Shape*, %class.b2Shape** %68, align 8
  %70 = bitcast %class.b2Shape* %69 to %class.b2ChainShape*
  store %class.b2ChainShape* %70, %class.b2ChainShape** %s3, align 8
  %71 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %72 = bitcast %class.b2ChainShape* %71 to void (%class.b2ChainShape*)***
  %73 = load void (%class.b2ChainShape*)**, void (%class.b2ChainShape*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.b2ChainShape*)*, void (%class.b2ChainShape*)** %73, i64 0
  %75 = load void (%class.b2ChainShape*)*, void (%class.b2ChainShape*)** %74, align 8
  call void %75(%class.b2ChainShape* %71)
  %76 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %2, align 8
  %77 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %78 = bitcast %class.b2ChainShape* %77 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %76, i8* %78, i32 48)
  br label %80

; <label>:79                                      ; preds = %10
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.234, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.233, i32 0, i32 0), i32 115, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__PRETTY_FUNCTION__._ZN9b2Fixture7DestroyEP16b2BlockAllocator, i32 0, i32 0)) #15
  unreachable

; <label>:80                                      ; preds = %67, %55, %43, %31
  %81 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  store %class.b2Shape* null, %class.b2Shape** %81, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body11SetMassDataEPK10b2MassData(%class.b2Body* %this, %struct.b2MassData* %massData) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %struct.b2MassData*, align 8
  %oldCenter = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store %struct.b2MassData* %massData, %struct.b2MassData** %2, align 8
  %6 = load %class.b2Body*, %class.b2Body** %1, align 8
  %7 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 9
  %8 = load %class.b2World*, %class.b2World** %7, align 8
  %9 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %8)
  %10 = zext i1 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %15

; <label>:13                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.210, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 360, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body11SetMassDataEPK10b2MassData, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 9
  %17 = load %class.b2World*, %class.b2World** %16, align 8
  %18 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %17)
  %19 = zext i1 %18 to i32
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %15
  br label %113

; <label>:22                                      ; preds = %15
  %23 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 2
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %22
  br label %113

; <label>:27                                      ; preds = %22
  %28 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 17
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  store float 0.000000e+00, float* %29, align 8
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 19
  store float 0.000000e+00, float* %30, align 4
  %31 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %32 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %31, i32 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  store float %33, float* %34, align 8
  %35 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %36 = load float, float* %35, align 8
  %37 = fcmp ole float %36, 0.000000e+00
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %27
  %39 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  store float 1.000000e+00, float* %39, align 8
  br label %40

; <label>:40                                      ; preds = %38, %27
  %41 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %42 = load float, float* %41, align 8
  %43 = fdiv float 1.000000e+00, %42
  %44 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 17
  store float %43, float* %44, align 4
  %45 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %46 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %45, i32 0, i32 2
  %47 = load float, float* %46, align 4
  %48 = fcmp ogt float %47, 0.000000e+00
  br i1 %48, label %49, label %80

; <label>:49                                      ; preds = %40
  %50 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 1
  %51 = load i16, i16* %50, align 4
  %52 = zext i16 %51 to i32
  %53 = and i32 %52, 16
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %80

; <label>:55                                      ; preds = %49
  %56 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %57 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %56, i32 0, i32 2
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 16
  %60 = load float, float* %59, align 8
  %61 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %62 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %61, i32 0, i32 1
  %63 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %64 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %63, i32 0, i32 1
  %65 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %62, %struct.b2Vec2* dereferenceable(8) %64)
  %66 = fmul float %60, %65
  %67 = fsub float %58, %66
  %68 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  store float %67, float* %68, align 8
  %69 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %70 = load float, float* %69, align 8
  %71 = fcmp ogt float %70, 0.000000e+00
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %55
  br label %75

; <label>:73                                      ; preds = %55
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.212, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 386, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body11SetMassDataEPK10b2MassData, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %75

; <label>:75                                      ; preds = %74, %72
  %76 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 18
  %77 = load float, float* %76, align 8
  %78 = fdiv float 1.000000e+00, %77
  %79 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 19
  store float %78, float* %79, align 4
  br label %80

; <label>:80                                      ; preds = %75, %49, %40
  %81 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %82 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %81, i32 0, i32 2
  %83 = bitcast %struct.b2Vec2* %oldCenter to i8*
  %84 = bitcast %struct.b2Vec2* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false)
  %85 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %86 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %85, i32 0, i32 0
  %87 = load %struct.b2MassData*, %struct.b2MassData** %2, align 8
  %88 = getelementptr inbounds %struct.b2MassData, %struct.b2MassData* %87, i32 0, i32 1
  %89 = bitcast %struct.b2Vec2* %86 to i8*
  %90 = bitcast %struct.b2Vec2* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 4, i1 false)
  %91 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %92 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %91, i32 0, i32 1
  %93 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %94 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %93, i32 0, i32 2
  %95 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 3
  %96 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %97 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %96, i32 0, i32 0
  %98 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %95, %struct.b2Vec2* dereferenceable(8) %97)
  %99 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %98, <2 x float>* %99, align 4
  %100 = bitcast %struct.b2Vec2* %94 to i8*
  %101 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 4, i1 false)
  %102 = bitcast %struct.b2Vec2* %92 to i8*
  %103 = bitcast %struct.b2Vec2* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 8, i32 4, i1 false)
  %104 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 5
  %105 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 6
  %106 = load float, float* %105, align 8
  %107 = getelementptr inbounds %class.b2Body, %class.b2Body* %6, i32 0, i32 4
  %108 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %107, i32 0, i32 2
  %109 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %108, %struct.b2Vec2* dereferenceable(8) %oldCenter)
  %110 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %109, <2 x float>* %110, align 4
  %111 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float %106, %struct.b2Vec2* dereferenceable(8) %5)
  %112 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %111, <2 x float>* %112, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %104, %struct.b2Vec2* dereferenceable(8) %4)
  br label %113

; <label>:113                                     ; preds = %80, %26, %21
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK6b2Body13ShouldCollideEPKS_(%class.b2Body* %this, %class.b2Body* %other) #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2Body*, align 8
  %3 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %2, align 8
  store %class.b2Body* %other, %class.b2Body** %3, align 8
  %4 = load %class.b2Body*, %class.b2Body** %2, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %14

; <label>:8                                       ; preds = %0
  %9 = load %class.b2Body*, %class.b2Body** %3, align 8
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %8
  store i1 false, i1* %1, align 1
  br label %17

; <label>:14                                      ; preds = %8, %0
  %15 = load %class.b2Body*, %class.b2Body** %3, align 8
  %16 = call zeroext i1 @_ZNK6b2Body22ShouldCollideConnectedEPKS_(%class.b2Body* %4, %class.b2Body* %15)
  store i1 %16, i1* %1, align 1
  br label %17

; <label>:17                                      ; preds = %14, %13
  %18 = load i1, i1* %1, align 1
  ret i1 %18
}

; Function Attrs: uwtable
define void @_ZN6b2Body12SetTransformERK6b2Vec2f(%class.b2Body* %this, %struct.b2Vec2* dereferenceable(8) %position, float %angle) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  %f = alloca %class.b2Fixture*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store %struct.b2Vec2* %position, %struct.b2Vec2** %2, align 8
  store float %angle, float* %3, align 4
  %5 = load %class.b2Body*, %class.b2Body** %1, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 9
  %7 = load %class.b2World*, %class.b2World** %6, align 8
  %8 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %7)
  %9 = zext i1 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  br label %14

; <label>:12                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.210, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 429, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body12SetTransformERK6b2Vec2f, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 9
  %16 = load %class.b2World*, %class.b2World** %15, align 8
  %17 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %16)
  %18 = zext i1 %17 to i32
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %14
  br label %69

; <label>:21                                      ; preds = %14
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %23 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %22, i32 0, i32 1
  %24 = load float, float* %3, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %23, float %24)
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %26 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %25, i32 0, i32 0
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  %29 = bitcast %struct.b2Vec2* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %31 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %30, i32 0, i32 2
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %34 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %33, i32 0, i32 0
  %35 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %32, %struct.b2Vec2* dereferenceable(8) %34)
  %36 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %35, <2 x float>* %36, align 4
  %37 = bitcast %struct.b2Vec2* %31 to i8*
  %38 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = load float, float* %3, align 4
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %40, i32 0, i32 4
  store float %39, float* %41, align 4
  %42 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %43 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %42, i32 0, i32 1
  %44 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %45 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %44, i32 0, i32 2
  %46 = bitcast %struct.b2Vec2* %43 to i8*
  %47 = bitcast %struct.b2Vec2* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false)
  %48 = load float, float* %3, align 4
  %49 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %50 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %49, i32 0, i32 3
  store float %48, float* %50, align 4
  %51 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 9
  %52 = load %class.b2World*, %class.b2World** %51, align 8
  %53 = getelementptr inbounds %class.b2World, %class.b2World* %52, i32 0, i32 3
  %54 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %53, i32 0, i32 0
  store %class.b2BroadPhase* %54, %class.b2BroadPhase** %broadPhase, align 8
  %55 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 12
  %56 = load %class.b2Fixture*, %class.b2Fixture** %55, align 8
  store %class.b2Fixture* %56, %class.b2Fixture** %f, align 8
  br label %57

; <label>:57                                      ; preds = %65, %21
  %58 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %59 = icmp ne %class.b2Fixture* %58, null
  br i1 %59, label %60, label %69

; <label>:60                                      ; preds = %57
  %61 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %62 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  %63 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %64 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  call void @_ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_(%class.b2Fixture* %61, %class.b2BroadPhase* %62, %struct.b2Transform* dereferenceable(16) %63, %struct.b2Transform* dereferenceable(16) %64)
  br label %65

; <label>:65                                      ; preds = %60
  %66 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %67 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %66, i32 0, i32 1
  %68 = load %class.b2Fixture*, %class.b2Fixture** %67, align 8
  store %class.b2Fixture* %68, %class.b2Fixture** %f, align 8
  br label %57

; <label>:69                                      ; preds = %57, %20
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body9SetActiveEb(%class.b2Body* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca i8, align 1
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  %f = alloca %class.b2Fixture*, align 8
  %broadPhase1 = alloca %class.b2BroadPhase*, align 8
  %f2 = alloca %class.b2Fixture*, align 8
  %ce = alloca %struct.b2ContactEdge*, align 8
  %ce0 = alloca %struct.b2ContactEdge*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %6 = load %class.b2World*, %class.b2World** %5, align 8
  %7 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %6)
  %8 = zext i1 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %0
  br label %13

; <label>:11                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.210, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.204, i32 0, i32 0), i32 466, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__._ZN6b2Body9SetActiveEb, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %13

; <label>:13                                      ; preds = %12, %10
  %14 = load i8, i8* %2, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i32
  %17 = call zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %4)
  %18 = zext i1 %17 to i32
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %13
  br label %89

; <label>:21                                      ; preds = %13
  %22 = load i8, i8* %2, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %48

; <label>:24                                      ; preds = %21
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %26 = load i16, i16* %25, align 4
  %27 = zext i16 %26 to i32
  %28 = or i32 %27, 32
  %29 = trunc i32 %28 to i16
  store i16 %29, i16* %25, align 4
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %31 = load %class.b2World*, %class.b2World** %30, align 8
  %32 = getelementptr inbounds %class.b2World, %class.b2World* %31, i32 0, i32 3
  %33 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %32, i32 0, i32 0
  store %class.b2BroadPhase* %33, %class.b2BroadPhase** %broadPhase, align 8
  %34 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 12
  %35 = load %class.b2Fixture*, %class.b2Fixture** %34, align 8
  store %class.b2Fixture* %35, %class.b2Fixture** %f, align 8
  br label %36

; <label>:36                                      ; preds = %43, %24
  %37 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %38 = icmp ne %class.b2Fixture* %37, null
  br i1 %38, label %39, label %47

; <label>:39                                      ; preds = %36
  %40 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %41 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  %42 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  call void @_ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform(%class.b2Fixture* %40, %class.b2BroadPhase* %41, %struct.b2Transform* dereferenceable(16) %42)
  br label %43

; <label>:43                                      ; preds = %39
  %44 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %45 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %44, i32 0, i32 1
  %46 = load %class.b2Fixture*, %class.b2Fixture** %45, align 8
  store %class.b2Fixture* %46, %class.b2Fixture** %f, align 8
  br label %36

; <label>:47                                      ; preds = %36
  br label %89

; <label>:48                                      ; preds = %21
  %49 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %50 = load i16, i16* %49, align 4
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, -33
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %49, align 4
  %54 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %55 = load %class.b2World*, %class.b2World** %54, align 8
  %56 = getelementptr inbounds %class.b2World, %class.b2World* %55, i32 0, i32 3
  %57 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %56, i32 0, i32 0
  store %class.b2BroadPhase* %57, %class.b2BroadPhase** %broadPhase1, align 8
  %58 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 12
  %59 = load %class.b2Fixture*, %class.b2Fixture** %58, align 8
  store %class.b2Fixture* %59, %class.b2Fixture** %f2, align 8
  br label %60

; <label>:60                                      ; preds = %66, %48
  %61 = load %class.b2Fixture*, %class.b2Fixture** %f2, align 8
  %62 = icmp ne %class.b2Fixture* %61, null
  br i1 %62, label %63, label %70

; <label>:63                                      ; preds = %60
  %64 = load %class.b2Fixture*, %class.b2Fixture** %f2, align 8
  %65 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase1, align 8
  call void @_ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase(%class.b2Fixture* %64, %class.b2BroadPhase* %65)
  br label %66

; <label>:66                                      ; preds = %63
  %67 = load %class.b2Fixture*, %class.b2Fixture** %f2, align 8
  %68 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %67, i32 0, i32 1
  %69 = load %class.b2Fixture*, %class.b2Fixture** %68, align 8
  store %class.b2Fixture* %69, %class.b2Fixture** %f2, align 8
  br label %60

; <label>:70                                      ; preds = %60
  %71 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 15
  %72 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %71, align 8
  store %struct.b2ContactEdge* %72, %struct.b2ContactEdge** %ce, align 8
  br label %73

; <label>:73                                      ; preds = %76, %70
  %74 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %75 = icmp ne %struct.b2ContactEdge* %74, null
  br i1 %75, label %76, label %87

; <label>:76                                      ; preds = %73
  %77 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  store %struct.b2ContactEdge* %77, %struct.b2ContactEdge** %ce0, align 8
  %78 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %79 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %78, i32 0, i32 3
  %80 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %79, align 8
  store %struct.b2ContactEdge* %80, %struct.b2ContactEdge** %ce, align 8
  %81 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 9
  %82 = load %class.b2World*, %class.b2World** %81, align 8
  %83 = getelementptr inbounds %class.b2World, %class.b2World* %82, i32 0, i32 3
  %84 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce0, align 8
  %85 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %84, i32 0, i32 1
  %86 = load %class.b2Contact*, %class.b2Contact** %85, align 8
  call void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %83, %class.b2Contact* %86)
  br label %73

; <label>:87                                      ; preds = %73
  %88 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 15
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %88, align 8
  br label %89

; <label>:89                                      ; preds = %87, %47, %20
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body16SetFixedRotationEb(%class.b2Body* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca i8, align 1
  %status = alloca i8, align 1
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %6 = load i16, i16* %5, align 4
  %7 = zext i16 %6 to i32
  %8 = and i32 %7, 16
  %9 = icmp eq i32 %8, 16
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %status, align 1
  %11 = load i8, i8* %status, align 1
  %12 = trunc i8 %11 to i1
  %13 = zext i1 %12 to i32
  %14 = load i8, i8* %2, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i32
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %0
  br label %36

; <label>:19                                      ; preds = %0
  %20 = load i8, i8* %2, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %28

; <label>:22                                      ; preds = %19
  %23 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %24 = load i16, i16* %23, align 4
  %25 = zext i16 %24 to i32
  %26 = or i32 %25, 16
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %23, align 4
  br label %34

; <label>:28                                      ; preds = %19
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 1
  %30 = load i16, i16* %29, align 4
  %31 = zext i16 %30 to i32
  %32 = and i32 %31, -17
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %29, align 4
  br label %34

; <label>:34                                      ; preds = %28, %22
  %35 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 6
  store float 0.000000e+00, float* %35, align 8
  call void @_ZN6b2Body13ResetMassDataEv(%class.b2Body* %4)
  br label %36

; <label>:36                                      ; preds = %34, %18
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Body4DumpEv(%class.b2Body* %this) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %bodyIndex = alloca i32, align 4
  %f = alloca %class.b2Fixture*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  store i32 %4, i32* %bodyIndex, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.216, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.217, i32 0, i32 0))
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15.218, i32 0, i32 0), i32 %6)
  %7 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 3
  %8 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fpext float %10 to double
  %12 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 3
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %12, i32 0, i32 0
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fpext float %15 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16.219, i32 0, i32 0), double %11, double %16)
  %17 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 4
  %18 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %17, i32 0, i32 4
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), double %20)
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 5
  %22 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %21, i32 0, i32 0
  %23 = load float, float* %22, align 8
  %24 = fpext float %23 to double
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 5
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i32 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = fpext float %27 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i32 0, i32 0), double %24, double %28)
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 6
  %30 = load float, float* %29, align 8
  %31 = fpext float %30 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i32 0, i32 0), double %31)
  %32 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 20
  %33 = load float, float* %32, align 8
  %34 = fpext float %33 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i32 0, i32 0), double %34)
  %35 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 21
  %36 = load float, float* %35, align 4
  %37 = fpext float %36 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0), double %37)
  %38 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %39 = load i16, i16* %38, align 4
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i32 0, i32 0), i32 %41)
  %42 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %43 = load i16, i16* %42, align 4
  %44 = zext i16 %43 to i32
  %45 = and i32 %44, 2
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23.220, i32 0, i32 0), i32 %45)
  %46 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %47 = load i16, i16* %46, align 4
  %48 = zext i16 %47 to i32
  %49 = and i32 %48, 16
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i32 0, i32 0), i32 %49)
  %50 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %51 = load i16, i16* %50, align 4
  %52 = zext i16 %51 to i32
  %53 = and i32 %52, 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i32 0, i32 0), i32 %53)
  %54 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %55 = load i16, i16* %54, align 4
  %56 = zext i16 %55 to i32
  %57 = and i32 %56, 32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i32 0, i32 0), i32 %57)
  %58 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 22
  %59 = load float, float* %58, align 8
  %60 = fpext float %59 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27.221, i32 0, i32 0), double %60)
  %61 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.28, i32 0, i32 0), i32 %62)
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0))
  %63 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 12
  %64 = load %class.b2Fixture*, %class.b2Fixture** %63, align 8
  store %class.b2Fixture* %64, %class.b2Fixture** %f, align 8
  br label %65

; <label>:65                                      ; preds = %71, %0
  %66 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %67 = icmp ne %class.b2Fixture* %66, null
  br i1 %67, label %68, label %75

; <label>:68                                      ; preds = %65
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0))
  %69 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %70 = load i32, i32* %bodyIndex, align 4
  call void @_ZN9b2Fixture4DumpEi(%class.b2Fixture* %69, i32 %70)
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0))
  br label %71

; <label>:71                                      ; preds = %68
  %72 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %73 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %72, i32 0, i32 1
  %74 = load %class.b2Fixture*, %class.b2Fixture** %73, align 8
  store %class.b2Fixture* %74, %class.b2Fixture** %f, align 8
  br label %65

; <label>:75                                      ; preds = %65
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0))
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture4DumpEi(%class.b2Fixture* %this, i32 %bodyIndex) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca i32, align 4
  %s = alloca %class.b2CircleShape*, align 8
  %s1 = alloca %class.b2EdgeShape*, align 8
  %s2 = alloca %class.b2PolygonShape*, align 8
  %i = alloca i32, align 4
  %s3 = alloca %class.b2ChainShape*, align 8
  %i4 = alloca i32, align 4
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store i32 %bodyIndex, i32* %2, align 4
  %3 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.243, i32 0, i32 0))
  %4 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 4
  %5 = load float, float* %4, align 8
  %6 = fpext float %5 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.244, i32 0, i32 0), double %6)
  %7 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 5
  %8 = load float, float* %7, align 4
  %9 = fpext float %8 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.245, i32 0, i32 0), double %9)
  %10 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 0
  %11 = load float, float* %10, align 8
  %12 = fpext float %11 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.246, i32 0, i32 0), double %12)
  %13 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 9
  %14 = load i8, i8* %13, align 2
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.247, i32 0, i32 0), i32 %16)
  %17 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 8
  %18 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %17, i32 0, i32 0
  %19 = load i16, i16* %18, align 4
  %20 = zext i16 %19 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8.248, i32 0, i32 0), i32 %20)
  %21 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 8
  %22 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %21, i32 0, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.249, i32 0, i32 0), i32 %24)
  %25 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 8
  %26 = getelementptr inbounds %struct.b2Filter, %struct.b2Filter* %25, i32 0, i32 2
  %27 = load i16, i16* %26, align 4
  %28 = sext i16 %27 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.250, i32 0, i32 0), i32 %28)
  %29 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %30 = load %class.b2Shape*, %class.b2Shape** %29, align 8
  %31 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %216 [
    i32 0, label %33
    i32 1, label %52
    i32 2, label %111
    i32 3, label %146
  ]

; <label>:33                                      ; preds = %0
  %34 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %35 = load %class.b2Shape*, %class.b2Shape** %34, align 8
  %36 = bitcast %class.b2Shape* %35 to %class.b2CircleShape*
  store %class.b2CircleShape* %36, %class.b2CircleShape** %s, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.251, i32 0, i32 0))
  %37 = load %class.b2CircleShape*, %class.b2CircleShape** %s, align 8
  %38 = bitcast %class.b2CircleShape* %37 to %class.b2Shape*
  %39 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %38, i32 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.252, i32 0, i32 0), double %41)
  %42 = load %class.b2CircleShape*, %class.b2CircleShape** %s, align 8
  %43 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %42, i32 0, i32 1
  %44 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %43, i32 0, i32 0
  %45 = load float, float* %44, align 8
  %46 = fpext float %45 to double
  %47 = load %class.b2CircleShape*, %class.b2CircleShape** %s, align 8
  %48 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %47, i32 0, i32 1
  %49 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %48, i32 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = fpext float %50 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.253, i32 0, i32 0), double %46, double %51)
  br label %217

; <label>:52                                      ; preds = %0
  %53 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %54 = load %class.b2Shape*, %class.b2Shape** %53, align 8
  %55 = bitcast %class.b2Shape* %54 to %class.b2EdgeShape*
  store %class.b2EdgeShape* %55, %class.b2EdgeShape** %s1, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.254, i32 0, i32 0))
  %56 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %57 = bitcast %class.b2EdgeShape* %56 to %class.b2Shape*
  %58 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %57, i32 0, i32 2
  %59 = load float, float* %58, align 4
  %60 = fpext float %59 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.252, i32 0, i32 0), double %60)
  %61 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %62 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %61, i32 0, i32 3
  %63 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %62, i32 0, i32 0
  %64 = load float, float* %63, align 8
  %65 = fpext float %64 to double
  %66 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %67 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %66, i32 0, i32 3
  %68 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %67, i32 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fpext float %69 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15.255, i32 0, i32 0), double %65, double %70)
  %71 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %72 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %71, i32 0, i32 1
  %73 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %72, i32 0, i32 0
  %74 = load float, float* %73, align 8
  %75 = fpext float %74 to double
  %76 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %77 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %76, i32 0, i32 1
  %78 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %77, i32 0, i32 1
  %79 = load float, float* %78, align 4
  %80 = fpext float %79 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.256, i32 0, i32 0), double %75, double %80)
  %81 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %82 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %81, i32 0, i32 2
  %83 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %82, i32 0, i32 0
  %84 = load float, float* %83, align 8
  %85 = fpext float %84 to double
  %86 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %87 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %86, i32 0, i32 2
  %88 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %87, i32 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = fpext float %89 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17.257, i32 0, i32 0), double %85, double %90)
  %91 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %92 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %91, i32 0, i32 4
  %93 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %92, i32 0, i32 0
  %94 = load float, float* %93, align 8
  %95 = fpext float %94 to double
  %96 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %97 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %96, i32 0, i32 4
  %98 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %97, i32 0, i32 1
  %99 = load float, float* %98, align 4
  %100 = fpext float %99 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18.258, i32 0, i32 0), double %95, double %100)
  %101 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %102 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %101, i32 0, i32 5
  %103 = load i8, i8* %102, align 8
  %104 = trunc i8 %103 to i1
  %105 = zext i1 %104 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19.259, i32 0, i32 0), i32 %105)
  %106 = load %class.b2EdgeShape*, %class.b2EdgeShape** %s1, align 8
  %107 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %106, i32 0, i32 6
  %108 = load i8, i8* %107, align 1
  %109 = trunc i8 %108 to i1
  %110 = zext i1 %109 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20.260, i32 0, i32 0), i32 %110)
  br label %217

; <label>:111                                     ; preds = %0
  %112 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %113 = load %class.b2Shape*, %class.b2Shape** %112, align 8
  %114 = bitcast %class.b2Shape* %113 to %class.b2PolygonShape*
  store %class.b2PolygonShape* %114, %class.b2PolygonShape** %s2, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21.261, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22.262, i32 0, i32 0), i32 8)
  store i32 0, i32* %i, align 4
  br label %115

; <label>:115                                     ; preds = %139, %111
  %116 = load i32, i32* %i, align 4
  %117 = load %class.b2PolygonShape*, %class.b2PolygonShape** %s2, align 8
  %118 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %117, i32 0, i32 4
  %119 = load i32, i32* %118, align 8
  %120 = icmp slt i32 %116, %119
  br i1 %120, label %121, label %142

; <label>:121                                     ; preds = %115
  %122 = load i32, i32* %i, align 4
  %123 = load i32, i32* %i, align 4
  %124 = sext i32 %123 to i64
  %125 = load %class.b2PolygonShape*, %class.b2PolygonShape** %s2, align 8
  %126 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %125, i32 0, i32 2
  %127 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %126, i64 0, i64 %124
  %128 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %127, i32 0, i32 0
  %129 = load float, float* %128, align 8
  %130 = fpext float %129 to double
  %131 = load i32, i32* %i, align 4
  %132 = sext i32 %131 to i64
  %133 = load %class.b2PolygonShape*, %class.b2PolygonShape** %s2, align 8
  %134 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %133, i32 0, i32 2
  %135 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %134, i64 0, i64 %132
  %136 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %135, i32 0, i32 1
  %137 = load float, float* %136, align 4
  %138 = fpext float %137 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23.263, i32 0, i32 0), i32 %122, double %130, double %138)
  br label %139

; <label>:139                                     ; preds = %121
  %140 = load i32, i32* %i, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %i, align 4
  br label %115

; <label>:142                                     ; preds = %115
  %143 = load %class.b2PolygonShape*, %class.b2PolygonShape** %s2, align 8
  %144 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %143, i32 0, i32 4
  %145 = load i32, i32* %144, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.264, i32 0, i32 0), i32 %145)
  br label %217

; <label>:146                                     ; preds = %0
  %147 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 3
  %148 = load %class.b2Shape*, %class.b2Shape** %147, align 8
  %149 = bitcast %class.b2Shape* %148 to %class.b2ChainShape*
  store %class.b2ChainShape* %149, %class.b2ChainShape** %s3, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25.265, i32 0, i32 0))
  %150 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %151 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %150, i32 0, i32 2
  %152 = load i32, i32* %151, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22.262, i32 0, i32 0), i32 %152)
  store i32 0, i32* %i4, align 4
  br label %153

; <label>:153                                     ; preds = %179, %146
  %154 = load i32, i32* %i4, align 4
  %155 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %156 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %155, i32 0, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %182

; <label>:159                                     ; preds = %153
  %160 = load i32, i32* %i4, align 4
  %161 = load i32, i32* %i4, align 4
  %162 = sext i32 %161 to i64
  %163 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %164 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %163, i32 0, i32 1
  %165 = load %struct.b2Vec2*, %struct.b2Vec2** %164, align 8
  %166 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %165, i64 %162
  %167 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %166, i32 0, i32 0
  %168 = load float, float* %167, align 4
  %169 = fpext float %168 to double
  %170 = load i32, i32* %i4, align 4
  %171 = sext i32 %170 to i64
  %172 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %173 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %172, i32 0, i32 1
  %174 = load %struct.b2Vec2*, %struct.b2Vec2** %173, align 8
  %175 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %174, i64 %171
  %176 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %175, i32 0, i32 1
  %177 = load float, float* %176, align 4
  %178 = fpext float %177 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23.263, i32 0, i32 0), i32 %160, double %169, double %178)
  br label %179

; <label>:179                                     ; preds = %159
  %180 = load i32, i32* %i4, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %i4, align 4
  br label %153

; <label>:182                                     ; preds = %153
  %183 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %184 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %183, i32 0, i32 2
  %185 = load i32, i32* %184, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.266, i32 0, i32 0), i32 %185)
  %186 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %187 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %186, i32 0, i32 3
  %188 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %187, i32 0, i32 0
  %189 = load float, float* %188, align 4
  %190 = fpext float %189 to double
  %191 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %192 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %191, i32 0, i32 3
  %193 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %192, i32 0, i32 1
  %194 = load float, float* %193, align 4
  %195 = fpext float %194 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27.267, i32 0, i32 0), double %190, double %195)
  %196 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %197 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %196, i32 0, i32 4
  %198 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %197, i32 0, i32 0
  %199 = load float, float* %198, align 4
  %200 = fpext float %199 to double
  %201 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %202 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %201, i32 0, i32 4
  %203 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %202, i32 0, i32 1
  %204 = load float, float* %203, align 4
  %205 = fpext float %204 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28.268, i32 0, i32 0), double %200, double %205)
  %206 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %207 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %206, i32 0, i32 5
  %208 = load i8, i8* %207, align 4
  %209 = trunc i8 %208 to i1
  %210 = zext i1 %209 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29.269, i32 0, i32 0), i32 %210)
  %211 = load %class.b2ChainShape*, %class.b2ChainShape** %s3, align 8
  %212 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %211, i32 0, i32 6
  %213 = load i8, i8* %212, align 1
  %214 = trunc i8 %213 to i1
  %215 = zext i1 %214 to i32
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30.270, i32 0, i32 0), i32 %215)
  br label %217

; <label>:216                                     ; preds = %0
  br label %219

; <label>:217                                     ; preds = %182, %142, %52, %33
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.271, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32.272, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.271, i32 0, i32 0))
  %218 = load i32, i32* %2, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i32 0, i32 0), i32 %218)
  br label %219

; <label>:219                                     ; preds = %217, %216
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2ContactManagerC2Ev(%class.b2ContactManager* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2ContactManager*, align 8
  store %class.b2ContactManager* %this, %class.b2ContactManager** %1, align 8
  %2 = load %class.b2ContactManager*, %class.b2ContactManager** %1, align 8
  %3 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 0
  call void @_ZN12b2BroadPhaseC1Ev(%class.b2BroadPhase* %3)
  %4 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 1
  store %class.b2Contact* null, %class.b2Contact** %4, align 8
  %5 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 3
  store %class.b2ContactFilter* @b2_defaultFilter, %class.b2ContactFilter** %6, align 8
  %7 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 4
  store %class.b2ContactFilter* @b2_defaultListener, %class.b2ContactFilter** %7, align 8
  %8 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 5
  store %class.b2BlockAllocator* null, %class.b2BlockAllocator** %8, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2BroadPhaseC2Ev(%class.b2BroadPhase* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  call void @_ZN13b2DynamicTreeC1Ev(%class.b2DynamicTree* %5)
  %6 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 7
  store i32 16, i32* %7, align 8
  %8 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = mul i64 %11, 8
  %13 = trunc i64 %12 to i32
  %14 = invoke i8* @_Z7b2Alloci(i32 %13)
          to label %15 unwind label %29

; <label>:15                                      ; preds = %0
  %16 = bitcast i8* %14 to %struct.b2Pair*
  %17 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  store %struct.b2Pair* %16, %struct.b2Pair** %17, align 8
  %18 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 4
  store i32 16, i32* %18, align 8
  %19 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 5
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = mul i64 %22, 4
  %24 = trunc i64 %23 to i32
  %25 = invoke i8* @_Z7b2Alloci(i32 %24)
          to label %26 unwind label %29

; <label>:26                                      ; preds = %15
  %27 = bitcast i8* %25 to i32*
  %28 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 3
  store i32* %27, i32** %28, align 8
  ret void

; <label>:29                                      ; preds = %15, %0
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %2, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %3, align 4
  invoke void @_ZN13b2DynamicTreeD1Ev(%class.b2DynamicTree* %5)
          to label %33 unwind label %39

; <label>:33                                      ; preds = %29
  br label %34

; <label>:34                                      ; preds = %33
  %35 = load i8*, i8** %2, align 8
  %36 = load i32, i32* %3, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

; <label>:39                                      ; preds = %29
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTreeC2Ev(%class.b2DynamicTree* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %i = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %3 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 0
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  store i32 16, i32* %4, align 4
  %5 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = mul i64 %8, 40
  %10 = trunc i64 %9 to i32
  %11 = call i8* @_Z7b2Alloci(i32 %10)
  %12 = bitcast i8* %11 to %struct.b2TreeNode*
  %13 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  store %struct.b2TreeNode* %12, %struct.b2TreeNode** %13, align 8
  %14 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %15 = load %struct.b2TreeNode*, %struct.b2TreeNode** %14, align 8
  %16 = bitcast %struct.b2TreeNode* %15 to i8*
  %17 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = mul i64 %19, 40
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 %20, i32 8, i1 false)
  store i32 0, i32* %i, align 4
  br label %21

; <label>:21                                      ; preds = %43, %0
  %22 = load i32, i32* %i, align 4
  %23 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %24, 1
  %26 = icmp slt i32 %22, %25
  br i1 %26, label %27, label %46

; <label>:27                                      ; preds = %21
  %28 = load i32, i32* %i, align 4
  %29 = add nsw i32 %28, 1
  %30 = load i32, i32* %i, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %33 = load %struct.b2TreeNode*, %struct.b2TreeNode** %32, align 8
  %34 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %33, i64 %31
  %35 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %34, i32 0, i32 2
  %36 = bitcast %union.anon* %35 to i32*
  store i32 %29, i32* %36, align 8
  %37 = load i32, i32* %i, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %40 = load %struct.b2TreeNode*, %struct.b2TreeNode** %39, align 8
  %41 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %40, i64 %38
  %42 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %41, i32 0, i32 5
  store i32 -1, i32* %42, align 4
  br label %43

; <label>:43                                      ; preds = %27
  %44 = load i32, i32* %i, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %i, align 4
  br label %21

; <label>:46                                      ; preds = %21
  %47 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = sub nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %52 = load %struct.b2TreeNode*, %struct.b2TreeNode** %51, align 8
  %53 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %52, i64 %50
  %54 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %53, i32 0, i32 2
  %55 = bitcast %union.anon* %54 to i32*
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %57 = load i32, i32* %56, align 4
  %58 = sub nsw i32 %57, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %61 = load %struct.b2TreeNode*, %struct.b2TreeNode** %60, align 8
  %62 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %61, i64 %59
  %63 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %62, i32 0, i32 5
  store i32 -1, i32* %63, align 4
  %64 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 5
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 6
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 7
  store i32 0, i32* %66, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTreeD2Ev(%class.b2DynamicTree* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %3 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %4 = load %struct.b2TreeNode*, %struct.b2TreeNode** %3, align 8
  %5 = bitcast %struct.b2TreeNode* %4 to i8*
  call void @_Z6b2FreePv(i8* %5)
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2ContactManager7CollideEv(%class.b2ContactManager* %this) #0 align 2 {
  %1 = alloca %class.b2ContactManager*, align 8
  %c = alloca %class.b2Contact*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %cNuke = alloca %class.b2Contact*, align 8
  %activeA = alloca i8, align 1
  %activeB = alloca i8, align 1
  %proxyIdA = alloca i32, align 4
  %proxyIdB = alloca i32, align 4
  %overlap = alloca i8, align 1
  %cNuke1 = alloca %class.b2Contact*, align 8
  store %class.b2ContactManager* %this, %class.b2ContactManager** %1, align 8
  %2 = load %class.b2ContactManager*, %class.b2ContactManager** %1, align 8
  %3 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 1
  %4 = load %class.b2Contact*, %class.b2Contact** %3, align 8
  store %class.b2Contact* %4, %class.b2Contact** %c, align 8
  br label %5

; <label>:5                                       ; preds = %116, %111, %82, %42, %0
  %6 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %7 = icmp ne %class.b2Contact* %6, null
  br i1 %7, label %8, label %122

; <label>:8                                       ; preds = %5
  %9 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %10 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %9)
  store %class.b2Fixture* %10, %class.b2Fixture** %fixtureA, align 8
  %11 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %12 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %11)
  store %class.b2Fixture* %12, %class.b2Fixture** %fixtureB, align 8
  %13 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %14 = call i32 @_ZNK9b2Contact14GetChildIndexAEv(%class.b2Contact* %13)
  store i32 %14, i32* %indexA, align 4
  %15 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %16 = call i32 @_ZNK9b2Contact14GetChildIndexBEv(%class.b2Contact* %15)
  store i32 %16, i32* %indexB, align 4
  %17 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %18 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %17)
  store %class.b2Body* %18, %class.b2Body** %bodyA, align 8
  %19 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %20 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %19)
  store %class.b2Body* %20, %class.b2Body** %bodyB, align 8
  %21 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %22 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %52

; <label>:26                                      ; preds = %8
  %27 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 3
  %28 = load %class.b2ContactFilter*, %class.b2ContactFilter** %27, align 8
  %29 = icmp ne %class.b2ContactFilter* %28, null
  br i1 %29, label %30, label %47

; <label>:30                                      ; preds = %26
  %31 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 3
  %32 = load %class.b2ContactFilter*, %class.b2ContactFilter** %31, align 8
  %33 = bitcast %class.b2ContactFilter* %32 to i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)***
  %34 = load i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)**, i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)*, i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)** %34, i64 2
  %36 = load i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)*, i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)** %35, align 8
  %37 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %38 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %39 = call zeroext i1 %36(%class.b2ContactFilter* %32, %class.b2Fixture* %37, %class.b2Fixture* %38)
  %40 = zext i1 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %47

; <label>:42                                      ; preds = %30
  %43 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  store %class.b2Contact* %43, %class.b2Contact** %cNuke, align 8
  %44 = load %class.b2Contact*, %class.b2Contact** %cNuke, align 8
  %45 = call %class.b2Contact* @_ZN9b2Contact7GetNextEv(%class.b2Contact* %44)
  store %class.b2Contact* %45, %class.b2Contact** %c, align 8
  %46 = load %class.b2Contact*, %class.b2Contact** %cNuke, align 8
  call void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %2, %class.b2Contact* %46)
  br label %5

; <label>:47                                      ; preds = %30, %26
  %48 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %49 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %48, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -9
  store i32 %51, i32* %49, align 8
  br label %52

; <label>:52                                      ; preds = %47, %8
  %53 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %54 = call zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %53)
  br i1 %54, label %55, label %60

; <label>:55                                      ; preds = %52
  %56 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %57 = getelementptr inbounds %class.b2Body, %class.b2Body* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp ne i32 %58, 0
  br label %60

; <label>:60                                      ; preds = %55, %52
  %61 = phi i1 [ false, %52 ], [ %59, %55 ]
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %activeA, align 1
  %63 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %64 = call zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %63)
  br i1 %64, label %65, label %70

; <label>:65                                      ; preds = %60
  %66 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %67 = getelementptr inbounds %class.b2Body, %class.b2Body* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp ne i32 %68, 0
  br label %70

; <label>:70                                      ; preds = %65, %60
  %71 = phi i1 [ false, %60 ], [ %69, %65 ]
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %activeB, align 1
  %73 = load i8, i8* %activeA, align 1
  %74 = trunc i8 %73 to i1
  %75 = zext i1 %74 to i32
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %85

; <label>:77                                      ; preds = %70
  %78 = load i8, i8* %activeB, align 1
  %79 = trunc i8 %78 to i1
  %80 = zext i1 %79 to i32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %77
  %83 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %84 = call %class.b2Contact* @_ZN9b2Contact7GetNextEv(%class.b2Contact* %83)
  store %class.b2Contact* %84, %class.b2Contact** %c, align 8
  br label %5

; <label>:85                                      ; preds = %77, %70
  %86 = load i32, i32* %indexA, align 4
  %87 = sext i32 %86 to i64
  %88 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %89 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %88, i32 0, i32 6
  %90 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %89, align 8
  %91 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %90, i64 %87
  %92 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %proxyIdA, align 4
  %94 = load i32, i32* %indexB, align 4
  %95 = sext i32 %94 to i64
  %96 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %97 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %96, i32 0, i32 6
  %98 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %97, align 8
  %99 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %98, i64 %95
  %100 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %99, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %proxyIdB, align 4
  %102 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 0
  %103 = load i32, i32* %proxyIdA, align 4
  %104 = load i32, i32* %proxyIdB, align 4
  %105 = call zeroext i1 @_ZNK12b2BroadPhase11TestOverlapEii(%class.b2BroadPhase* %102, i32 %103, i32 %104)
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %overlap, align 1
  %107 = load i8, i8* %overlap, align 1
  %108 = trunc i8 %107 to i1
  %109 = zext i1 %108 to i32
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

; <label>:111                                     ; preds = %85
  %112 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  store %class.b2Contact* %112, %class.b2Contact** %cNuke1, align 8
  %113 = load %class.b2Contact*, %class.b2Contact** %cNuke1, align 8
  %114 = call %class.b2Contact* @_ZN9b2Contact7GetNextEv(%class.b2Contact* %113)
  store %class.b2Contact* %114, %class.b2Contact** %c, align 8
  %115 = load %class.b2Contact*, %class.b2Contact** %cNuke1, align 8
  call void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %2, %class.b2Contact* %115)
  br label %5

; <label>:116                                     ; preds = %85
  %117 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %118 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 4
  %119 = load %class.b2ContactFilter*, %class.b2ContactFilter** %118, align 8
  call void @_ZN9b2Contact6UpdateEP17b2ContactListener(%class.b2Contact* %117, %class.b2ContactFilter* %119)
  %120 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %121 = call %class.b2Contact* @_ZN9b2Contact7GetNextEv(%class.b2Contact* %120)
  store %class.b2Contact* %121, %class.b2Contact** %c, align 8
  br label %5

; <label>:122                                     ; preds = %5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK9b2Contact14GetChildIndexAEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 9
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK9b2Contact14GetChildIndexBEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 10
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Contact* @_ZN9b2Contact7GetNextEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 4
  %4 = load %class.b2Contact*, %class.b2Contact** %3, align 8
  ret %class.b2Contact* %4
}

; Function Attrs: inlinehint uwtable
define linkonce_odr zeroext i1 @_ZNK12b2BroadPhase11TestOverlapEii(%class.b2BroadPhase* %this, i32 %proxyIdA, i32 %proxyIdB) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %aabbA = alloca %struct.b2Transform*, align 8
  %aabbB = alloca %struct.b2Transform*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyIdA, i32* %2, align 4
  store i32 %proxyIdB, i32* %3, align 4
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  %6 = load i32, i32* %2, align 4
  %7 = call dereferenceable(16) %struct.b2Transform* @_ZNK13b2DynamicTree10GetFatAABBEi(%class.b2DynamicTree* %5, i32 %6)
  store %struct.b2Transform* %7, %struct.b2Transform** %aabbA, align 8
  %8 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  %9 = load i32, i32* %3, align 4
  %10 = call dereferenceable(16) %struct.b2Transform* @_ZNK13b2DynamicTree10GetFatAABBEi(%class.b2DynamicTree* %8, i32 %9)
  store %struct.b2Transform* %10, %struct.b2Transform** %aabbB, align 8
  %11 = load %struct.b2Transform*, %struct.b2Transform** %aabbA, align 8
  %12 = load %struct.b2Transform*, %struct.b2Transform** %aabbB, align 8
  %13 = call zeroext i1 @_Z13b2TestOverlapRK6b2AABBS1_(%struct.b2Transform* dereferenceable(16) %11, %struct.b2Transform* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.b2Transform* @_ZNK13b2DynamicTree10GetFatAABBEi(%class.b2DynamicTree* %this, i32 %proxyId) #5 comdat align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp sle i32 0, %4
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  br label %14

; <label>:12                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2.225, i32 0, i32 0), i32 164, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree10GetFatAABBEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %18 = load %struct.b2TreeNode*, %struct.b2TreeNode** %17, align 8
  %19 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %18, i64 %16
  %20 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %19, i32 0, i32 0
  ret %struct.b2Transform* %20
}

; Function Attrs: inlinehint uwtable
define linkonce_odr zeroext i1 @_Z13b2TestOverlapRK6b2AABBS1_(%struct.b2Transform* dereferenceable(16) %a, %struct.b2Transform* dereferenceable(16) %b) #1 comdat {
  %1 = alloca i1, align 1
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %d1 = alloca %struct.b2Vec2, align 4
  %d2 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %struct.b2Transform* %a, %struct.b2Transform** %2, align 8
  store %struct.b2Transform* %b, %struct.b2Transform** %3, align 8
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %d1)
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %d2)
  %6 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %7 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %6, i32 0, i32 0
  %8 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %9 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %8, i32 0, i32 1
  %10 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %9)
  %11 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %10, <2 x float>* %11, align 4
  %12 = bitcast %struct.b2Vec2* %d1 to i8*
  %13 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %15 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %14, i32 0, i32 0
  %16 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %17 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %16, i32 0, i32 1
  %18 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %15, %struct.b2Vec2* dereferenceable(8) %17)
  %19 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = bitcast %struct.b2Vec2* %d2 to i8*
  %21 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 4, i1 false)
  %22 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d1, i32 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fcmp ogt float %23, 0.000000e+00
  br i1 %24, label %29, label %25

; <label>:25                                      ; preds = %0
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d1, i32 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = fcmp ogt float %27, 0.000000e+00
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %25, %0
  store i1 false, i1* %1, align 1
  br label %40

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d2, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp ogt float %32, 0.000000e+00
  br i1 %33, label %38, label %34

; <label>:34                                      ; preds = %30
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %d2, i32 0, i32 1
  %36 = load float, float* %35, align 4
  %37 = fcmp ogt float %36, 0.000000e+00
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %34, %30
  store i1 false, i1* %1, align 1
  br label %40

; <label>:39                                      ; preds = %34
  store i1 true, i1* %1, align 1
  br label %40

; <label>:40                                      ; preds = %39, %38, %29
  %41 = load i1, i1* %1, align 1
  ret i1 %41
}

; Function Attrs: uwtable
define void @_ZN16b2ContactManager15FindNewContactsEv(%class.b2ContactManager* %this) #0 align 2 {
  %1 = alloca %class.b2ContactManager*, align 8
  store %class.b2ContactManager* %this, %class.b2ContactManager** %1, align 8
  %2 = load %class.b2ContactManager*, %class.b2ContactManager** %1, align 8
  %3 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 0
  call void @_ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_(%class.b2BroadPhase* %3, %class.b2ContactManager* %2)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_(%class.b2BroadPhase* %this, %class.b2ContactManager* %callback) #0 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca %class.b2ContactManager*, align 8
  %i = alloca i32, align 4
  %fatAABB = alloca %struct.b2Transform*, align 8
  %i1 = alloca i32, align 4
  %primaryPair = alloca %struct.b2Pair*, align 8
  %userDataA = alloca i8*, align 8
  %userDataB = alloca i8*, align 8
  %pair = alloca %struct.b2Pair*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store %class.b2ContactManager* %callback, %class.b2ContactManager** %2, align 8
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %i, align 4
  br label %5

; <label>:5                                       ; preds = %29, %0
  %6 = load i32, i32* %i, align 4
  %7 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %32

; <label>:10                                      ; preds = %5
  %11 = load i32, i32* %i, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 3
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 %12
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 9
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 9
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %10
  br label %29

; <label>:22                                      ; preds = %10
  %23 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %24 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 9
  %25 = load i32, i32* %24, align 8
  %26 = call dereferenceable(16) %struct.b2Transform* @_ZNK13b2DynamicTree10GetFatAABBEi(%class.b2DynamicTree* %23, i32 %25)
  store %struct.b2Transform* %26, %struct.b2Transform** %fatAABB, align 8
  %27 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %28 = load %struct.b2Transform*, %struct.b2Transform** %fatAABB, align 8
  call void @_ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB(%class.b2DynamicTree* %27, %class.b2BroadPhase* %3, %struct.b2Transform* dereferenceable(16) %28)
  br label %29

; <label>:29                                      ; preds = %22, %21
  %30 = load i32, i32* %i, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %i, align 4
  br label %5

; <label>:32                                      ; preds = %5
  %33 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 5
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 6
  %35 = load %struct.b2Pair*, %struct.b2Pair** %34, align 8
  %36 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 6
  %37 = load %struct.b2Pair*, %struct.b2Pair** %36, align 8
  %38 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 8
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %37, i64 %40
  call void @_ZSt4sortIP6b2PairPFbRKS0_S3_EEvT_S6_T0_(%struct.b2Pair* %35, %struct.b2Pair* %41, i1 (%struct.b2Pair*, %struct.b2Pair*)* @_Z14b2PairLessThanRK6b2PairS1_)
  store i32 0, i32* %i1, align 4
  br label %42

; <label>:42                                      ; preds = %98, %32
  %43 = load i32, i32* %i1, align 4
  %44 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 8
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %47, label %99

; <label>:47                                      ; preds = %42
  %48 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 6
  %49 = load %struct.b2Pair*, %struct.b2Pair** %48, align 8
  %50 = load i32, i32* %i1, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %49, i64 %51
  store %struct.b2Pair* %52, %struct.b2Pair** %primaryPair, align 8
  %53 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %54 = load %struct.b2Pair*, %struct.b2Pair** %primaryPair, align 8
  %55 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = call i8* @_ZNK13b2DynamicTree11GetUserDataEi(%class.b2DynamicTree* %53, i32 %56)
  store i8* %57, i8** %userDataA, align 8
  %58 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %59 = load %struct.b2Pair*, %struct.b2Pair** %primaryPair, align 8
  %60 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = call i8* @_ZNK13b2DynamicTree11GetUserDataEi(%class.b2DynamicTree* %58, i32 %61)
  store i8* %62, i8** %userDataB, align 8
  %63 = load %class.b2ContactManager*, %class.b2ContactManager** %2, align 8
  %64 = load i8*, i8** %userDataA, align 8
  %65 = load i8*, i8** %userDataB, align 8
  call void @_ZN16b2ContactManager7AddPairEPvS0_(%class.b2ContactManager* %63, i8* %64, i8* %65)
  %66 = load i32, i32* %i1, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %i1, align 4
  br label %68

; <label>:68                                      ; preds = %95, %47
  %69 = load i32, i32* %i1, align 4
  %70 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 8
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %69, %71
  br i1 %72, label %73, label %98

; <label>:73                                      ; preds = %68
  %74 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 6
  %75 = load %struct.b2Pair*, %struct.b2Pair** %74, align 8
  %76 = load i32, i32* %i1, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %75, i64 %77
  store %struct.b2Pair* %78, %struct.b2Pair** %pair, align 8
  %79 = load %struct.b2Pair*, %struct.b2Pair** %pair, align 8
  %80 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %79, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = load %struct.b2Pair*, %struct.b2Pair** %primaryPair, align 8
  %83 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %82, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp ne i32 %81, %84
  br i1 %85, label %94, label %86

; <label>:86                                      ; preds = %73
  %87 = load %struct.b2Pair*, %struct.b2Pair** %pair, align 8
  %88 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = load %struct.b2Pair*, %struct.b2Pair** %primaryPair, align 8
  %91 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp ne i32 %89, %92
  br i1 %93, label %94, label %95

; <label>:94                                      ; preds = %86, %73
  br label %98

; <label>:95                                      ; preds = %86
  %96 = load i32, i32* %i1, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %i1, align 4
  br label %68

; <label>:98                                      ; preds = %94, %68
  br label %42

; <label>:99                                      ; preds = %42
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB(%class.b2DynamicTree* %this, %class.b2BroadPhase* %callback, %struct.b2Transform* dereferenceable(16) %aabb) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca %class.b2BroadPhase*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %stack = alloca %class.b2GrowableStack, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %nodeId = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %proceed = alloca i8, align 1
  %6 = alloca i32
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store %class.b2BroadPhase* %callback, %class.b2BroadPhase** %2, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %3, align 8
  %7 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  call void @_ZN15b2GrowableStackIiLi256EEC2Ev(%class.b2GrowableStack* %stack)
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %7, i32 0, i32 0
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %8)
          to label %9 unwind label %20

; <label>:9                                       ; preds = %0
  br label %10

; <label>:10                                      ; preds = %59, %19, %9
  %11 = invoke i32 @_ZN15b2GrowableStackIiLi256EE8GetCountEv(%class.b2GrowableStack* %stack)
          to label %12 unwind label %20

; <label>:12                                      ; preds = %10
  %13 = icmp sgt i32 %11, 0
  br i1 %13, label %14, label %60

; <label>:14                                      ; preds = %12
  %15 = invoke i32 @_ZN15b2GrowableStackIiLi256EE3PopEv(%class.b2GrowableStack* %stack)
          to label %16 unwind label %20

; <label>:16                                      ; preds = %14
  store i32 %15, i32* %nodeId, align 4
  %17 = load i32, i32* %nodeId, align 4
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %24

; <label>:19                                      ; preds = %16
  br label %10

; <label>:20                                      ; preds = %54, %51, %39, %35, %24, %14, %10, %0
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %4, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %5, align 4
  invoke void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %stack)
          to label %63 unwind label %69

; <label>:24                                      ; preds = %16
  %25 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %7, i32 0, i32 2
  %26 = load %struct.b2TreeNode*, %struct.b2TreeNode** %25, align 8
  %27 = load i32, i32* %nodeId, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %26, i64 %28
  store %struct.b2TreeNode* %29, %struct.b2TreeNode** %node, align 8
  %30 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %31 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %30, i32 0, i32 0
  %32 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %33 = invoke zeroext i1 @_Z13b2TestOverlapRK6b2AABBS1_(%struct.b2Transform* dereferenceable(16) %31, %struct.b2Transform* dereferenceable(16) %32)
          to label %34 unwind label %20

; <label>:34                                      ; preds = %24
  br i1 %33, label %35, label %59

; <label>:35                                      ; preds = %34
  %36 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %37 = invoke zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %36)
          to label %38 unwind label %20

; <label>:38                                      ; preds = %35
  br i1 %37, label %39, label %51

; <label>:39                                      ; preds = %38
  %40 = load %class.b2BroadPhase*, %class.b2BroadPhase** %2, align 8
  %41 = load i32, i32* %nodeId, align 4
  %42 = invoke zeroext i1 @_ZN12b2BroadPhase13QueryCallbackEi(%class.b2BroadPhase* %40, i32 %41)
          to label %43 unwind label %20

; <label>:43                                      ; preds = %39
  %44 = zext i1 %42 to i8
  store i8 %44, i8* %proceed, align 1
  %45 = load i8, i8* %proceed, align 1
  %46 = trunc i8 %45 to i1
  %47 = zext i1 %46 to i32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %43
  store i32 1, i32* %6, align 4
  br label %61

; <label>:50                                      ; preds = %43
  br label %58

; <label>:51                                      ; preds = %38
  %52 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %53 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %52, i32 0, i32 3
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %53)
          to label %54 unwind label %20

; <label>:54                                      ; preds = %51
  %55 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %56 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %55, i32 0, i32 4
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %56)
          to label %57 unwind label %20

; <label>:57                                      ; preds = %54
  br label %58

; <label>:58                                      ; preds = %57, %50
  br label %59

; <label>:59                                      ; preds = %58, %34
  br label %10

; <label>:60                                      ; preds = %12
  store i32 0, i32* %6, align 4
  br label %61

; <label>:61                                      ; preds = %60, %49
  call void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %stack)
  %cleanup.dest = load i32, i32* %6, align 4
  switch i32 %cleanup.dest, label %72 [
    i32 0, label %62
    i32 1, label %62
  ]

; <label>:62                                      ; preds = %61, %61
  ret void

; <label>:63                                      ; preds = %20
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i8*, i8** %4, align 8
  %66 = load i32, i32* %5, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69                                      ; preds = %20
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #15
  unreachable

; <label>:72                                      ; preds = %61
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN15b2GrowableStackIiLi256EEC2Ev(%class.b2GrowableStack* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2GrowableStack*, align 8
  store %class.b2GrowableStack* %this, %class.b2GrowableStack** %1, align 8
  %2 = load %class.b2GrowableStack*, %class.b2GrowableStack** %1, align 8
  %3 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 1
  %4 = getelementptr inbounds [256 x i32], [256 x i32]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 0
  store i32* %4, i32** %5, align 8
  %6 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 3
  store i32 256, i32* %7, align 4
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %this, i32* dereferenceable(4) %element) #0 comdat align 2 {
  %1 = alloca %class.b2GrowableStack*, align 8
  %2 = alloca i32*, align 8
  %old = alloca i32*, align 8
  store %class.b2GrowableStack* %this, %class.b2GrowableStack** %1, align 8
  store i32* %element, i32** %2, align 8
  %3 = load %class.b2GrowableStack*, %class.b2GrowableStack** %1, align 8
  %4 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %40

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %old, align 8
  %12 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, 2
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = mul i64 %17, 4
  %19 = trunc i64 %18 to i32
  %20 = call i8* @_Z7b2Alloci(i32 %19)
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 0
  store i32* %21, i32** %22, align 8
  %23 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = bitcast i32* %24 to i8*
  %26 = load i32*, i32** %old, align 8
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = mul i64 %30, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %27, i64 %31, i32 4, i1 false)
  %32 = load i32*, i32** %old, align 8
  %33 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 1
  %34 = getelementptr inbounds [256 x i32], [256 x i32]* %33, i32 0, i32 0
  %35 = icmp ne i32* %32, %34
  br i1 %35, label %36, label %39

; <label>:36                                      ; preds = %9
  %37 = load i32*, i32** %old, align 8
  %38 = bitcast i32* %37 to i8*
  call void @_Z6b2FreePv(i8* %38)
  br label %39

; <label>:39                                      ; preds = %36, %9
  br label %40

; <label>:40                                      ; preds = %39, %0
  %41 = load i32*, i32** %2, align 8
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 %45
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %3, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %49, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN15b2GrowableStackIiLi256EE8GetCountEv(%class.b2GrowableStack* %this) #2 comdat align 2 {
  %1 = alloca %class.b2GrowableStack*, align 8
  store %class.b2GrowableStack* %this, %class.b2GrowableStack** %1, align 8
  %2 = load %class.b2GrowableStack*, %class.b2GrowableStack** %1, align 8
  %3 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN15b2GrowableStackIiLi256EE3PopEv(%class.b2GrowableStack* %this) #2 comdat align 2 {
  %1 = alloca %class.b2GrowableStack*, align 8
  store %class.b2GrowableStack* %this, %class.b2GrowableStack** %1, align 8
  %2 = load %class.b2GrowableStack*, %class.b2GrowableStack** %1, align 8
  %3 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %9

; <label>:7                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.226, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.4.227, i32 0, i32 0), i32 67, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN15b2GrowableStackIiLi256EE3PopEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %9

; <label>:9                                       ; preds = %8, %6
  %10 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %15
  %19 = load i32, i32* %18, align 4
  ret i32 %19
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %class.b2GrowableStack*, align 8
  store %class.b2GrowableStack* %this, %class.b2GrowableStack** %1, align 8
  %2 = load %class.b2GrowableStack*, %class.b2GrowableStack** %1, align 8
  %3 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 1
  %6 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i32 0, i32 0
  %7 = icmp ne i32* %4, %6
  br i1 %7, label %8, label %13

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast i32* %10 to i8*
  call void @_Z6b2FreePv(i8* %11)
  %12 = getelementptr inbounds %class.b2GrowableStack, %class.b2GrowableStack* %2, i32 0, i32 0
  store i32* null, i32** %12, align 8
  br label %13

; <label>:13                                      ; preds = %8, %0
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN12b2BroadPhase13QueryCallbackEi(%class.b2BroadPhase* %this, i32 %proxyId) #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2BroadPhase*, align 8
  %3 = alloca i32, align 4
  %oldBuffer = alloca %struct.b2Pair*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %2, align 8
  store i32 %proxyId, i32* %3, align 4
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  store i1 true, i1* %1, align 1
  br label %67

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %41

; <label>:16                                      ; preds = %10
  %17 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  %18 = load %struct.b2Pair*, %struct.b2Pair** %17, align 8
  store %struct.b2Pair* %18, %struct.b2Pair** %oldBuffer, align 8
  %19 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = mul nsw i32 %20, 2
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 8
  %26 = trunc i64 %25 to i32
  %27 = call i8* @_Z7b2Alloci(i32 %26)
  %28 = bitcast i8* %27 to %struct.b2Pair*
  %29 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  store %struct.b2Pair* %28, %struct.b2Pair** %29, align 8
  %30 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  %31 = load %struct.b2Pair*, %struct.b2Pair** %30, align 8
  %32 = bitcast %struct.b2Pair* %31 to i8*
  %33 = load %struct.b2Pair*, %struct.b2Pair** %oldBuffer, align 8
  %34 = bitcast %struct.b2Pair* %33 to i8*
  %35 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 8
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = mul i64 %37, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %34, i64 %38, i32 4, i1 false)
  %39 = load %struct.b2Pair*, %struct.b2Pair** %oldBuffer, align 8
  %40 = bitcast %struct.b2Pair* %39 to i8*
  call void @_Z6b2FreePv(i8* %40)
  br label %41

; <label>:41                                      ; preds = %16, %10
  %42 = load i32, i32* %3, align 4
  %43 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 9
  %44 = load i32, i32* %43, align 8
  %45 = call i32 @_Z5b2MinIiET_S0_S0_(i32 %42, i32 %44)
  %46 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  %50 = load %struct.b2Pair*, %struct.b2Pair** %49, align 8
  %51 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %50, i64 %48
  %52 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %51, i32 0, i32 0
  store i32 %45, i32* %52, align 4
  %53 = load i32, i32* %3, align 4
  %54 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 9
  %55 = load i32, i32* %54, align 8
  %56 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %53, i32 %55)
  %57 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 8
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  %61 = load %struct.b2Pair*, %struct.b2Pair** %60, align 8
  %62 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %61, i64 %59
  %63 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %62, i32 0, i32 1
  store i32 %56, i32* %63, align 4
  %64 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 8
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %64, align 4
  store i1 true, i1* %1, align 1
  br label %67

; <label>:67                                      ; preds = %41, %9
  %68 = load i1, i1* %1, align 1
  ret i1 %68
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_Z5b2MinIiET_S0_S0_(i32 %a, i32 %b) #5 comdat {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  store i32 %b, i32* %2, align 4
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %1, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %2, align 4
  br label %10

; <label>:10                                      ; preds = %8, %6
  %11 = phi i32 [ %7, %6 ], [ %9, %8 ]
  ret i32 %11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_Z14b2PairLessThanRK6b2PairS1_(%struct.b2Pair* dereferenceable(8) %pair1, %struct.b2Pair* dereferenceable(8) %pair2) #5 comdat {
  %1 = alloca i1, align 1
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %pair1, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %pair2, %struct.b2Pair** %3, align 8
  %4 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %5 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %8 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  store i1 true, i1* %1, align 1
  br label %29

; <label>:12                                      ; preds = %0
  %13 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %14 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %17 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %15, %18
  br i1 %19, label %20, label %28

; <label>:20                                      ; preds = %12
  %21 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %22 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %25 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %23, %26
  store i1 %27, i1* %1, align 1
  br label %29

; <label>:28                                      ; preds = %12
  store i1 false, i1* %1, align 1
  br label %29

; <label>:29                                      ; preds = %28, %20, %11
  %30 = load i1, i1* %1, align 1
  ret i1 %30
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZSt4sortIP6b2PairPFbRKS0_S3_EEvT_S6_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp) #1 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca i1 (%struct.b2Pair*, %struct.b2Pair*)*, align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp, i1 (%struct.b2Pair*, %struct.b2Pair*)** %3, align 8
  %5 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %7 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %3, align 8
  %8 = call i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops16__iter_comp_iterIPFbRK6b2PairS4_EEENS0_15_Iter_comp_iterIT_EES8_(i1 (%struct.b2Pair*, %struct.b2Pair*)* %7)
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %8, i1 (%struct.b2Pair*, %struct.b2Pair*)** %9, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %11 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %10, align 8
  call void @_ZSt6__sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %5, %struct.b2Pair* %6, i1 (%struct.b2Pair*, %struct.b2Pair*)* %11)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops16__iter_comp_iterIPFbRK6b2PairS4_EEENS0_15_Iter_comp_iterIT_EES8_(i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp) #1 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %2 = alloca i1 (%struct.b2Pair*, %struct.b2Pair*)*, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  %3 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEC2ES6_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1, i1 (%struct.b2Pair*, %struct.b2Pair*)* %3)
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1, i32 0, i32 0
  %5 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %4, align 8
  ret i1 (%struct.b2Pair*, %struct.b2Pair*)* %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEC2ES6_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp) unnamed_addr #2 comdat align 2 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %2 = alloca i1 (%struct.b2Pair*, %struct.b2Pair*)*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  %3 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %5 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %5, i1 (%struct.b2Pair*, %struct.b2Pair*)** %4, align 8
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZSt6__sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = icmp ne %struct.b2Pair* %6, %7
  br i1 %8, label %9, label %30

; <label>:9                                       ; preds = %0
  %10 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %11 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %12 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %13 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %14 = ptrtoint %struct.b2Pair* %12 to i64
  %15 = ptrtoint %struct.b2Pair* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  %18 = call i64 @_ZSt4__lgl(i64 %17)
  %19 = mul nsw i64 %18, 2
  %20 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3 to i8*
  %21 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %23 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %22, align 8
  call void @_ZSt16__introsort_loopIP6b2PairlN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_T1_(%struct.b2Pair* %10, %struct.b2Pair* %11, i64 %19, i1 (%struct.b2Pair*, %struct.b2Pair*)* %23)
  %24 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %25 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %26 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %27 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %29 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %28, align 8
  call void @_ZSt22__final_insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %24, %struct.b2Pair* %25, i1 (%struct.b2Pair*, %struct.b2Pair*)* %29)
  br label %30

; <label>:30                                      ; preds = %9, %0
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i64 @_ZSt4__lgl(i64 %__n) #5 comdat {
  %1 = alloca i64, align 8
  store i64 %__n, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  %3 = call i64 @llvm.ctlz.i64(i64 %2, i1 true)
  %4 = trunc i64 %3 to i32
  %5 = sext i32 %4 to i64
  %6 = sub i64 63, %5
  ret i64 %6
}

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #11

; Function Attrs: uwtable
define linkonce_odr void @_ZSt16__introsort_loopIP6b2PairlN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_T1_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i64 %__depth_limit, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %__cut = alloca %struct.b2Pair*, align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %7 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %7, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store i64 %__depth_limit, i64* %3, align 8
  br label %8

; <label>:8                                       ; preds = %27, %0
  %9 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %10 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %11 = ptrtoint %struct.b2Pair* %9 to i64
  %12 = ptrtoint %struct.b2Pair* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  %15 = icmp sgt i64 %14, 16
  br i1 %15, label %16, label %45

; <label>:16                                      ; preds = %8
  %17 = load i64, i64* %3, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %16
  %20 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %21 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %22 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %23 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %24 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %26 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %25, align 8
  call void @_ZSt14__partial_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %20, %struct.b2Pair* %21, %struct.b2Pair* %22, i1 (%struct.b2Pair*, %struct.b2Pair*)* %26)
  br label %45

; <label>:27                                      ; preds = %16
  %28 = load i64, i64* %3, align 8
  %29 = add nsw i64 %28, -1
  store i64 %29, i64* %3, align 8
  %30 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %31 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %32 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  %33 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %35 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %34, align 8
  %36 = call %struct.b2Pair* @_ZSt27__unguarded_partition_pivotIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEET_SA_SA_T0_(%struct.b2Pair* %30, %struct.b2Pair* %31, i1 (%struct.b2Pair*, %struct.b2Pair*)* %35)
  store %struct.b2Pair* %36, %struct.b2Pair** %__cut, align 8
  %37 = load %struct.b2Pair*, %struct.b2Pair** %__cut, align 8
  %38 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %39 = load i64, i64* %3, align 8
  %40 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  %41 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6, i32 0, i32 0
  %43 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %42, align 8
  call void @_ZSt16__introsort_loopIP6b2PairlN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_T1_(%struct.b2Pair* %37, %struct.b2Pair* %38, i64 %39, i1 (%struct.b2Pair*, %struct.b2Pair*)* %43)
  %44 = load %struct.b2Pair*, %struct.b2Pair** %__cut, align 8
  store %struct.b2Pair* %44, %struct.b2Pair** %2, align 8
  br label %8

; <label>:45                                      ; preds = %19, %8
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZSt14__partial_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__middle, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %6, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__middle, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %3, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %9 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %10 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %11 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 8, i1 false)
  %12 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %13 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %12, align 8
  call void @_ZSt13__heap_selectIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %7, %struct.b2Pair* %8, %struct.b2Pair* %9, i1 (%struct.b2Pair*, %struct.b2Pair*)* %13)
  %14 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %15 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %16 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  %17 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %19 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %18, align 8
  call void @_ZSt11__sort_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %14, %struct.b2Pair* %15, i1 (%struct.b2Pair*, %struct.b2Pair*)* %19)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt13__heap_selectIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__middle, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %__i = alloca %struct.b2Pair*, align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %6, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__middle, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %3, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %9 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %10 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %12 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %11, align 8
  call void @_ZSt11__make_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %7, %struct.b2Pair* %8, i1 (%struct.b2Pair*, %struct.b2Pair*)* %12)
  %13 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %13, %struct.b2Pair** %__i, align 8
  br label %14

; <label>:14                                      ; preds = %31, %0
  %15 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %16 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %17 = icmp ult %struct.b2Pair* %15, %16
  br i1 %17, label %18, label %34

; <label>:18                                      ; preds = %14
  %19 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %20 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %21 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %19, %struct.b2Pair* %20)
  br i1 %21, label %22, label %30

; <label>:22                                      ; preds = %18
  %23 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %24 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %25 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %26 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  %27 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %29 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %28, align 8
  call void @_ZSt10__pop_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %23, %struct.b2Pair* %24, %struct.b2Pair* %25, i1 (%struct.b2Pair*, %struct.b2Pair*)* %29)
  br label %30

; <label>:30                                      ; preds = %22, %18
  br label %31

; <label>:31                                      ; preds = %30
  %32 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %33 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %32, i32 1
  store %struct.b2Pair* %33, %struct.b2Pair** %__i, align 8
  br label %14

; <label>:34                                      ; preds = %14
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt11__make_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %__len = alloca i64, align 8
  %__parent = alloca i64, align 8
  %__value = alloca %struct.b2Pair, align 4
  %3 = alloca %struct.b2Pair, align 4
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %8 = ptrtoint %struct.b2Pair* %6 to i64
  %9 = ptrtoint %struct.b2Pair* %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 8
  %12 = icmp slt i64 %11, 2
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  br label %47

; <label>:14                                      ; preds = %0
  %15 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %16 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %17 = ptrtoint %struct.b2Pair* %15 to i64
  %18 = ptrtoint %struct.b2Pair* %16 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 8
  store i64 %20, i64* %__len, align 8
  %21 = load i64, i64* %__len, align 8
  %22 = sub nsw i64 %21, 2
  %23 = sdiv i64 %22, 2
  store i64 %23, i64* %__parent, align 8
  br label %24

; <label>:24                                      ; preds = %44, %14
  %25 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %26 = load i64, i64* %__parent, align 8
  %27 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %25, i64 %26
  %28 = bitcast %struct.b2Pair* %__value to i8*
  %29 = bitcast %struct.b2Pair* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %31 = load i64, i64* %__parent, align 8
  %32 = load i64, i64* %__len, align 8
  %33 = bitcast %struct.b2Pair* %3 to i8*
  %34 = bitcast %struct.b2Pair* %__value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false)
  %35 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %36 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = bitcast %struct.b2Pair* %3 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %40 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %39, align 8
  call void @_ZSt13__adjust_heapIP6b2PairlS0_N9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_(%struct.b2Pair* %30, i64 %31, i64 %32, i64 %38, i1 (%struct.b2Pair*, %struct.b2Pair*)* %40)
  %41 = load i64, i64* %__parent, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %24
  br label %47

; <label>:44                                      ; preds = %24
  %45 = load i64, i64* %__parent, align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %__parent, align 8
  br label %24

; <label>:47                                      ; preds = %43, %13
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt13__adjust_heapIP6b2PairlS0_N9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_(%struct.b2Pair* %__first, i64 %__holeIndex, i64 %__len, i64 %__value.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__value = alloca %struct.b2Pair, align 4
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %__topIndex = alloca i64, align 8
  %__secondChild = alloca i64, align 8
  %4 = alloca %struct.b2Pair, align 4
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %7 = bitcast %struct.b2Pair* %__value to i64*
  store i64 %__value.coerce, i64* %7, align 4
  %8 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %8, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store i64 %__holeIndex, i64* %2, align 8
  store i64 %__len, i64* %3, align 8
  %9 = load i64, i64* %2, align 8
  store i64 %9, i64* %__topIndex, align 8
  %10 = load i64, i64* %2, align 8
  store i64 %10, i64* %__secondChild, align 8
  br label %11

; <label>:11                                      ; preds = %32, %0
  %12 = load i64, i64* %__secondChild, align 8
  %13 = load i64, i64* %3, align 8
  %14 = sub nsw i64 %13, 1
  %15 = sdiv i64 %14, 2
  %16 = icmp slt i64 %12, %15
  br i1 %16, label %17, label %42

; <label>:17                                      ; preds = %11
  %18 = load i64, i64* %__secondChild, align 8
  %19 = add nsw i64 %18, 1
  %20 = mul nsw i64 2, %19
  store i64 %20, i64* %__secondChild, align 8
  %21 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %22 = load i64, i64* %__secondChild, align 8
  %23 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %21, i64 %22
  %24 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %25 = load i64, i64* %__secondChild, align 8
  %26 = sub nsw i64 %25, 1
  %27 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %24, i64 %26
  %28 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %23, %struct.b2Pair* %27)
  br i1 %28, label %29, label %32

; <label>:29                                      ; preds = %17
  %30 = load i64, i64* %__secondChild, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %__secondChild, align 8
  br label %32

; <label>:32                                      ; preds = %29, %17
  %33 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %34 = load i64, i64* %2, align 8
  %35 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %33, i64 %34
  %36 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %37 = load i64, i64* %__secondChild, align 8
  %38 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %36, i64 %37
  %39 = bitcast %struct.b2Pair* %35 to i8*
  %40 = bitcast %struct.b2Pair* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false)
  %41 = load i64, i64* %__secondChild, align 8
  store i64 %41, i64* %2, align 8
  br label %11

; <label>:42                                      ; preds = %11
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %67

; <label>:46                                      ; preds = %42
  %47 = load i64, i64* %__secondChild, align 8
  %48 = load i64, i64* %3, align 8
  %49 = sub nsw i64 %48, 2
  %50 = sdiv i64 %49, 2
  %51 = icmp eq i64 %47, %50
  br i1 %51, label %52, label %67

; <label>:52                                      ; preds = %46
  %53 = load i64, i64* %__secondChild, align 8
  %54 = add nsw i64 %53, 1
  %55 = mul nsw i64 2, %54
  store i64 %55, i64* %__secondChild, align 8
  %56 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %57 = load i64, i64* %2, align 8
  %58 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %56, i64 %57
  %59 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %60 = load i64, i64* %__secondChild, align 8
  %61 = sub nsw i64 %60, 1
  %62 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %59, i64 %61
  %63 = bitcast %struct.b2Pair* %58 to i8*
  %64 = bitcast %struct.b2Pair* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 4, i1 false)
  %65 = load i64, i64* %__secondChild, align 8
  %66 = sub nsw i64 %65, 1
  store i64 %66, i64* %2, align 8
  br label %67

; <label>:67                                      ; preds = %52, %46, %42
  %68 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* %__topIndex, align 8
  %71 = bitcast %struct.b2Pair* %4 to i8*
  %72 = bitcast %struct.b2Pair* %__value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 4, i1 false)
  %73 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  %74 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6, i32 0, i32 0
  %76 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %75, align 8
  %77 = call i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops15__iter_comp_valIPFbRK6b2PairS4_EEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS8_EE(i1 (%struct.b2Pair*, %struct.b2Pair*)* %76)
  %78 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %77, i1 (%struct.b2Pair*, %struct.b2Pair*)** %78, align 8
  %79 = bitcast %struct.b2Pair* %4 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %82 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %81, align 8
  call void @_ZSt11__push_heapIP6b2PairlS0_N9__gnu_cxx5__ops14_Iter_comp_valIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_(%struct.b2Pair* %68, i64 %69, i64 %70, i64 %80, i1 (%struct.b2Pair*, %struct.b2Pair*)* %82)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %struct.b2Pair* %__it1, %struct.b2Pair* %__it2) #0 comdat align 2 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  store %struct.b2Pair* %__it1, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__it2, %struct.b2Pair** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %6 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %9 = call zeroext i1 %6(%struct.b2Pair* dereferenceable(8) %7, %struct.b2Pair* dereferenceable(8) %8)
  ret i1 %9
}

; Function Attrs: inlinehint uwtable
define linkonce_odr i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops15__iter_comp_valIPFbRK6b2PairS4_EEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS8_EE(i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %2 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  %3 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  %4 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %3, align 8
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valIPFbRK6b2PairS4_EEC2ES6_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1, i1 (%struct.b2Pair*, %struct.b2Pair*)* %4)
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1, i32 0, i32 0
  %6 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  ret i1 (%struct.b2Pair*, %struct.b2Pair*)* %6
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valIPFbRK6b2PairS4_EEC2ES6_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp) unnamed_addr #2 comdat align 2 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %2 = alloca i1 (%struct.b2Pair*, %struct.b2Pair*)*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  %3 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %5 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %5, i1 (%struct.b2Pair*, %struct.b2Pair*)** %4, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt11__push_heapIP6b2PairlS0_N9__gnu_cxx5__ops14_Iter_comp_valIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_(%struct.b2Pair* %__first, i64 %__holeIndex, i64 %__topIndex, i64 %__value.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__value = alloca %struct.b2Pair, align 4
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %__parent = alloca i64, align 8
  %4 = bitcast %struct.b2Pair* %__value to i64*
  store i64 %__value.coerce, i64* %4, align 4
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store i64 %__holeIndex, i64* %2, align 8
  store i64 %__topIndex, i64* %3, align 8
  %6 = load i64, i64* %2, align 8
  %7 = sub nsw i64 %6, 1
  %8 = sdiv i64 %7, 2
  store i64 %8, i64* %__parent, align 8
  br label %9

; <label>:9                                       ; preds = %20, %0
  %10 = load i64, i64* %2, align 8
  %11 = load i64, i64* %3, align 8
  %12 = icmp sgt i64 %10, %11
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %9
  %14 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %15 = load i64, i64* %__parent, align 8
  %16 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %14, i64 %15
  %17 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valIPFbRK6b2PairS4_EEclIPS2_S2_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %16, %struct.b2Pair* dereferenceable(8) %__value)
  br label %18

; <label>:18                                      ; preds = %13, %9
  %19 = phi i1 [ false, %9 ], [ %17, %13 ]
  br i1 %19, label %20, label %33

; <label>:20                                      ; preds = %18
  %21 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %22 = load i64, i64* %2, align 8
  %23 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %21, i64 %22
  %24 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %25 = load i64, i64* %__parent, align 8
  %26 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %24, i64 %25
  %27 = bitcast %struct.b2Pair* %23 to i8*
  %28 = bitcast %struct.b2Pair* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = load i64, i64* %__parent, align 8
  store i64 %29, i64* %2, align 8
  %30 = load i64, i64* %2, align 8
  %31 = sub nsw i64 %30, 1
  %32 = sdiv i64 %31, 2
  store i64 %32, i64* %__parent, align 8
  br label %9

; <label>:33                                      ; preds = %18
  %34 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %35 = load i64, i64* %2, align 8
  %36 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %34, i64 %35
  %37 = bitcast %struct.b2Pair* %36 to i8*
  %38 = bitcast %struct.b2Pair* %__value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valIPFbRK6b2PairS4_EEclIPS2_S2_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %struct.b2Pair* %__it, %struct.b2Pair* dereferenceable(8) %__val) #0 comdat align 2 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  store %struct.b2Pair* %__it, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__val, %struct.b2Pair** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %6 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %9 = call zeroext i1 %6(%struct.b2Pair* dereferenceable(8) %7, %struct.b2Pair* dereferenceable(8) %8)
  ret i1 %9
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZSt10__pop_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, %struct.b2Pair* %__result, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %__value = alloca %struct.b2Pair, align 4
  %4 = alloca %struct.b2Pair, align 4
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %6, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__result, %struct.b2Pair** %3, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %8 = bitcast %struct.b2Pair* %__value to i8*
  %9 = bitcast %struct.b2Pair* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false)
  %10 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %11 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %12 = bitcast %struct.b2Pair* %10 to i8*
  %13 = bitcast %struct.b2Pair* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %15 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %16 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %17 = ptrtoint %struct.b2Pair* %15 to i64
  %18 = ptrtoint %struct.b2Pair* %16 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 8
  %21 = bitcast %struct.b2Pair* %4 to i8*
  %22 = bitcast %struct.b2Pair* %__value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  %24 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = bitcast %struct.b2Pair* %4 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %28 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %27, align 8
  call void @_ZSt13__adjust_heapIP6b2PairlS0_N9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_T0_SB_T1_T2_(%struct.b2Pair* %14, i64 0, i64 %20, i64 %26, i1 (%struct.b2Pair*, %struct.b2Pair*)* %28)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt11__sort_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %4, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  br label %5

; <label>:5                                       ; preds = %13, %0
  %6 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %8 = ptrtoint %struct.b2Pair* %6 to i64
  %9 = ptrtoint %struct.b2Pair* %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 8
  %12 = icmp sgt i64 %11, 1
  br i1 %12, label %13, label %23

; <label>:13                                      ; preds = %5
  %14 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %15 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %14, i32 -1
  store %struct.b2Pair* %15, %struct.b2Pair** %2, align 8
  %16 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %17 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %18 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %19 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3 to i8*
  %20 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %22 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %21, align 8
  call void @_ZSt10__pop_heapIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_T0_(%struct.b2Pair* %16, %struct.b2Pair* %17, %struct.b2Pair* %18, i1 (%struct.b2Pair*, %struct.b2Pair*)* %22)
  br label %5

; <label>:23                                      ; preds = %5
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr %struct.b2Pair* @_ZSt27__unguarded_partition_pivotIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEET_SA_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %__mid = alloca %struct.b2Pair*, align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %9 = ptrtoint %struct.b2Pair* %7 to i64
  %10 = ptrtoint %struct.b2Pair* %8 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 8
  %13 = sdiv i64 %12, 2
  %14 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %6, i64 %13
  store %struct.b2Pair* %14, %struct.b2Pair** %__mid, align 8
  %15 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %16 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %17 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %16, i64 1
  %18 = load %struct.b2Pair*, %struct.b2Pair** %__mid, align 8
  %19 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %20 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %19, i64 -1
  %21 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3 to i8*
  %22 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %24 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %23, align 8
  call void @_ZSt22__move_median_to_firstIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_SA_T0_(%struct.b2Pair* %15, %struct.b2Pair* %17, %struct.b2Pair* %18, %struct.b2Pair* %20, i1 (%struct.b2Pair*, %struct.b2Pair*)* %24)
  %25 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %26 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %25, i64 1
  %27 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %28 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %29 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false)
  %31 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %32 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %31, align 8
  %33 = call %struct.b2Pair* @_ZSt21__unguarded_partitionIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEET_SA_SA_SA_T0_(%struct.b2Pair* %26, %struct.b2Pair* %27, %struct.b2Pair* %28, i1 (%struct.b2Pair*, %struct.b2Pair*)* %32)
  ret %struct.b2Pair* %33
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt22__move_median_to_firstIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_SA_SA_T0_(%struct.b2Pair* %__result, %struct.b2Pair* %__a, %struct.b2Pair* %__b, %struct.b2Pair* %__c, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %4 = alloca %struct.b2Pair*, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__result, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__a, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__b, %struct.b2Pair** %3, align 8
  store %struct.b2Pair* %__c, %struct.b2Pair** %4, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %8 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %6, %struct.b2Pair* %7)
  br i1 %8, label %9, label %28

; <label>:9                                       ; preds = %0
  %10 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %11 = load %struct.b2Pair*, %struct.b2Pair** %4, align 8
  %12 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %10, %struct.b2Pair* %11)
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %9
  %14 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %15 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %14, %struct.b2Pair* %15)
  br label %27

; <label>:16                                      ; preds = %9
  %17 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %18 = load %struct.b2Pair*, %struct.b2Pair** %4, align 8
  %19 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %17, %struct.b2Pair* %18)
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %16
  %21 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %22 = load %struct.b2Pair*, %struct.b2Pair** %4, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %21, %struct.b2Pair* %22)
  br label %26

; <label>:23                                      ; preds = %16
  %24 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %25 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %24, %struct.b2Pair* %25)
  br label %26

; <label>:26                                      ; preds = %23, %20
  br label %27

; <label>:27                                      ; preds = %26, %13
  br label %47

; <label>:28                                      ; preds = %0
  %29 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %30 = load %struct.b2Pair*, %struct.b2Pair** %4, align 8
  %31 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %29, %struct.b2Pair* %30)
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %28
  %33 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %34 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %33, %struct.b2Pair* %34)
  br label %46

; <label>:35                                      ; preds = %28
  %36 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %37 = load %struct.b2Pair*, %struct.b2Pair** %4, align 8
  %38 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %36, %struct.b2Pair* %37)
  br i1 %38, label %39, label %42

; <label>:39                                      ; preds = %35
  %40 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %41 = load %struct.b2Pair*, %struct.b2Pair** %4, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %40, %struct.b2Pair* %41)
  br label %45

; <label>:42                                      ; preds = %35
  %43 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %44 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %43, %struct.b2Pair* %44)
  br label %45

; <label>:45                                      ; preds = %42, %39
  br label %46

; <label>:46                                      ; preds = %45, %32
  br label %47

; <label>:47                                      ; preds = %46, %27
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %__a, %struct.b2Pair* %__b) #0 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__a, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__b, %struct.b2Pair** %2, align 8
  %3 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %4 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  call void @_ZNSt11__iter_swapILb1EE9iter_swapIP6b2PairS3_EEvT_T0_(%struct.b2Pair* %3, %struct.b2Pair* %4)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt11__iter_swapILb1EE9iter_swapIP6b2PairS3_EEvT_T0_(%struct.b2Pair* %__a, %struct.b2Pair* %__b) #0 comdat align 2 {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__a, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__b, %struct.b2Pair** %2, align 8
  %3 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %4 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  call void @_ZSt4swapI6b2PairEvRT_S2_(%struct.b2Pair* dereferenceable(8) %3, %struct.b2Pair* dereferenceable(8) %4)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZSt4swapI6b2PairEvRT_S2_(%struct.b2Pair* dereferenceable(8) %__a, %struct.b2Pair* dereferenceable(8) %__b) #5 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %__tmp = alloca %struct.b2Pair, align 4
  store %struct.b2Pair* %__a, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__b, %struct.b2Pair** %2, align 8
  %3 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %4 = bitcast %struct.b2Pair* %__tmp to i8*
  %5 = bitcast %struct.b2Pair* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 4, i1 false)
  %6 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = bitcast %struct.b2Pair* %6 to i8*
  %9 = bitcast %struct.b2Pair* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false)
  %10 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %11 = bitcast %struct.b2Pair* %10 to i8*
  %12 = bitcast %struct.b2Pair* %__tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr %struct.b2Pair* @_ZSt21__unguarded_partitionIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEET_SA_SA_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, %struct.b2Pair* %__pivot, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %4, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__pivot, %struct.b2Pair** %3, align 8
  br label %5

; <label>:5                                       ; preds = %29, %0
  br label %6

; <label>:6                                       ; preds = %10, %5
  %7 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %9 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %7, %struct.b2Pair* %8)
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %6
  %11 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %12 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %11, i32 1
  store %struct.b2Pair* %12, %struct.b2Pair** %1, align 8
  br label %6

; <label>:13                                      ; preds = %6
  %14 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %15 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %14, i32 -1
  store %struct.b2Pair* %15, %struct.b2Pair** %2, align 8
  br label %16

; <label>:16                                      ; preds = %20, %13
  %17 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %18 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %19 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %17, %struct.b2Pair* %18)
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %16
  %21 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %22 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %21, i32 -1
  store %struct.b2Pair* %22, %struct.b2Pair** %2, align 8
  br label %16

; <label>:23                                      ; preds = %16
  %24 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %25 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %26 = icmp ult %struct.b2Pair* %24, %25
  br i1 %26, label %29, label %27

; <label>:27                                      ; preds = %23
  %28 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  ret %struct.b2Pair* %28

; <label>:29                                      ; preds = %23
  %30 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %31 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  call void @_ZSt9iter_swapIP6b2PairS1_EvT_T0_(%struct.b2Pair* %30, %struct.b2Pair* %31)
  %32 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %33 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %32, i32 1
  store %struct.b2Pair* %33, %struct.b2Pair** %1, align 8
  br label %5
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt22__final_insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %6, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %9 = ptrtoint %struct.b2Pair* %7 to i64
  %10 = ptrtoint %struct.b2Pair* %8 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 8
  %13 = icmp sgt i64 %12, 16
  br i1 %13, label %14, label %29

; <label>:14                                      ; preds = %0
  %15 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %16 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %17 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %16, i64 16
  %18 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3 to i8*
  %19 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %21 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %20, align 8
  call void @_ZSt16__insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %15, %struct.b2Pair* %17, i1 (%struct.b2Pair*, %struct.b2Pair*)* %21)
  %22 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %23 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %22, i64 16
  %24 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %25 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %26 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %28 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %27, align 8
  call void @_ZSt26__unguarded_insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %23, %struct.b2Pair* %24, i1 (%struct.b2Pair*, %struct.b2Pair*)* %28)
  br label %36

; <label>:29                                      ; preds = %0
  %30 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %31 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %32 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  %33 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5, i32 0, i32 0
  %35 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %34, align 8
  call void @_ZSt16__insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %30, %struct.b2Pair* %31, i1 (%struct.b2Pair*, %struct.b2Pair*)* %35)
  br label %36

; <label>:36                                      ; preds = %29, %14
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt16__insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %__i = alloca %struct.b2Pair*, align 8
  %__val = alloca %struct.b2Pair, align 4
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = icmp eq %struct.b2Pair* %6, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %47

; <label>:10                                      ; preds = %0
  %11 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %12 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %11, i64 1
  store %struct.b2Pair* %12, %struct.b2Pair** %__i, align 8
  br label %13

; <label>:13                                      ; preds = %44, %10
  %14 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %15 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %16 = icmp ne %struct.b2Pair* %14, %15
  br i1 %16, label %17, label %47

; <label>:17                                      ; preds = %13
  %18 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %19 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %20 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRK6b2PairS4_EEclIPS2_S9_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* %18, %struct.b2Pair* %19)
  br i1 %20, label %21, label %33

; <label>:21                                      ; preds = %17
  %22 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %23 = bitcast %struct.b2Pair* %__val to i8*
  %24 = bitcast %struct.b2Pair* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false)
  %25 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %26 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %27 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %28 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %27, i64 1
  %29 = call %struct.b2Pair* @_ZSt13copy_backwardIP6b2PairS1_ET0_T_S3_S2_(%struct.b2Pair* %25, %struct.b2Pair* %26, %struct.b2Pair* %28)
  %30 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %31 = bitcast %struct.b2Pair* %30 to i8*
  %32 = bitcast %struct.b2Pair* %__val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 4, i1 false)
  br label %43

; <label>:33                                      ; preds = %17
  %34 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %35 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %36 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %38 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %37, align 8
  %39 = call i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops15__val_comp_iterIPFbRK6b2PairS4_EEENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS8_EE(i1 (%struct.b2Pair*, %struct.b2Pair*)* %38)
  %40 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %39, i1 (%struct.b2Pair*, %struct.b2Pair*)** %40, align 8
  %41 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %42 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %41, align 8
  call void @_ZSt25__unguarded_linear_insertIP6b2PairN9__gnu_cxx5__ops14_Val_comp_iterIPFbRKS0_S6_EEEEvT_T0_(%struct.b2Pair* %34, i1 (%struct.b2Pair*, %struct.b2Pair*)* %42)
  br label %43

; <label>:43                                      ; preds = %33, %21
  br label %44

; <label>:44                                      ; preds = %43
  %45 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %46 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %45, i32 1
  store %struct.b2Pair* %46, %struct.b2Pair** %__i, align 8
  br label %13

; <label>:47                                      ; preds = %13, %9
  ret void
}

; Function Attrs: uwtable
define linkonce_odr %struct.b2Pair* @_ZSt13copy_backwardIP6b2PairS1_ET0_T_S3_S2_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, %struct.b2Pair* %__result) #0 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__result, %struct.b2Pair** %3, align 8
  %4 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %5 = call %struct.b2Pair* @_ZSt12__miter_baseIP6b2PairENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %4)
  %6 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %7 = call %struct.b2Pair* @_ZSt12__miter_baseIP6b2PairENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %6)
  %8 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %9 = call %struct.b2Pair* @_ZSt23__copy_move_backward_a2ILb0EP6b2PairS1_ET1_T0_S3_S2_(%struct.b2Pair* %5, %struct.b2Pair* %7, %struct.b2Pair* %8)
  ret %struct.b2Pair* %9
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %struct.b2Pair* @_ZSt12__miter_baseIP6b2PairENSt11_Miter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %__it) #5 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__it, %struct.b2Pair** %1, align 8
  %2 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %3 = call %struct.b2Pair* @_ZNSt10_Iter_baseIP6b2PairLb0EE7_S_baseES1_(%struct.b2Pair* %2)
  ret %struct.b2Pair* %3
}

; Function Attrs: nounwind uwtable
define linkonce_odr %struct.b2Pair* @_ZNSt10_Iter_baseIP6b2PairLb0EE7_S_baseES1_(%struct.b2Pair* %__it) #2 comdat align 2 {
  %1 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__it, %struct.b2Pair** %1, align 8
  %2 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  ret %struct.b2Pair* %2
}

; Function Attrs: inlinehint uwtable
define linkonce_odr %struct.b2Pair* @_ZSt23__copy_move_backward_a2ILb0EP6b2PairS1_ET1_T0_S3_S2_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, %struct.b2Pair* %__result) #1 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__result, %struct.b2Pair** %3, align 8
  %4 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %5 = call %struct.b2Pair* @_ZSt12__niter_baseIP6b2PairENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %4)
  %6 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %7 = call %struct.b2Pair* @_ZSt12__niter_baseIP6b2PairENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %6)
  %8 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %9 = call %struct.b2Pair* @_ZSt12__niter_baseIP6b2PairENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %8)
  %10 = call %struct.b2Pair* @_ZSt22__copy_move_backward_aILb0EP6b2PairS1_ET1_T0_S3_S2_(%struct.b2Pair* %5, %struct.b2Pair* %7, %struct.b2Pair* %9)
  ret %struct.b2Pair* %10
}

; Function Attrs: inlinehint uwtable
define linkonce_odr %struct.b2Pair* @_ZSt12__niter_baseIP6b2PairENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.b2Pair* %__it) #1 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  store %struct.b2Pair* %__it, %struct.b2Pair** %1, align 8
  %2 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %3 = call %struct.b2Pair* @_ZNSt10_Iter_baseIP6b2PairLb0EE7_S_baseES1_(%struct.b2Pair* %2)
  ret %struct.b2Pair* %3
}

; Function Attrs: inlinehint uwtable
define linkonce_odr %struct.b2Pair* @_ZSt22__copy_move_backward_aILb0EP6b2PairS1_ET1_T0_S3_S2_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, %struct.b2Pair* %__result) #1 comdat {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %__simple = alloca i8, align 1
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__result, %struct.b2Pair** %3, align 8
  store i8 1, i8* %__simple, align 1
  %4 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %5 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %7 = call %struct.b2Pair* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI6b2PairEEPT_PKS4_S7_S5_(%struct.b2Pair* %4, %struct.b2Pair* %5, %struct.b2Pair* %6)
  ret %struct.b2Pair* %7
}

; Function Attrs: nounwind uwtable
define linkonce_odr %struct.b2Pair* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI6b2PairEEPT_PKS4_S7_S5_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, %struct.b2Pair* %__result) #2 comdat align 2 {
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  %_Num = alloca i64, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__result, %struct.b2Pair** %3, align 8
  %4 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %5 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %6 = ptrtoint %struct.b2Pair* %4 to i64
  %7 = ptrtoint %struct.b2Pair* %5 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 8
  store i64 %9, i64* %_Num, align 8
  %10 = load i64, i64* %_Num, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %22

; <label>:12                                      ; preds = %0
  %13 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %14 = load i64, i64* %_Num, align 8
  %15 = sub i64 0, %14
  %16 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %13, i64 %15
  %17 = bitcast %struct.b2Pair* %16 to i8*
  %18 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %19 = bitcast %struct.b2Pair* %18 to i8*
  %20 = load i64, i64* %_Num, align 8
  %21 = mul i64 8, %20
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %17, i8* %19, i64 %21, i32 4, i1 false)
  br label %22

; <label>:22                                      ; preds = %12, %0
  %23 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %24 = load i64, i64* %_Num, align 8
  %25 = sub i64 0, %24
  %26 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %23, i64 %25
  ret %struct.b2Pair* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: inlinehint uwtable
define linkonce_odr i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops15__val_comp_iterIPFbRK6b2PairS4_EEENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS8_EE(i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %2 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  %3 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  %4 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %3, align 8
  call void @_ZN9__gnu_cxx5__ops14_Val_comp_iterIPFbRK6b2PairS4_EEC2ES6_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1, i1 (%struct.b2Pair*, %struct.b2Pair*)* %4)
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1, i32 0, i32 0
  %6 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  ret i1 (%struct.b2Pair*, %struct.b2Pair*)* %6
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Val_comp_iterIPFbRK6b2PairS4_EEC2ES6_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp) unnamed_addr #2 comdat align 2 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %2 = alloca i1 (%struct.b2Pair*, %struct.b2Pair*)*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  %3 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %5 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %5, i1 (%struct.b2Pair*, %struct.b2Pair*)** %4, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZSt25__unguarded_linear_insertIP6b2PairN9__gnu_cxx5__ops14_Val_comp_iterIPFbRKS0_S6_EEEEvT_T0_(%struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #0 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %__val = alloca %struct.b2Pair, align 4
  %__next = alloca %struct.b2Pair*, align 8
  %2 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %2, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %1, align 8
  %3 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %4 = bitcast %struct.b2Pair* %__val to i8*
  %5 = bitcast %struct.b2Pair* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 4, i1 false)
  %6 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %6, %struct.b2Pair** %__next, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %__next, align 8
  %8 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %7, i32 -1
  store %struct.b2Pair* %8, %struct.b2Pair** %__next, align 8
  br label %9

; <label>:9                                       ; preds = %12, %0
  %10 = load %struct.b2Pair*, %struct.b2Pair** %__next, align 8
  %11 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Val_comp_iterIPFbRK6b2PairS4_EEclIS2_PS2_EEbRT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, %struct.b2Pair* dereferenceable(8) %__val, %struct.b2Pair* %10)
  br i1 %11, label %12, label %20

; <label>:12                                      ; preds = %9
  %13 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %14 = load %struct.b2Pair*, %struct.b2Pair** %__next, align 8
  %15 = bitcast %struct.b2Pair* %13 to i8*
  %16 = bitcast %struct.b2Pair* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 4, i1 false)
  %17 = load %struct.b2Pair*, %struct.b2Pair** %__next, align 8
  store %struct.b2Pair* %17, %struct.b2Pair** %1, align 8
  %18 = load %struct.b2Pair*, %struct.b2Pair** %__next, align 8
  %19 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %18, i32 -1
  store %struct.b2Pair* %19, %struct.b2Pair** %__next, align 8
  br label %9

; <label>:20                                      ; preds = %9
  %21 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  %22 = bitcast %struct.b2Pair* %21 to i8*
  %23 = bitcast %struct.b2Pair* %__val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Val_comp_iterIPFbRK6b2PairS4_EEclIS2_PS2_EEbRT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %struct.b2Pair* dereferenceable(8) %__val, %struct.b2Pair* %__it) #0 comdat align 2 {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %3 = alloca %struct.b2Pair*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  store %struct.b2Pair* %__val, %struct.b2Pair** %2, align 8
  store %struct.b2Pair* %__it, %struct.b2Pair** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %1, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %6 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  %7 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %8 = load %struct.b2Pair*, %struct.b2Pair** %3, align 8
  %9 = call zeroext i1 %6(%struct.b2Pair* dereferenceable(8) %7, %struct.b2Pair* dereferenceable(8) %8)
  ret i1 %9
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZSt26__unguarded_insertion_sortIP6b2PairN9__gnu_cxx5__ops15_Iter_comp_iterIPFbRKS0_S6_EEEEvT_SA_T0_(%struct.b2Pair* %__first, %struct.b2Pair* %__last, i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce) #1 comdat {
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %1 = alloca %struct.b2Pair*, align 8
  %2 = alloca %struct.b2Pair*, align 8
  %__i = alloca %struct.b2Pair*, align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %__comp.coerce, i1 (%struct.b2Pair*, %struct.b2Pair*)** %5, align 8
  store %struct.b2Pair* %__first, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %__last, %struct.b2Pair** %2, align 8
  %6 = load %struct.b2Pair*, %struct.b2Pair** %1, align 8
  store %struct.b2Pair* %6, %struct.b2Pair** %__i, align 8
  br label %7

; <label>:7                                       ; preds = %21, %0
  %8 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %9 = load %struct.b2Pair*, %struct.b2Pair** %2, align 8
  %10 = icmp ne %struct.b2Pair* %8, %9
  br i1 %10, label %11, label %24

; <label>:11                                      ; preds = %7
  %12 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %13 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4 to i8*
  %14 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %__comp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  %16 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %15, align 8
  %17 = call i1 (%struct.b2Pair*, %struct.b2Pair*)* @_ZN9__gnu_cxx5__ops15__val_comp_iterIPFbRK6b2PairS4_EEENS0_14_Val_comp_iterIT_EENS0_15_Iter_comp_iterIS8_EE(i1 (%struct.b2Pair*, %struct.b2Pair*)* %16)
  %18 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  store i1 (%struct.b2Pair*, %struct.b2Pair*)* %17, i1 (%struct.b2Pair*, %struct.b2Pair*)** %18, align 8
  %19 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %3, i32 0, i32 0
  %20 = load i1 (%struct.b2Pair*, %struct.b2Pair*)*, i1 (%struct.b2Pair*, %struct.b2Pair*)** %19, align 8
  call void @_ZSt25__unguarded_linear_insertIP6b2PairN9__gnu_cxx5__ops14_Val_comp_iterIPFbRKS0_S6_EEEEvT_T0_(%struct.b2Pair* %12, i1 (%struct.b2Pair*, %struct.b2Pair*)* %20)
  br label %21

; <label>:21                                      ; preds = %11
  %22 = load %struct.b2Pair*, %struct.b2Pair** %__i, align 8
  %23 = getelementptr inbounds %struct.b2Pair, %struct.b2Pair* %22, i32 1
  store %struct.b2Pair* %23, %struct.b2Pair** %__i, align 8
  br label %7

; <label>:24                                      ; preds = %7
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i8* @_ZNK13b2DynamicTree11GetUserDataEi(%class.b2DynamicTree* %this, i32 %proxyId) #5 comdat align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp sle i32 0, %4
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %6
  br label %14

; <label>:12                                      ; preds = %6, %0
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2.225, i32 0, i32 0), i32 158, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree11GetUserDataEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %18 = load %struct.b2TreeNode*, %struct.b2TreeNode** %17, align 8
  %19 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %18, i64 %16
  %20 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %19, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  ret i8* %21
}

; Function Attrs: uwtable
define void @_ZN16b2ContactManager7AddPairEPvS0_(%class.b2ContactManager* %this, i8* %proxyUserDataA, i8* %proxyUserDataB) #0 align 2 {
  %1 = alloca %class.b2ContactManager*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %proxyA = alloca %struct.b2FixtureProxy*, align 8
  %proxyB = alloca %struct.b2FixtureProxy*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %edge = alloca %struct.b2ContactEdge*, align 8
  %fA = alloca %class.b2Fixture*, align 8
  %fB = alloca %class.b2Fixture*, align 8
  %iA = alloca i32, align 4
  %iB = alloca i32, align 4
  %c = alloca %class.b2Contact*, align 8
  store %class.b2ContactManager* %this, %class.b2ContactManager** %1, align 8
  store i8* %proxyUserDataA, i8** %2, align 8
  store i8* %proxyUserDataB, i8** %3, align 8
  %4 = load %class.b2ContactManager*, %class.b2ContactManager** %1, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.b2FixtureProxy*
  store %struct.b2FixtureProxy* %6, %struct.b2FixtureProxy** %proxyA, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.b2FixtureProxy*
  store %struct.b2FixtureProxy* %8, %struct.b2FixtureProxy** %proxyB, align 8
  %9 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxyA, align 8
  %10 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %9, i32 0, i32 1
  %11 = load %class.b2Fixture*, %class.b2Fixture** %10, align 8
  store %class.b2Fixture* %11, %class.b2Fixture** %fixtureA, align 8
  %12 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxyB, align 8
  %13 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %12, i32 0, i32 1
  %14 = load %class.b2Fixture*, %class.b2Fixture** %13, align 8
  store %class.b2Fixture* %14, %class.b2Fixture** %fixtureB, align 8
  %15 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxyA, align 8
  %16 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %indexA, align 4
  %18 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxyB, align 8
  %19 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %indexB, align 4
  %21 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %22 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %21)
  store %class.b2Body* %22, %class.b2Body** %bodyA, align 8
  %23 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %24 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %23)
  store %class.b2Body* %24, %class.b2Body** %bodyB, align 8
  %25 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %26 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %27 = icmp eq %class.b2Body* %25, %26
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %0
  br label %236

; <label>:29                                      ; preds = %0
  %30 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %31 = call %struct.b2ContactEdge* @_ZN6b2Body14GetContactListEv(%class.b2Body* %30)
  store %struct.b2ContactEdge* %31, %struct.b2ContactEdge** %edge, align 8
  br label %32

; <label>:32                                      ; preds = %92, %29
  %33 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %34 = icmp ne %struct.b2ContactEdge* %33, null
  br i1 %34, label %35, label %96

; <label>:35                                      ; preds = %32
  %36 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %37 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %36, i32 0, i32 0
  %38 = load %class.b2Body*, %class.b2Body** %37, align 8
  %39 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %40 = icmp eq %class.b2Body* %38, %39
  br i1 %40, label %41, label %92

; <label>:41                                      ; preds = %35
  %42 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %43 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %42, i32 0, i32 1
  %44 = load %class.b2Contact*, %class.b2Contact** %43, align 8
  %45 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %44)
  store %class.b2Fixture* %45, %class.b2Fixture** %fA, align 8
  %46 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %47 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %46, i32 0, i32 1
  %48 = load %class.b2Contact*, %class.b2Contact** %47, align 8
  %49 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %48)
  store %class.b2Fixture* %49, %class.b2Fixture** %fB, align 8
  %50 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %51 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %50, i32 0, i32 1
  %52 = load %class.b2Contact*, %class.b2Contact** %51, align 8
  %53 = call i32 @_ZNK9b2Contact14GetChildIndexAEv(%class.b2Contact* %52)
  store i32 %53, i32* %iA, align 4
  %54 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %55 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %54, i32 0, i32 1
  %56 = load %class.b2Contact*, %class.b2Contact** %55, align 8
  %57 = call i32 @_ZNK9b2Contact14GetChildIndexBEv(%class.b2Contact* %56)
  store i32 %57, i32* %iB, align 4
  %58 = load %class.b2Fixture*, %class.b2Fixture** %fA, align 8
  %59 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %60 = icmp eq %class.b2Fixture* %58, %59
  br i1 %60, label %61, label %74

; <label>:61                                      ; preds = %41
  %62 = load %class.b2Fixture*, %class.b2Fixture** %fB, align 8
  %63 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %64 = icmp eq %class.b2Fixture* %62, %63
  br i1 %64, label %65, label %74

; <label>:65                                      ; preds = %61
  %66 = load i32, i32* %iA, align 4
  %67 = load i32, i32* %indexA, align 4
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %69, label %74

; <label>:69                                      ; preds = %65
  %70 = load i32, i32* %iB, align 4
  %71 = load i32, i32* %indexB, align 4
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %69
  br label %236

; <label>:74                                      ; preds = %69, %65, %61, %41
  %75 = load %class.b2Fixture*, %class.b2Fixture** %fA, align 8
  %76 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %77 = icmp eq %class.b2Fixture* %75, %76
  br i1 %77, label %78, label %91

; <label>:78                                      ; preds = %74
  %79 = load %class.b2Fixture*, %class.b2Fixture** %fB, align 8
  %80 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %81 = icmp eq %class.b2Fixture* %79, %80
  br i1 %81, label %82, label %91

; <label>:82                                      ; preds = %78
  %83 = load i32, i32* %iA, align 4
  %84 = load i32, i32* %indexB, align 4
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %86, label %91

; <label>:86                                      ; preds = %82
  %87 = load i32, i32* %iB, align 4
  %88 = load i32, i32* %indexA, align 4
  %89 = icmp eq i32 %87, %88
  br i1 %89, label %90, label %91

; <label>:90                                      ; preds = %86
  br label %236

; <label>:91                                      ; preds = %86, %82, %78, %74
  br label %92

; <label>:92                                      ; preds = %91, %35
  %93 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %94 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %93, i32 0, i32 3
  %95 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %94, align 8
  store %struct.b2ContactEdge* %95, %struct.b2ContactEdge** %edge, align 8
  br label %32

; <label>:96                                      ; preds = %32
  %97 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 3
  %98 = load %class.b2ContactFilter*, %class.b2ContactFilter** %97, align 8
  %99 = icmp ne %class.b2ContactFilter* %98, null
  br i1 %99, label %100, label %113

; <label>:100                                     ; preds = %96
  %101 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 3
  %102 = load %class.b2ContactFilter*, %class.b2ContactFilter** %101, align 8
  %103 = bitcast %class.b2ContactFilter* %102 to i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)***
  %104 = load i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)**, i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)*, i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)** %104, i64 2
  %106 = load i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)*, i1 (%class.b2ContactFilter*, %class.b2Fixture*, %class.b2Fixture*)** %105, align 8
  %107 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %108 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %109 = call zeroext i1 %106(%class.b2ContactFilter* %102, %class.b2Fixture* %107, %class.b2Fixture* %108)
  %110 = zext i1 %109 to i32
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

; <label>:112                                     ; preds = %100
  br label %236

; <label>:113                                     ; preds = %100, %96
  %114 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %115 = load i32, i32* %indexA, align 4
  %116 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %117 = load i32, i32* %indexB, align 4
  %118 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 5
  %119 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %118, align 8
  %120 = call %class.b2Contact* @_ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator(%class.b2Fixture* %114, i32 %115, %class.b2Fixture* %116, i32 %117, %class.b2BlockAllocator* %119)
  store %class.b2Contact* %120, %class.b2Contact** %c, align 8
  %121 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %122 = icmp eq %class.b2Contact* %121, null
  br i1 %122, label %123, label %124

; <label>:123                                     ; preds = %113
  br label %236

; <label>:124                                     ; preds = %113
  %125 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %126 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %125)
  store %class.b2Fixture* %126, %class.b2Fixture** %fixtureA, align 8
  %127 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %128 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %127)
  store %class.b2Fixture* %128, %class.b2Fixture** %fixtureB, align 8
  %129 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %130 = call i32 @_ZNK9b2Contact14GetChildIndexAEv(%class.b2Contact* %129)
  store i32 %130, i32* %indexA, align 4
  %131 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %132 = call i32 @_ZNK9b2Contact14GetChildIndexBEv(%class.b2Contact* %131)
  store i32 %132, i32* %indexB, align 4
  %133 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %134 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %133)
  store %class.b2Body* %134, %class.b2Body** %bodyA, align 8
  %135 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %136 = call %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %135)
  store %class.b2Body* %136, %class.b2Body** %bodyB, align 8
  %137 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %138 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %137, i32 0, i32 3
  store %class.b2Contact* null, %class.b2Contact** %138, align 8
  %139 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 1
  %140 = load %class.b2Contact*, %class.b2Contact** %139, align 8
  %141 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %142 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %141, i32 0, i32 4
  store %class.b2Contact* %140, %class.b2Contact** %142, align 8
  %143 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 1
  %144 = load %class.b2Contact*, %class.b2Contact** %143, align 8
  %145 = icmp ne %class.b2Contact* %144, null
  br i1 %145, label %146, label %151

; <label>:146                                     ; preds = %124
  %147 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %148 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 1
  %149 = load %class.b2Contact*, %class.b2Contact** %148, align 8
  %150 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %149, i32 0, i32 3
  store %class.b2Contact* %147, %class.b2Contact** %150, align 8
  br label %151

; <label>:151                                     ; preds = %146, %124
  %152 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %153 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 1
  store %class.b2Contact* %152, %class.b2Contact** %153, align 8
  %154 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %155 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %156 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %155, i32 0, i32 5
  %157 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %156, i32 0, i32 1
  store %class.b2Contact* %154, %class.b2Contact** %157, align 8
  %158 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %159 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %160 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %159, i32 0, i32 5
  %161 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %160, i32 0, i32 0
  store %class.b2Body* %158, %class.b2Body** %161, align 8
  %162 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %163 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %162, i32 0, i32 5
  %164 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %163, i32 0, i32 2
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %164, align 8
  %165 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %166 = getelementptr inbounds %class.b2Body, %class.b2Body* %165, i32 0, i32 15
  %167 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %166, align 8
  %168 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %169 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %168, i32 0, i32 5
  %170 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %169, i32 0, i32 3
  store %struct.b2ContactEdge* %167, %struct.b2ContactEdge** %170, align 8
  %171 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %172 = getelementptr inbounds %class.b2Body, %class.b2Body* %171, i32 0, i32 15
  %173 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %172, align 8
  %174 = icmp ne %struct.b2ContactEdge* %173, null
  br i1 %174, label %175, label %182

; <label>:175                                     ; preds = %151
  %176 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %177 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %176, i32 0, i32 5
  %178 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %179 = getelementptr inbounds %class.b2Body, %class.b2Body* %178, i32 0, i32 15
  %180 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %179, align 8
  %181 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %180, i32 0, i32 2
  store %struct.b2ContactEdge* %177, %struct.b2ContactEdge** %181, align 8
  br label %182

; <label>:182                                     ; preds = %175, %151
  %183 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %184 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %183, i32 0, i32 5
  %185 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %186 = getelementptr inbounds %class.b2Body, %class.b2Body* %185, i32 0, i32 15
  store %struct.b2ContactEdge* %184, %struct.b2ContactEdge** %186, align 8
  %187 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %188 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %189 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %188, i32 0, i32 6
  %190 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %189, i32 0, i32 1
  store %class.b2Contact* %187, %class.b2Contact** %190, align 8
  %191 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %192 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %193 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %192, i32 0, i32 6
  %194 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %193, i32 0, i32 0
  store %class.b2Body* %191, %class.b2Body** %194, align 8
  %195 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %196 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %195, i32 0, i32 6
  %197 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %196, i32 0, i32 2
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %197, align 8
  %198 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %199 = getelementptr inbounds %class.b2Body, %class.b2Body* %198, i32 0, i32 15
  %200 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %199, align 8
  %201 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %202 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %201, i32 0, i32 6
  %203 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %202, i32 0, i32 3
  store %struct.b2ContactEdge* %200, %struct.b2ContactEdge** %203, align 8
  %204 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %205 = getelementptr inbounds %class.b2Body, %class.b2Body* %204, i32 0, i32 15
  %206 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %205, align 8
  %207 = icmp ne %struct.b2ContactEdge* %206, null
  br i1 %207, label %208, label %215

; <label>:208                                     ; preds = %182
  %209 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %210 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %209, i32 0, i32 6
  %211 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %212 = getelementptr inbounds %class.b2Body, %class.b2Body* %211, i32 0, i32 15
  %213 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %212, align 8
  %214 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %213, i32 0, i32 2
  store %struct.b2ContactEdge* %210, %struct.b2ContactEdge** %214, align 8
  br label %215

; <label>:215                                     ; preds = %208, %182
  %216 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %217 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %216, i32 0, i32 6
  %218 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %219 = getelementptr inbounds %class.b2Body, %class.b2Body* %218, i32 0, i32 15
  store %struct.b2ContactEdge* %217, %struct.b2ContactEdge** %219, align 8
  %220 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %221 = call zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %220)
  %222 = zext i1 %221 to i32
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %232

; <label>:224                                     ; preds = %215
  %225 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %226 = call zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %225)
  %227 = zext i1 %226 to i32
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %232

; <label>:229                                     ; preds = %224
  %230 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %230, i1 zeroext true)
  %231 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %231, i1 zeroext true)
  br label %232

; <label>:232                                     ; preds = %229, %224, %215
  %233 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %4, i32 0, i32 2
  %234 = load i32, i32* %233, align 8
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %233, align 8
  br label %236

; <label>:236                                     ; preds = %232, %123, %112, %90, %73, %28
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %struct.b2ContactEdge* @_ZN6b2Body14GetContactListEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 15
  %4 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %3, align 8
  ret %struct.b2ContactEdge* %4
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture13SetFilterDataERK8b2Filter(%class.b2Fixture* %this, %struct.b2Filter* dereferenceable(6) %filter) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %struct.b2Filter*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %struct.b2Filter* %filter, %struct.b2Filter** %2, align 8
  %3 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %4 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %3, i32 0, i32 8
  %5 = load %struct.b2Filter*, %struct.b2Filter** %2, align 8
  %6 = bitcast %struct.b2Filter* %4 to i8*
  %7 = bitcast %struct.b2Filter* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 6, i32 2, i1 false)
  call void @_ZN9b2Fixture8RefilterEv(%class.b2Fixture* %3)
  ret void
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture8RefilterEv(%class.b2Fixture* %this) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %edge = alloca %struct.b2ContactEdge*, align 8
  %contact = alloca %class.b2Contact*, align 8
  %fixtureA = alloca %class.b2Fixture*, align 8
  %fixtureB = alloca %class.b2Fixture*, align 8
  %world = alloca %class.b2World*, align 8
  %broadPhase = alloca %class.b2BroadPhase*, align 8
  %i = alloca i32, align 4
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 2
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  %5 = icmp eq %class.b2Body* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %61

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 2
  %9 = load %class.b2Body*, %class.b2Body** %8, align 8
  %10 = call %struct.b2ContactEdge* @_ZN6b2Body14GetContactListEv(%class.b2Body* %9)
  store %struct.b2ContactEdge* %10, %struct.b2ContactEdge** %edge, align 8
  br label %11

; <label>:11                                      ; preds = %29, %7
  %12 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %13 = icmp ne %struct.b2ContactEdge* %12, null
  br i1 %13, label %14, label %33

; <label>:14                                      ; preds = %11
  %15 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %16 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %15, i32 0, i32 1
  %17 = load %class.b2Contact*, %class.b2Contact** %16, align 8
  store %class.b2Contact* %17, %class.b2Contact** %contact, align 8
  %18 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %19 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %18)
  store %class.b2Fixture* %19, %class.b2Fixture** %fixtureA, align 8
  %20 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %21 = call %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %20)
  store %class.b2Fixture* %21, %class.b2Fixture** %fixtureB, align 8
  %22 = load %class.b2Fixture*, %class.b2Fixture** %fixtureA, align 8
  %23 = icmp eq %class.b2Fixture* %22, %2
  br i1 %23, label %27, label %24

; <label>:24                                      ; preds = %14
  %25 = load %class.b2Fixture*, %class.b2Fixture** %fixtureB, align 8
  %26 = icmp eq %class.b2Fixture* %25, %2
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %24, %14
  %28 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  call void @_ZN9b2Contact16FlagForFilteringEv(%class.b2Contact* %28)
  br label %29

; <label>:29                                      ; preds = %27, %24
  %30 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %31 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %30, i32 0, i32 3
  %32 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %31, align 8
  store %struct.b2ContactEdge* %32, %struct.b2ContactEdge** %edge, align 8
  br label %11

; <label>:33                                      ; preds = %11
  %34 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 2
  %35 = load %class.b2Body*, %class.b2Body** %34, align 8
  %36 = call %class.b2World* @_ZN6b2Body8GetWorldEv(%class.b2Body* %35)
  store %class.b2World* %36, %class.b2World** %world, align 8
  %37 = load %class.b2World*, %class.b2World** %world, align 8
  %38 = icmp eq %class.b2World* %37, null
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %33
  br label %61

; <label>:40                                      ; preds = %33
  %41 = load %class.b2World*, %class.b2World** %world, align 8
  %42 = getelementptr inbounds %class.b2World, %class.b2World* %41, i32 0, i32 3
  %43 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %42, i32 0, i32 0
  store %class.b2BroadPhase* %43, %class.b2BroadPhase** %broadPhase, align 8
  store i32 0, i32* %i, align 4
  br label %44

; <label>:44                                      ; preds = %58, %40
  %45 = load i32, i32* %i, align 4
  %46 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 7
  %47 = load i32, i32* %46, align 8
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %61

; <label>:49                                      ; preds = %44
  %50 = load %class.b2BroadPhase*, %class.b2BroadPhase** %broadPhase, align 8
  %51 = load i32, i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 6
  %54 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %53, align 8
  %55 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %54, i64 %52
  %56 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  call void @_ZN12b2BroadPhase10TouchProxyEi(%class.b2BroadPhase* %50, i32 %57)
  br label %58

; <label>:58                                      ; preds = %49
  %59 = load i32, i32* %i, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %i, align 4
  br label %44

; <label>:61                                      ; preds = %44, %39, %6
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN9b2Contact16FlagForFilteringEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 8
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2World* @_ZN6b2Body8GetWorldEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 9
  %4 = load %class.b2World*, %class.b2World** %3, align 8
  ret %class.b2World* %4
}

; Function Attrs: uwtable
define void @_ZN9b2Fixture9SetSensorEb(%class.b2Fixture* %this, i1 zeroext %sensor) #0 align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca i8, align 1
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %3 = zext i1 %sensor to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 9
  %9 = load i8, i8* %8, align 2
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %7, %11
  br i1 %12, label %13, label %20

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 2
  %15 = load %class.b2Body*, %class.b2Body** %14, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %15, i1 zeroext true)
  %16 = load i8, i8* %2, align 1
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %4, i32 0, i32 9
  %19 = zext i1 %17 to i8
  store i8 %19, i8* %18, align 2
  br label %20

; <label>:20                                      ; preds = %13, %0
  ret void
}

; Function Attrs: uwtable
define void @_ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener(%class.b2Island* %this, i32 %bodyCapacity, i32 %contactCapacity, i32 %jointCapacity, %class.b2StackAllocator* %allocator, %class.b2ContactFilter* %listener) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %class.b2StackAllocator*, align 8
  %6 = alloca %class.b2ContactFilter*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store i32 %bodyCapacity, i32* %2, align 4
  store i32 %contactCapacity, i32* %3, align 4
  store i32 %jointCapacity, i32* %4, align 4
  store %class.b2StackAllocator* %allocator, %class.b2StackAllocator** %5, align 8
  store %class.b2ContactFilter* %listener, %class.b2ContactFilter** %6, align 8
  %7 = load %class.b2Island*, %class.b2Island** %1, align 8
  %8 = load i32, i32* %2, align 4
  %9 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 10
  store i32 %8, i32* %9, align 4
  %10 = load i32, i32* %3, align 4
  %11 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 11
  store i32 %10, i32* %11, align 8
  %12 = load i32, i32* %4, align 4
  %13 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 12
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 7
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 9
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 8
  store i32 0, i32* %16, align 4
  %17 = load %class.b2StackAllocator*, %class.b2StackAllocator** %5, align 8
  %18 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 0
  store %class.b2StackAllocator* %17, %class.b2StackAllocator** %18, align 8
  %19 = load %class.b2ContactFilter*, %class.b2ContactFilter** %6, align 8
  %20 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 1
  store %class.b2ContactFilter* %19, %class.b2ContactFilter** %20, align 8
  %21 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 0
  %22 = load %class.b2StackAllocator*, %class.b2StackAllocator** %21, align 8
  %23 = load i32, i32* %2, align 4
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 8
  %26 = trunc i64 %25 to i32
  %27 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %22, i32 %26)
  %28 = bitcast i8* %27 to %class.b2Body**
  %29 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 2
  store %class.b2Body** %28, %class.b2Body*** %29, align 8
  %30 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 0
  %31 = load %class.b2StackAllocator*, %class.b2StackAllocator** %30, align 8
  %32 = load i32, i32* %3, align 4
  %33 = sext i32 %32 to i64
  %34 = mul i64 %33, 8
  %35 = trunc i64 %34 to i32
  %36 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %31, i32 %35)
  %37 = bitcast i8* %36 to %class.b2Contact**
  %38 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 3
  store %class.b2Contact** %37, %class.b2Contact*** %38, align 8
  %39 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 0
  %40 = load %class.b2StackAllocator*, %class.b2StackAllocator** %39, align 8
  %41 = load i32, i32* %4, align 4
  %42 = sext i32 %41 to i64
  %43 = mul i64 %42, 8
  %44 = trunc i64 %43 to i32
  %45 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %40, i32 %44)
  %46 = bitcast i8* %45 to %class.b2Joint**
  %47 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 4
  store %class.b2Joint** %46, %class.b2Joint*** %47, align 8
  %48 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 0
  %49 = load %class.b2StackAllocator*, %class.b2StackAllocator** %48, align 8
  %50 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 10
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = mul i64 %52, 12
  %54 = trunc i64 %53 to i32
  %55 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %49, i32 %54)
  %56 = bitcast i8* %55 to %struct.b2Position*
  %57 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 6
  store %struct.b2Position* %56, %struct.b2Position** %57, align 8
  %58 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 0
  %59 = load %class.b2StackAllocator*, %class.b2StackAllocator** %58, align 8
  %60 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 10
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = mul i64 %62, 12
  %64 = trunc i64 %63 to i32
  %65 = call i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %59, i32 %64)
  %66 = bitcast i8* %65 to %struct.b2Position*
  %67 = getelementptr inbounds %class.b2Island, %class.b2Island* %7, i32 0, i32 5
  store %struct.b2Position* %66, %struct.b2Position** %67, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN8b2IslandD2Ev(%class.b2Island* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Island*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  %2 = load %class.b2Island*, %class.b2Island** %1, align 8
  %3 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 0
  %4 = load %class.b2StackAllocator*, %class.b2StackAllocator** %3, align 8
  %5 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 5
  %6 = load %struct.b2Position*, %struct.b2Position** %5, align 8
  %7 = bitcast %struct.b2Position* %6 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %4, i8* %7)
  %8 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 0
  %9 = load %class.b2StackAllocator*, %class.b2StackAllocator** %8, align 8
  %10 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 6
  %11 = load %struct.b2Position*, %struct.b2Position** %10, align 8
  %12 = bitcast %struct.b2Position* %11 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %9, i8* %12)
  %13 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 0
  %14 = load %class.b2StackAllocator*, %class.b2StackAllocator** %13, align 8
  %15 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 4
  %16 = load %class.b2Joint**, %class.b2Joint*** %15, align 8
  %17 = bitcast %class.b2Joint** %16 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %14, i8* %17)
  %18 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 0
  %19 = load %class.b2StackAllocator*, %class.b2StackAllocator** %18, align 8
  %20 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 3
  %21 = load %class.b2Contact**, %class.b2Contact*** %20, align 8
  %22 = bitcast %class.b2Contact** %21 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %19, i8* %22)
  %23 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 0
  %24 = load %class.b2StackAllocator*, %class.b2StackAllocator** %23, align 8
  %25 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 2
  %26 = load %class.b2Body**, %class.b2Body*** %25, align 8
  %27 = bitcast %class.b2Body** %26 to i8*
  call void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %24, i8* %27)
  ret void
}

; Function Attrs: uwtable
define void @_ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b(%class.b2Island* %this, %struct.b2Profile* %profile, %struct.b2TimeStep* dereferenceable(24) %step, %struct.b2Vec2* dereferenceable(8) %gravity, i1 zeroext %allowSleep) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca %struct.b2Profile*, align 8
  %3 = alloca %struct.b2TimeStep*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca i8, align 1
  %timer = alloca %class.b2Timer, align 8
  %h = alloca float, align 4
  %i = alloca i32, align 4
  %b = alloca %class.b2Body*, align 8
  %c = alloca %struct.b2Vec2, align 4
  %a = alloca float, align 4
  %v = alloca %struct.b2Vec2, align 4
  %w = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %solverData = alloca %struct.b2SolverData, align 8
  %contactSolverDef = alloca %struct.b2ContactSolverDef, align 8
  %contactSolver = alloca %class.b2ContactSolver, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %j = alloca i32, align 4
  %i3 = alloca i32, align 4
  %c4 = alloca %struct.b2Vec2, align 4
  %a5 = alloca float, align 4
  %v6 = alloca %struct.b2Vec2, align 4
  %w7 = alloca float, align 4
  %translation = alloca %struct.b2Vec2, align 4
  %ratio = alloca float, align 4
  %rotation = alloca float, align 4
  %ratio8 = alloca float, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %positionSolved = alloca i8, align 1
  %i9 = alloca i32, align 4
  %contactsOkay = alloca i8, align 1
  %jointsOkay = alloca i8, align 1
  %j10 = alloca i32, align 4
  %jointOkay = alloca i8, align 1
  %i11 = alloca i32, align 4
  %body = alloca %class.b2Body*, align 8
  %minSleepTime = alloca float, align 4
  %linTolSqr = alloca float, align 4
  %angTolSqr = alloca float, align 4
  %i12 = alloca i32, align 4
  %b13 = alloca %class.b2Body*, align 8
  %i14 = alloca i32, align 4
  %b15 = alloca %class.b2Body*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store %struct.b2Profile* %profile, %struct.b2Profile** %2, align 8
  store %struct.b2TimeStep* %step, %struct.b2TimeStep** %3, align 8
  store %struct.b2Vec2* %gravity, %struct.b2Vec2** %4, align 8
  %13 = zext i1 %allowSleep to i8
  store i8 %13, i8* %5, align 1
  %14 = load %class.b2Island*, %class.b2Island** %1, align 8
  call void @_ZN7b2TimerC1Ev(%class.b2Timer* %timer)
  %15 = load %struct.b2TimeStep*, %struct.b2TimeStep** %3, align 8
  %16 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %15, i32 0, i32 0
  %17 = load float, float* %16, align 4
  store float %17, float* %h, align 4
  store i32 0, i32* %i, align 4
  br label %18

; <label>:18                                      ; preds = %142, %0
  %19 = load i32, i32* %i, align 4
  %20 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %19, %21
  br i1 %22, label %23, label %145

; <label>:23                                      ; preds = %18
  %24 = load i32, i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 2
  %27 = load %class.b2Body**, %class.b2Body*** %26, align 8
  %28 = getelementptr inbounds %class.b2Body*, %class.b2Body** %27, i64 %25
  %29 = load %class.b2Body*, %class.b2Body** %28, align 8
  store %class.b2Body* %29, %class.b2Body** %b, align 8
  %30 = load %class.b2Body*, %class.b2Body** %b, align 8
  %31 = getelementptr inbounds %class.b2Body, %class.b2Body* %30, i32 0, i32 4
  %32 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %31, i32 0, i32 2
  %33 = bitcast %struct.b2Vec2* %c to i8*
  %34 = bitcast %struct.b2Vec2* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false)
  %35 = load %class.b2Body*, %class.b2Body** %b, align 8
  %36 = getelementptr inbounds %class.b2Body, %class.b2Body* %35, i32 0, i32 4
  %37 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %36, i32 0, i32 4
  %38 = load float, float* %37, align 4
  store float %38, float* %a, align 4
  %39 = load %class.b2Body*, %class.b2Body** %b, align 8
  %40 = getelementptr inbounds %class.b2Body, %class.b2Body* %39, i32 0, i32 5
  %41 = bitcast %struct.b2Vec2* %v to i8*
  %42 = bitcast %struct.b2Vec2* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  %43 = load %class.b2Body*, %class.b2Body** %b, align 8
  %44 = getelementptr inbounds %class.b2Body, %class.b2Body* %43, i32 0, i32 6
  %45 = load float, float* %44, align 8
  store float %45, float* %w, align 4
  %46 = load %class.b2Body*, %class.b2Body** %b, align 8
  %47 = getelementptr inbounds %class.b2Body, %class.b2Body* %46, i32 0, i32 4
  %48 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %47, i32 0, i32 1
  %49 = load %class.b2Body*, %class.b2Body** %b, align 8
  %50 = getelementptr inbounds %class.b2Body, %class.b2Body* %49, i32 0, i32 4
  %51 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %50, i32 0, i32 2
  %52 = bitcast %struct.b2Vec2* %48 to i8*
  %53 = bitcast %struct.b2Vec2* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 4, i1 false)
  %54 = load %class.b2Body*, %class.b2Body** %b, align 8
  %55 = getelementptr inbounds %class.b2Body, %class.b2Body* %54, i32 0, i32 4
  %56 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %55, i32 0, i32 4
  %57 = load float, float* %56, align 4
  %58 = load %class.b2Body*, %class.b2Body** %b, align 8
  %59 = getelementptr inbounds %class.b2Body, %class.b2Body* %58, i32 0, i32 4
  %60 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %59, i32 0, i32 3
  store float %57, float* %60, align 4
  %61 = load %class.b2Body*, %class.b2Body** %b, align 8
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %111

; <label>:65                                      ; preds = %23
  %66 = load float, float* %h, align 4
  %67 = load %class.b2Body*, %class.b2Body** %b, align 8
  %68 = getelementptr inbounds %class.b2Body, %class.b2Body* %67, i32 0, i32 22
  %69 = load float, float* %68, align 8
  %70 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %71 = call <2 x float> @_ZmlfRK6b2Vec2(float %69, %struct.b2Vec2* dereferenceable(8) %70)
  %72 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %71, <2 x float>* %72, align 4
  %73 = load %class.b2Body*, %class.b2Body** %b, align 8
  %74 = getelementptr inbounds %class.b2Body, %class.b2Body* %73, i32 0, i32 17
  %75 = load float, float* %74, align 4
  %76 = load %class.b2Body*, %class.b2Body** %b, align 8
  %77 = getelementptr inbounds %class.b2Body, %class.b2Body* %76, i32 0, i32 7
  %78 = call <2 x float> @_ZmlfRK6b2Vec2(float %75, %struct.b2Vec2* dereferenceable(8) %77)
  %79 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %9)
  %81 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = call <2 x float> @_ZmlfRK6b2Vec2(float %66, %struct.b2Vec2* dereferenceable(8) %7)
  %83 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %82, <2 x float>* %83, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %v, %struct.b2Vec2* dereferenceable(8) %6)
  %84 = load float, float* %h, align 4
  %85 = load %class.b2Body*, %class.b2Body** %b, align 8
  %86 = getelementptr inbounds %class.b2Body, %class.b2Body* %85, i32 0, i32 19
  %87 = load float, float* %86, align 4
  %88 = fmul float %84, %87
  %89 = load %class.b2Body*, %class.b2Body** %b, align 8
  %90 = getelementptr inbounds %class.b2Body, %class.b2Body* %89, i32 0, i32 8
  %91 = load float, float* %90, align 4
  %92 = fmul float %88, %91
  %93 = load float, float* %w, align 4
  %94 = fadd float %93, %92
  store float %94, float* %w, align 4
  %95 = load float, float* %h, align 4
  %96 = load %class.b2Body*, %class.b2Body** %b, align 8
  %97 = getelementptr inbounds %class.b2Body, %class.b2Body* %96, i32 0, i32 20
  %98 = load float, float* %97, align 8
  %99 = fmul float %95, %98
  %100 = fadd float 1.000000e+00, %99
  %101 = fdiv float 1.000000e+00, %100
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %v, float %101)
  %102 = load float, float* %h, align 4
  %103 = load %class.b2Body*, %class.b2Body** %b, align 8
  %104 = getelementptr inbounds %class.b2Body, %class.b2Body* %103, i32 0, i32 21
  %105 = load float, float* %104, align 4
  %106 = fmul float %102, %105
  %107 = fadd float 1.000000e+00, %106
  %108 = fdiv float 1.000000e+00, %107
  %109 = load float, float* %w, align 4
  %110 = fmul float %109, %108
  store float %110, float* %w, align 4
  br label %111

; <label>:111                                     ; preds = %65, %23
  %112 = load i32, i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %115 = load %struct.b2Position*, %struct.b2Position** %114, align 8
  %116 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %115, i64 %113
  %117 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %116, i32 0, i32 0
  %118 = bitcast %struct.b2Vec2* %117 to i8*
  %119 = bitcast %struct.b2Vec2* %c to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 4, i1 false)
  %120 = load float, float* %a, align 4
  %121 = load i32, i32* %i, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %124 = load %struct.b2Position*, %struct.b2Position** %123, align 8
  %125 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %124, i64 %122
  %126 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %125, i32 0, i32 1
  store float %120, float* %126, align 4
  %127 = load i32, i32* %i, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %130 = load %struct.b2Position*, %struct.b2Position** %129, align 8
  %131 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %130, i64 %128
  %132 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %131, i32 0, i32 0
  %133 = bitcast %struct.b2Vec2* %132 to i8*
  %134 = bitcast %struct.b2Vec2* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 4, i1 false)
  %135 = load float, float* %w, align 4
  %136 = load i32, i32* %i, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %139 = load %struct.b2Position*, %struct.b2Position** %138, align 8
  %140 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %139, i64 %137
  %141 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %140, i32 0, i32 1
  store float %135, float* %141, align 4
  br label %142

; <label>:142                                     ; preds = %111
  %143 = load i32, i32* %i, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %i, align 4
  br label %18

; <label>:145                                     ; preds = %18
  call void @_ZN7b2Timer5ResetEv(%class.b2Timer* %timer)
  %146 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %solverData, i32 0, i32 0
  %147 = load %struct.b2TimeStep*, %struct.b2TimeStep** %3, align 8
  %148 = bitcast %struct.b2TimeStep* %146 to i8*
  %149 = bitcast %struct.b2TimeStep* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 24, i32 4, i1 false)
  %150 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %151 = load %struct.b2Position*, %struct.b2Position** %150, align 8
  %152 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %solverData, i32 0, i32 1
  store %struct.b2Position* %151, %struct.b2Position** %152, align 8
  %153 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %154 = load %struct.b2Position*, %struct.b2Position** %153, align 8
  %155 = getelementptr inbounds %struct.b2SolverData, %struct.b2SolverData* %solverData, i32 0, i32 2
  store %struct.b2Position* %154, %struct.b2Position** %155, align 8
  %156 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 0
  %157 = load %struct.b2TimeStep*, %struct.b2TimeStep** %3, align 8
  %158 = bitcast %struct.b2TimeStep* %156 to i8*
  %159 = bitcast %struct.b2TimeStep* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %159, i64 24, i32 4, i1 false)
  %160 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 3
  %161 = load %class.b2Contact**, %class.b2Contact*** %160, align 8
  %162 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 1
  store %class.b2Contact** %161, %class.b2Contact*** %162, align 8
  %163 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 9
  %164 = load i32, i32* %163, align 8
  %165 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 2
  store i32 %164, i32* %165, align 8
  %166 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %167 = load %struct.b2Position*, %struct.b2Position** %166, align 8
  %168 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 3
  store %struct.b2Position* %167, %struct.b2Position** %168, align 8
  %169 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %170 = load %struct.b2Position*, %struct.b2Position** %169, align 8
  %171 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 4
  store %struct.b2Position* %170, %struct.b2Position** %171, align 8
  %172 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 0
  %173 = load %class.b2StackAllocator*, %class.b2StackAllocator** %172, align 8
  %174 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 5
  store %class.b2StackAllocator* %173, %class.b2StackAllocator** %174, align 8
  call void @_ZN15b2ContactSolverC1EP18b2ContactSolverDef(%class.b2ContactSolver* %contactSolver, %struct.b2ContactSolverDef* %contactSolverDef)
  invoke void @_ZN15b2ContactSolver29InitializeVelocityConstraintsEv(%class.b2ContactSolver* %contactSolver)
          to label %175 unwind label %182

; <label>:175                                     ; preds = %145
  %176 = load %struct.b2TimeStep*, %struct.b2TimeStep** %3, align 8
  %177 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %176, i32 0, i32 5
  %178 = load i8, i8* %177, align 4
  %179 = trunc i8 %178 to i1
  br i1 %179, label %180, label %186

; <label>:180                                     ; preds = %175
  invoke void @_ZN15b2ContactSolver9WarmStartEv(%class.b2ContactSolver* %contactSolver)
          to label %181 unwind label %182

; <label>:181                                     ; preds = %180
  br label %186

; <label>:182                                     ; preds = %554, %526, %515, %487, %473, %471, %419, %377, %368, %360, %319, %316, %308, %296, %294, %289, %256, %246, %245, %240, %225, %209, %207, %192, %180, %145
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %10, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %11, align 4
  invoke void @_ZN15b2ContactSolverD1Ev(%class.b2ContactSolver* %contactSolver)
          to label %569 unwind label %575

; <label>:186                                     ; preds = %181, %175
  store i32 0, i32* %i1, align 4
  br label %187

; <label>:187                                     ; preds = %204, %186
  %188 = load i32, i32* %i1, align 4
  %189 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 8
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %188, %190
  br i1 %191, label %192, label %207

; <label>:192                                     ; preds = %187
  %193 = load i32, i32* %i1, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 4
  %196 = load %class.b2Joint**, %class.b2Joint*** %195, align 8
  %197 = getelementptr inbounds %class.b2Joint*, %class.b2Joint** %196, i64 %194
  %198 = load %class.b2Joint*, %class.b2Joint** %197, align 8
  %199 = bitcast %class.b2Joint* %198 to void (%class.b2Joint*, %struct.b2SolverData*)***
  %200 = load void (%class.b2Joint*, %struct.b2SolverData*)**, void (%class.b2Joint*, %struct.b2SolverData*)*** %199, align 8
  %201 = getelementptr inbounds void (%class.b2Joint*, %struct.b2SolverData*)*, void (%class.b2Joint*, %struct.b2SolverData*)** %200, i64 8
  %202 = load void (%class.b2Joint*, %struct.b2SolverData*)*, void (%class.b2Joint*, %struct.b2SolverData*)** %201, align 8
  invoke void %202(%class.b2Joint* %198, %struct.b2SolverData* dereferenceable(40) %solverData)
          to label %203 unwind label %182

; <label>:203                                     ; preds = %192
  br label %204

; <label>:204                                     ; preds = %203
  %205 = load i32, i32* %i1, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %i1, align 4
  br label %187

; <label>:207                                     ; preds = %187
  %208 = invoke float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer)
          to label %209 unwind label %182

; <label>:209                                     ; preds = %207
  %210 = load %struct.b2Profile*, %struct.b2Profile** %2, align 8
  %211 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %210, i32 0, i32 3
  store float %208, float* %211, align 4
  invoke void @_ZN7b2Timer5ResetEv(%class.b2Timer* %timer)
          to label %212 unwind label %182

; <label>:212                                     ; preds = %209
  store i32 0, i32* %i2, align 4
  br label %213

; <label>:213                                     ; preds = %242, %212
  %214 = load i32, i32* %i2, align 4
  %215 = load %struct.b2TimeStep*, %struct.b2TimeStep** %3, align 8
  %216 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %215, i32 0, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = icmp slt i32 %214, %217
  br i1 %218, label %219, label %245

; <label>:219                                     ; preds = %213
  store i32 0, i32* %j, align 4
  br label %220

; <label>:220                                     ; preds = %237, %219
  %221 = load i32, i32* %j, align 4
  %222 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 8
  %223 = load i32, i32* %222, align 4
  %224 = icmp slt i32 %221, %223
  br i1 %224, label %225, label %240

; <label>:225                                     ; preds = %220
  %226 = load i32, i32* %j, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 4
  %229 = load %class.b2Joint**, %class.b2Joint*** %228, align 8
  %230 = getelementptr inbounds %class.b2Joint*, %class.b2Joint** %229, i64 %227
  %231 = load %class.b2Joint*, %class.b2Joint** %230, align 8
  %232 = bitcast %class.b2Joint* %231 to void (%class.b2Joint*, %struct.b2SolverData*)***
  %233 = load void (%class.b2Joint*, %struct.b2SolverData*)**, void (%class.b2Joint*, %struct.b2SolverData*)*** %232, align 8
  %234 = getelementptr inbounds void (%class.b2Joint*, %struct.b2SolverData*)*, void (%class.b2Joint*, %struct.b2SolverData*)** %233, i64 9
  %235 = load void (%class.b2Joint*, %struct.b2SolverData*)*, void (%class.b2Joint*, %struct.b2SolverData*)** %234, align 8
  invoke void %235(%class.b2Joint* %231, %struct.b2SolverData* dereferenceable(40) %solverData)
          to label %236 unwind label %182

; <label>:236                                     ; preds = %225
  br label %237

; <label>:237                                     ; preds = %236
  %238 = load i32, i32* %j, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %j, align 4
  br label %220

; <label>:240                                     ; preds = %220
  invoke void @_ZN15b2ContactSolver24SolveVelocityConstraintsEv(%class.b2ContactSolver* %contactSolver)
          to label %241 unwind label %182

; <label>:241                                     ; preds = %240
  br label %242

; <label>:242                                     ; preds = %241
  %243 = load i32, i32* %i2, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %i2, align 4
  br label %213

; <label>:245                                     ; preds = %213
  invoke void @_ZN15b2ContactSolver13StoreImpulsesEv(%class.b2ContactSolver* %contactSolver)
          to label %246 unwind label %182

; <label>:246                                     ; preds = %245
  %247 = invoke float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer)
          to label %248 unwind label %182

; <label>:248                                     ; preds = %246
  %249 = load %struct.b2Profile*, %struct.b2Profile** %2, align 8
  %250 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %249, i32 0, i32 4
  store float %247, float* %250, align 4
  store i32 0, i32* %i3, align 4
  br label %251

; <label>:251                                     ; preds = %357, %248
  %252 = load i32, i32* %i3, align 4
  %253 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 7
  %254 = load i32, i32* %253, align 8
  %255 = icmp slt i32 %252, %254
  br i1 %255, label %256, label %360

; <label>:256                                     ; preds = %251
  %257 = load i32, i32* %i3, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %260 = load %struct.b2Position*, %struct.b2Position** %259, align 8
  %261 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %260, i64 %258
  %262 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %261, i32 0, i32 0
  %263 = bitcast %struct.b2Vec2* %c4 to i8*
  %264 = bitcast %struct.b2Vec2* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %263, i8* %264, i64 8, i32 4, i1 false)
  %265 = load i32, i32* %i3, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %268 = load %struct.b2Position*, %struct.b2Position** %267, align 8
  %269 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %268, i64 %266
  %270 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %269, i32 0, i32 1
  %271 = load float, float* %270, align 4
  store float %271, float* %a5, align 4
  %272 = load i32, i32* %i3, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %275 = load %struct.b2Position*, %struct.b2Position** %274, align 8
  %276 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %275, i64 %273
  %277 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %276, i32 0, i32 0
  %278 = bitcast %struct.b2Vec2* %v6 to i8*
  %279 = bitcast %struct.b2Vec2* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %279, i64 8, i32 4, i1 false)
  %280 = load i32, i32* %i3, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %283 = load %struct.b2Position*, %struct.b2Position** %282, align 8
  %284 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %283, i64 %281
  %285 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %284, i32 0, i32 1
  %286 = load float, float* %285, align 4
  store float %286, float* %w7, align 4
  %287 = load float, float* %h, align 4
  %288 = invoke <2 x float> @_ZmlfRK6b2Vec2(float %287, %struct.b2Vec2* dereferenceable(8) %v6)
          to label %289 unwind label %182

; <label>:289                                     ; preds = %256
  %290 = bitcast %struct.b2Vec2* %translation to <2 x float>*
  store <2 x float> %288, <2 x float>* %290, align 4
  %291 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %translation, %struct.b2Vec2* dereferenceable(8) %translation)
          to label %292 unwind label %182

; <label>:292                                     ; preds = %289
  %293 = fcmp ogt float %291, 4.000000e+00
  br i1 %293, label %294, label %300

; <label>:294                                     ; preds = %292
  %295 = invoke float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %translation)
          to label %296 unwind label %182

; <label>:296                                     ; preds = %294
  %297 = fdiv float 2.000000e+00, %295
  store float %297, float* %ratio, align 4
  %298 = load float, float* %ratio, align 4
  invoke void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %v6, float %298)
          to label %299 unwind label %182

; <label>:299                                     ; preds = %296
  br label %300

; <label>:300                                     ; preds = %299, %292
  %301 = load float, float* %h, align 4
  %302 = load float, float* %w7, align 4
  %303 = fmul float %301, %302
  store float %303, float* %rotation, align 4
  %304 = load float, float* %rotation, align 4
  %305 = load float, float* %rotation, align 4
  %306 = fmul float %304, %305
  %307 = fcmp ogt float %306, 0x4003BD3CE0000000
  br i1 %307, label %308, label %316

; <label>:308                                     ; preds = %300
  %309 = load float, float* %rotation, align 4
  %310 = invoke float @_Z5b2AbsIfET_S0_(float %309)
          to label %311 unwind label %182

; <label>:311                                     ; preds = %308
  %312 = fdiv float 0x3FF921FB60000000, %310
  store float %312, float* %ratio8, align 4
  %313 = load float, float* %ratio8, align 4
  %314 = load float, float* %w7, align 4
  %315 = fmul float %314, %313
  store float %315, float* %w7, align 4
  br label %316

; <label>:316                                     ; preds = %311, %300
  %317 = load float, float* %h, align 4
  %318 = invoke <2 x float> @_ZmlfRK6b2Vec2(float %317, %struct.b2Vec2* dereferenceable(8) %v6)
          to label %319 unwind label %182

; <label>:319                                     ; preds = %316
  %320 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %318, <2 x float>* %320, align 4
  invoke void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %c4, %struct.b2Vec2* dereferenceable(8) %12)
          to label %321 unwind label %182

; <label>:321                                     ; preds = %319
  %322 = load float, float* %h, align 4
  %323 = load float, float* %w7, align 4
  %324 = fmul float %322, %323
  %325 = load float, float* %a5, align 4
  %326 = fadd float %325, %324
  store float %326, float* %a5, align 4
  %327 = load i32, i32* %i3, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %330 = load %struct.b2Position*, %struct.b2Position** %329, align 8
  %331 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %330, i64 %328
  %332 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %331, i32 0, i32 0
  %333 = bitcast %struct.b2Vec2* %332 to i8*
  %334 = bitcast %struct.b2Vec2* %c4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %333, i8* %334, i64 8, i32 4, i1 false)
  %335 = load float, float* %a5, align 4
  %336 = load i32, i32* %i3, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %339 = load %struct.b2Position*, %struct.b2Position** %338, align 8
  %340 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %339, i64 %337
  %341 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %340, i32 0, i32 1
  store float %335, float* %341, align 4
  %342 = load i32, i32* %i3, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %345 = load %struct.b2Position*, %struct.b2Position** %344, align 8
  %346 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %345, i64 %343
  %347 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %346, i32 0, i32 0
  %348 = bitcast %struct.b2Vec2* %347 to i8*
  %349 = bitcast %struct.b2Vec2* %v6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %348, i8* %349, i64 8, i32 4, i1 false)
  %350 = load float, float* %w7, align 4
  %351 = load i32, i32* %i3, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %354 = load %struct.b2Position*, %struct.b2Position** %353, align 8
  %355 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %354, i64 %352
  %356 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %355, i32 0, i32 1
  store float %350, float* %356, align 4
  br label %357

; <label>:357                                     ; preds = %321
  %358 = load i32, i32* %i3, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %i3, align 4
  br label %251

; <label>:360                                     ; preds = %251
  invoke void @_ZN7b2Timer5ResetEv(%class.b2Timer* %timer)
          to label %361 unwind label %182

; <label>:361                                     ; preds = %360
  store i8 0, i8* %positionSolved, align 1
  store i32 0, i32* %i9, align 4
  br label %362

; <label>:362                                     ; preds = %410, %361
  %363 = load i32, i32* %i9, align 4
  %364 = load %struct.b2TimeStep*, %struct.b2TimeStep** %3, align 8
  %365 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %364, i32 0, i32 4
  %366 = load i32, i32* %365, align 4
  %367 = icmp slt i32 %363, %366
  br i1 %367, label %368, label %413

; <label>:368                                     ; preds = %362
  %369 = invoke zeroext i1 @_ZN15b2ContactSolver24SolvePositionConstraintsEv(%class.b2ContactSolver* %contactSolver)
          to label %370 unwind label %182

; <label>:370                                     ; preds = %368
  %371 = zext i1 %369 to i8
  store i8 %371, i8* %contactsOkay, align 1
  store i8 1, i8* %jointsOkay, align 1
  store i32 0, i32* %j10, align 4
  br label %372

; <label>:372                                     ; preds = %399, %370
  %373 = load i32, i32* %j10, align 4
  %374 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 8
  %375 = load i32, i32* %374, align 4
  %376 = icmp slt i32 %373, %375
  br i1 %376, label %377, label %402

; <label>:377                                     ; preds = %372
  %378 = load i32, i32* %j10, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 4
  %381 = load %class.b2Joint**, %class.b2Joint*** %380, align 8
  %382 = getelementptr inbounds %class.b2Joint*, %class.b2Joint** %381, i64 %379
  %383 = load %class.b2Joint*, %class.b2Joint** %382, align 8
  %384 = bitcast %class.b2Joint* %383 to i1 (%class.b2Joint*, %struct.b2SolverData*)***
  %385 = load i1 (%class.b2Joint*, %struct.b2SolverData*)**, i1 (%class.b2Joint*, %struct.b2SolverData*)*** %384, align 8
  %386 = getelementptr inbounds i1 (%class.b2Joint*, %struct.b2SolverData*)*, i1 (%class.b2Joint*, %struct.b2SolverData*)** %385, i64 10
  %387 = load i1 (%class.b2Joint*, %struct.b2SolverData*)*, i1 (%class.b2Joint*, %struct.b2SolverData*)** %386, align 8
  %388 = invoke zeroext i1 %387(%class.b2Joint* %383, %struct.b2SolverData* dereferenceable(40) %solverData)
          to label %389 unwind label %182

; <label>:389                                     ; preds = %377
  %390 = zext i1 %388 to i8
  store i8 %390, i8* %jointOkay, align 1
  %391 = load i8, i8* %jointsOkay, align 1
  %392 = trunc i8 %391 to i1
  br i1 %392, label %393, label %396

; <label>:393                                     ; preds = %389
  %394 = load i8, i8* %jointOkay, align 1
  %395 = trunc i8 %394 to i1
  br label %396

; <label>:396                                     ; preds = %393, %389
  %397 = phi i1 [ false, %389 ], [ %395, %393 ]
  %398 = zext i1 %397 to i8
  store i8 %398, i8* %jointsOkay, align 1
  br label %399

; <label>:399                                     ; preds = %396
  %400 = load i32, i32* %j10, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %j10, align 4
  br label %372

; <label>:402                                     ; preds = %372
  %403 = load i8, i8* %contactsOkay, align 1
  %404 = trunc i8 %403 to i1
  br i1 %404, label %405, label %409

; <label>:405                                     ; preds = %402
  %406 = load i8, i8* %jointsOkay, align 1
  %407 = trunc i8 %406 to i1
  br i1 %407, label %408, label %409

; <label>:408                                     ; preds = %405
  store i8 1, i8* %positionSolved, align 1
  br label %413

; <label>:409                                     ; preds = %405, %402
  br label %410

; <label>:410                                     ; preds = %409
  %411 = load i32, i32* %i9, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %i9, align 4
  br label %362

; <label>:413                                     ; preds = %408, %362
  store i32 0, i32* %i11, align 4
  br label %414

; <label>:414                                     ; preds = %468, %413
  %415 = load i32, i32* %i11, align 4
  %416 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 7
  %417 = load i32, i32* %416, align 8
  %418 = icmp slt i32 %415, %417
  br i1 %418, label %419, label %471

; <label>:419                                     ; preds = %414
  %420 = load i32, i32* %i11, align 4
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 2
  %423 = load %class.b2Body**, %class.b2Body*** %422, align 8
  %424 = getelementptr inbounds %class.b2Body*, %class.b2Body** %423, i64 %421
  %425 = load %class.b2Body*, %class.b2Body** %424, align 8
  store %class.b2Body* %425, %class.b2Body** %body, align 8
  %426 = load %class.b2Body*, %class.b2Body** %body, align 8
  %427 = getelementptr inbounds %class.b2Body, %class.b2Body* %426, i32 0, i32 4
  %428 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %427, i32 0, i32 2
  %429 = load i32, i32* %i11, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %432 = load %struct.b2Position*, %struct.b2Position** %431, align 8
  %433 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %432, i64 %430
  %434 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %433, i32 0, i32 0
  %435 = bitcast %struct.b2Vec2* %428 to i8*
  %436 = bitcast %struct.b2Vec2* %434 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %435, i8* %436, i64 8, i32 4, i1 false)
  %437 = load i32, i32* %i11, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 5
  %440 = load %struct.b2Position*, %struct.b2Position** %439, align 8
  %441 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %440, i64 %438
  %442 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %441, i32 0, i32 1
  %443 = load float, float* %442, align 4
  %444 = load %class.b2Body*, %class.b2Body** %body, align 8
  %445 = getelementptr inbounds %class.b2Body, %class.b2Body* %444, i32 0, i32 4
  %446 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %445, i32 0, i32 4
  store float %443, float* %446, align 4
  %447 = load %class.b2Body*, %class.b2Body** %body, align 8
  %448 = getelementptr inbounds %class.b2Body, %class.b2Body* %447, i32 0, i32 5
  %449 = load i32, i32* %i11, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %452 = load %struct.b2Position*, %struct.b2Position** %451, align 8
  %453 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %452, i64 %450
  %454 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %453, i32 0, i32 0
  %455 = bitcast %struct.b2Vec2* %448 to i8*
  %456 = bitcast %struct.b2Vec2* %454 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %455, i8* %456, i64 8, i32 4, i1 false)
  %457 = load i32, i32* %i11, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 6
  %460 = load %struct.b2Position*, %struct.b2Position** %459, align 8
  %461 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %460, i64 %458
  %462 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %461, i32 0, i32 1
  %463 = load float, float* %462, align 4
  %464 = load %class.b2Body*, %class.b2Body** %body, align 8
  %465 = getelementptr inbounds %class.b2Body, %class.b2Body* %464, i32 0, i32 6
  store float %463, float* %465, align 8
  %466 = load %class.b2Body*, %class.b2Body** %body, align 8
  invoke void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %466)
          to label %467 unwind label %182

; <label>:467                                     ; preds = %419
  br label %468

; <label>:468                                     ; preds = %467
  %469 = load i32, i32* %i11, align 4
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %i11, align 4
  br label %414

; <label>:471                                     ; preds = %414
  %472 = invoke float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer)
          to label %473 unwind label %182

; <label>:473                                     ; preds = %471
  %474 = load %struct.b2Profile*, %struct.b2Profile** %2, align 8
  %475 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %474, i32 0, i32 5
  store float %472, float* %475, align 4
  %476 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %contactSolver, i32 0, i32 5
  %477 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %476, align 8
  invoke void @_ZN8b2Island6ReportEPK27b2ContactVelocityConstraint(%class.b2Island* %14, %struct.b2ContactVelocityConstraint* %477)
          to label %478 unwind label %182

; <label>:478                                     ; preds = %473
  %479 = load i8, i8* %5, align 1
  %480 = trunc i8 %479 to i1
  br i1 %480, label %481, label %568

; <label>:481                                     ; preds = %478
  store float 0x47EFFFFFE0000000, float* %minSleepTime, align 4
  store float 0x3F1A36E2E0000000, float* %linTolSqr, align 4
  store float 0x3F53F6A220000000, float* %angTolSqr, align 4
  store i32 0, i32* %i12, align 4
  br label %482

; <label>:482                                     ; preds = %539, %481
  %483 = load i32, i32* %i12, align 4
  %484 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 7
  %485 = load i32, i32* %484, align 8
  %486 = icmp slt i32 %483, %485
  br i1 %486, label %487, label %542

; <label>:487                                     ; preds = %482
  %488 = load i32, i32* %i12, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 2
  %491 = load %class.b2Body**, %class.b2Body*** %490, align 8
  %492 = getelementptr inbounds %class.b2Body*, %class.b2Body** %491, i64 %489
  %493 = load %class.b2Body*, %class.b2Body** %492, align 8
  store %class.b2Body* %493, %class.b2Body** %b13, align 8
  %494 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %495 = invoke i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %494)
          to label %496 unwind label %182

; <label>:496                                     ; preds = %487
  %497 = icmp eq i32 %495, 0
  br i1 %497, label %498, label %499

; <label>:498                                     ; preds = %496
  br label %539

; <label>:499                                     ; preds = %496
  %500 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %501 = getelementptr inbounds %class.b2Body, %class.b2Body* %500, i32 0, i32 1
  %502 = load i16, i16* %501, align 4
  %503 = zext i16 %502 to i32
  %504 = and i32 %503, 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %523, label %506

; <label>:506                                     ; preds = %499
  %507 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %508 = getelementptr inbounds %class.b2Body, %class.b2Body* %507, i32 0, i32 6
  %509 = load float, float* %508, align 8
  %510 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %511 = getelementptr inbounds %class.b2Body, %class.b2Body* %510, i32 0, i32 6
  %512 = load float, float* %511, align 8
  %513 = fmul float %509, %512
  %514 = fcmp ogt float %513, 0x3F53F6A220000000
  br i1 %514, label %523, label %515

; <label>:515                                     ; preds = %506
  %516 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %517 = getelementptr inbounds %class.b2Body, %class.b2Body* %516, i32 0, i32 5
  %518 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %519 = getelementptr inbounds %class.b2Body, %class.b2Body* %518, i32 0, i32 5
  %520 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %517, %struct.b2Vec2* dereferenceable(8) %519)
          to label %521 unwind label %182

; <label>:521                                     ; preds = %515
  %522 = fcmp ogt float %520, 0x3F1A36E2E0000000
  br i1 %522, label %523, label %526

; <label>:523                                     ; preds = %521, %506, %499
  %524 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %525 = getelementptr inbounds %class.b2Body, %class.b2Body* %524, i32 0, i32 23
  store float 0.000000e+00, float* %525, align 4
  store float 0.000000e+00, float* %minSleepTime, align 4
  br label %538

; <label>:526                                     ; preds = %521
  %527 = load float, float* %h, align 4
  %528 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %529 = getelementptr inbounds %class.b2Body, %class.b2Body* %528, i32 0, i32 23
  %530 = load float, float* %529, align 4
  %531 = fadd float %530, %527
  store float %531, float* %529, align 4
  %532 = load float, float* %minSleepTime, align 4
  %533 = load %class.b2Body*, %class.b2Body** %b13, align 8
  %534 = getelementptr inbounds %class.b2Body, %class.b2Body* %533, i32 0, i32 23
  %535 = load float, float* %534, align 4
  %536 = invoke float @_Z5b2MinIfET_S0_S0_(float %532, float %535)
          to label %537 unwind label %182

; <label>:537                                     ; preds = %526
  store float %536, float* %minSleepTime, align 4
  br label %538

; <label>:538                                     ; preds = %537, %523
  br label %539

; <label>:539                                     ; preds = %538, %498
  %540 = load i32, i32* %i12, align 4
  %541 = add nsw i32 %540, 1
  store i32 %541, i32* %i12, align 4
  br label %482

; <label>:542                                     ; preds = %482
  %543 = load float, float* %minSleepTime, align 4
  %544 = fcmp oge float %543, 5.000000e-01
  br i1 %544, label %545, label %567

; <label>:545                                     ; preds = %542
  %546 = load i8, i8* %positionSolved, align 1
  %547 = trunc i8 %546 to i1
  br i1 %547, label %548, label %567

; <label>:548                                     ; preds = %545
  store i32 0, i32* %i14, align 4
  br label %549

; <label>:549                                     ; preds = %563, %548
  %550 = load i32, i32* %i14, align 4
  %551 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 7
  %552 = load i32, i32* %551, align 8
  %553 = icmp slt i32 %550, %552
  br i1 %553, label %554, label %566

; <label>:554                                     ; preds = %549
  %555 = load i32, i32* %i14, align 4
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds %class.b2Island, %class.b2Island* %14, i32 0, i32 2
  %558 = load %class.b2Body**, %class.b2Body*** %557, align 8
  %559 = getelementptr inbounds %class.b2Body*, %class.b2Body** %558, i64 %556
  %560 = load %class.b2Body*, %class.b2Body** %559, align 8
  store %class.b2Body* %560, %class.b2Body** %b15, align 8
  %561 = load %class.b2Body*, %class.b2Body** %b15, align 8
  invoke void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %561, i1 zeroext false)
          to label %562 unwind label %182

; <label>:562                                     ; preds = %554
  br label %563

; <label>:563                                     ; preds = %562
  %564 = load i32, i32* %i14, align 4
  %565 = add nsw i32 %564, 1
  store i32 %565, i32* %i14, align 4
  br label %549

; <label>:566                                     ; preds = %549
  br label %567

; <label>:567                                     ; preds = %566, %545, %542
  br label %568

; <label>:568                                     ; preds = %567, %478
  call void @_ZN15b2ContactSolverD1Ev(%class.b2ContactSolver* %contactSolver)
  ret void

; <label>:569                                     ; preds = %182
  br label %570

; <label>:570                                     ; preds = %569
  %571 = load i8*, i8** %10, align 8
  %572 = load i32, i32* %11, align 4
  %573 = insertvalue { i8*, i32 } undef, i8* %571, 0
  %574 = insertvalue { i8*, i32 } %573, i32 %572, 1
  resume { i8*, i32 } %574

; <label>:575                                     ; preds = %182
  %576 = landingpad { i8*, i32 }
          catch i8* null
  %577 = extractvalue { i8*, i32 } %576, 0
  call void @__clang_call_terminate(i8* %577) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN7b2TimerC2Ev(%class.b2Timer* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Timer*, align 8
  store %class.b2Timer* %this, %class.b2Timer** %1, align 8
  %2 = load %class.b2Timer*, %class.b2Timer** %1, align 8
  call void @_ZN7b2Timer5ResetEv(%class.b2Timer* %2)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN7b2Timer5ResetEv(%class.b2Timer* %this) #2 align 2 {
  %1 = alloca %class.b2Timer*, align 8
  %t = alloca %class.b2Timer, align 8
  store %class.b2Timer* %this, %class.b2Timer** %1, align 8
  %2 = load %class.b2Timer*, %class.b2Timer** %1, align 8
  %3 = call i32 @gettimeofday(%class.b2Timer* %t, %struct.b2Pair* null) #3
  %4 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %t, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %2, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %t, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %2, i32 0, i32 1
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%class.b2Timer*, %struct.b2Pair*) #8

; Function Attrs: nounwind uwtable
define float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %this) #2 align 2 {
  %1 = alloca %class.b2Timer*, align 8
  %t = alloca %class.b2Timer, align 8
  store %class.b2Timer* %this, %class.b2Timer** %1, align 8
  %2 = load %class.b2Timer*, %class.b2Timer** %1, align 8
  %3 = call i32 @gettimeofday(%class.b2Timer* %t, %struct.b2Pair* null) #3
  %4 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %t, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = uitofp i64 %8 to float
  %10 = fmul float 1.000000e+03, %9
  %11 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %t, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %class.b2Timer, %class.b2Timer* %2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = uitofp i64 %15 to float
  %17 = fmul float 0x3F50624DE0000000, %16
  %18 = fadd float %10, %17
  ret float %18
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %this) #1 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %4 = load %class.b2Body*, %class.b2Body** %1, align 8
  %5 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %6 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 1
  %7 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %7, i32 0, i32 4
  %9 = load float, float* %8, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %6, float %9)
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %11 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %10, i32 0, i32 0
  %12 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %13 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %12, i32 0, i32 2
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 3
  %15 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %14, i32 0, i32 1
  %16 = getelementptr inbounds %class.b2Body, %class.b2Body* %4, i32 0, i32 4
  %17 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %16, i32 0, i32 0
  %18 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %15, %struct.b2Vec2* dereferenceable(8) %17)
  %19 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %13, %struct.b2Vec2* dereferenceable(8) %3)
  %21 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %20, <2 x float>* %21, align 4
  %22 = bitcast %struct.b2Vec2* %11 to i8*
  %23 = bitcast %struct.b2Vec2* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZN8b2Island6ReportEPK27b2ContactVelocityConstraint(%class.b2Island* %this, %struct.b2ContactVelocityConstraint* %constraints) #0 align 2 {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca %struct.b2ContactVelocityConstraint*, align 8
  %i = alloca i32, align 4
  %c = alloca %class.b2Contact*, align 8
  %vc = alloca %struct.b2ContactVelocityConstraint*, align 8
  %impulse = alloca %struct.b2ContactImpulse, align 4
  %j = alloca i32, align 4
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store %struct.b2ContactVelocityConstraint* %constraints, %struct.b2ContactVelocityConstraint** %2, align 8
  %3 = load %class.b2Island*, %class.b2Island** %1, align 8
  %4 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 1
  %5 = load %class.b2ContactFilter*, %class.b2ContactFilter** %4, align 8
  %6 = icmp eq %class.b2ContactFilter* %5, null
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %72

; <label>:8                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %69, %8
  %10 = load i32, i32* %i, align 4
  %11 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %72

; <label>:14                                      ; preds = %9
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 3
  %18 = load %class.b2Contact**, %class.b2Contact*** %17, align 8
  %19 = getelementptr inbounds %class.b2Contact*, %class.b2Contact** %18, i64 %16
  %20 = load %class.b2Contact*, %class.b2Contact** %19, align 8
  store %class.b2Contact* %20, %class.b2Contact** %c, align 8
  %21 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %2, align 8
  %22 = load i32, i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %21, i64 %23
  store %struct.b2ContactVelocityConstraint* %24, %struct.b2ContactVelocityConstraint** %vc, align 8
  %25 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %26 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %25, i32 0, i32 13
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.b2ContactImpulse, %struct.b2ContactImpulse* %impulse, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  store i32 0, i32* %j, align 4
  br label %29

; <label>:29                                      ; preds = %58, %14
  %30 = load i32, i32* %j, align 4
  %31 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %32 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %31, i32 0, i32 13
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %30, %33
  br i1 %34, label %35, label %61

; <label>:35                                      ; preds = %29
  %36 = load i32, i32* %j, align 4
  %37 = sext i32 %36 to i64
  %38 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %39 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %38, i32 0, i32 0
  %40 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %39, i64 0, i64 %37
  %41 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %40, i32 0, i32 2
  %42 = load float, float* %41, align 4
  %43 = load i32, i32* %j, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.b2ContactImpulse, %struct.b2ContactImpulse* %impulse, i32 0, i32 0
  %46 = getelementptr inbounds [2 x float], [2 x float]* %45, i64 0, i64 %44
  store float %42, float* %46, align 4
  %47 = load i32, i32* %j, align 4
  %48 = sext i32 %47 to i64
  %49 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %vc, align 8
  %50 = getelementptr inbounds %struct.b2ContactVelocityConstraint, %struct.b2ContactVelocityConstraint* %49, i32 0, i32 0
  %51 = getelementptr inbounds [2 x %struct.b2VelocityConstraintPoint], [2 x %struct.b2VelocityConstraintPoint]* %50, i64 0, i64 %48
  %52 = getelementptr inbounds %struct.b2VelocityConstraintPoint, %struct.b2VelocityConstraintPoint* %51, i32 0, i32 3
  %53 = load float, float* %52, align 4
  %54 = load i32, i32* %j, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.b2ContactImpulse, %struct.b2ContactImpulse* %impulse, i32 0, i32 1
  %57 = getelementptr inbounds [2 x float], [2 x float]* %56, i64 0, i64 %55
  store float %53, float* %57, align 4
  br label %58

; <label>:58                                      ; preds = %35
  %59 = load i32, i32* %j, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %j, align 4
  br label %29

; <label>:61                                      ; preds = %29
  %62 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 1
  %63 = load %class.b2ContactFilter*, %class.b2ContactFilter** %62, align 8
  %64 = bitcast %class.b2ContactFilter* %63 to void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)***
  %65 = load void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)**, void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)*, void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)** %65, i64 5
  %67 = load void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)*, void (%class.b2ContactFilter*, %class.b2Contact*, %struct.b2ContactImpulse*)** %66, align 8
  %68 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  call void %67(%class.b2ContactFilter* %63, %class.b2Contact* %68, %struct.b2ContactImpulse* %impulse)
  br label %69

; <label>:69                                      ; preds = %61
  %70 = load i32, i32* %i, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %i, align 4
  br label %9

; <label>:72                                      ; preds = %9, %7
  ret void
}

; Function Attrs: uwtable
define void @_ZN8b2Island8SolveTOIERK10b2TimeStepii(%class.b2Island* %this, %struct.b2TimeStep* dereferenceable(24) %subStep, i32 %toiIndexA, i32 %toiIndexB) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca %struct.b2TimeStep*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %b = alloca %class.b2Body*, align 8
  %contactSolverDef = alloca %struct.b2ContactSolverDef, align 8
  %contactSolver = alloca %class.b2ContactSolver, align 8
  %i1 = alloca i32, align 4
  %contactsOkay = alloca i8, align 1
  %5 = alloca i8*
  %6 = alloca i32
  %i2 = alloca i32, align 4
  %h = alloca float, align 4
  %i3 = alloca i32, align 4
  %c = alloca %struct.b2Vec2, align 4
  %a = alloca float, align 4
  %v = alloca %struct.b2Vec2, align 4
  %w = alloca float, align 4
  %translation = alloca %struct.b2Vec2, align 4
  %ratio = alloca float, align 4
  %rotation = alloca float, align 4
  %ratio4 = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %body = alloca %class.b2Body*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store %struct.b2TimeStep* %subStep, %struct.b2TimeStep** %2, align 8
  store i32 %toiIndexA, i32* %3, align 4
  store i32 %toiIndexB, i32* %4, align 4
  %8 = load %class.b2Island*, %class.b2Island** %1, align 8
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 7
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  br label %16

; <label>:14                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.276, i32 0, i32 0), i32 386, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__PRETTY_FUNCTION__._ZN8b2Island8SolveTOIERK10b2TimeStepii, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16                                      ; preds = %15, %13
  %17 = load i32, i32* %4, align 4
  %18 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 7
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %16
  br label %24

; <label>:22                                      ; preds = %16
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.277, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.276, i32 0, i32 0), i32 387, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__PRETTY_FUNCTION__._ZN8b2Island8SolveTOIERK10b2TimeStepii, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %24

; <label>:24                                      ; preds = %23, %21
  store i32 0, i32* %i, align 4
  br label %25

; <label>:25                                      ; preds = %77, %24
  %26 = load i32, i32* %i, align 4
  %27 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %30, label %80

; <label>:30                                      ; preds = %25
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 2
  %34 = load %class.b2Body**, %class.b2Body*** %33, align 8
  %35 = getelementptr inbounds %class.b2Body*, %class.b2Body** %34, i64 %32
  %36 = load %class.b2Body*, %class.b2Body** %35, align 8
  store %class.b2Body* %36, %class.b2Body** %b, align 8
  %37 = load i32, i32* %i, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %40 = load %struct.b2Position*, %struct.b2Position** %39, align 8
  %41 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %40, i64 %38
  %42 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %41, i32 0, i32 0
  %43 = load %class.b2Body*, %class.b2Body** %b, align 8
  %44 = getelementptr inbounds %class.b2Body, %class.b2Body* %43, i32 0, i32 4
  %45 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %44, i32 0, i32 2
  %46 = bitcast %struct.b2Vec2* %42 to i8*
  %47 = bitcast %struct.b2Vec2* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false)
  %48 = load %class.b2Body*, %class.b2Body** %b, align 8
  %49 = getelementptr inbounds %class.b2Body, %class.b2Body* %48, i32 0, i32 4
  %50 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %49, i32 0, i32 4
  %51 = load float, float* %50, align 4
  %52 = load i32, i32* %i, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %55 = load %struct.b2Position*, %struct.b2Position** %54, align 8
  %56 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %55, i64 %53
  %57 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %56, i32 0, i32 1
  store float %51, float* %57, align 4
  %58 = load i32, i32* %i, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %61 = load %struct.b2Position*, %struct.b2Position** %60, align 8
  %62 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %61, i64 %59
  %63 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %62, i32 0, i32 0
  %64 = load %class.b2Body*, %class.b2Body** %b, align 8
  %65 = getelementptr inbounds %class.b2Body, %class.b2Body* %64, i32 0, i32 5
  %66 = bitcast %struct.b2Vec2* %63 to i8*
  %67 = bitcast %struct.b2Vec2* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 4, i1 false)
  %68 = load %class.b2Body*, %class.b2Body** %b, align 8
  %69 = getelementptr inbounds %class.b2Body, %class.b2Body* %68, i32 0, i32 6
  %70 = load float, float* %69, align 8
  %71 = load i32, i32* %i, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %74 = load %struct.b2Position*, %struct.b2Position** %73, align 8
  %75 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %74, i64 %72
  %76 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %75, i32 0, i32 1
  store float %70, float* %76, align 4
  br label %77

; <label>:77                                      ; preds = %30
  %78 = load i32, i32* %i, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %i, align 4
  br label %25

; <label>:80                                      ; preds = %25
  %81 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 3
  %82 = load %class.b2Contact**, %class.b2Contact*** %81, align 8
  %83 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 1
  store %class.b2Contact** %82, %class.b2Contact*** %83, align 8
  %84 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 9
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 2
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 0
  %88 = load %class.b2StackAllocator*, %class.b2StackAllocator** %87, align 8
  %89 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 5
  store %class.b2StackAllocator* %88, %class.b2StackAllocator** %89, align 8
  %90 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 0
  %91 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %92 = bitcast %struct.b2TimeStep* %90 to i8*
  %93 = bitcast %struct.b2TimeStep* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 24, i32 4, i1 false)
  %94 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %95 = load %struct.b2Position*, %struct.b2Position** %94, align 8
  %96 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 3
  store %struct.b2Position* %95, %struct.b2Position** %96, align 8
  %97 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %98 = load %struct.b2Position*, %struct.b2Position** %97, align 8
  %99 = getelementptr inbounds %struct.b2ContactSolverDef, %struct.b2ContactSolverDef* %contactSolverDef, i32 0, i32 4
  store %struct.b2Position* %98, %struct.b2Position** %99, align 8
  call void @_ZN15b2ContactSolverC1EP18b2ContactSolverDef(%class.b2ContactSolver* %contactSolver, %struct.b2ContactSolverDef* %contactSolverDef)
  store i32 0, i32* %i1, align 4
  br label %100

; <label>:100                                     ; preds = %120, %80
  %101 = load i32, i32* %i1, align 4
  %102 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %103 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %102, i32 0, i32 4
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %101, %104
  br i1 %105, label %106, label %123

; <label>:106                                     ; preds = %100
  %107 = load i32, i32* %3, align 4
  %108 = load i32, i32* %4, align 4
  %109 = invoke zeroext i1 @_ZN15b2ContactSolver27SolveTOIPositionConstraintsEii(%class.b2ContactSolver* %contactSolver, i32 %107, i32 %108)
          to label %110 unwind label %115

; <label>:110                                     ; preds = %106
  %111 = zext i1 %109 to i8
  store i8 %111, i8* %contactsOkay, align 1
  %112 = load i8, i8* %contactsOkay, align 1
  %113 = trunc i8 %112 to i1
  br i1 %113, label %114, label %119

; <label>:114                                     ; preds = %110
  br label %123

; <label>:115                                     ; preds = %335, %272, %270, %267, %259, %247, %245, %240, %207, %193, %123, %106
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %5, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %6, align 4
  invoke void @_ZN15b2ContactSolverD1Ev(%class.b2ContactSolver* %contactSolver)
          to label %339 unwind label %345

; <label>:119                                     ; preds = %110
  br label %120

; <label>:120                                     ; preds = %119
  %121 = load i32, i32* %i1, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %i1, align 4
  br label %100

; <label>:123                                     ; preds = %114, %100
  %124 = load i32, i32* %3, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 2
  %127 = load %class.b2Body**, %class.b2Body*** %126, align 8
  %128 = getelementptr inbounds %class.b2Body*, %class.b2Body** %127, i64 %125
  %129 = load %class.b2Body*, %class.b2Body** %128, align 8
  %130 = getelementptr inbounds %class.b2Body, %class.b2Body* %129, i32 0, i32 4
  %131 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %130, i32 0, i32 1
  %132 = load i32, i32* %3, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %135 = load %struct.b2Position*, %struct.b2Position** %134, align 8
  %136 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %135, i64 %133
  %137 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %136, i32 0, i32 0
  %138 = bitcast %struct.b2Vec2* %131 to i8*
  %139 = bitcast %struct.b2Vec2* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 4, i1 false)
  %140 = load i32, i32* %3, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %143 = load %struct.b2Position*, %struct.b2Position** %142, align 8
  %144 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %143, i64 %141
  %145 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %144, i32 0, i32 1
  %146 = load float, float* %145, align 4
  %147 = load i32, i32* %3, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 2
  %150 = load %class.b2Body**, %class.b2Body*** %149, align 8
  %151 = getelementptr inbounds %class.b2Body*, %class.b2Body** %150, i64 %148
  %152 = load %class.b2Body*, %class.b2Body** %151, align 8
  %153 = getelementptr inbounds %class.b2Body, %class.b2Body* %152, i32 0, i32 4
  %154 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %153, i32 0, i32 3
  store float %146, float* %154, align 4
  %155 = load i32, i32* %4, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 2
  %158 = load %class.b2Body**, %class.b2Body*** %157, align 8
  %159 = getelementptr inbounds %class.b2Body*, %class.b2Body** %158, i64 %156
  %160 = load %class.b2Body*, %class.b2Body** %159, align 8
  %161 = getelementptr inbounds %class.b2Body, %class.b2Body* %160, i32 0, i32 4
  %162 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %161, i32 0, i32 1
  %163 = load i32, i32* %4, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %166 = load %struct.b2Position*, %struct.b2Position** %165, align 8
  %167 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %166, i64 %164
  %168 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %167, i32 0, i32 0
  %169 = bitcast %struct.b2Vec2* %162 to i8*
  %170 = bitcast %struct.b2Vec2* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 8, i32 4, i1 false)
  %171 = load i32, i32* %4, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %174 = load %struct.b2Position*, %struct.b2Position** %173, align 8
  %175 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %174, i64 %172
  %176 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %175, i32 0, i32 1
  %177 = load float, float* %176, align 4
  %178 = load i32, i32* %4, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 2
  %181 = load %class.b2Body**, %class.b2Body*** %180, align 8
  %182 = getelementptr inbounds %class.b2Body*, %class.b2Body** %181, i64 %179
  %183 = load %class.b2Body*, %class.b2Body** %182, align 8
  %184 = getelementptr inbounds %class.b2Body, %class.b2Body* %183, i32 0, i32 4
  %185 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %184, i32 0, i32 3
  store float %177, float* %185, align 4
  invoke void @_ZN15b2ContactSolver29InitializeVelocityConstraintsEv(%class.b2ContactSolver* %contactSolver)
          to label %186 unwind label %115

; <label>:186                                     ; preds = %123
  store i32 0, i32* %i2, align 4
  br label %187

; <label>:187                                     ; preds = %195, %186
  %188 = load i32, i32* %i2, align 4
  %189 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %190 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %189, i32 0, i32 3
  %191 = load i32, i32* %190, align 4
  %192 = icmp slt i32 %188, %191
  br i1 %192, label %193, label %198

; <label>:193                                     ; preds = %187
  invoke void @_ZN15b2ContactSolver24SolveVelocityConstraintsEv(%class.b2ContactSolver* %contactSolver)
          to label %194 unwind label %115

; <label>:194                                     ; preds = %193
  br label %195

; <label>:195                                     ; preds = %194
  %196 = load i32, i32* %i2, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %i2, align 4
  br label %187

; <label>:198                                     ; preds = %187
  %199 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %200 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %199, i32 0, i32 0
  %201 = load float, float* %200, align 4
  store float %201, float* %h, align 4
  store i32 0, i32* %i3, align 4
  br label %202

; <label>:202                                     ; preds = %332, %198
  %203 = load i32, i32* %i3, align 4
  %204 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 7
  %205 = load i32, i32* %204, align 8
  %206 = icmp slt i32 %203, %205
  br i1 %206, label %207, label %335

; <label>:207                                     ; preds = %202
  %208 = load i32, i32* %i3, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %211 = load %struct.b2Position*, %struct.b2Position** %210, align 8
  %212 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %211, i64 %209
  %213 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %212, i32 0, i32 0
  %214 = bitcast %struct.b2Vec2* %c to i8*
  %215 = bitcast %struct.b2Vec2* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %214, i8* %215, i64 8, i32 4, i1 false)
  %216 = load i32, i32* %i3, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %219 = load %struct.b2Position*, %struct.b2Position** %218, align 8
  %220 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %219, i64 %217
  %221 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %220, i32 0, i32 1
  %222 = load float, float* %221, align 4
  store float %222, float* %a, align 4
  %223 = load i32, i32* %i3, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %226 = load %struct.b2Position*, %struct.b2Position** %225, align 8
  %227 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %226, i64 %224
  %228 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %227, i32 0, i32 0
  %229 = bitcast %struct.b2Vec2* %v to i8*
  %230 = bitcast %struct.b2Vec2* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %230, i64 8, i32 4, i1 false)
  %231 = load i32, i32* %i3, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %234 = load %struct.b2Position*, %struct.b2Position** %233, align 8
  %235 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %234, i64 %232
  %236 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %235, i32 0, i32 1
  %237 = load float, float* %236, align 4
  store float %237, float* %w, align 4
  %238 = load float, float* %h, align 4
  %239 = invoke <2 x float> @_ZmlfRK6b2Vec2(float %238, %struct.b2Vec2* dereferenceable(8) %v)
          to label %240 unwind label %115

; <label>:240                                     ; preds = %207
  %241 = bitcast %struct.b2Vec2* %translation to <2 x float>*
  store <2 x float> %239, <2 x float>* %241, align 4
  %242 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %translation, %struct.b2Vec2* dereferenceable(8) %translation)
          to label %243 unwind label %115

; <label>:243                                     ; preds = %240
  %244 = fcmp ogt float %242, 4.000000e+00
  br i1 %244, label %245, label %251

; <label>:245                                     ; preds = %243
  %246 = invoke float @_ZNK6b2Vec26LengthEv(%struct.b2Vec2* %translation)
          to label %247 unwind label %115

; <label>:247                                     ; preds = %245
  %248 = fdiv float 2.000000e+00, %246
  store float %248, float* %ratio, align 4
  %249 = load float, float* %ratio, align 4
  invoke void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %v, float %249)
          to label %250 unwind label %115

; <label>:250                                     ; preds = %247
  br label %251

; <label>:251                                     ; preds = %250, %243
  %252 = load float, float* %h, align 4
  %253 = load float, float* %w, align 4
  %254 = fmul float %252, %253
  store float %254, float* %rotation, align 4
  %255 = load float, float* %rotation, align 4
  %256 = load float, float* %rotation, align 4
  %257 = fmul float %255, %256
  %258 = fcmp ogt float %257, 0x4003BD3CE0000000
  br i1 %258, label %259, label %267

; <label>:259                                     ; preds = %251
  %260 = load float, float* %rotation, align 4
  %261 = invoke float @_Z5b2AbsIfET_S0_(float %260)
          to label %262 unwind label %115

; <label>:262                                     ; preds = %259
  %263 = fdiv float 0x3FF921FB60000000, %261
  store float %263, float* %ratio4, align 4
  %264 = load float, float* %ratio4, align 4
  %265 = load float, float* %w, align 4
  %266 = fmul float %265, %264
  store float %266, float* %w, align 4
  br label %267

; <label>:267                                     ; preds = %262, %251
  %268 = load float, float* %h, align 4
  %269 = invoke <2 x float> @_ZmlfRK6b2Vec2(float %268, %struct.b2Vec2* dereferenceable(8) %v)
          to label %270 unwind label %115

; <label>:270                                     ; preds = %267
  %271 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %269, <2 x float>* %271, align 4
  invoke void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %c, %struct.b2Vec2* dereferenceable(8) %7)
          to label %272 unwind label %115

; <label>:272                                     ; preds = %270
  %273 = load float, float* %h, align 4
  %274 = load float, float* %w, align 4
  %275 = fmul float %273, %274
  %276 = load float, float* %a, align 4
  %277 = fadd float %276, %275
  store float %277, float* %a, align 4
  %278 = load i32, i32* %i3, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %281 = load %struct.b2Position*, %struct.b2Position** %280, align 8
  %282 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %281, i64 %279
  %283 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %282, i32 0, i32 0
  %284 = bitcast %struct.b2Vec2* %283 to i8*
  %285 = bitcast %struct.b2Vec2* %c to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %284, i8* %285, i64 8, i32 4, i1 false)
  %286 = load float, float* %a, align 4
  %287 = load i32, i32* %i3, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 5
  %290 = load %struct.b2Position*, %struct.b2Position** %289, align 8
  %291 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %290, i64 %288
  %292 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %291, i32 0, i32 1
  store float %286, float* %292, align 4
  %293 = load i32, i32* %i3, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %296 = load %struct.b2Position*, %struct.b2Position** %295, align 8
  %297 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %296, i64 %294
  %298 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %297, i32 0, i32 0
  %299 = bitcast %struct.b2Vec2* %298 to i8*
  %300 = bitcast %struct.b2Vec2* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %299, i8* %300, i64 8, i32 4, i1 false)
  %301 = load float, float* %w, align 4
  %302 = load i32, i32* %i3, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 6
  %305 = load %struct.b2Position*, %struct.b2Position** %304, align 8
  %306 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %305, i64 %303
  %307 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %306, i32 0, i32 1
  store float %301, float* %307, align 4
  %308 = load i32, i32* %i3, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds %class.b2Island, %class.b2Island* %8, i32 0, i32 2
  %311 = load %class.b2Body**, %class.b2Body*** %310, align 8
  %312 = getelementptr inbounds %class.b2Body*, %class.b2Body** %311, i64 %309
  %313 = load %class.b2Body*, %class.b2Body** %312, align 8
  store %class.b2Body* %313, %class.b2Body** %body, align 8
  %314 = load %class.b2Body*, %class.b2Body** %body, align 8
  %315 = getelementptr inbounds %class.b2Body, %class.b2Body* %314, i32 0, i32 4
  %316 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %315, i32 0, i32 2
  %317 = bitcast %struct.b2Vec2* %316 to i8*
  %318 = bitcast %struct.b2Vec2* %c to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %317, i8* %318, i64 8, i32 4, i1 false)
  %319 = load float, float* %a, align 4
  %320 = load %class.b2Body*, %class.b2Body** %body, align 8
  %321 = getelementptr inbounds %class.b2Body, %class.b2Body* %320, i32 0, i32 4
  %322 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %321, i32 0, i32 4
  store float %319, float* %322, align 4
  %323 = load %class.b2Body*, %class.b2Body** %body, align 8
  %324 = getelementptr inbounds %class.b2Body, %class.b2Body* %323, i32 0, i32 5
  %325 = bitcast %struct.b2Vec2* %324 to i8*
  %326 = bitcast %struct.b2Vec2* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 8, i32 4, i1 false)
  %327 = load float, float* %w, align 4
  %328 = load %class.b2Body*, %class.b2Body** %body, align 8
  %329 = getelementptr inbounds %class.b2Body, %class.b2Body* %328, i32 0, i32 6
  store float %327, float* %329, align 8
  %330 = load %class.b2Body*, %class.b2Body** %body, align 8
  invoke void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %330)
          to label %331 unwind label %115

; <label>:331                                     ; preds = %272
  br label %332

; <label>:332                                     ; preds = %331
  %333 = load i32, i32* %i3, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %i3, align 4
  br label %202

; <label>:335                                     ; preds = %202
  %336 = getelementptr inbounds %class.b2ContactSolver, %class.b2ContactSolver* %contactSolver, i32 0, i32 5
  %337 = load %struct.b2ContactVelocityConstraint*, %struct.b2ContactVelocityConstraint** %336, align 8
  invoke void @_ZN8b2Island6ReportEPK27b2ContactVelocityConstraint(%class.b2Island* %8, %struct.b2ContactVelocityConstraint* %337)
          to label %338 unwind label %115

; <label>:338                                     ; preds = %335
  call void @_ZN15b2ContactSolverD1Ev(%class.b2ContactSolver* %contactSolver)
  ret void

; <label>:339                                     ; preds = %115
  br label %340

; <label>:340                                     ; preds = %339
  %341 = load i8*, i8** %5, align 8
  %342 = load i32, i32* %6, align 4
  %343 = insertvalue { i8*, i32 } undef, i8* %341, 0
  %344 = insertvalue { i8*, i32 } %343, i32 %342, 1
  resume { i8*, i32 } %344

; <label>:345                                     ; preds = %115
  %346 = landingpad { i8*, i32 }
          catch i8* null
  %347 = extractvalue { i8*, i32 } %346, 0
  call void @__clang_call_terminate(i8* %347) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN7b2WorldC2ERK6b2Vec2(%class.b2World* %this, %struct.b2Vec2* dereferenceable(8) %gravity) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %struct.b2Vec2* %gravity, %struct.b2Vec2** %2, align 8
  %5 = load %class.b2World*, %class.b2World** %1, align 8
  %6 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 0
  call void @_ZN16b2BlockAllocatorC1Ev(%class.b2BlockAllocator* %6)
  %7 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 1
  invoke void @_ZN16b2StackAllocatorC1Ev(%class.b2StackAllocator* %7)
          to label %8 unwind label %36

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  invoke void @_ZN16b2ContactManagerC1Ev(%class.b2ContactManager* %9)
          to label %10 unwind label %40

; <label>:10                                      ; preds = %8
  %11 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 8
  invoke void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %11)
          to label %12 unwind label %44

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %14 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 10
  store %class.b2ContactFilter* null, %class.b2ContactFilter** %14, align 8
  %15 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 11
  store %class.b2Draw* null, %class.b2Draw** %15, align 8
  %16 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 4
  store %class.b2Body* null, %class.b2Body** %16, align 8
  %17 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 5
  store %class.b2Joint* null, %class.b2Joint** %17, align 8
  %18 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 6
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 7
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 13
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 14
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 15
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 16
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 9
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 8
  %26 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %27 = bitcast %struct.b2Vec2* %25 to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 2
  store i32 4, i32* %29, align 8
  %30 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 12
  store float 0.000000e+00, float* %30, align 8
  %31 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 0
  %32 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %33 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %32, i32 0, i32 5
  store %class.b2BlockAllocator* %31, %class.b2BlockAllocator** %33, align 8
  %34 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %35 = bitcast %struct.b2Profile* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 32, i32 8, i1 false)
  ret void

; <label>:36                                      ; preds = %0
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %3, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %4, align 4
  br label %51

; <label>:40                                      ; preds = %8
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  br label %49

; <label>:44                                      ; preds = %10
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %3, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %4, align 4
  invoke void @_ZN16b2ContactManagerD2Ev(%class.b2ContactManager* %9)
          to label %48 unwind label %58

; <label>:48                                      ; preds = %44
  br label %49

; <label>:49                                      ; preds = %48, %40
  invoke void @_ZN16b2StackAllocatorD1Ev(%class.b2StackAllocator* %7)
          to label %50 unwind label %58

; <label>:50                                      ; preds = %49
  br label %51

; <label>:51                                      ; preds = %50, %36
  invoke void @_ZN16b2BlockAllocatorD1Ev(%class.b2BlockAllocator* %6)
          to label %52 unwind label %58

; <label>:52                                      ; preds = %51
  br label %53

; <label>:53                                      ; preds = %52
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57

; <label>:58                                      ; preds = %51, %49, %44
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #15
  unreachable
}

; Function Attrs: uwtable
define void @_ZN16b2BlockAllocatorC2Ev(%class.b2BlockAllocator* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2BlockAllocator*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.b2BlockAllocator* %this, %class.b2BlockAllocator** %1, align 8
  %2 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %1, align 8
  %3 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 2
  store i32 128, i32* %3, align 4
  %4 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = mul i64 %7, 16
  %9 = trunc i64 %8 to i32
  %10 = call i8* @_Z7b2Alloci(i32 %9)
  %11 = bitcast i8* %10 to %struct.b2Chunk*
  %12 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 0
  store %struct.b2Chunk* %11, %struct.b2Chunk** %12, align 8
  %13 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 0
  %14 = load %struct.b2Chunk*, %struct.b2Chunk** %13, align 8
  %15 = bitcast %struct.b2Chunk* %14 to i8*
  %16 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 16
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 %19, i32 8, i1 false)
  %20 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 3
  %21 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %20, i32 0, i32 0
  %22 = bitcast %struct.b2Block** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 112, i32 8, i1 false)
  %23 = load i8, i8* @_ZN16b2BlockAllocator28s_blockSizeLookupInitializedE, align 1
  %24 = trunc i8 %23 to i1
  %25 = zext i1 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %63

; <label>:27                                      ; preds = %0
  store i32 0, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %28

; <label>:28                                      ; preds = %59, %27
  %29 = load i32, i32* %i, align 4
  %30 = icmp sle i32 %29, 640
  br i1 %30, label %31, label %62

; <label>:31                                      ; preds = %28
  %32 = load i32, i32* %j, align 4
  %33 = icmp slt i32 %32, 14
  br i1 %33, label %34, label %35

; <label>:34                                      ; preds = %31
  br label %37

; <label>:35                                      ; preds = %31
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.307, i32 0, i32 0), i32 71, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZN16b2BlockAllocatorC2Ev, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %37

; <label>:37                                      ; preds = %36, %34
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %j, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [14 x i32], [14 x i32]* @_ZN16b2BlockAllocator12s_blockSizesE, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = icmp sle i32 %38, %42
  br i1 %43, label %44, label %50

; <label>:44                                      ; preds = %37
  %45 = load i32, i32* %j, align 4
  %46 = trunc i32 %45 to i8
  %47 = load i32, i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [641 x i8], [641 x i8]* @_ZN16b2BlockAllocator17s_blockSizeLookupE, i64 0, i64 %48
  store i8 %46, i8* %49, align 1
  br label %58

; <label>:50                                      ; preds = %37
  %51 = load i32, i32* %j, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %j, align 4
  %53 = load i32, i32* %j, align 4
  %54 = trunc i32 %53 to i8
  %55 = load i32, i32* %i, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [641 x i8], [641 x i8]* @_ZN16b2BlockAllocator17s_blockSizeLookupE, i64 0, i64 %56
  store i8 %54, i8* %57, align 1
  br label %58

; <label>:58                                      ; preds = %50, %44
  br label %59

; <label>:59                                      ; preds = %58
  %60 = load i32, i32* %i, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %i, align 4
  br label %28

; <label>:62                                      ; preds = %28
  store i8 1, i8* @_ZN16b2BlockAllocator28s_blockSizeLookupInitializedE, align 1
  br label %63

; <label>:63                                      ; preds = %62, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN16b2StackAllocatorC2Ev(%class.b2StackAllocator* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2StackAllocator*, align 8
  store %class.b2StackAllocator* %this, %class.b2StackAllocator** %1, align 8
  %2 = load %class.b2StackAllocator*, %class.b2StackAllocator** %1, align 8
  %3 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 5
  %4 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 6
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN16b2ContactManagerD2Ev(%class.b2ContactManager* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %class.b2ContactManager*, align 8
  store %class.b2ContactManager* %this, %class.b2ContactManager** %1, align 8
  %2 = load %class.b2ContactManager*, %class.b2ContactManager** %1, align 8
  %3 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %2, i32 0, i32 0
  call void @_ZN12b2BroadPhaseD1Ev(%class.b2BroadPhase* %3)
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2BroadPhaseD2Ev(%class.b2BroadPhase* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 3
  %6 = load i32*, i32** %5, align 8
  %7 = bitcast i32* %6 to i8*
  invoke void @_Z6b2FreePv(i8* %7)
          to label %8 unwind label %14

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 6
  %10 = load %struct.b2Pair*, %struct.b2Pair** %9, align 8
  %11 = bitcast %struct.b2Pair* %10 to i8*
  invoke void @_Z6b2FreePv(i8* %11)
          to label %12 unwind label %14

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  call void @_ZN13b2DynamicTreeD1Ev(%class.b2DynamicTree* %13)
  ret void

; <label>:14                                      ; preds = %8, %0
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %2, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %3, align 4
  %18 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  invoke void @_ZN13b2DynamicTreeD1Ev(%class.b2DynamicTree* %18)
          to label %19 unwind label %25

; <label>:19                                      ; preds = %14
  br label %20

; <label>:20                                      ; preds = %19
  %21 = load i8*, i8** %2, align 8
  %22 = load i32, i32* %3, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

; <label>:25                                      ; preds = %14
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #15
  unreachable
}

; Function Attrs: nounwind uwtable
define void @_ZN16b2StackAllocatorD2Ev(%class.b2StackAllocator* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2StackAllocator*, align 8
  store %class.b2StackAllocator* %this, %class.b2StackAllocator** %1, align 8
  %2 = load %class.b2StackAllocator*, %class.b2StackAllocator** %1, align 8
  %3 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %9

; <label>:7                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.340, i32 0, i32 0), i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__._ZN16b2StackAllocatorD2Ev, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %9

; <label>:9                                       ; preds = %8, %6
  %10 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %9
  br label %16

; <label>:14                                      ; preds = %9
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.341, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.340, i32 0, i32 0), i32 33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__._ZN16b2StackAllocatorD2Ev, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16                                      ; preds = %15, %13
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2BlockAllocatorD2Ev(%class.b2BlockAllocator* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2BlockAllocator*, align 8
  %i = alloca i32, align 4
  store %class.b2BlockAllocator* %this, %class.b2BlockAllocator** %1, align 8
  %2 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %1, align 8
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %17, %0
  %4 = load i32, i32* %i, align 4
  %5 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %20

; <label>:8                                       ; preds = %3
  %9 = load i32, i32* %i, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 0
  %12 = load %struct.b2Chunk*, %struct.b2Chunk** %11, align 8
  %13 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %12, i64 %10
  %14 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %13, i32 0, i32 1
  %15 = load %struct.b2Block*, %struct.b2Block** %14, align 8
  %16 = bitcast %struct.b2Block* %15 to i8*
  call void @_Z6b2FreePv(i8* %16)
  br label %17

; <label>:17                                      ; preds = %8
  %18 = load i32, i32* %i, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %3

; <label>:20                                      ; preds = %3
  %21 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 0
  %22 = load %struct.b2Chunk*, %struct.b2Chunk** %21, align 8
  %23 = bitcast %struct.b2Chunk* %22 to i8*
  call void @_Z6b2FreePv(i8* %23)
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2WorldD2Ev(%class.b2World* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2World*, align 8
  %b = alloca %class.b2Body*, align 8
  %bNext = alloca %class.b2Body*, align 8
  %f = alloca %class.b2Fixture*, align 8
  %fNext = alloca %class.b2Fixture*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2World* %this, %class.b2World** %1, align 8
  %4 = load %class.b2World*, %class.b2World** %1, align 8
  %5 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 4
  %6 = load %class.b2Body*, %class.b2Body** %5, align 8
  store %class.b2Body* %6, %class.b2Body** %b, align 8
  br label %7

; <label>:7                                       ; preds = %35, %0
  %8 = load %class.b2Body*, %class.b2Body** %b, align 8
  %9 = icmp ne %class.b2Body* %8, null
  br i1 %9, label %10, label %37

; <label>:10                                      ; preds = %7
  %11 = load %class.b2Body*, %class.b2Body** %b, align 8
  %12 = getelementptr inbounds %class.b2Body, %class.b2Body* %11, i32 0, i32 11
  %13 = load %class.b2Body*, %class.b2Body** %12, align 8
  store %class.b2Body* %13, %class.b2Body** %bNext, align 8
  %14 = load %class.b2Body*, %class.b2Body** %b, align 8
  %15 = getelementptr inbounds %class.b2Body, %class.b2Body* %14, i32 0, i32 12
  %16 = load %class.b2Fixture*, %class.b2Fixture** %15, align 8
  store %class.b2Fixture* %16, %class.b2Fixture** %f, align 8
  br label %17

; <label>:17                                      ; preds = %28, %10
  %18 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %19 = icmp ne %class.b2Fixture* %18, null
  br i1 %19, label %20, label %35

; <label>:20                                      ; preds = %17
  %21 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %22 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %21, i32 0, i32 1
  %23 = load %class.b2Fixture*, %class.b2Fixture** %22, align 8
  store %class.b2Fixture* %23, %class.b2Fixture** %fNext, align 8
  %24 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %25 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %24, i32 0, i32 7
  store i32 0, i32* %25, align 8
  %26 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %27 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 0
  invoke void @_ZN9b2Fixture7DestroyEP16b2BlockAllocator(%class.b2Fixture* %26, %class.b2BlockAllocator* %27)
          to label %28 unwind label %30

; <label>:28                                      ; preds = %20
  %29 = load %class.b2Fixture*, %class.b2Fixture** %fNext, align 8
  store %class.b2Fixture* %29, %class.b2Fixture** %f, align 8
  br label %17

; <label>:30                                      ; preds = %20
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %2, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %3, align 4
  %34 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 3
  invoke void @_ZN16b2ContactManagerD2Ev(%class.b2ContactManager* %34)
          to label %47 unwind label %63

; <label>:35                                      ; preds = %17
  %36 = load %class.b2Body*, %class.b2Body** %bNext, align 8
  store %class.b2Body* %36, %class.b2Body** %b, align 8
  br label %7

; <label>:37                                      ; preds = %7
  %38 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 3
  invoke void @_ZN16b2ContactManagerD2Ev(%class.b2ContactManager* %38)
          to label %39 unwind label %43

; <label>:39                                      ; preds = %37
  %40 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 1
  invoke void @_ZN16b2StackAllocatorD1Ev(%class.b2StackAllocator* %40)
          to label %41 unwind label %48

; <label>:41                                      ; preds = %39
  %42 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 0
  call void @_ZN16b2BlockAllocatorD1Ev(%class.b2BlockAllocator* %42)
  ret void

; <label>:43                                      ; preds = %37
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %2, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %3, align 4
  br label %52

; <label>:47                                      ; preds = %30
  br label %52

; <label>:48                                      ; preds = %39
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %2, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %3, align 4
  br label %55

; <label>:52                                      ; preds = %47, %43
  %53 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 1
  invoke void @_ZN16b2StackAllocatorD1Ev(%class.b2StackAllocator* %53)
          to label %54 unwind label %63

; <label>:54                                      ; preds = %52
  br label %55

; <label>:55                                      ; preds = %54, %48
  %56 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 0
  invoke void @_ZN16b2BlockAllocatorD1Ev(%class.b2BlockAllocator* %56)
          to label %57 unwind label %63

; <label>:57                                      ; preds = %55
  br label %58

; <label>:58                                      ; preds = %57
  %59 = load i8*, i8** %2, align 8
  %60 = load i32, i32* %3, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63                                      ; preds = %55, %52, %30
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #15
  unreachable
}

; Function Attrs: nounwind uwtable
define void @_ZN7b2World22SetDestructionListenerEP21b2DestructionListener(%class.b2World* %this, %class.b2ContactFilter* %listener) #2 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2ContactFilter*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2ContactFilter* %listener, %class.b2ContactFilter** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %5 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 10
  store %class.b2ContactFilter* %4, %class.b2ContactFilter** %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN7b2World16SetContactFilterEP15b2ContactFilter(%class.b2World* %this, %class.b2ContactFilter* %filter) #2 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2ContactFilter*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2ContactFilter* %filter, %class.b2ContactFilter** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %5 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 3
  %6 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %5, i32 0, i32 3
  store %class.b2ContactFilter* %4, %class.b2ContactFilter** %6, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN7b2World18SetContactListenerEP17b2ContactListener(%class.b2World* %this, %class.b2ContactFilter* %listener) #2 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2ContactFilter*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2ContactFilter* %listener, %class.b2ContactFilter** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %5 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 3
  %6 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %5, i32 0, i32 4
  store %class.b2ContactFilter* %4, %class.b2ContactFilter** %6, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN7b2World12SetDebugDrawEP6b2Draw(%class.b2World* %this, %class.b2Draw* %debugDraw) #2 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2Draw*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2Draw* %debugDraw, %class.b2Draw** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = load %class.b2Draw*, %class.b2Draw** %2, align 8
  %5 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  store %class.b2Draw* %4, %class.b2Draw** %5, align 8
  ret void
}

; Function Attrs: uwtable
define %class.b2Body* @_ZN7b2World10CreateBodyEPK9b2BodyDef(%class.b2World* %this, %struct.b2BodyDef* %def) #0 align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca %class.b2World*, align 8
  %3 = alloca %struct.b2BodyDef*, align 8
  %mem = alloca i8*, align 8
  %b = alloca %class.b2Body*, align 8
  store %class.b2World* %this, %class.b2World** %2, align 8
  store %struct.b2BodyDef* %def, %struct.b2BodyDef** %3, align 8
  %4 = load %class.b2World*, %class.b2World** %2, align 8
  %5 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %4)
  %6 = zext i1 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 109, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__._ZN7b2World10CreateBodyEPK9b2BodyDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %4)
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %11
  store %class.b2Body* null, %class.b2Body** %1, align 8
  br label %41

; <label>:14                                      ; preds = %11
  %15 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 0
  %16 = call i8* @_ZN16b2BlockAllocator8AllocateEi(%class.b2BlockAllocator* %15, i32 184)
  store i8* %16, i8** %mem, align 8
  %17 = load i8*, i8** %mem, align 8
  %18 = bitcast i8* %17 to %class.b2Body*
  %19 = load %struct.b2BodyDef*, %struct.b2BodyDef** %3, align 8
  call void @_ZN6b2BodyC1EPK9b2BodyDefP7b2World(%class.b2Body* %18, %struct.b2BodyDef* %19, %class.b2World* %4)
  store %class.b2Body* %18, %class.b2Body** %b, align 8
  %20 = load %class.b2Body*, %class.b2Body** %b, align 8
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %20, i32 0, i32 10
  store %class.b2Body* null, %class.b2Body** %21, align 8
  %22 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 4
  %23 = load %class.b2Body*, %class.b2Body** %22, align 8
  %24 = load %class.b2Body*, %class.b2Body** %b, align 8
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %24, i32 0, i32 11
  store %class.b2Body* %23, %class.b2Body** %25, align 8
  %26 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 4
  %27 = load %class.b2Body*, %class.b2Body** %26, align 8
  %28 = icmp ne %class.b2Body* %27, null
  br i1 %28, label %29, label %34

; <label>:29                                      ; preds = %14
  %30 = load %class.b2Body*, %class.b2Body** %b, align 8
  %31 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 4
  %32 = load %class.b2Body*, %class.b2Body** %31, align 8
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %32, i32 0, i32 10
  store %class.b2Body* %30, %class.b2Body** %33, align 8
  br label %34

; <label>:34                                      ; preds = %29, %14
  %35 = load %class.b2Body*, %class.b2Body** %b, align 8
  %36 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 4
  store %class.b2Body* %35, %class.b2Body** %36, align 8
  %37 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 6
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  %40 = load %class.b2Body*, %class.b2Body** %b, align 8
  store %class.b2Body* %40, %class.b2Body** %1, align 8
  br label %41

; <label>:41                                      ; preds = %34, %13
  %42 = load %class.b2Body*, %class.b2Body** %1, align 8
  ret %class.b2Body* %42
}

; Function Attrs: uwtable
define void @_ZN7b2World11DestroyBodyEP6b2Body(%class.b2World* %this, %class.b2Body* %b) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2Body*, align 8
  %je = alloca %struct.b2JointEdge*, align 8
  %je0 = alloca %struct.b2JointEdge*, align 8
  %ce = alloca %struct.b2ContactEdge*, align 8
  %ce0 = alloca %struct.b2ContactEdge*, align 8
  %f = alloca %class.b2Fixture*, align 8
  %f0 = alloca %class.b2Fixture*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2Body* %b, %class.b2Body** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.280, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 133, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN7b2World11DestroyBodyEP6b2Body, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %3)
  %12 = zext i1 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %10
  br label %17

; <label>:15                                      ; preds = %10
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 134, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN7b2World11DestroyBodyEP6b2Body, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %17

; <label>:17                                      ; preds = %16, %14
  %18 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %3)
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %17
  br label %160

; <label>:20                                      ; preds = %17
  %21 = load %class.b2Body*, %class.b2Body** %2, align 8
  %22 = getelementptr inbounds %class.b2Body, %class.b2Body* %21, i32 0, i32 14
  %23 = load %struct.b2JointEdge*, %struct.b2JointEdge** %22, align 8
  store %struct.b2JointEdge* %23, %struct.b2JointEdge** %je, align 8
  br label %24

; <label>:24                                      ; preds = %45, %20
  %25 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %26 = icmp ne %struct.b2JointEdge* %25, null
  br i1 %26, label %27, label %52

; <label>:27                                      ; preds = %24
  %28 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  store %struct.b2JointEdge* %28, %struct.b2JointEdge** %je0, align 8
  %29 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %30 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %29, i32 0, i32 3
  %31 = load %struct.b2JointEdge*, %struct.b2JointEdge** %30, align 8
  store %struct.b2JointEdge* %31, %struct.b2JointEdge** %je, align 8
  %32 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 10
  %33 = load %class.b2ContactFilter*, %class.b2ContactFilter** %32, align 8
  %34 = icmp ne %class.b2ContactFilter* %33, null
  br i1 %34, label %35, label %45

; <label>:35                                      ; preds = %27
  %36 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 10
  %37 = load %class.b2ContactFilter*, %class.b2ContactFilter** %36, align 8
  %38 = bitcast %class.b2ContactFilter* %37 to void (%class.b2ContactFilter*, %class.b2Joint*)***
  %39 = load void (%class.b2ContactFilter*, %class.b2Joint*)**, void (%class.b2ContactFilter*, %class.b2Joint*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Joint*)*, void (%class.b2ContactFilter*, %class.b2Joint*)** %39, i64 2
  %41 = load void (%class.b2ContactFilter*, %class.b2Joint*)*, void (%class.b2ContactFilter*, %class.b2Joint*)** %40, align 8
  %42 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je0, align 8
  %43 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %42, i32 0, i32 1
  %44 = load %class.b2Joint*, %class.b2Joint** %43, align 8
  call void %41(%class.b2ContactFilter* %37, %class.b2Joint* %44)
  br label %45

; <label>:45                                      ; preds = %35, %27
  %46 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je0, align 8
  %47 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %46, i32 0, i32 1
  %48 = load %class.b2Joint*, %class.b2Joint** %47, align 8
  call void @_ZN7b2World12DestroyJointEP7b2Joint(%class.b2World* %3, %class.b2Joint* %48)
  %49 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %50 = load %class.b2Body*, %class.b2Body** %2, align 8
  %51 = getelementptr inbounds %class.b2Body, %class.b2Body* %50, i32 0, i32 14
  store %struct.b2JointEdge* %49, %struct.b2JointEdge** %51, align 8
  br label %24

; <label>:52                                      ; preds = %24
  %53 = load %class.b2Body*, %class.b2Body** %2, align 8
  %54 = getelementptr inbounds %class.b2Body, %class.b2Body* %53, i32 0, i32 14
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %54, align 8
  %55 = load %class.b2Body*, %class.b2Body** %2, align 8
  %56 = getelementptr inbounds %class.b2Body, %class.b2Body* %55, i32 0, i32 15
  %57 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %56, align 8
  store %struct.b2ContactEdge* %57, %struct.b2ContactEdge** %ce, align 8
  br label %58

; <label>:58                                      ; preds = %61, %52
  %59 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %60 = icmp ne %struct.b2ContactEdge* %59, null
  br i1 %60, label %61, label %70

; <label>:61                                      ; preds = %58
  %62 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  store %struct.b2ContactEdge* %62, %struct.b2ContactEdge** %ce0, align 8
  %63 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %64 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %63, i32 0, i32 3
  %65 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %64, align 8
  store %struct.b2ContactEdge* %65, %struct.b2ContactEdge** %ce, align 8
  %66 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 3
  %67 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce0, align 8
  %68 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %67, i32 0, i32 1
  %69 = load %class.b2Contact*, %class.b2Contact** %68, align 8
  call void @_ZN16b2ContactManager7DestroyEP9b2Contact(%class.b2ContactManager* %66, %class.b2Contact* %69)
  br label %58

; <label>:70                                      ; preds = %58
  %71 = load %class.b2Body*, %class.b2Body** %2, align 8
  %72 = getelementptr inbounds %class.b2Body, %class.b2Body* %71, i32 0, i32 15
  store %struct.b2ContactEdge* null, %struct.b2ContactEdge** %72, align 8
  %73 = load %class.b2Body*, %class.b2Body** %2, align 8
  %74 = getelementptr inbounds %class.b2Body, %class.b2Body* %73, i32 0, i32 12
  %75 = load %class.b2Fixture*, %class.b2Fixture** %74, align 8
  store %class.b2Fixture* %75, %class.b2Fixture** %f, align 8
  br label %76

; <label>:76                                      ; preds = %95, %70
  %77 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %78 = icmp ne %class.b2Fixture* %77, null
  br i1 %78, label %79, label %112

; <label>:79                                      ; preds = %76
  %80 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  store %class.b2Fixture* %80, %class.b2Fixture** %f0, align 8
  %81 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %82 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %81, i32 0, i32 1
  %83 = load %class.b2Fixture*, %class.b2Fixture** %82, align 8
  store %class.b2Fixture* %83, %class.b2Fixture** %f, align 8
  %84 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 10
  %85 = load %class.b2ContactFilter*, %class.b2ContactFilter** %84, align 8
  %86 = icmp ne %class.b2ContactFilter* %85, null
  br i1 %86, label %87, label %95

; <label>:87                                      ; preds = %79
  %88 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 10
  %89 = load %class.b2ContactFilter*, %class.b2ContactFilter** %88, align 8
  %90 = bitcast %class.b2ContactFilter* %89 to void (%class.b2ContactFilter*, %class.b2Fixture*)***
  %91 = load void (%class.b2ContactFilter*, %class.b2Fixture*)**, void (%class.b2ContactFilter*, %class.b2Fixture*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.b2ContactFilter*, %class.b2Fixture*)*, void (%class.b2ContactFilter*, %class.b2Fixture*)** %91, i64 3
  %93 = load void (%class.b2ContactFilter*, %class.b2Fixture*)*, void (%class.b2ContactFilter*, %class.b2Fixture*)** %92, align 8
  %94 = load %class.b2Fixture*, %class.b2Fixture** %f0, align 8
  call void %93(%class.b2ContactFilter* %89, %class.b2Fixture* %94)
  br label %95

; <label>:95                                      ; preds = %87, %79
  %96 = load %class.b2Fixture*, %class.b2Fixture** %f0, align 8
  %97 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 3
  %98 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %97, i32 0, i32 0
  call void @_ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase(%class.b2Fixture* %96, %class.b2BroadPhase* %98)
  %99 = load %class.b2Fixture*, %class.b2Fixture** %f0, align 8
  %100 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 0
  call void @_ZN9b2Fixture7DestroyEP16b2BlockAllocator(%class.b2Fixture* %99, %class.b2BlockAllocator* %100)
  %101 = load %class.b2Fixture*, %class.b2Fixture** %f0, align 8
  %102 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 0
  %103 = load %class.b2Fixture*, %class.b2Fixture** %f0, align 8
  %104 = bitcast %class.b2Fixture* %103 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %102, i8* %104, i32 72)
  %105 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %106 = load %class.b2Body*, %class.b2Body** %2, align 8
  %107 = getelementptr inbounds %class.b2Body, %class.b2Body* %106, i32 0, i32 12
  store %class.b2Fixture* %105, %class.b2Fixture** %107, align 8
  %108 = load %class.b2Body*, %class.b2Body** %2, align 8
  %109 = getelementptr inbounds %class.b2Body, %class.b2Body* %108, i32 0, i32 13
  %110 = load i32, i32* %109, align 8
  %111 = sub nsw i32 %110, 1
  store i32 %111, i32* %109, align 8
  br label %76

; <label>:112                                     ; preds = %76
  %113 = load %class.b2Body*, %class.b2Body** %2, align 8
  %114 = getelementptr inbounds %class.b2Body, %class.b2Body* %113, i32 0, i32 12
  store %class.b2Fixture* null, %class.b2Fixture** %114, align 8
  %115 = load %class.b2Body*, %class.b2Body** %2, align 8
  %116 = getelementptr inbounds %class.b2Body, %class.b2Body* %115, i32 0, i32 13
  store i32 0, i32* %116, align 8
  %117 = load %class.b2Body*, %class.b2Body** %2, align 8
  %118 = getelementptr inbounds %class.b2Body, %class.b2Body* %117, i32 0, i32 10
  %119 = load %class.b2Body*, %class.b2Body** %118, align 8
  %120 = icmp ne %class.b2Body* %119, null
  br i1 %120, label %121, label %129

; <label>:121                                     ; preds = %112
  %122 = load %class.b2Body*, %class.b2Body** %2, align 8
  %123 = getelementptr inbounds %class.b2Body, %class.b2Body* %122, i32 0, i32 11
  %124 = load %class.b2Body*, %class.b2Body** %123, align 8
  %125 = load %class.b2Body*, %class.b2Body** %2, align 8
  %126 = getelementptr inbounds %class.b2Body, %class.b2Body* %125, i32 0, i32 10
  %127 = load %class.b2Body*, %class.b2Body** %126, align 8
  %128 = getelementptr inbounds %class.b2Body, %class.b2Body* %127, i32 0, i32 11
  store %class.b2Body* %124, %class.b2Body** %128, align 8
  br label %129

; <label>:129                                     ; preds = %121, %112
  %130 = load %class.b2Body*, %class.b2Body** %2, align 8
  %131 = getelementptr inbounds %class.b2Body, %class.b2Body* %130, i32 0, i32 11
  %132 = load %class.b2Body*, %class.b2Body** %131, align 8
  %133 = icmp ne %class.b2Body* %132, null
  br i1 %133, label %134, label %142

; <label>:134                                     ; preds = %129
  %135 = load %class.b2Body*, %class.b2Body** %2, align 8
  %136 = getelementptr inbounds %class.b2Body, %class.b2Body* %135, i32 0, i32 10
  %137 = load %class.b2Body*, %class.b2Body** %136, align 8
  %138 = load %class.b2Body*, %class.b2Body** %2, align 8
  %139 = getelementptr inbounds %class.b2Body, %class.b2Body* %138, i32 0, i32 11
  %140 = load %class.b2Body*, %class.b2Body** %139, align 8
  %141 = getelementptr inbounds %class.b2Body, %class.b2Body* %140, i32 0, i32 10
  store %class.b2Body* %137, %class.b2Body** %141, align 8
  br label %142

; <label>:142                                     ; preds = %134, %129
  %143 = load %class.b2Body*, %class.b2Body** %2, align 8
  %144 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 4
  %145 = load %class.b2Body*, %class.b2Body** %144, align 8
  %146 = icmp eq %class.b2Body* %143, %145
  br i1 %146, label %147, label %152

; <label>:147                                     ; preds = %142
  %148 = load %class.b2Body*, %class.b2Body** %2, align 8
  %149 = getelementptr inbounds %class.b2Body, %class.b2Body* %148, i32 0, i32 11
  %150 = load %class.b2Body*, %class.b2Body** %149, align 8
  %151 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 4
  store %class.b2Body* %150, %class.b2Body** %151, align 8
  br label %152

; <label>:152                                     ; preds = %147, %142
  %153 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 6
  %154 = load i32, i32* %153, align 8
  %155 = add nsw i32 %154, -1
  store i32 %155, i32* %153, align 8
  %156 = load %class.b2Body*, %class.b2Body** %2, align 8
  call void @_ZN6b2BodyD1Ev(%class.b2Body* %156)
  %157 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 0
  %158 = load %class.b2Body*, %class.b2Body** %2, align 8
  %159 = bitcast %class.b2Body* %158 to i8*
  call void @_ZN16b2BlockAllocator4FreeEPvi(%class.b2BlockAllocator* %157, i8* %159, i32 184)
  br label %160

; <label>:160                                     ; preds = %152, %19
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World12DestroyJointEP7b2Joint(%class.b2World* %this, %class.b2Joint* %j) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2Joint*, align 8
  %collideConnected = alloca i8, align 1
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %edge = alloca %struct.b2ContactEdge*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2Joint* %j, %class.b2Joint** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %3)
  %5 = zext i1 %4 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 274, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__._ZN7b2World12DestroyJointEP7b2Joint, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  %11 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %3)
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %10
  br label %204

; <label>:13                                      ; preds = %10
  %14 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %15 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %14, i32 0, i32 10
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %collideConnected, align 1
  %19 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %20 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %19, i32 0, i32 2
  %21 = load %class.b2Joint*, %class.b2Joint** %20, align 8
  %22 = icmp ne %class.b2Joint* %21, null
  br i1 %22, label %23, label %31

; <label>:23                                      ; preds = %13
  %24 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %25 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %24, i32 0, i32 3
  %26 = load %class.b2Joint*, %class.b2Joint** %25, align 8
  %27 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %28 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %27, i32 0, i32 2
  %29 = load %class.b2Joint*, %class.b2Joint** %28, align 8
  %30 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %29, i32 0, i32 3
  store %class.b2Joint* %26, %class.b2Joint** %30, align 8
  br label %31

; <label>:31                                      ; preds = %23, %13
  %32 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %33 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %32, i32 0, i32 3
  %34 = load %class.b2Joint*, %class.b2Joint** %33, align 8
  %35 = icmp ne %class.b2Joint* %34, null
  br i1 %35, label %36, label %44

; <label>:36                                      ; preds = %31
  %37 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %38 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %37, i32 0, i32 2
  %39 = load %class.b2Joint*, %class.b2Joint** %38, align 8
  %40 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %41 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %40, i32 0, i32 3
  %42 = load %class.b2Joint*, %class.b2Joint** %41, align 8
  %43 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %42, i32 0, i32 2
  store %class.b2Joint* %39, %class.b2Joint** %43, align 8
  br label %44

; <label>:44                                      ; preds = %36, %31
  %45 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %46 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 5
  %47 = load %class.b2Joint*, %class.b2Joint** %46, align 8
  %48 = icmp eq %class.b2Joint* %45, %47
  br i1 %48, label %49, label %54

; <label>:49                                      ; preds = %44
  %50 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 3
  %52 = load %class.b2Joint*, %class.b2Joint** %51, align 8
  %53 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 5
  store %class.b2Joint* %52, %class.b2Joint** %53, align 8
  br label %54

; <label>:54                                      ; preds = %49, %44
  %55 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %56 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %55, i32 0, i32 6
  %57 = load %class.b2Body*, %class.b2Body** %56, align 8
  store %class.b2Body* %57, %class.b2Body** %bodyA, align 8
  %58 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %59 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %58, i32 0, i32 7
  %60 = load %class.b2Body*, %class.b2Body** %59, align 8
  store %class.b2Body* %60, %class.b2Body** %bodyB, align 8
  %61 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %61, i1 zeroext true)
  %62 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %62, i1 zeroext true)
  %63 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %64 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %63, i32 0, i32 4
  %65 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %64, i32 0, i32 2
  %66 = load %struct.b2JointEdge*, %struct.b2JointEdge** %65, align 8
  %67 = icmp ne %struct.b2JointEdge* %66, null
  br i1 %67, label %68, label %78

; <label>:68                                      ; preds = %54
  %69 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %70 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %69, i32 0, i32 4
  %71 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %70, i32 0, i32 3
  %72 = load %struct.b2JointEdge*, %struct.b2JointEdge** %71, align 8
  %73 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %74 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %73, i32 0, i32 4
  %75 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %74, i32 0, i32 2
  %76 = load %struct.b2JointEdge*, %struct.b2JointEdge** %75, align 8
  %77 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %76, i32 0, i32 3
  store %struct.b2JointEdge* %72, %struct.b2JointEdge** %77, align 8
  br label %78

; <label>:78                                      ; preds = %68, %54
  %79 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %80 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %79, i32 0, i32 4
  %81 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %80, i32 0, i32 3
  %82 = load %struct.b2JointEdge*, %struct.b2JointEdge** %81, align 8
  %83 = icmp ne %struct.b2JointEdge* %82, null
  br i1 %83, label %84, label %94

; <label>:84                                      ; preds = %78
  %85 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %86 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %85, i32 0, i32 4
  %87 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %86, i32 0, i32 2
  %88 = load %struct.b2JointEdge*, %struct.b2JointEdge** %87, align 8
  %89 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %90 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %89, i32 0, i32 4
  %91 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %90, i32 0, i32 3
  %92 = load %struct.b2JointEdge*, %struct.b2JointEdge** %91, align 8
  %93 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %92, i32 0, i32 2
  store %struct.b2JointEdge* %88, %struct.b2JointEdge** %93, align 8
  br label %94

; <label>:94                                      ; preds = %84, %78
  %95 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %96 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %95, i32 0, i32 4
  %97 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %98 = getelementptr inbounds %class.b2Body, %class.b2Body* %97, i32 0, i32 14
  %99 = load %struct.b2JointEdge*, %struct.b2JointEdge** %98, align 8
  %100 = icmp eq %struct.b2JointEdge* %96, %99
  br i1 %100, label %101, label %108

; <label>:101                                     ; preds = %94
  %102 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %103 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %102, i32 0, i32 4
  %104 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %103, i32 0, i32 3
  %105 = load %struct.b2JointEdge*, %struct.b2JointEdge** %104, align 8
  %106 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %107 = getelementptr inbounds %class.b2Body, %class.b2Body* %106, i32 0, i32 14
  store %struct.b2JointEdge* %105, %struct.b2JointEdge** %107, align 8
  br label %108

; <label>:108                                     ; preds = %101, %94
  %109 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %110 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %109, i32 0, i32 4
  %111 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %110, i32 0, i32 2
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %111, align 8
  %112 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %113 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %112, i32 0, i32 4
  %114 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %113, i32 0, i32 3
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %114, align 8
  %115 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %116 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %115, i32 0, i32 5
  %117 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %116, i32 0, i32 2
  %118 = load %struct.b2JointEdge*, %struct.b2JointEdge** %117, align 8
  %119 = icmp ne %struct.b2JointEdge* %118, null
  br i1 %119, label %120, label %130

; <label>:120                                     ; preds = %108
  %121 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %122 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %121, i32 0, i32 5
  %123 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %122, i32 0, i32 3
  %124 = load %struct.b2JointEdge*, %struct.b2JointEdge** %123, align 8
  %125 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %126 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %125, i32 0, i32 5
  %127 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %126, i32 0, i32 2
  %128 = load %struct.b2JointEdge*, %struct.b2JointEdge** %127, align 8
  %129 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %128, i32 0, i32 3
  store %struct.b2JointEdge* %124, %struct.b2JointEdge** %129, align 8
  br label %130

; <label>:130                                     ; preds = %120, %108
  %131 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %132 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %131, i32 0, i32 5
  %133 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %132, i32 0, i32 3
  %134 = load %struct.b2JointEdge*, %struct.b2JointEdge** %133, align 8
  %135 = icmp ne %struct.b2JointEdge* %134, null
  br i1 %135, label %136, label %146

; <label>:136                                     ; preds = %130
  %137 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %138 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %137, i32 0, i32 5
  %139 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %138, i32 0, i32 2
  %140 = load %struct.b2JointEdge*, %struct.b2JointEdge** %139, align 8
  %141 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %142 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %141, i32 0, i32 5
  %143 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %142, i32 0, i32 3
  %144 = load %struct.b2JointEdge*, %struct.b2JointEdge** %143, align 8
  %145 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %144, i32 0, i32 2
  store %struct.b2JointEdge* %140, %struct.b2JointEdge** %145, align 8
  br label %146

; <label>:146                                     ; preds = %136, %130
  %147 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %148 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %147, i32 0, i32 5
  %149 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %150 = getelementptr inbounds %class.b2Body, %class.b2Body* %149, i32 0, i32 14
  %151 = load %struct.b2JointEdge*, %struct.b2JointEdge** %150, align 8
  %152 = icmp eq %struct.b2JointEdge* %148, %151
  br i1 %152, label %153, label %160

; <label>:153                                     ; preds = %146
  %154 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %155 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %154, i32 0, i32 5
  %156 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %155, i32 0, i32 3
  %157 = load %struct.b2JointEdge*, %struct.b2JointEdge** %156, align 8
  %158 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %159 = getelementptr inbounds %class.b2Body, %class.b2Body* %158, i32 0, i32 14
  store %struct.b2JointEdge* %157, %struct.b2JointEdge** %159, align 8
  br label %160

; <label>:160                                     ; preds = %153, %146
  %161 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %162 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %161, i32 0, i32 5
  %163 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %162, i32 0, i32 2
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %163, align 8
  %164 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %165 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %164, i32 0, i32 5
  %166 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %165, i32 0, i32 3
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %166, align 8
  %167 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %168 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 0
  call void @_ZN7b2Joint7DestroyEPS_P16b2BlockAllocator(%class.b2Joint* %167, %class.b2BlockAllocator* %168)
  %169 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 7
  %170 = load i32, i32* %169, align 4
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %173

; <label>:172                                     ; preds = %160
  br label %175

; <label>:173                                     ; preds = %160
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.281, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 346, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__._ZN7b2World12DestroyJointEP7b2Joint, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %175

; <label>:175                                     ; preds = %174, %172
  %176 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 7
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, -1
  store i32 %178, i32* %176, align 4
  %179 = load i8, i8* %collideConnected, align 1
  %180 = trunc i8 %179 to i1
  %181 = zext i1 %180 to i32
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %204

; <label>:183                                     ; preds = %175
  %184 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %185 = call %struct.b2ContactEdge* @_ZN6b2Body14GetContactListEv(%class.b2Body* %184)
  store %struct.b2ContactEdge* %185, %struct.b2ContactEdge** %edge, align 8
  br label %186

; <label>:186                                     ; preds = %199, %183
  %187 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %188 = icmp ne %struct.b2ContactEdge* %187, null
  br i1 %188, label %189, label %203

; <label>:189                                     ; preds = %186
  %190 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %191 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %190, i32 0, i32 0
  %192 = load %class.b2Body*, %class.b2Body** %191, align 8
  %193 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %194 = icmp eq %class.b2Body* %192, %193
  br i1 %194, label %195, label %199

; <label>:195                                     ; preds = %189
  %196 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %197 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %196, i32 0, i32 1
  %198 = load %class.b2Contact*, %class.b2Contact** %197, align 8
  call void @_ZN9b2Contact16FlagForFilteringEv(%class.b2Contact* %198)
  br label %199

; <label>:199                                     ; preds = %195, %189
  %200 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %201 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %200, i32 0, i32 3
  %202 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %201, align 8
  store %struct.b2ContactEdge* %202, %struct.b2ContactEdge** %edge, align 8
  br label %186

; <label>:203                                     ; preds = %186
  br label %204

; <label>:204                                     ; preds = %203, %175, %12
  ret void
}

; Function Attrs: uwtable
define %class.b2Joint* @_ZN7b2World11CreateJointEPK10b2JointDef(%class.b2World* %this, %struct.b2JointDef* %def) #0 align 2 {
  %1 = alloca %class.b2Joint*, align 8
  %2 = alloca %class.b2World*, align 8
  %3 = alloca %struct.b2JointDef*, align 8
  %j = alloca %class.b2Joint*, align 8
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %edge = alloca %struct.b2ContactEdge*, align 8
  store %class.b2World* %this, %class.b2World** %2, align 8
  store %struct.b2JointDef* %def, %struct.b2JointDef** %3, align 8
  %4 = load %class.b2World*, %class.b2World** %2, align 8
  %5 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %4)
  %6 = zext i1 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 214, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN7b2World11CreateJointEPK10b2JointDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = call zeroext i1 @_ZNK7b2World8IsLockedEv(%class.b2World* %4)
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %11
  store %class.b2Joint* null, %class.b2Joint** %1, align 8
  br label %159

; <label>:14                                      ; preds = %11
  %15 = load %struct.b2JointDef*, %struct.b2JointDef** %3, align 8
  %16 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 0
  %17 = call %class.b2Joint* @_ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator(%struct.b2JointDef* %15, %class.b2BlockAllocator* %16)
  store %class.b2Joint* %17, %class.b2Joint** %j, align 8
  %18 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %19 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %18, i32 0, i32 2
  store %class.b2Joint* null, %class.b2Joint** %19, align 8
  %20 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 5
  %21 = load %class.b2Joint*, %class.b2Joint** %20, align 8
  %22 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %23 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %22, i32 0, i32 3
  store %class.b2Joint* %21, %class.b2Joint** %23, align 8
  %24 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 5
  %25 = load %class.b2Joint*, %class.b2Joint** %24, align 8
  %26 = icmp ne %class.b2Joint* %25, null
  br i1 %26, label %27, label %32

; <label>:27                                      ; preds = %14
  %28 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %29 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 5
  %30 = load %class.b2Joint*, %class.b2Joint** %29, align 8
  %31 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %30, i32 0, i32 2
  store %class.b2Joint* %28, %class.b2Joint** %31, align 8
  br label %32

; <label>:32                                      ; preds = %27, %14
  %33 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %34 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 5
  store %class.b2Joint* %33, %class.b2Joint** %34, align 8
  %35 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 7
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %39 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %40 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %39, i32 0, i32 4
  %41 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %40, i32 0, i32 1
  store %class.b2Joint* %38, %class.b2Joint** %41, align 8
  %42 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %43 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %42, i32 0, i32 7
  %44 = load %class.b2Body*, %class.b2Body** %43, align 8
  %45 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %46 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %45, i32 0, i32 4
  %47 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %46, i32 0, i32 0
  store %class.b2Body* %44, %class.b2Body** %47, align 8
  %48 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %49 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %48, i32 0, i32 4
  %50 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %49, i32 0, i32 2
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %50, align 8
  %51 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %52 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %51, i32 0, i32 6
  %53 = load %class.b2Body*, %class.b2Body** %52, align 8
  %54 = getelementptr inbounds %class.b2Body, %class.b2Body* %53, i32 0, i32 14
  %55 = load %struct.b2JointEdge*, %struct.b2JointEdge** %54, align 8
  %56 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %57 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %56, i32 0, i32 4
  %58 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %57, i32 0, i32 3
  store %struct.b2JointEdge* %55, %struct.b2JointEdge** %58, align 8
  %59 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %60 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %59, i32 0, i32 6
  %61 = load %class.b2Body*, %class.b2Body** %60, align 8
  %62 = getelementptr inbounds %class.b2Body, %class.b2Body* %61, i32 0, i32 14
  %63 = load %struct.b2JointEdge*, %struct.b2JointEdge** %62, align 8
  %64 = icmp ne %struct.b2JointEdge* %63, null
  br i1 %64, label %65, label %74

; <label>:65                                      ; preds = %32
  %66 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %67 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %66, i32 0, i32 4
  %68 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %69 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %68, i32 0, i32 6
  %70 = load %class.b2Body*, %class.b2Body** %69, align 8
  %71 = getelementptr inbounds %class.b2Body, %class.b2Body* %70, i32 0, i32 14
  %72 = load %struct.b2JointEdge*, %struct.b2JointEdge** %71, align 8
  %73 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %72, i32 0, i32 2
  store %struct.b2JointEdge* %67, %struct.b2JointEdge** %73, align 8
  br label %74

; <label>:74                                      ; preds = %65, %32
  %75 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %76 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %75, i32 0, i32 4
  %77 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %78 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %77, i32 0, i32 6
  %79 = load %class.b2Body*, %class.b2Body** %78, align 8
  %80 = getelementptr inbounds %class.b2Body, %class.b2Body* %79, i32 0, i32 14
  store %struct.b2JointEdge* %76, %struct.b2JointEdge** %80, align 8
  %81 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %82 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %83 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %82, i32 0, i32 5
  %84 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %83, i32 0, i32 1
  store %class.b2Joint* %81, %class.b2Joint** %84, align 8
  %85 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %86 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %85, i32 0, i32 6
  %87 = load %class.b2Body*, %class.b2Body** %86, align 8
  %88 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %89 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %88, i32 0, i32 5
  %90 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %89, i32 0, i32 0
  store %class.b2Body* %87, %class.b2Body** %90, align 8
  %91 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %92 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %91, i32 0, i32 5
  %93 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %92, i32 0, i32 2
  store %struct.b2JointEdge* null, %struct.b2JointEdge** %93, align 8
  %94 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %95 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %94, i32 0, i32 7
  %96 = load %class.b2Body*, %class.b2Body** %95, align 8
  %97 = getelementptr inbounds %class.b2Body, %class.b2Body* %96, i32 0, i32 14
  %98 = load %struct.b2JointEdge*, %struct.b2JointEdge** %97, align 8
  %99 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %100 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %99, i32 0, i32 5
  %101 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %100, i32 0, i32 3
  store %struct.b2JointEdge* %98, %struct.b2JointEdge** %101, align 8
  %102 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %103 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %102, i32 0, i32 7
  %104 = load %class.b2Body*, %class.b2Body** %103, align 8
  %105 = getelementptr inbounds %class.b2Body, %class.b2Body* %104, i32 0, i32 14
  %106 = load %struct.b2JointEdge*, %struct.b2JointEdge** %105, align 8
  %107 = icmp ne %struct.b2JointEdge* %106, null
  br i1 %107, label %108, label %117

; <label>:108                                     ; preds = %74
  %109 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %110 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %109, i32 0, i32 5
  %111 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %112 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %111, i32 0, i32 7
  %113 = load %class.b2Body*, %class.b2Body** %112, align 8
  %114 = getelementptr inbounds %class.b2Body, %class.b2Body* %113, i32 0, i32 14
  %115 = load %struct.b2JointEdge*, %struct.b2JointEdge** %114, align 8
  %116 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %115, i32 0, i32 2
  store %struct.b2JointEdge* %110, %struct.b2JointEdge** %116, align 8
  br label %117

; <label>:117                                     ; preds = %108, %74
  %118 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %119 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %118, i32 0, i32 5
  %120 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %121 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %120, i32 0, i32 7
  %122 = load %class.b2Body*, %class.b2Body** %121, align 8
  %123 = getelementptr inbounds %class.b2Body, %class.b2Body* %122, i32 0, i32 14
  store %struct.b2JointEdge* %119, %struct.b2JointEdge** %123, align 8
  %124 = load %struct.b2JointDef*, %struct.b2JointDef** %3, align 8
  %125 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %124, i32 0, i32 3
  %126 = load %class.b2Body*, %class.b2Body** %125, align 8
  store %class.b2Body* %126, %class.b2Body** %bodyA, align 8
  %127 = load %struct.b2JointDef*, %struct.b2JointDef** %3, align 8
  %128 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %127, i32 0, i32 4
  %129 = load %class.b2Body*, %class.b2Body** %128, align 8
  store %class.b2Body* %129, %class.b2Body** %bodyB, align 8
  %130 = load %struct.b2JointDef*, %struct.b2JointDef** %3, align 8
  %131 = getelementptr inbounds %struct.b2JointDef, %struct.b2JointDef* %130, i32 0, i32 5
  %132 = load i8, i8* %131, align 8
  %133 = trunc i8 %132 to i1
  %134 = zext i1 %133 to i32
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %157

; <label>:136                                     ; preds = %117
  %137 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %138 = call %struct.b2ContactEdge* @_ZN6b2Body14GetContactListEv(%class.b2Body* %137)
  store %struct.b2ContactEdge* %138, %struct.b2ContactEdge** %edge, align 8
  br label %139

; <label>:139                                     ; preds = %152, %136
  %140 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %141 = icmp ne %struct.b2ContactEdge* %140, null
  br i1 %141, label %142, label %156

; <label>:142                                     ; preds = %139
  %143 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %144 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %143, i32 0, i32 0
  %145 = load %class.b2Body*, %class.b2Body** %144, align 8
  %146 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %147 = icmp eq %class.b2Body* %145, %146
  br i1 %147, label %148, label %152

; <label>:148                                     ; preds = %142
  %149 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %150 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %149, i32 0, i32 1
  %151 = load %class.b2Contact*, %class.b2Contact** %150, align 8
  call void @_ZN9b2Contact16FlagForFilteringEv(%class.b2Contact* %151)
  br label %152

; <label>:152                                     ; preds = %148, %142
  %153 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %edge, align 8
  %154 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %153, i32 0, i32 3
  %155 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %154, align 8
  store %struct.b2ContactEdge* %155, %struct.b2ContactEdge** %edge, align 8
  br label %139

; <label>:156                                     ; preds = %139
  br label %157

; <label>:157                                     ; preds = %156, %117
  %158 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  store %class.b2Joint* %158, %class.b2Joint** %1, align 8
  br label %159

; <label>:159                                     ; preds = %157, %13
  %160 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  ret %class.b2Joint* %160
}

; Function Attrs: uwtable
define void @_ZN7b2World16SetAllowSleepingEb(%class.b2World* %this, i1 zeroext %flag) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca i8, align 1
  %b = alloca %class.b2Body*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2World*, %class.b2World** %1, align 8
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i32
  %12 = icmp eq i32 %7, %11
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  br label %37

; <label>:14                                      ; preds = %0
  %15 = load i8, i8* %2, align 1
  %16 = trunc i8 %15 to i1
  %17 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 9
  %18 = zext i1 %16 to i8
  store i8 %18, i8* %17, align 8
  %19 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 9
  %20 = load i8, i8* %19, align 8
  %21 = trunc i8 %20 to i1
  %22 = zext i1 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %37

; <label>:24                                      ; preds = %14
  %25 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 4
  %26 = load %class.b2Body*, %class.b2Body** %25, align 8
  store %class.b2Body* %26, %class.b2Body** %b, align 8
  br label %27

; <label>:27                                      ; preds = %32, %24
  %28 = load %class.b2Body*, %class.b2Body** %b, align 8
  %29 = icmp ne %class.b2Body* %28, null
  br i1 %29, label %30, label %36

; <label>:30                                      ; preds = %27
  %31 = load %class.b2Body*, %class.b2Body** %b, align 8
  call void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %31, i1 zeroext true)
  br label %32

; <label>:32                                      ; preds = %30
  %33 = load %class.b2Body*, %class.b2Body** %b, align 8
  %34 = getelementptr inbounds %class.b2Body, %class.b2Body* %33, i32 0, i32 11
  %35 = load %class.b2Body*, %class.b2Body** %34, align 8
  store %class.b2Body* %35, %class.b2Body** %b, align 8
  br label %27

; <label>:36                                      ; preds = %27
  br label %37

; <label>:37                                      ; preds = %36, %14, %13
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World5SolveERK10b2TimeStep(%class.b2World* %this, %struct.b2TimeStep* dereferenceable(24) %step) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %struct.b2TimeStep*, align 8
  %island = alloca %class.b2Island, align 8
  %b = alloca %class.b2Body*, align 8
  %c = alloca %class.b2Contact*, align 8
  %j = alloca %class.b2Joint*, align 8
  %stackSize = alloca i32, align 4
  %stack = alloca %class.b2Body**, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %seed = alloca %class.b2Body*, align 8
  %stackCount = alloca i32, align 4
  %b1 = alloca %class.b2Body*, align 8
  %ce = alloca %struct.b2ContactEdge*, align 8
  %contact = alloca %class.b2Contact*, align 8
  %sensorA = alloca i8, align 1
  %sensorB = alloca i8, align 1
  %other = alloca %class.b2Body*, align 8
  %je = alloca %struct.b2JointEdge*, align 8
  %other2 = alloca %class.b2Body*, align 8
  %profile = alloca %struct.b2Profile, align 4
  %i = alloca i32, align 4
  %b3 = alloca %class.b2Body*, align 8
  %timer = alloca %class.b2Timer, align 8
  %b4 = alloca %class.b2Body*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %struct.b2TimeStep* %step, %struct.b2TimeStep** %2, align 8
  %5 = load %class.b2World*, %class.b2World** %1, align 8
  %6 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %7 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %6, i32 0, i32 3
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %9 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %8, i32 0, i32 4
  store float 0.000000e+00, float* %9, align 8
  %10 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %11 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %10, i32 0, i32 5
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %15 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 7
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 1
  %20 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %21 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %20, i32 0, i32 4
  %22 = load %class.b2ContactFilter*, %class.b2ContactFilter** %21, align 8
  call void @_ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener(%class.b2Island* %island, i32 %13, i32 %16, i32 %18, %class.b2StackAllocator* %19, %class.b2ContactFilter* %22)
  %23 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 4
  %24 = load %class.b2Body*, %class.b2Body** %23, align 8
  store %class.b2Body* %24, %class.b2Body** %b, align 8
  br label %25

; <label>:25                                      ; preds = %35, %0
  %26 = load %class.b2Body*, %class.b2Body** %b, align 8
  %27 = icmp ne %class.b2Body* %26, null
  br i1 %27, label %28, label %39

; <label>:28                                      ; preds = %25
  %29 = load %class.b2Body*, %class.b2Body** %b, align 8
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %29, i32 0, i32 1
  %31 = load i16, i16* %30, align 4
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, -2
  %34 = trunc i32 %33 to i16
  store i16 %34, i16* %30, align 4
  br label %35

; <label>:35                                      ; preds = %28
  %36 = load %class.b2Body*, %class.b2Body** %b, align 8
  %37 = getelementptr inbounds %class.b2Body, %class.b2Body* %36, i32 0, i32 11
  %38 = load %class.b2Body*, %class.b2Body** %37, align 8
  store %class.b2Body* %38, %class.b2Body** %b, align 8
  br label %25

; <label>:39                                      ; preds = %25
  %40 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %41 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %40, i32 0, i32 1
  %42 = load %class.b2Contact*, %class.b2Contact** %41, align 8
  store %class.b2Contact* %42, %class.b2Contact** %c, align 8
  br label %43

; <label>:43                                      ; preds = %51, %39
  %44 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %45 = icmp ne %class.b2Contact* %44, null
  br i1 %45, label %46, label %55

; <label>:46                                      ; preds = %43
  %47 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %48 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2
  store i32 %50, i32* %48, align 8
  br label %51

; <label>:51                                      ; preds = %46
  %52 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %53 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %52, i32 0, i32 4
  %54 = load %class.b2Contact*, %class.b2Contact** %53, align 8
  store %class.b2Contact* %54, %class.b2Contact** %c, align 8
  br label %43

; <label>:55                                      ; preds = %43
  %56 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 5
  %57 = load %class.b2Joint*, %class.b2Joint** %56, align 8
  store %class.b2Joint* %57, %class.b2Joint** %j, align 8
  br label %58

; <label>:58                                      ; preds = %64, %55
  %59 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %60 = icmp ne %class.b2Joint* %59, null
  br i1 %60, label %61, label %68

; <label>:61                                      ; preds = %58
  %62 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %63 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %62, i32 0, i32 9
  store i8 0, i8* %63, align 4
  br label %64

; <label>:64                                      ; preds = %61
  %65 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %66 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %65, i32 0, i32 3
  %67 = load %class.b2Joint*, %class.b2Joint** %66, align 8
  store %class.b2Joint* %67, %class.b2Joint** %j, align 8
  br label %58

; <label>:68                                      ; preds = %58
  %69 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 6
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %stackSize, align 4
  %71 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 1
  %72 = load i32, i32* %stackSize, align 4
  %73 = sext i32 %72 to i64
  %74 = mul i64 %73, 8
  %75 = trunc i64 %74 to i32
  %76 = invoke i8* @_ZN16b2StackAllocator8AllocateEi(%class.b2StackAllocator* %71, i32 %75)
          to label %77 unwind label %92

; <label>:77                                      ; preds = %68
  %78 = bitcast i8* %76 to %class.b2Body**
  store %class.b2Body** %78, %class.b2Body*** %stack, align 8
  %79 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 4
  %80 = load %class.b2Body*, %class.b2Body** %79, align 8
  store %class.b2Body* %80, %class.b2Body** %seed, align 8
  br label %81

; <label>:81                                      ; preds = %370, %77
  %82 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %83 = icmp ne %class.b2Body* %82, null
  br i1 %83, label %84, label %374

; <label>:84                                      ; preds = %81
  %85 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %86 = getelementptr inbounds %class.b2Body, %class.b2Body* %85, i32 0, i32 1
  %87 = load i16, i16* %86, align 4
  %88 = zext i16 %87 to i32
  %89 = and i32 %88, 1
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %96

; <label>:91                                      ; preds = %84
  br label %370

; <label>:92                                      ; preds = %408, %406, %402, %399, %393, %378, %374, %347, %317, %276, %266, %208, %180, %174, %151, %149, %147, %132, %115, %109, %102, %96, %68
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %3, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %4, align 4
  invoke void @_ZN8b2IslandD1Ev(%class.b2Island* %island)
          to label %413 unwind label %419

; <label>:96                                      ; preds = %84
  %97 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %98 = invoke zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %97)
          to label %99 unwind label %92

; <label>:99                                      ; preds = %96
  %100 = zext i1 %98 to i32
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %108, label %102

; <label>:102                                     ; preds = %99
  %103 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %104 = invoke zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %103)
          to label %105 unwind label %92

; <label>:105                                     ; preds = %102
  %106 = zext i1 %104 to i32
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

; <label>:108                                     ; preds = %105, %99
  br label %370

; <label>:109                                     ; preds = %105
  %110 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %111 = invoke i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %110)
          to label %112 unwind label %92

; <label>:112                                     ; preds = %109
  %113 = icmp eq i32 %111, 0
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %112
  br label %370

; <label>:115                                     ; preds = %112
  invoke void @_ZN8b2Island5ClearEv(%class.b2Island* %island)
          to label %116 unwind label %92

; <label>:116                                     ; preds = %115
  store i32 0, i32* %stackCount, align 4
  %117 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %118 = load i32, i32* %stackCount, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %stackCount, align 4
  %120 = sext i32 %118 to i64
  %121 = load %class.b2Body**, %class.b2Body*** %stack, align 8
  %122 = getelementptr inbounds %class.b2Body*, %class.b2Body** %121, i64 %120
  store %class.b2Body* %117, %class.b2Body** %122, align 8
  %123 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %124 = getelementptr inbounds %class.b2Body, %class.b2Body* %123, i32 0, i32 1
  %125 = load i16, i16* %124, align 4
  %126 = zext i16 %125 to i32
  %127 = or i32 %126, 1
  %128 = trunc i32 %127 to i16
  store i16 %128, i16* %124, align 4
  br label %129

; <label>:129                                     ; preds = %316, %156, %116
  %130 = load i32, i32* %stackCount, align 4
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %317

; <label>:132                                     ; preds = %129
  %133 = load i32, i32* %stackCount, align 4
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %stackCount, align 4
  %135 = sext i32 %134 to i64
  %136 = load %class.b2Body**, %class.b2Body*** %stack, align 8
  %137 = getelementptr inbounds %class.b2Body*, %class.b2Body** %136, i64 %135
  %138 = load %class.b2Body*, %class.b2Body** %137, align 8
  store %class.b2Body* %138, %class.b2Body** %b1, align 8
  %139 = load %class.b2Body*, %class.b2Body** %b1, align 8
  %140 = invoke zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %139)
          to label %141 unwind label %92

; <label>:141                                     ; preds = %132
  %142 = zext i1 %140 to i32
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %145

; <label>:144                                     ; preds = %141
  br label %147

; <label>:145                                     ; preds = %141
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.282, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 445, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN7b2World5SolveERK10b2TimeStep, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %147

; <label>:147                                     ; preds = %146, %144
  %148 = load %class.b2Body*, %class.b2Body** %b1, align 8
  invoke void @_ZN8b2Island3AddEP6b2Body(%class.b2Island* %island, %class.b2Body* %148)
          to label %149 unwind label %92

; <label>:149                                     ; preds = %147
  %150 = load %class.b2Body*, %class.b2Body** %b1, align 8
  invoke void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %150, i1 zeroext true)
          to label %151 unwind label %92

; <label>:151                                     ; preds = %149
  %152 = load %class.b2Body*, %class.b2Body** %b1, align 8
  %153 = invoke i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %152)
          to label %154 unwind label %92

; <label>:154                                     ; preds = %151
  %155 = icmp eq i32 %153, 0
  br i1 %155, label %156, label %157

; <label>:156                                     ; preds = %154
  br label %129

; <label>:157                                     ; preds = %154
  %158 = load %class.b2Body*, %class.b2Body** %b1, align 8
  %159 = getelementptr inbounds %class.b2Body, %class.b2Body* %158, i32 0, i32 15
  %160 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %159, align 8
  store %struct.b2ContactEdge* %160, %struct.b2ContactEdge** %ce, align 8
  br label %161

; <label>:161                                     ; preds = %245, %157
  %162 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %163 = icmp ne %struct.b2ContactEdge* %162, null
  br i1 %163, label %164, label %249

; <label>:164                                     ; preds = %161
  %165 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %166 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %165, i32 0, i32 1
  %167 = load %class.b2Contact*, %class.b2Contact** %166, align 8
  store %class.b2Contact* %167, %class.b2Contact** %contact, align 8
  %168 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %169 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 1
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %174

; <label>:173                                     ; preds = %164
  br label %245

; <label>:174                                     ; preds = %164
  %175 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %176 = invoke zeroext i1 @_ZNK9b2Contact9IsEnabledEv(%class.b2Contact* %175)
          to label %177 unwind label %92

; <label>:177                                     ; preds = %174
  %178 = zext i1 %176 to i32
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %186, label %180

; <label>:180                                     ; preds = %177
  %181 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %182 = invoke zeroext i1 @_ZNK9b2Contact10IsTouchingEv(%class.b2Contact* %181)
          to label %183 unwind label %92

; <label>:183                                     ; preds = %180
  %184 = zext i1 %182 to i32
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

; <label>:186                                     ; preds = %183, %177
  br label %245

; <label>:187                                     ; preds = %183
  %188 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %189 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %188, i32 0, i32 7
  %190 = load %class.b2Fixture*, %class.b2Fixture** %189, align 8
  %191 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %190, i32 0, i32 9
  %192 = load i8, i8* %191, align 2
  %193 = trunc i8 %192 to i1
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %sensorA, align 1
  %195 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %196 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %195, i32 0, i32 8
  %197 = load %class.b2Fixture*, %class.b2Fixture** %196, align 8
  %198 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %197, i32 0, i32 9
  %199 = load i8, i8* %198, align 2
  %200 = trunc i8 %199 to i1
  %201 = zext i1 %200 to i8
  store i8 %201, i8* %sensorB, align 1
  %202 = load i8, i8* %sensorA, align 1
  %203 = trunc i8 %202 to i1
  br i1 %203, label %207, label %204

; <label>:204                                     ; preds = %187
  %205 = load i8, i8* %sensorB, align 1
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %208

; <label>:207                                     ; preds = %204, %187
  br label %245

; <label>:208                                     ; preds = %204
  %209 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  invoke void @_ZN8b2Island3AddEP9b2Contact(%class.b2Island* %island, %class.b2Contact* %209)
          to label %210 unwind label %92

; <label>:210                                     ; preds = %208
  %211 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %212 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 8
  %214 = or i32 %213, 1
  store i32 %214, i32* %212, align 8
  %215 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %216 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %215, i32 0, i32 0
  %217 = load %class.b2Body*, %class.b2Body** %216, align 8
  store %class.b2Body* %217, %class.b2Body** %other, align 8
  %218 = load %class.b2Body*, %class.b2Body** %other, align 8
  %219 = getelementptr inbounds %class.b2Body, %class.b2Body* %218, i32 0, i32 1
  %220 = load i16, i16* %219, align 4
  %221 = zext i16 %220 to i32
  %222 = and i32 %221, 1
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %225

; <label>:224                                     ; preds = %210
  br label %245

; <label>:225                                     ; preds = %210
  %226 = load i32, i32* %stackCount, align 4
  %227 = load i32, i32* %stackSize, align 4
  %228 = icmp slt i32 %226, %227
  br i1 %228, label %229, label %230

; <label>:229                                     ; preds = %225
  br label %232

; <label>:230                                     ; preds = %225
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.286, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 495, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN7b2World5SolveERK10b2TimeStep, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %232

; <label>:232                                     ; preds = %231, %229
  %233 = load %class.b2Body*, %class.b2Body** %other, align 8
  %234 = load i32, i32* %stackCount, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %stackCount, align 4
  %236 = sext i32 %234 to i64
  %237 = load %class.b2Body**, %class.b2Body*** %stack, align 8
  %238 = getelementptr inbounds %class.b2Body*, %class.b2Body** %237, i64 %236
  store %class.b2Body* %233, %class.b2Body** %238, align 8
  %239 = load %class.b2Body*, %class.b2Body** %other, align 8
  %240 = getelementptr inbounds %class.b2Body, %class.b2Body* %239, i32 0, i32 1
  %241 = load i16, i16* %240, align 4
  %242 = zext i16 %241 to i32
  %243 = or i32 %242, 1
  %244 = trunc i32 %243 to i16
  store i16 %244, i16* %240, align 4
  br label %245

; <label>:245                                     ; preds = %232, %224, %207, %186, %173
  %246 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %247 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %246, i32 0, i32 3
  %248 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %247, align 8
  store %struct.b2ContactEdge* %248, %struct.b2ContactEdge** %ce, align 8
  br label %161

; <label>:249                                     ; preds = %161
  %250 = load %class.b2Body*, %class.b2Body** %b1, align 8
  %251 = getelementptr inbounds %class.b2Body, %class.b2Body* %250, i32 0, i32 14
  %252 = load %struct.b2JointEdge*, %struct.b2JointEdge** %251, align 8
  store %struct.b2JointEdge* %252, %struct.b2JointEdge** %je, align 8
  br label %253

; <label>:253                                     ; preds = %312, %249
  %254 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %255 = icmp ne %struct.b2JointEdge* %254, null
  br i1 %255, label %256, label %316

; <label>:256                                     ; preds = %253
  %257 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %258 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %257, i32 0, i32 1
  %259 = load %class.b2Joint*, %class.b2Joint** %258, align 8
  %260 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %259, i32 0, i32 9
  %261 = load i8, i8* %260, align 4
  %262 = trunc i8 %261 to i1
  %263 = zext i1 %262 to i32
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %265, label %266

; <label>:265                                     ; preds = %256
  br label %312

; <label>:266                                     ; preds = %256
  %267 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %268 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %267, i32 0, i32 0
  %269 = load %class.b2Body*, %class.b2Body** %268, align 8
  store %class.b2Body* %269, %class.b2Body** %other2, align 8
  %270 = load %class.b2Body*, %class.b2Body** %other2, align 8
  %271 = invoke zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %270)
          to label %272 unwind label %92

; <label>:272                                     ; preds = %266
  %273 = zext i1 %271 to i32
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

; <label>:275                                     ; preds = %272
  br label %312

; <label>:276                                     ; preds = %272
  %277 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %278 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %277, i32 0, i32 1
  %279 = load %class.b2Joint*, %class.b2Joint** %278, align 8
  invoke void @_ZN8b2Island3AddEP7b2Joint(%class.b2Island* %island, %class.b2Joint* %279)
          to label %280 unwind label %92

; <label>:280                                     ; preds = %276
  %281 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %282 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %281, i32 0, i32 1
  %283 = load %class.b2Joint*, %class.b2Joint** %282, align 8
  %284 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %283, i32 0, i32 9
  store i8 1, i8* %284, align 4
  %285 = load %class.b2Body*, %class.b2Body** %other2, align 8
  %286 = getelementptr inbounds %class.b2Body, %class.b2Body* %285, i32 0, i32 1
  %287 = load i16, i16* %286, align 4
  %288 = zext i16 %287 to i32
  %289 = and i32 %288, 1
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %292

; <label>:291                                     ; preds = %280
  br label %312

; <label>:292                                     ; preds = %280
  %293 = load i32, i32* %stackCount, align 4
  %294 = load i32, i32* %stackSize, align 4
  %295 = icmp slt i32 %293, %294
  br i1 %295, label %296, label %297

; <label>:296                                     ; preds = %292
  br label %299

; <label>:297                                     ; preds = %292
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.286, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 524, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__PRETTY_FUNCTION__._ZN7b2World5SolveERK10b2TimeStep, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %299

; <label>:299                                     ; preds = %298, %296
  %300 = load %class.b2Body*, %class.b2Body** %other2, align 8
  %301 = load i32, i32* %stackCount, align 4
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %stackCount, align 4
  %303 = sext i32 %301 to i64
  %304 = load %class.b2Body**, %class.b2Body*** %stack, align 8
  %305 = getelementptr inbounds %class.b2Body*, %class.b2Body** %304, i64 %303
  store %class.b2Body* %300, %class.b2Body** %305, align 8
  %306 = load %class.b2Body*, %class.b2Body** %other2, align 8
  %307 = getelementptr inbounds %class.b2Body, %class.b2Body* %306, i32 0, i32 1
  %308 = load i16, i16* %307, align 4
  %309 = zext i16 %308 to i32
  %310 = or i32 %309, 1
  %311 = trunc i32 %310 to i16
  store i16 %311, i16* %307, align 4
  br label %312

; <label>:312                                     ; preds = %299, %291, %275, %265
  %313 = load %struct.b2JointEdge*, %struct.b2JointEdge** %je, align 8
  %314 = getelementptr inbounds %struct.b2JointEdge, %struct.b2JointEdge* %313, i32 0, i32 3
  %315 = load %struct.b2JointEdge*, %struct.b2JointEdge** %314, align 8
  store %struct.b2JointEdge* %315, %struct.b2JointEdge** %je, align 8
  br label %253

; <label>:316                                     ; preds = %253
  br label %129

; <label>:317                                     ; preds = %129
  %318 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %319 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 8
  %320 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 9
  %321 = load i8, i8* %320, align 8
  %322 = trunc i8 %321 to i1
  invoke void @_ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b(%class.b2Island* %island, %struct.b2Profile* %profile, %struct.b2TimeStep* dereferenceable(24) %318, %struct.b2Vec2* dereferenceable(8) %319, i1 zeroext %322)
          to label %323 unwind label %92

; <label>:323                                     ; preds = %317
  %324 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %profile, i32 0, i32 3
  %325 = load float, float* %324, align 4
  %326 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %327 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %326, i32 0, i32 3
  %328 = load float, float* %327, align 4
  %329 = fadd float %328, %325
  store float %329, float* %327, align 4
  %330 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %profile, i32 0, i32 4
  %331 = load float, float* %330, align 4
  %332 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %333 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %332, i32 0, i32 4
  %334 = load float, float* %333, align 8
  %335 = fadd float %334, %331
  store float %335, float* %333, align 8
  %336 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %profile, i32 0, i32 5
  %337 = load float, float* %336, align 4
  %338 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %339 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %338, i32 0, i32 5
  %340 = load float, float* %339, align 4
  %341 = fadd float %340, %337
  store float %341, float* %339, align 4
  store i32 0, i32* %i, align 4
  br label %342

; <label>:342                                     ; preds = %366, %323
  %343 = load i32, i32* %i, align 4
  %344 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 7
  %345 = load i32, i32* %344, align 8
  %346 = icmp slt i32 %343, %345
  br i1 %346, label %347, label %369

; <label>:347                                     ; preds = %342
  %348 = load i32, i32* %i, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 2
  %351 = load %class.b2Body**, %class.b2Body*** %350, align 8
  %352 = getelementptr inbounds %class.b2Body*, %class.b2Body** %351, i64 %349
  %353 = load %class.b2Body*, %class.b2Body** %352, align 8
  store %class.b2Body* %353, %class.b2Body** %b3, align 8
  %354 = load %class.b2Body*, %class.b2Body** %b3, align 8
  %355 = invoke i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %354)
          to label %356 unwind label %92

; <label>:356                                     ; preds = %347
  %357 = icmp eq i32 %355, 0
  br i1 %357, label %358, label %365

; <label>:358                                     ; preds = %356
  %359 = load %class.b2Body*, %class.b2Body** %b3, align 8
  %360 = getelementptr inbounds %class.b2Body, %class.b2Body* %359, i32 0, i32 1
  %361 = load i16, i16* %360, align 4
  %362 = zext i16 %361 to i32
  %363 = and i32 %362, -2
  %364 = trunc i32 %363 to i16
  store i16 %364, i16* %360, align 4
  br label %365

; <label>:365                                     ; preds = %358, %356
  br label %366

; <label>:366                                     ; preds = %365
  %367 = load i32, i32* %i, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %i, align 4
  br label %342

; <label>:369                                     ; preds = %342
  br label %370

; <label>:370                                     ; preds = %369, %114, %108, %91
  %371 = load %class.b2Body*, %class.b2Body** %seed, align 8
  %372 = getelementptr inbounds %class.b2Body, %class.b2Body* %371, i32 0, i32 11
  %373 = load %class.b2Body*, %class.b2Body** %372, align 8
  store %class.b2Body* %373, %class.b2Body** %seed, align 8
  br label %81

; <label>:374                                     ; preds = %81
  %375 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 1
  %376 = load %class.b2Body**, %class.b2Body*** %stack, align 8
  %377 = bitcast %class.b2Body** %376 to i8*
  invoke void @_ZN16b2StackAllocator4FreeEPv(%class.b2StackAllocator* %375, i8* %377)
          to label %378 unwind label %92

; <label>:378                                     ; preds = %374
  invoke void @_ZN7b2TimerC1Ev(%class.b2Timer* %timer)
          to label %379 unwind label %92

; <label>:379                                     ; preds = %378
  %380 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 4
  %381 = load %class.b2Body*, %class.b2Body** %380, align 8
  store %class.b2Body* %381, %class.b2Body** %b4, align 8
  br label %382

; <label>:382                                     ; preds = %405, %379
  %383 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %384 = icmp ne %class.b2Body* %383, null
  br i1 %384, label %385, label %406

; <label>:385                                     ; preds = %382
  %386 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %387 = getelementptr inbounds %class.b2Body, %class.b2Body* %386, i32 0, i32 1
  %388 = load i16, i16* %387, align 4
  %389 = zext i16 %388 to i32
  %390 = and i32 %389, 1
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %393

; <label>:392                                     ; preds = %385
  br label %402

; <label>:393                                     ; preds = %385
  %394 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %395 = invoke i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %394)
          to label %396 unwind label %92

; <label>:396                                     ; preds = %393
  %397 = icmp eq i32 %395, 0
  br i1 %397, label %398, label %399

; <label>:398                                     ; preds = %396
  br label %402

; <label>:399                                     ; preds = %396
  %400 = load %class.b2Body*, %class.b2Body** %b4, align 8
  invoke void @_ZN6b2Body19SynchronizeFixturesEv(%class.b2Body* %400)
          to label %401 unwind label %92

; <label>:401                                     ; preds = %399
  br label %402

; <label>:402                                     ; preds = %401, %398, %392
  %403 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %404 = invoke %class.b2Body* @_ZN6b2Body7GetNextEv(%class.b2Body* %403)
          to label %405 unwind label %92

; <label>:405                                     ; preds = %402
  store %class.b2Body* %404, %class.b2Body** %b4, align 8
  br label %382

; <label>:406                                     ; preds = %382
  %407 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  invoke void @_ZN16b2ContactManager15FindNewContactsEv(%class.b2ContactManager* %407)
          to label %408 unwind label %92

; <label>:408                                     ; preds = %406
  %409 = invoke float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer)
          to label %410 unwind label %92

; <label>:410                                     ; preds = %408
  %411 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %412 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %411, i32 0, i32 6
  store float %409, float* %412, align 8
  call void @_ZN8b2IslandD1Ev(%class.b2Island* %island)
  ret void

; <label>:413                                     ; preds = %92
  br label %414

; <label>:414                                     ; preds = %413
  %415 = load i8*, i8** %3, align 8
  %416 = load i32, i32* %4, align 4
  %417 = insertvalue { i8*, i32 } undef, i8* %415, 0
  %418 = insertvalue { i8*, i32 } %417, i32 %416, 1
  resume { i8*, i32 } %418

; <label>:419                                     ; preds = %92
  %420 = landingpad { i8*, i32 }
          catch i8* null
  %421 = extractvalue { i8*, i32 } %420, 0
  call void @__clang_call_terminate(i8* %421) #15
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8b2Island5ClearEv(%class.b2Island* %this) #2 comdat align 2 {
  %1 = alloca %class.b2Island*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  %2 = load %class.b2Island*, %class.b2Island** %1, align 8
  %3 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 7
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 9
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.b2Island, %class.b2Island* %2, i32 0, i32 8
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8b2Island3AddEP6b2Body(%class.b2Island* %this, %class.b2Body* %body) #2 comdat align 2 {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca %class.b2Body*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store %class.b2Body* %body, %class.b2Body** %2, align 8
  %3 = load %class.b2Island*, %class.b2Island** %1, align 8
  %4 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 10
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.283, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20.284, i32 0, i32 0), i32 54, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__._ZN8b2Island3AddEP6b2Body, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = load %class.b2Body*, %class.b2Body** %2, align 8
  %16 = getelementptr inbounds %class.b2Body, %class.b2Body* %15, i32 0, i32 2
  store i32 %14, i32* %16, align 8
  %17 = load %class.b2Body*, %class.b2Body** %2, align 8
  %18 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 7
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 2
  %22 = load %class.b2Body**, %class.b2Body*** %21, align 8
  %23 = getelementptr inbounds %class.b2Body*, %class.b2Body** %22, i64 %20
  store %class.b2Body* %17, %class.b2Body** %23, align 8
  %24 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9b2Contact9IsEnabledEv(%class.b2Contact* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %2 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %3 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 4
  ret i1 %6
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8b2Island3AddEP9b2Contact(%class.b2Island* %this, %class.b2Contact* %contact) #2 comdat align 2 {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca %class.b2Contact*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store %class.b2Contact* %contact, %class.b2Contact** %2, align 8
  %3 = load %class.b2Island*, %class.b2Island** %1, align 8
  %4 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 9
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.285, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20.284, i32 0, i32 0), i32 62, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__PRETTY_FUNCTION__._ZN8b2Island3AddEP9b2Contact, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load %class.b2Contact*, %class.b2Contact** %2, align 8
  %14 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = sext i32 %15 to i64
  %18 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 3
  %19 = load %class.b2Contact**, %class.b2Contact*** %18, align 8
  %20 = getelementptr inbounds %class.b2Contact*, %class.b2Contact** %19, i64 %17
  store %class.b2Contact* %13, %class.b2Contact** %20, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8b2Island3AddEP7b2Joint(%class.b2Island* %this, %class.b2Joint* %joint) #2 comdat align 2 {
  %1 = alloca %class.b2Island*, align 8
  %2 = alloca %class.b2Joint*, align 8
  store %class.b2Island* %this, %class.b2Island** %1, align 8
  store %class.b2Joint* %joint, %class.b2Joint** %2, align 8
  %3 = load %class.b2Island*, %class.b2Island** %1, align 8
  %4 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 12
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22.287, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20.284, i32 0, i32 0), i32 68, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__PRETTY_FUNCTION__._ZN8b2Island3AddEP7b2Joint, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %14 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = sext i32 %15 to i64
  %18 = getelementptr inbounds %class.b2Island, %class.b2Island* %3, i32 0, i32 4
  %19 = load %class.b2Joint**, %class.b2Joint*** %18, align 8
  %20 = getelementptr inbounds %class.b2Joint*, %class.b2Joint** %19, i64 %17
  store %class.b2Joint* %13, %class.b2Joint** %20, align 8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Body* @_ZN6b2Body7GetNextEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 11
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  ret %class.b2Body* %4
}

; Function Attrs: uwtable
define void @_ZN7b2World8SolveTOIERK10b2TimeStep(%class.b2World* %this, %struct.b2TimeStep* dereferenceable(24) %step) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %struct.b2TimeStep*, align 8
  %island = alloca %class.b2Island, align 8
  %b = alloca %class.b2Body*, align 8
  %c = alloca %class.b2Contact*, align 8
  %minContact = alloca %class.b2Contact*, align 8
  %minAlpha = alloca float, align 4
  %c1 = alloca %class.b2Contact*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %alpha = alloca float, align 4
  %fA = alloca %class.b2Fixture*, align 8
  %fB = alloca %class.b2Fixture*, align 8
  %bA = alloca %class.b2Body*, align 8
  %bB = alloca %class.b2Body*, align 8
  %typeA = alloca i32, align 4
  %typeB = alloca i32, align 4
  %activeA = alloca i8, align 1
  %activeB = alloca i8, align 1
  %collideA = alloca i8, align 1
  %collideB = alloca i8, align 1
  %alpha0 = alloca float, align 4
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %input = alloca %struct.b2TOIInput, align 8
  %output = alloca %struct.b2TOIOutput, align 4
  %beta = alloca float, align 4
  %fA2 = alloca %class.b2Fixture*, align 8
  %fB3 = alloca %class.b2Fixture*, align 8
  %bA4 = alloca %class.b2Body*, align 8
  %bB5 = alloca %class.b2Body*, align 8
  %backup1 = alloca %struct.b2Sweep, align 4
  %backup2 = alloca %struct.b2Sweep, align 4
  %bodies = alloca [2 x %class.b2Body*], align 16
  %i = alloca i32, align 4
  %body = alloca %class.b2Body*, align 8
  %ce = alloca %struct.b2ContactEdge*, align 8
  %contact = alloca %class.b2Contact*, align 8
  %other = alloca %class.b2Body*, align 8
  %sensorA = alloca i8, align 1
  %sensorB = alloca i8, align 1
  %backup = alloca %struct.b2Sweep, align 4
  %subStep = alloca %struct.b2TimeStep, align 4
  %i6 = alloca i32, align 4
  %body7 = alloca %class.b2Body*, align 8
  %ce8 = alloca %struct.b2ContactEdge*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %struct.b2TimeStep* %step, %struct.b2TimeStep** %2, align 8
  %5 = load %class.b2World*, %class.b2World** %1, align 8
  %6 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 1
  %7 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %8 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %7, i32 0, i32 4
  %9 = load %class.b2ContactFilter*, %class.b2ContactFilter** %8, align 8
  call void @_ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener(%class.b2Island* %island, i32 64, i32 32, i32 0, %class.b2StackAllocator* %6, %class.b2ContactFilter* %9)
  %10 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 16
  %11 = load i8, i8* %10, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %54

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 4
  %15 = load %class.b2Body*, %class.b2Body** %14, align 8
  store %class.b2Body* %15, %class.b2Body** %b, align 8
  br label %16

; <label>:16                                      ; preds = %29, %13
  %17 = load %class.b2Body*, %class.b2Body** %b, align 8
  %18 = icmp ne %class.b2Body* %17, null
  br i1 %18, label %19, label %33

; <label>:19                                      ; preds = %16
  %20 = load %class.b2Body*, %class.b2Body** %b, align 8
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %20, i32 0, i32 1
  %22 = load i16, i16* %21, align 4
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, -2
  %25 = trunc i32 %24 to i16
  store i16 %25, i16* %21, align 4
  %26 = load %class.b2Body*, %class.b2Body** %b, align 8
  %27 = getelementptr inbounds %class.b2Body, %class.b2Body* %26, i32 0, i32 4
  %28 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %27, i32 0, i32 5
  store float 0.000000e+00, float* %28, align 4
  br label %29

; <label>:29                                      ; preds = %19
  %30 = load %class.b2Body*, %class.b2Body** %b, align 8
  %31 = getelementptr inbounds %class.b2Body, %class.b2Body* %30, i32 0, i32 11
  %32 = load %class.b2Body*, %class.b2Body** %31, align 8
  store %class.b2Body* %32, %class.b2Body** %b, align 8
  br label %16

; <label>:33                                      ; preds = %16
  %34 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %35 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %34, i32 0, i32 1
  %36 = load %class.b2Contact*, %class.b2Contact** %35, align 8
  store %class.b2Contact* %36, %class.b2Contact** %c, align 8
  br label %37

; <label>:37                                      ; preds = %49, %33
  %38 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %39 = icmp ne %class.b2Contact* %38, null
  br i1 %39, label %40, label %53

; <label>:40                                      ; preds = %37
  %41 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %42 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, -34
  store i32 %44, i32* %42, align 8
  %45 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %46 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %45, i32 0, i32 12
  store i32 0, i32* %46, align 8
  %47 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %48 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %47, i32 0, i32 13
  store float 1.000000e+00, float* %48, align 4
  br label %49

; <label>:49                                      ; preds = %40
  %50 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %51 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %50, i32 0, i32 4
  %52 = load %class.b2Contact*, %class.b2Contact** %51, align 8
  store %class.b2Contact* %52, %class.b2Contact** %c, align 8
  br label %37

; <label>:53                                      ; preds = %37
  br label %54

; <label>:54                                      ; preds = %53, %0
  br label %55

; <label>:55                                      ; preds = %648, %363, %54
  store %class.b2Contact* null, %class.b2Contact** %minContact, align 8
  store float 1.000000e+00, float* %minAlpha, align 4
  %56 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %57 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %56, i32 0, i32 1
  %58 = load %class.b2Contact*, %class.b2Contact** %57, align 8
  store %class.b2Contact* %58, %class.b2Contact** %c1, align 8
  br label %59

; <label>:59                                      ; preds = %286, %55
  %60 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %61 = icmp ne %class.b2Contact* %60, null
  br i1 %61, label %62, label %290

; <label>:62                                      ; preds = %59
  %63 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %64 = invoke zeroext i1 @_ZNK9b2Contact9IsEnabledEv(%class.b2Contact* %63)
          to label %65 unwind label %69

; <label>:65                                      ; preds = %62
  %66 = zext i1 %64 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

; <label>:68                                      ; preds = %65
  br label %286

; <label>:69                                      ; preds = %640, %616, %567, %555, %552, %527, %520, %514, %507, %501, %496, %492, %453, %447, %373, %371, %369, %368, %366, %364, %361, %351, %349, %343, %329, %324, %321, %310, %307, %304, %301, %298, %260, %242, %240, %236, %234, %230, %229, %226, %223, %207, %188, %152, %145, %123, %110, %107, %104, %99, %95, %92, %89, %62
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %3, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %4, align 4
  invoke void @_ZN8b2IslandD1Ev(%class.b2Island* %island)
          to label %650 unwind label %656

; <label>:73                                      ; preds = %65
  %74 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %75 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %74, i32 0, i32 12
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, 8
  br i1 %77, label %78, label %79

; <label>:78                                      ; preds = %73
  br label %286

; <label>:79                                      ; preds = %73
  store float 1.000000e+00, float* %alpha, align 4
  %80 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %81 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %89

; <label>:85                                      ; preds = %79
  %86 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %87 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %86, i32 0, i32 13
  %88 = load float, float* %87, align 4
  store float %88, float* %alpha, align 4
  br label %278

; <label>:89                                      ; preds = %79
  %90 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %91 = invoke %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %90)
          to label %92 unwind label %69

; <label>:92                                      ; preds = %89
  store %class.b2Fixture* %91, %class.b2Fixture** %fA, align 8
  %93 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %94 = invoke %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %93)
          to label %95 unwind label %69

; <label>:95                                      ; preds = %92
  store %class.b2Fixture* %94, %class.b2Fixture** %fB, align 8
  %96 = load %class.b2Fixture*, %class.b2Fixture** %fA, align 8
  %97 = invoke zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %96)
          to label %98 unwind label %69

; <label>:98                                      ; preds = %95
  br i1 %97, label %103, label %99

; <label>:99                                      ; preds = %98
  %100 = load %class.b2Fixture*, %class.b2Fixture** %fB, align 8
  %101 = invoke zeroext i1 @_ZNK9b2Fixture8IsSensorEv(%class.b2Fixture* %100)
          to label %102 unwind label %69

; <label>:102                                     ; preds = %99
  br i1 %101, label %103, label %104

; <label>:103                                     ; preds = %102, %98
  br label %286

; <label>:104                                     ; preds = %102
  %105 = load %class.b2Fixture*, %class.b2Fixture** %fA, align 8
  %106 = invoke %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %105)
          to label %107 unwind label %69

; <label>:107                                     ; preds = %104
  store %class.b2Body* %106, %class.b2Body** %bA, align 8
  %108 = load %class.b2Fixture*, %class.b2Fixture** %fB, align 8
  %109 = invoke %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %108)
          to label %110 unwind label %69

; <label>:110                                     ; preds = %107
  store %class.b2Body* %109, %class.b2Body** %bB, align 8
  %111 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %112 = getelementptr inbounds %class.b2Body, %class.b2Body* %111, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  store i32 %113, i32* %typeA, align 4
  %114 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %115 = getelementptr inbounds %class.b2Body, %class.b2Body* %114, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %typeB, align 4
  %117 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %118 = invoke zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %117)
          to label %119 unwind label %69

; <label>:119                                     ; preds = %110
  br i1 %118, label %120, label %123

; <label>:120                                     ; preds = %119
  %121 = load i32, i32* %typeA, align 4
  %122 = icmp ne i32 %121, 0
  br label %123

; <label>:123                                     ; preds = %120, %119
  %124 = phi i1 [ false, %119 ], [ %122, %120 ]
  %125 = zext i1 %124 to i8
  store i8 %125, i8* %activeA, align 1
  %126 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %127 = invoke zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %126)
          to label %128 unwind label %69

; <label>:128                                     ; preds = %123
  br i1 %127, label %129, label %132

; <label>:129                                     ; preds = %128
  %130 = load i32, i32* %typeB, align 4
  %131 = icmp ne i32 %130, 0
  br label %132

; <label>:132                                     ; preds = %129, %128
  %133 = phi i1 [ false, %128 ], [ %131, %129 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %activeB, align 1
  %135 = load i8, i8* %activeA, align 1
  %136 = trunc i8 %135 to i1
  %137 = zext i1 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %145

; <label>:139                                     ; preds = %132
  %140 = load i8, i8* %activeB, align 1
  %141 = trunc i8 %140 to i1
  %142 = zext i1 %141 to i32
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

; <label>:144                                     ; preds = %139
  br label %286

; <label>:145                                     ; preds = %139, %132
  %146 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %147 = invoke zeroext i1 @_ZNK6b2Body8IsBulletEv(%class.b2Body* %146)
          to label %148 unwind label %69

; <label>:148                                     ; preds = %145
  br i1 %147, label %152, label %149

; <label>:149                                     ; preds = %148
  %150 = load i32, i32* %typeA, align 4
  %151 = icmp ne i32 %150, 2
  br label %152

; <label>:152                                     ; preds = %149, %148
  %153 = phi i1 [ true, %148 ], [ %151, %149 ]
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %collideA, align 1
  %155 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %156 = invoke zeroext i1 @_ZNK6b2Body8IsBulletEv(%class.b2Body* %155)
          to label %157 unwind label %69

; <label>:157                                     ; preds = %152
  br i1 %156, label %161, label %158

; <label>:158                                     ; preds = %157
  %159 = load i32, i32* %typeB, align 4
  %160 = icmp ne i32 %159, 2
  br label %161

; <label>:161                                     ; preds = %158, %157
  %162 = phi i1 [ true, %157 ], [ %160, %158 ]
  %163 = zext i1 %162 to i8
  store i8 %163, i8* %collideB, align 1
  %164 = load i8, i8* %collideA, align 1
  %165 = trunc i8 %164 to i1
  %166 = zext i1 %165 to i32
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %174

; <label>:168                                     ; preds = %161
  %169 = load i8, i8* %collideB, align 1
  %170 = trunc i8 %169 to i1
  %171 = zext i1 %170 to i32
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

; <label>:173                                     ; preds = %168
  br label %286

; <label>:174                                     ; preds = %168, %161
  %175 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %176 = getelementptr inbounds %class.b2Body, %class.b2Body* %175, i32 0, i32 4
  %177 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %176, i32 0, i32 5
  %178 = load float, float* %177, align 4
  store float %178, float* %alpha0, align 4
  %179 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %180 = getelementptr inbounds %class.b2Body, %class.b2Body* %179, i32 0, i32 4
  %181 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %180, i32 0, i32 5
  %182 = load float, float* %181, align 4
  %183 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %184 = getelementptr inbounds %class.b2Body, %class.b2Body* %183, i32 0, i32 4
  %185 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %184, i32 0, i32 5
  %186 = load float, float* %185, align 4
  %187 = fcmp olt float %182, %186
  br i1 %187, label %188, label %197

; <label>:188                                     ; preds = %174
  %189 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %190 = getelementptr inbounds %class.b2Body, %class.b2Body* %189, i32 0, i32 4
  %191 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %190, i32 0, i32 5
  %192 = load float, float* %191, align 4
  store float %192, float* %alpha0, align 4
  %193 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %194 = getelementptr inbounds %class.b2Body, %class.b2Body* %193, i32 0, i32 4
  %195 = load float, float* %alpha0, align 4
  invoke void @_ZN7b2Sweep7AdvanceEf(%struct.b2Sweep* %194, float %195)
          to label %196 unwind label %69

; <label>:196                                     ; preds = %188
  br label %217

; <label>:197                                     ; preds = %174
  %198 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %199 = getelementptr inbounds %class.b2Body, %class.b2Body* %198, i32 0, i32 4
  %200 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %199, i32 0, i32 5
  %201 = load float, float* %200, align 4
  %202 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %203 = getelementptr inbounds %class.b2Body, %class.b2Body* %202, i32 0, i32 4
  %204 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %203, i32 0, i32 5
  %205 = load float, float* %204, align 4
  %206 = fcmp olt float %201, %205
  br i1 %206, label %207, label %216

; <label>:207                                     ; preds = %197
  %208 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %209 = getelementptr inbounds %class.b2Body, %class.b2Body* %208, i32 0, i32 4
  %210 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %209, i32 0, i32 5
  %211 = load float, float* %210, align 4
  store float %211, float* %alpha0, align 4
  %212 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %213 = getelementptr inbounds %class.b2Body, %class.b2Body* %212, i32 0, i32 4
  %214 = load float, float* %alpha0, align 4
  invoke void @_ZN7b2Sweep7AdvanceEf(%struct.b2Sweep* %213, float %214)
          to label %215 unwind label %69

; <label>:215                                     ; preds = %207
  br label %216

; <label>:216                                     ; preds = %215, %197
  br label %217

; <label>:217                                     ; preds = %216, %196
  %218 = load float, float* %alpha0, align 4
  %219 = fcmp olt float %218, 1.000000e+00
  br i1 %219, label %220, label %221

; <label>:220                                     ; preds = %217
  br label %223

; <label>:221                                     ; preds = %217
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.288, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 675, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN7b2World8SolveTOIERK10b2TimeStep, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %223

; <label>:223                                     ; preds = %222, %220
  %224 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %225 = invoke i32 @_ZNK9b2Contact14GetChildIndexAEv(%class.b2Contact* %224)
          to label %226 unwind label %69

; <label>:226                                     ; preds = %223
  store i32 %225, i32* %indexA, align 4
  %227 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %228 = invoke i32 @_ZNK9b2Contact14GetChildIndexBEv(%class.b2Contact* %227)
          to label %229 unwind label %69

; <label>:229                                     ; preds = %226
  store i32 %228, i32* %indexB, align 4
  invoke void @_ZN10b2TOIInputC2Ev(%struct.b2TOIInput* %input)
          to label %230 unwind label %69

; <label>:230                                     ; preds = %229
  %231 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %input, i32 0, i32 0
  %232 = load %class.b2Fixture*, %class.b2Fixture** %fA, align 8
  %233 = invoke %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %232)
          to label %234 unwind label %69

; <label>:234                                     ; preds = %230
  %235 = load i32, i32* %indexA, align 4
  invoke void @_ZN15b2DistanceProxy3SetEPK7b2Shapei(%struct.b2DistanceProxy* %231, %class.b2Shape* %233, i32 %235)
          to label %236 unwind label %69

; <label>:236                                     ; preds = %234
  %237 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %input, i32 0, i32 1
  %238 = load %class.b2Fixture*, %class.b2Fixture** %fB, align 8
  %239 = invoke %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %238)
          to label %240 unwind label %69

; <label>:240                                     ; preds = %236
  %241 = load i32, i32* %indexB, align 4
  invoke void @_ZN15b2DistanceProxy3SetEPK7b2Shapei(%struct.b2DistanceProxy* %237, %class.b2Shape* %239, i32 %241)
          to label %242 unwind label %69

; <label>:242                                     ; preds = %240
  %243 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %input, i32 0, i32 2
  %244 = load %class.b2Body*, %class.b2Body** %bA, align 8
  %245 = getelementptr inbounds %class.b2Body, %class.b2Body* %244, i32 0, i32 4
  %246 = bitcast %struct.b2Sweep* %243 to i8*
  %247 = bitcast %struct.b2Sweep* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %246, i8* %247, i64 36, i32 4, i1 false)
  %248 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %input, i32 0, i32 3
  %249 = load %class.b2Body*, %class.b2Body** %bB, align 8
  %250 = getelementptr inbounds %class.b2Body, %class.b2Body* %249, i32 0, i32 4
  %251 = bitcast %struct.b2Sweep* %248 to i8*
  %252 = bitcast %struct.b2Sweep* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %251, i8* %252, i64 36, i32 4, i1 false)
  %253 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %input, i32 0, i32 4
  store float 1.000000e+00, float* %253, align 8
  invoke void @_Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput(%struct.b2TOIOutput* %output, %struct.b2TOIInput* %input)
          to label %254 unwind label %69

; <label>:254                                     ; preds = %242
  %255 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %output, i32 0, i32 1
  %256 = load float, float* %255, align 4
  store float %256, float* %beta, align 4
  %257 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %output, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 3
  br i1 %259, label %260, label %269

; <label>:260                                     ; preds = %254
  %261 = load float, float* %alpha0, align 4
  %262 = load float, float* %alpha0, align 4
  %263 = fsub float 1.000000e+00, %262
  %264 = load float, float* %beta, align 4
  %265 = fmul float %263, %264
  %266 = fadd float %261, %265
  %267 = invoke float @_Z5b2MinIfET_S0_S0_(float %266, float 1.000000e+00)
          to label %268 unwind label %69

; <label>:268                                     ; preds = %260
  store float %267, float* %alpha, align 4
  br label %270

; <label>:269                                     ; preds = %254
  store float 1.000000e+00, float* %alpha, align 4
  br label %270

; <label>:270                                     ; preds = %269, %268
  %271 = load float, float* %alpha, align 4
  %272 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %273 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %272, i32 0, i32 13
  store float %271, float* %273, align 4
  %274 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %275 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %274, i32 0, i32 1
  %276 = load i32, i32* %275, align 8
  %277 = or i32 %276, 32
  store i32 %277, i32* %275, align 8
  br label %278

; <label>:278                                     ; preds = %270, %85
  %279 = load float, float* %alpha, align 4
  %280 = load float, float* %minAlpha, align 4
  %281 = fcmp olt float %279, %280
  br i1 %281, label %282, label %285

; <label>:282                                     ; preds = %278
  %283 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  store %class.b2Contact* %283, %class.b2Contact** %minContact, align 8
  %284 = load float, float* %alpha, align 4
  store float %284, float* %minAlpha, align 4
  br label %285

; <label>:285                                     ; preds = %282, %278
  br label %286

; <label>:286                                     ; preds = %285, %173, %144, %103, %78, %68
  %287 = load %class.b2Contact*, %class.b2Contact** %c1, align 8
  %288 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %287, i32 0, i32 4
  %289 = load %class.b2Contact*, %class.b2Contact** %288, align 8
  store %class.b2Contact* %289, %class.b2Contact** %c1, align 8
  br label %59

; <label>:290                                     ; preds = %59
  %291 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %292 = icmp eq %class.b2Contact* %291, null
  br i1 %292, label %296, label %293

; <label>:293                                     ; preds = %290
  %294 = load float, float* %minAlpha, align 4
  %295 = fcmp olt float 0x3FEFFFFD80000000, %294
  br i1 %295, label %296, label %298

; <label>:296                                     ; preds = %293, %290
  %297 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 16
  store i8 1, i8* %297, align 1
  br label %649

; <label>:298                                     ; preds = %293
  %299 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %300 = invoke %class.b2Fixture* @_ZN9b2Contact11GetFixtureAEv(%class.b2Contact* %299)
          to label %301 unwind label %69

; <label>:301                                     ; preds = %298
  store %class.b2Fixture* %300, %class.b2Fixture** %fA2, align 8
  %302 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %303 = invoke %class.b2Fixture* @_ZN9b2Contact11GetFixtureBEv(%class.b2Contact* %302)
          to label %304 unwind label %69

; <label>:304                                     ; preds = %301
  store %class.b2Fixture* %303, %class.b2Fixture** %fB3, align 8
  %305 = load %class.b2Fixture*, %class.b2Fixture** %fA2, align 8
  %306 = invoke %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %305)
          to label %307 unwind label %69

; <label>:307                                     ; preds = %304
  store %class.b2Body* %306, %class.b2Body** %bA4, align 8
  %308 = load %class.b2Fixture*, %class.b2Fixture** %fB3, align 8
  %309 = invoke %class.b2Body* @_ZN9b2Fixture7GetBodyEv(%class.b2Fixture* %308)
          to label %310 unwind label %69

; <label>:310                                     ; preds = %307
  store %class.b2Body* %309, %class.b2Body** %bB5, align 8
  %311 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  %312 = getelementptr inbounds %class.b2Body, %class.b2Body* %311, i32 0, i32 4
  %313 = bitcast %struct.b2Sweep* %backup1 to i8*
  %314 = bitcast %struct.b2Sweep* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %313, i8* %314, i64 36, i32 4, i1 false)
  %315 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  %316 = getelementptr inbounds %class.b2Body, %class.b2Body* %315, i32 0, i32 4
  %317 = bitcast %struct.b2Sweep* %backup2 to i8*
  %318 = bitcast %struct.b2Sweep* %316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %317, i8* %318, i64 36, i32 4, i1 false)
  %319 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  %320 = load float, float* %minAlpha, align 4
  invoke void @_ZN6b2Body7AdvanceEf(%class.b2Body* %319, float %320)
          to label %321 unwind label %69

; <label>:321                                     ; preds = %310
  %322 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  %323 = load float, float* %minAlpha, align 4
  invoke void @_ZN6b2Body7AdvanceEf(%class.b2Body* %322, float %323)
          to label %324 unwind label %69

; <label>:324                                     ; preds = %321
  %325 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %326 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %327 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %326, i32 0, i32 4
  %328 = load %class.b2ContactFilter*, %class.b2ContactFilter** %327, align 8
  invoke void @_ZN9b2Contact6UpdateEP17b2ContactListener(%class.b2Contact* %325, %class.b2ContactFilter* %328)
          to label %329 unwind label %69

; <label>:329                                     ; preds = %324
  %330 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %331 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 8
  %333 = and i32 %332, -33
  store i32 %333, i32* %331, align 8
  %334 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %335 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %334, i32 0, i32 12
  %336 = load i32, i32* %335, align 8
  %337 = add nsw i32 %336, 1
  store i32 %337, i32* %335, align 8
  %338 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %339 = invoke zeroext i1 @_ZNK9b2Contact9IsEnabledEv(%class.b2Contact* %338)
          to label %340 unwind label %69

; <label>:340                                     ; preds = %329
  %341 = zext i1 %339 to i32
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %349, label %343

; <label>:343                                     ; preds = %340
  %344 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %345 = invoke zeroext i1 @_ZNK9b2Contact10IsTouchingEv(%class.b2Contact* %344)
          to label %346 unwind label %69

; <label>:346                                     ; preds = %343
  %347 = zext i1 %345 to i32
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %364

; <label>:349                                     ; preds = %346, %340
  %350 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  invoke void @_ZN9b2Contact10SetEnabledEb(%class.b2Contact* %350, i1 zeroext false)
          to label %351 unwind label %69

; <label>:351                                     ; preds = %349
  %352 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  %353 = getelementptr inbounds %class.b2Body, %class.b2Body* %352, i32 0, i32 4
  %354 = bitcast %struct.b2Sweep* %353 to i8*
  %355 = bitcast %struct.b2Sweep* %backup1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %354, i8* %355, i64 36, i32 4, i1 false)
  %356 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  %357 = getelementptr inbounds %class.b2Body, %class.b2Body* %356, i32 0, i32 4
  %358 = bitcast %struct.b2Sweep* %357 to i8*
  %359 = bitcast %struct.b2Sweep* %backup2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %358, i8* %359, i64 36, i32 4, i1 false)
  %360 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  invoke void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %360)
          to label %361 unwind label %69

; <label>:361                                     ; preds = %351
  %362 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  invoke void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %362)
          to label %363 unwind label %69

; <label>:363                                     ; preds = %361
  br label %55

; <label>:364                                     ; preds = %346
  %365 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  invoke void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %365, i1 zeroext true)
          to label %366 unwind label %69

; <label>:366                                     ; preds = %364
  %367 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  invoke void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %367, i1 zeroext true)
          to label %368 unwind label %69

; <label>:368                                     ; preds = %366
  invoke void @_ZN8b2Island5ClearEv(%class.b2Island* %island)
          to label %369 unwind label %69

; <label>:369                                     ; preds = %368
  %370 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  invoke void @_ZN8b2Island3AddEP6b2Body(%class.b2Island* %island, %class.b2Body* %370)
          to label %371 unwind label %69

; <label>:371                                     ; preds = %369
  %372 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  invoke void @_ZN8b2Island3AddEP6b2Body(%class.b2Island* %island, %class.b2Body* %372)
          to label %373 unwind label %69

; <label>:373                                     ; preds = %371
  %374 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  invoke void @_ZN8b2Island3AddEP9b2Contact(%class.b2Island* %island, %class.b2Contact* %374)
          to label %375 unwind label %69

; <label>:375                                     ; preds = %373
  %376 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  %377 = getelementptr inbounds %class.b2Body, %class.b2Body* %376, i32 0, i32 1
  %378 = load i16, i16* %377, align 4
  %379 = zext i16 %378 to i32
  %380 = or i32 %379, 1
  %381 = trunc i32 %380 to i16
  store i16 %381, i16* %377, align 4
  %382 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  %383 = getelementptr inbounds %class.b2Body, %class.b2Body* %382, i32 0, i32 1
  %384 = load i16, i16* %383, align 4
  %385 = zext i16 %384 to i32
  %386 = or i32 %385, 1
  %387 = trunc i32 %386 to i16
  store i16 %387, i16* %383, align 4
  %388 = load %class.b2Contact*, %class.b2Contact** %minContact, align 8
  %389 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %388, i32 0, i32 1
  %390 = load i32, i32* %389, align 8
  %391 = or i32 %390, 1
  store i32 %391, i32* %389, align 8
  %392 = getelementptr inbounds [2 x %class.b2Body*], [2 x %class.b2Body*]* %bodies, i64 0, i64 0
  %393 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  store %class.b2Body* %393, %class.b2Body** %392, align 8
  %394 = getelementptr inbounds %class.b2Body*, %class.b2Body** %392, i64 1
  %395 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  store %class.b2Body* %395, %class.b2Body** %394, align 8
  store i32 0, i32* %i, align 4
  br label %396

; <label>:396                                     ; preds = %564, %375
  %397 = load i32, i32* %i, align 4
  %398 = icmp slt i32 %397, 2
  br i1 %398, label %399, label %567

; <label>:399                                     ; preds = %396
  %400 = load i32, i32* %i, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [2 x %class.b2Body*], [2 x %class.b2Body*]* %bodies, i64 0, i64 %401
  %403 = load %class.b2Body*, %class.b2Body** %402, align 8
  store %class.b2Body* %403, %class.b2Body** %body, align 8
  %404 = load %class.b2Body*, %class.b2Body** %body, align 8
  %405 = getelementptr inbounds %class.b2Body, %class.b2Body* %404, i32 0, i32 0
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 2
  br i1 %407, label %408, label %563

; <label>:408                                     ; preds = %399
  %409 = load %class.b2Body*, %class.b2Body** %body, align 8
  %410 = getelementptr inbounds %class.b2Body, %class.b2Body* %409, i32 0, i32 15
  %411 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %410, align 8
  store %struct.b2ContactEdge* %411, %struct.b2ContactEdge** %ce, align 8
  br label %412

; <label>:412                                     ; preds = %558, %408
  %413 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %414 = icmp ne %struct.b2ContactEdge* %413, null
  br i1 %414, label %415, label %562

; <label>:415                                     ; preds = %412
  %416 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 7
  %417 = load i32, i32* %416, align 8
  %418 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 10
  %419 = load i32, i32* %418, align 4
  %420 = icmp eq i32 %417, %419
  br i1 %420, label %421, label %422

; <label>:421                                     ; preds = %415
  br label %562

; <label>:422                                     ; preds = %415
  %423 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 9
  %424 = load i32, i32* %423, align 8
  %425 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 11
  %426 = load i32, i32* %425, align 8
  %427 = icmp eq i32 %424, %426
  br i1 %427, label %428, label %429

; <label>:428                                     ; preds = %422
  br label %562

; <label>:429                                     ; preds = %422
  %430 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %431 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %430, i32 0, i32 1
  %432 = load %class.b2Contact*, %class.b2Contact** %431, align 8
  store %class.b2Contact* %432, %class.b2Contact** %contact, align 8
  %433 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %434 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %433, i32 0, i32 1
  %435 = load i32, i32* %434, align 8
  %436 = and i32 %435, 1
  %437 = icmp ne i32 %436, 0
  br i1 %437, label %438, label %439

; <label>:438                                     ; preds = %429
  br label %558

; <label>:439                                     ; preds = %429
  %440 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %441 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %440, i32 0, i32 0
  %442 = load %class.b2Body*, %class.b2Body** %441, align 8
  store %class.b2Body* %442, %class.b2Body** %other, align 8
  %443 = load %class.b2Body*, %class.b2Body** %other, align 8
  %444 = getelementptr inbounds %class.b2Body, %class.b2Body* %443, i32 0, i32 0
  %445 = load i32, i32* %444, align 8
  %446 = icmp eq i32 %445, 2
  br i1 %446, label %447, label %460

; <label>:447                                     ; preds = %439
  %448 = load %class.b2Body*, %class.b2Body** %body, align 8
  %449 = invoke zeroext i1 @_ZNK6b2Body8IsBulletEv(%class.b2Body* %448)
          to label %450 unwind label %69

; <label>:450                                     ; preds = %447
  %451 = zext i1 %449 to i32
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %460

; <label>:453                                     ; preds = %450
  %454 = load %class.b2Body*, %class.b2Body** %other, align 8
  %455 = invoke zeroext i1 @_ZNK6b2Body8IsBulletEv(%class.b2Body* %454)
          to label %456 unwind label %69

; <label>:456                                     ; preds = %453
  %457 = zext i1 %455 to i32
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %460

; <label>:459                                     ; preds = %456
  br label %558

; <label>:460                                     ; preds = %456, %450, %439
  %461 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %462 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %461, i32 0, i32 7
  %463 = load %class.b2Fixture*, %class.b2Fixture** %462, align 8
  %464 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %463, i32 0, i32 9
  %465 = load i8, i8* %464, align 2
  %466 = trunc i8 %465 to i1
  %467 = zext i1 %466 to i8
  store i8 %467, i8* %sensorA, align 1
  %468 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %469 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %468, i32 0, i32 8
  %470 = load %class.b2Fixture*, %class.b2Fixture** %469, align 8
  %471 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %470, i32 0, i32 9
  %472 = load i8, i8* %471, align 2
  %473 = trunc i8 %472 to i1
  %474 = zext i1 %473 to i8
  store i8 %474, i8* %sensorB, align 1
  %475 = load i8, i8* %sensorA, align 1
  %476 = trunc i8 %475 to i1
  br i1 %476, label %480, label %477

; <label>:477                                     ; preds = %460
  %478 = load i8, i8* %sensorB, align 1
  %479 = trunc i8 %478 to i1
  br i1 %479, label %480, label %481

; <label>:480                                     ; preds = %477, %460
  br label %558

; <label>:481                                     ; preds = %477
  %482 = load %class.b2Body*, %class.b2Body** %other, align 8
  %483 = getelementptr inbounds %class.b2Body, %class.b2Body* %482, i32 0, i32 4
  %484 = bitcast %struct.b2Sweep* %backup to i8*
  %485 = bitcast %struct.b2Sweep* %483 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %484, i8* %485, i64 36, i32 4, i1 false)
  %486 = load %class.b2Body*, %class.b2Body** %other, align 8
  %487 = getelementptr inbounds %class.b2Body, %class.b2Body* %486, i32 0, i32 1
  %488 = load i16, i16* %487, align 4
  %489 = zext i16 %488 to i32
  %490 = and i32 %489, 1
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %496

; <label>:492                                     ; preds = %481
  %493 = load %class.b2Body*, %class.b2Body** %other, align 8
  %494 = load float, float* %minAlpha, align 4
  invoke void @_ZN6b2Body7AdvanceEf(%class.b2Body* %493, float %494)
          to label %495 unwind label %69

; <label>:495                                     ; preds = %492
  br label %496

; <label>:496                                     ; preds = %495, %481
  %497 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %498 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %499 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %498, i32 0, i32 4
  %500 = load %class.b2ContactFilter*, %class.b2ContactFilter** %499, align 8
  invoke void @_ZN9b2Contact6UpdateEP17b2ContactListener(%class.b2Contact* %497, %class.b2ContactFilter* %500)
          to label %501 unwind label %69

; <label>:501                                     ; preds = %496
  %502 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %503 = invoke zeroext i1 @_ZNK9b2Contact9IsEnabledEv(%class.b2Contact* %502)
          to label %504 unwind label %69

; <label>:504                                     ; preds = %501
  %505 = zext i1 %503 to i32
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %514

; <label>:507                                     ; preds = %504
  %508 = load %class.b2Body*, %class.b2Body** %other, align 8
  %509 = getelementptr inbounds %class.b2Body, %class.b2Body* %508, i32 0, i32 4
  %510 = bitcast %struct.b2Sweep* %509 to i8*
  %511 = bitcast %struct.b2Sweep* %backup to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %510, i8* %511, i64 36, i32 4, i1 false)
  %512 = load %class.b2Body*, %class.b2Body** %other, align 8
  invoke void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %512)
          to label %513 unwind label %69

; <label>:513                                     ; preds = %507
  br label %558

; <label>:514                                     ; preds = %504
  %515 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %516 = invoke zeroext i1 @_ZNK9b2Contact10IsTouchingEv(%class.b2Contact* %515)
          to label %517 unwind label %69

; <label>:517                                     ; preds = %514
  %518 = zext i1 %516 to i32
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %527

; <label>:520                                     ; preds = %517
  %521 = load %class.b2Body*, %class.b2Body** %other, align 8
  %522 = getelementptr inbounds %class.b2Body, %class.b2Body* %521, i32 0, i32 4
  %523 = bitcast %struct.b2Sweep* %522 to i8*
  %524 = bitcast %struct.b2Sweep* %backup to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %523, i8* %524, i64 36, i32 4, i1 false)
  %525 = load %class.b2Body*, %class.b2Body** %other, align 8
  invoke void @_ZN6b2Body20SynchronizeTransformEv(%class.b2Body* %525)
          to label %526 unwind label %69

; <label>:526                                     ; preds = %520
  br label %558

; <label>:527                                     ; preds = %517
  %528 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  %529 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %528, i32 0, i32 1
  %530 = load i32, i32* %529, align 8
  %531 = or i32 %530, 1
  store i32 %531, i32* %529, align 8
  %532 = load %class.b2Contact*, %class.b2Contact** %contact, align 8
  invoke void @_ZN8b2Island3AddEP9b2Contact(%class.b2Island* %island, %class.b2Contact* %532)
          to label %533 unwind label %69

; <label>:533                                     ; preds = %527
  %534 = load %class.b2Body*, %class.b2Body** %other, align 8
  %535 = getelementptr inbounds %class.b2Body, %class.b2Body* %534, i32 0, i32 1
  %536 = load i16, i16* %535, align 4
  %537 = zext i16 %536 to i32
  %538 = and i32 %537, 1
  %539 = icmp ne i32 %538, 0
  br i1 %539, label %540, label %541

; <label>:540                                     ; preds = %533
  br label %558

; <label>:541                                     ; preds = %533
  %542 = load %class.b2Body*, %class.b2Body** %other, align 8
  %543 = getelementptr inbounds %class.b2Body, %class.b2Body* %542, i32 0, i32 1
  %544 = load i16, i16* %543, align 4
  %545 = zext i16 %544 to i32
  %546 = or i32 %545, 1
  %547 = trunc i32 %546 to i16
  store i16 %547, i16* %543, align 4
  %548 = load %class.b2Body*, %class.b2Body** %other, align 8
  %549 = getelementptr inbounds %class.b2Body, %class.b2Body* %548, i32 0, i32 0
  %550 = load i32, i32* %549, align 8
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %552, label %555

; <label>:552                                     ; preds = %541
  %553 = load %class.b2Body*, %class.b2Body** %other, align 8
  invoke void @_ZN6b2Body8SetAwakeEb(%class.b2Body* %553, i1 zeroext true)
          to label %554 unwind label %69

; <label>:554                                     ; preds = %552
  br label %555

; <label>:555                                     ; preds = %554, %541
  %556 = load %class.b2Body*, %class.b2Body** %other, align 8
  invoke void @_ZN8b2Island3AddEP6b2Body(%class.b2Island* %island, %class.b2Body* %556)
          to label %557 unwind label %69

; <label>:557                                     ; preds = %555
  br label %558

; <label>:558                                     ; preds = %557, %540, %526, %513, %480, %459, %438
  %559 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce, align 8
  %560 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %559, i32 0, i32 3
  %561 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %560, align 8
  store %struct.b2ContactEdge* %561, %struct.b2ContactEdge** %ce, align 8
  br label %412

; <label>:562                                     ; preds = %428, %421, %412
  br label %563

; <label>:563                                     ; preds = %562, %399
  br label %564

; <label>:564                                     ; preds = %563
  %565 = load i32, i32* %i, align 4
  %566 = add nsw i32 %565, 1
  store i32 %566, i32* %i, align 4
  br label %396

; <label>:567                                     ; preds = %396
  %568 = load float, float* %minAlpha, align 4
  %569 = fsub float 1.000000e+00, %568
  %570 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %571 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %570, i32 0, i32 0
  %572 = load float, float* %571, align 4
  %573 = fmul float %569, %572
  %574 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 0
  store float %573, float* %574, align 4
  %575 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 0
  %576 = load float, float* %575, align 4
  %577 = fdiv float 1.000000e+00, %576
  %578 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 1
  store float %577, float* %578, align 4
  %579 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 2
  store float 1.000000e+00, float* %579, align 4
  %580 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 4
  store i32 20, i32* %580, align 4
  %581 = load %struct.b2TimeStep*, %struct.b2TimeStep** %2, align 8
  %582 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %581, i32 0, i32 3
  %583 = load i32, i32* %582, align 4
  %584 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 3
  store i32 %583, i32* %584, align 4
  %585 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %subStep, i32 0, i32 5
  store i8 0, i8* %585, align 4
  %586 = load %class.b2Body*, %class.b2Body** %bA4, align 8
  %587 = getelementptr inbounds %class.b2Body, %class.b2Body* %586, i32 0, i32 2
  %588 = load i32, i32* %587, align 8
  %589 = load %class.b2Body*, %class.b2Body** %bB5, align 8
  %590 = getelementptr inbounds %class.b2Body, %class.b2Body* %589, i32 0, i32 2
  %591 = load i32, i32* %590, align 8
  invoke void @_ZN8b2Island8SolveTOIERK10b2TimeStepii(%class.b2Island* %island, %struct.b2TimeStep* dereferenceable(24) %subStep, i32 %588, i32 %591)
          to label %592 unwind label %69

; <label>:592                                     ; preds = %567
  store i32 0, i32* %i6, align 4
  br label %593

; <label>:593                                     ; preds = %637, %592
  %594 = load i32, i32* %i6, align 4
  %595 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 7
  %596 = load i32, i32* %595, align 8
  %597 = icmp slt i32 %594, %596
  br i1 %597, label %598, label %640

; <label>:598                                     ; preds = %593
  %599 = load i32, i32* %i6, align 4
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds %class.b2Island, %class.b2Island* %island, i32 0, i32 2
  %602 = load %class.b2Body**, %class.b2Body*** %601, align 8
  %603 = getelementptr inbounds %class.b2Body*, %class.b2Body** %602, i64 %600
  %604 = load %class.b2Body*, %class.b2Body** %603, align 8
  store %class.b2Body* %604, %class.b2Body** %body7, align 8
  %605 = load %class.b2Body*, %class.b2Body** %body7, align 8
  %606 = getelementptr inbounds %class.b2Body, %class.b2Body* %605, i32 0, i32 1
  %607 = load i16, i16* %606, align 4
  %608 = zext i16 %607 to i32
  %609 = and i32 %608, -2
  %610 = trunc i32 %609 to i16
  store i16 %610, i16* %606, align 4
  %611 = load %class.b2Body*, %class.b2Body** %body7, align 8
  %612 = getelementptr inbounds %class.b2Body, %class.b2Body* %611, i32 0, i32 0
  %613 = load i32, i32* %612, align 8
  %614 = icmp ne i32 %613, 2
  br i1 %614, label %615, label %616

; <label>:615                                     ; preds = %598
  br label %637

; <label>:616                                     ; preds = %598
  %617 = load %class.b2Body*, %class.b2Body** %body7, align 8
  invoke void @_ZN6b2Body19SynchronizeFixturesEv(%class.b2Body* %617)
          to label %618 unwind label %69

; <label>:618                                     ; preds = %616
  %619 = load %class.b2Body*, %class.b2Body** %body7, align 8
  %620 = getelementptr inbounds %class.b2Body, %class.b2Body* %619, i32 0, i32 15
  %621 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %620, align 8
  store %struct.b2ContactEdge* %621, %struct.b2ContactEdge** %ce8, align 8
  br label %622

; <label>:622                                     ; preds = %632, %618
  %623 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce8, align 8
  %624 = icmp ne %struct.b2ContactEdge* %623, null
  br i1 %624, label %625, label %636

; <label>:625                                     ; preds = %622
  %626 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce8, align 8
  %627 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %626, i32 0, i32 1
  %628 = load %class.b2Contact*, %class.b2Contact** %627, align 8
  %629 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %628, i32 0, i32 1
  %630 = load i32, i32* %629, align 8
  %631 = and i32 %630, -34
  store i32 %631, i32* %629, align 8
  br label %632

; <label>:632                                     ; preds = %625
  %633 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %ce8, align 8
  %634 = getelementptr inbounds %struct.b2ContactEdge, %struct.b2ContactEdge* %633, i32 0, i32 3
  %635 = load %struct.b2ContactEdge*, %struct.b2ContactEdge** %634, align 8
  store %struct.b2ContactEdge* %635, %struct.b2ContactEdge** %ce8, align 8
  br label %622

; <label>:636                                     ; preds = %622
  br label %637

; <label>:637                                     ; preds = %636, %615
  %638 = load i32, i32* %i6, align 4
  %639 = add nsw i32 %638, 1
  store i32 %639, i32* %i6, align 4
  br label %593

; <label>:640                                     ; preds = %593
  %641 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  invoke void @_ZN16b2ContactManager15FindNewContactsEv(%class.b2ContactManager* %641)
          to label %642 unwind label %69

; <label>:642                                     ; preds = %640
  %643 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 15
  %644 = load i8, i8* %643, align 2
  %645 = trunc i8 %644 to i1
  br i1 %645, label %646, label %648

; <label>:646                                     ; preds = %642
  %647 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 16
  store i8 0, i8* %647, align 1
  br label %649

; <label>:648                                     ; preds = %642
  br label %55

; <label>:649                                     ; preds = %646, %296
  call void @_ZN8b2IslandD1Ev(%class.b2Island* %island)
  ret void

; <label>:650                                     ; preds = %69
  br label %651

; <label>:651                                     ; preds = %650
  %652 = load i8*, i8** %3, align 8
  %653 = load i32, i32* %4, align 4
  %654 = insertvalue { i8*, i32 } undef, i8* %652, 0
  %655 = insertvalue { i8*, i32 } %654, i32 %653, 1
  resume { i8*, i32 } %655

; <label>:656                                     ; preds = %69
  %657 = landingpad { i8*, i32 }
          catch i8* null
  %658 = extractvalue { i8*, i32 } %657, 0
  call void @__clang_call_terminate(i8* %658) #15
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK6b2Body8IsBulletEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 1
  %4 = load i16, i16* %3, align 4
  %5 = zext i16 %4 to i32
  %6 = and i32 %5, 8
  %7 = icmp eq i32 %6, 8
  ret i1 %7
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN7b2Sweep7AdvanceEf(%struct.b2Sweep* %this, float %alpha) #1 comdat align 2 {
  %1 = alloca %struct.b2Sweep*, align 8
  %2 = alloca float, align 4
  %beta = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  store %struct.b2Sweep* %this, %struct.b2Sweep** %1, align 8
  store float %alpha, float* %2, align 4
  %5 = load %struct.b2Sweep*, %struct.b2Sweep** %1, align 8
  %6 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 5
  %7 = load float, float* %6, align 4
  %8 = fcmp olt float %7, 1.000000e+00
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.288, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.23.289, i32 0, i32 0), i32 709, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__PRETTY_FUNCTION__._ZN7b2Sweep7AdvanceEf, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load float, float* %2, align 4
  %14 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 5
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 5
  %18 = load float, float* %17, align 4
  %19 = fsub float 1.000000e+00, %18
  %20 = fdiv float %16, %19
  store float %20, float* %beta, align 4
  %21 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 1
  %22 = load float, float* %beta, align 4
  %23 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 2
  %24 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 1
  %25 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %23, %struct.b2Vec2* dereferenceable(8) %24)
  %26 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 4
  %27 = call <2 x float> @_ZmlfRK6b2Vec2(float %22, %struct.b2Vec2* dereferenceable(8) %4)
  %28 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %27, <2 x float>* %28, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %21, %struct.b2Vec2* dereferenceable(8) %3)
  %29 = load float, float* %beta, align 4
  %30 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 4
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 3
  %33 = load float, float* %32, align 4
  %34 = fsub float %31, %33
  %35 = fmul float %29, %34
  %36 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 3
  %37 = load float, float* %36, align 4
  %38 = fadd float %37, %35
  store float %38, float* %36, align 4
  %39 = load float, float* %2, align 4
  %40 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %5, i32 0, i32 5
  store float %39, float* %40, align 4
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN10b2TOIInputC2Ev(%struct.b2TOIInput* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2TOIInput*, align 8
  store %struct.b2TOIInput* %this, %struct.b2TOIInput** %1, align 8
  %2 = load %struct.b2TOIInput*, %struct.b2TOIInput** %1, align 8
  %3 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %2, i32 0, i32 0
  call void @_ZN15b2DistanceProxyC2Ev(%struct.b2DistanceProxy* %3)
  %4 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %2, i32 0, i32 1
  call void @_ZN15b2DistanceProxyC2Ev(%struct.b2DistanceProxy* %4)
  %5 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %2, i32 0, i32 2
  call void @_ZN7b2SweepC2Ev(%struct.b2Sweep* %5)
  %6 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %2, i32 0, i32 3
  call void @_ZN7b2SweepC2Ev(%struct.b2Sweep* %6)
  ret void
}

; Function Attrs: uwtable
define void @_Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput(%struct.b2TOIOutput* %output, %struct.b2TOIInput* %input) #0 {
  %1 = alloca %struct.b2TOIOutput*, align 8
  %2 = alloca %struct.b2TOIInput*, align 8
  %timer = alloca %class.b2Timer, align 8
  %proxyA = alloca %struct.b2DistanceProxy*, align 8
  %proxyB = alloca %struct.b2DistanceProxy*, align 8
  %sweepA = alloca %struct.b2Sweep, align 4
  %sweepB = alloca %struct.b2Sweep, align 4
  %tMax = alloca float, align 4
  %totalRadius = alloca float, align 4
  %target = alloca float, align 4
  %tolerance = alloca float, align 4
  %t1 = alloca float, align 4
  %k_maxIterations = alloca i32, align 4
  %iter = alloca i32, align 4
  %cache = alloca %struct.b2SimplexCache, align 4
  %distanceInput = alloca %struct.b2DistanceInput, align 8
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %distanceOutput = alloca %struct.b2DistanceOutput, align 4
  %fcn = alloca %struct.b2SeparationFunction, align 8
  %done = alloca i8, align 1
  %t2 = alloca float, align 4
  %pushBackIter = alloca i32, align 4
  %indexA = alloca i32, align 4
  %indexB = alloca i32, align 4
  %s2 = alloca float, align 4
  %s1 = alloca float, align 4
  %rootIterCount = alloca i32, align 4
  %a1 = alloca float, align 4
  %a2 = alloca float, align 4
  %t = alloca float, align 4
  %s = alloca float, align 4
  %time = alloca float, align 4
  store %struct.b2TOIOutput* %output, %struct.b2TOIOutput** %1, align 8
  store %struct.b2TOIInput* %input, %struct.b2TOIInput** %2, align 8
  call void @_ZN7b2TimerC1Ev(%class.b2Timer* %timer)
  %3 = load i32, i32* @b2_toiCalls, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @b2_toiCalls, align 4
  %5 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %6 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %5, i32 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %8 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %7, i32 0, i32 4
  %9 = load float, float* %8, align 8
  %10 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %11 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %10, i32 0, i32 1
  store float %9, float* %11, align 4
  %12 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %13 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %12, i32 0, i32 0
  store %struct.b2DistanceProxy* %13, %struct.b2DistanceProxy** %proxyA, align 8
  %14 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %15 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %14, i32 0, i32 1
  store %struct.b2DistanceProxy* %15, %struct.b2DistanceProxy** %proxyB, align 8
  %16 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %17 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %16, i32 0, i32 2
  %18 = bitcast %struct.b2Sweep* %sweepA to i8*
  %19 = bitcast %struct.b2Sweep* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 36, i32 4, i1 false)
  %20 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %21 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %20, i32 0, i32 3
  %22 = bitcast %struct.b2Sweep* %sweepB to i8*
  %23 = bitcast %struct.b2Sweep* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 36, i32 4, i1 false)
  call void @_ZN7b2Sweep9NormalizeEv(%struct.b2Sweep* %sweepA)
  call void @_ZN7b2Sweep9NormalizeEv(%struct.b2Sweep* %sweepB)
  %24 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %25 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %24, i32 0, i32 4
  %26 = load float, float* %25, align 8
  store float %26, float* %tMax, align 4
  %27 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyA, align 8
  %28 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %27, i32 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyB, align 8
  %31 = getelementptr inbounds %struct.b2DistanceProxy, %struct.b2DistanceProxy* %30, i32 0, i32 3
  %32 = load float, float* %31, align 4
  %33 = fadd float %29, %32
  store float %33, float* %totalRadius, align 4
  %34 = load float, float* %totalRadius, align 4
  %35 = fsub float %34, 0x3F8EB851E0000000
  %36 = call float @_Z5b2MaxIfET_S0_S0_(float 0x3F747AE140000000, float %35)
  store float %36, float* %target, align 4
  store float 0x3F547AE140000000, float* %tolerance, align 4
  %37 = load float, float* %target, align 4
  %38 = load float, float* %tolerance, align 4
  %39 = fcmp ogt float %37, %38
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %0
  br label %43

; <label>:41                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1.476, i32 0, i32 0), i32 279, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__PRETTY_FUNCTION__._Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %43

; <label>:43                                      ; preds = %42, %40
  store float 0.000000e+00, float* %t1, align 4
  store i32 20, i32* %k_maxIterations, align 4
  store i32 0, i32* %iter, align 4
  %44 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %cache, i32 0, i32 1
  store i16 0, i16* %44, align 4
  call void @_ZN15b2DistanceInputC2Ev(%struct.b2DistanceInput* %distanceInput)
  %45 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %distanceInput, i32 0, i32 0
  %46 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %47 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %46, i32 0, i32 0
  %48 = bitcast %struct.b2DistanceProxy* %45 to i8*
  %49 = bitcast %struct.b2DistanceProxy* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 32, i32 8, i1 false)
  %50 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %distanceInput, i32 0, i32 1
  %51 = load %struct.b2TOIInput*, %struct.b2TOIInput** %2, align 8
  %52 = getelementptr inbounds %struct.b2TOIInput, %struct.b2TOIInput* %51, i32 0, i32 1
  %53 = bitcast %struct.b2DistanceProxy* %50 to i8*
  %54 = bitcast %struct.b2DistanceProxy* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 32, i32 8, i1 false)
  %55 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %distanceInput, i32 0, i32 4
  store i8 0, i8* %55, align 8
  br label %56

; <label>:56                                      ; preds = %227, %43
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %57 = load float, float* %t1, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %sweepA, %struct.b2Transform* %xfA, float %57)
  %58 = load float, float* %t1, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %sweepB, %struct.b2Transform* %xfB, float %58)
  %59 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %distanceInput, i32 0, i32 2
  %60 = bitcast %struct.b2Transform* %59 to i8*
  %61 = bitcast %struct.b2Transform* %xfA to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 16, i32 4, i1 false)
  %62 = getelementptr inbounds %struct.b2DistanceInput, %struct.b2DistanceInput* %distanceInput, i32 0, i32 3
  %63 = bitcast %struct.b2Transform* %62 to i8*
  %64 = bitcast %struct.b2Transform* %xfB to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 4, i1 false)
  call void @_ZN16b2DistanceOutputC2Ev(%struct.b2DistanceOutput* %distanceOutput)
  call void @_Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput(%struct.b2DistanceOutput* %distanceOutput, %struct.b2SimplexCache* %cache, %struct.b2DistanceInput* %distanceInput)
  %65 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %distanceOutput, i32 0, i32 2
  %66 = load float, float* %65, align 4
  %67 = fcmp ole float %66, 0.000000e+00
  br i1 %67, label %68, label %73

; <label>:68                                      ; preds = %56
  %69 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %70 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %69, i32 0, i32 0
  store i32 2, i32* %70, align 4
  %71 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %72 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %71, i32 0, i32 1
  store float 0.000000e+00, float* %72, align 4
  br label %228

; <label>:73                                      ; preds = %56
  %74 = getelementptr inbounds %struct.b2DistanceOutput, %struct.b2DistanceOutput* %distanceOutput, i32 0, i32 2
  %75 = load float, float* %74, align 4
  %76 = load float, float* %target, align 4
  %77 = load float, float* %tolerance, align 4
  %78 = fadd float %76, %77
  %79 = fcmp olt float %75, %78
  br i1 %79, label %80, label %86

; <label>:80                                      ; preds = %73
  %81 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %82 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %81, i32 0, i32 0
  store i32 3, i32* %82, align 4
  %83 = load float, float* %t1, align 4
  %84 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %85 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %84, i32 0, i32 1
  store float %83, float* %85, align 4
  br label %228

; <label>:86                                      ; preds = %73
  call void @_ZN20b2SeparationFunctionC2Ev(%struct.b2SeparationFunction* %fcn)
  %87 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyA, align 8
  %88 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %proxyB, align 8
  %89 = load float, float* %t1, align 4
  %90 = call float @_ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f(%struct.b2SeparationFunction* %fcn, %struct.b2SimplexCache* %cache, %struct.b2DistanceProxy* %87, %struct.b2Sweep* dereferenceable(36) %sweepA, %struct.b2DistanceProxy* %88, %struct.b2Sweep* dereferenceable(36) %sweepB, float %89)
  store i8 0, i8* %done, align 1
  %91 = load float, float* %tMax, align 4
  store float %91, float* %t2, align 4
  store i32 0, i32* %pushBackIter, align 4
  br label %92

; <label>:92                                      ; preds = %209, %86
  %93 = load float, float* %t2, align 4
  %94 = call float @_ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f(%struct.b2SeparationFunction* %fcn, i32* %indexA, i32* %indexB, float %93)
  store float %94, float* %s2, align 4
  %95 = load float, float* %s2, align 4
  %96 = load float, float* %target, align 4
  %97 = load float, float* %tolerance, align 4
  %98 = fadd float %96, %97
  %99 = fcmp ogt float %95, %98
  br i1 %99, label %100, label %106

; <label>:100                                     ; preds = %92
  %101 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %102 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %101, i32 0, i32 0
  store i32 4, i32* %102, align 4
  %103 = load float, float* %tMax, align 4
  %104 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %105 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %104, i32 0, i32 1
  store float %103, float* %105, align 4
  store i8 1, i8* %done, align 1
  br label %210

; <label>:106                                     ; preds = %92
  %107 = load float, float* %s2, align 4
  %108 = load float, float* %target, align 4
  %109 = load float, float* %tolerance, align 4
  %110 = fsub float %108, %109
  %111 = fcmp ogt float %107, %110
  br i1 %111, label %112, label %114

; <label>:112                                     ; preds = %106
  %113 = load float, float* %t2, align 4
  store float %113, float* %t1, align 4
  br label %210

; <label>:114                                     ; preds = %106
  %115 = load i32, i32* %indexA, align 4
  %116 = load i32, i32* %indexB, align 4
  %117 = load float, float* %t1, align 4
  %118 = call float @_ZNK20b2SeparationFunction8EvaluateEiif(%struct.b2SeparationFunction* %fcn, i32 %115, i32 %116, float %117)
  store float %118, float* %s1, align 4
  %119 = load float, float* %s1, align 4
  %120 = load float, float* %target, align 4
  %121 = load float, float* %tolerance, align 4
  %122 = fsub float %120, %121
  %123 = fcmp olt float %119, %122
  br i1 %123, label %124, label %130

; <label>:124                                     ; preds = %114
  %125 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %126 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %125, i32 0, i32 0
  store i32 1, i32* %126, align 4
  %127 = load float, float* %t1, align 4
  %128 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %129 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %128, i32 0, i32 1
  store float %127, float* %129, align 4
  store i8 1, i8* %done, align 1
  br label %210

; <label>:130                                     ; preds = %114
  %131 = load float, float* %s1, align 4
  %132 = load float, float* %target, align 4
  %133 = load float, float* %tolerance, align 4
  %134 = fadd float %132, %133
  %135 = fcmp ole float %131, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %130
  %137 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %138 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %137, i32 0, i32 0
  store i32 3, i32* %138, align 4
  %139 = load float, float* %t1, align 4
  %140 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %141 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %140, i32 0, i32 1
  store float %139, float* %141, align 4
  store i8 1, i8* %done, align 1
  br label %210

; <label>:142                                     ; preds = %130
  store i32 0, i32* %rootIterCount, align 4
  %143 = load float, float* %t1, align 4
  store float %143, float* %a1, align 4
  %144 = load float, float* %t2, align 4
  store float %144, float* %a2, align 4
  br label %145

; <label>:145                                     ; preds = %199, %142
  %146 = load i32, i32* %rootIterCount, align 4
  %147 = and i32 %146, 1
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %163

; <label>:149                                     ; preds = %145
  %150 = load float, float* %a1, align 4
  %151 = load float, float* %target, align 4
  %152 = load float, float* %s1, align 4
  %153 = fsub float %151, %152
  %154 = load float, float* %a2, align 4
  %155 = load float, float* %a1, align 4
  %156 = fsub float %154, %155
  %157 = fmul float %153, %156
  %158 = load float, float* %s2, align 4
  %159 = load float, float* %s1, align 4
  %160 = fsub float %158, %159
  %161 = fdiv float %157, %160
  %162 = fadd float %150, %161
  store float %162, float* %t, align 4
  br label %168

; <label>:163                                     ; preds = %145
  %164 = load float, float* %a1, align 4
  %165 = load float, float* %a2, align 4
  %166 = fadd float %164, %165
  %167 = fmul float 5.000000e-01, %166
  store float %167, float* %t, align 4
  br label %168

; <label>:168                                     ; preds = %163, %149
  %169 = load i32, i32* %rootIterCount, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %rootIterCount, align 4
  %171 = load i32, i32* @b2_toiRootIters, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* @b2_toiRootIters, align 4
  %173 = load i32, i32* %indexA, align 4
  %174 = load i32, i32* %indexB, align 4
  %175 = load float, float* %t, align 4
  %176 = call float @_ZNK20b2SeparationFunction8EvaluateEiif(%struct.b2SeparationFunction* %fcn, i32 %173, i32 %174, float %175)
  store float %176, float* %s, align 4
  %177 = load float, float* %s, align 4
  %178 = load float, float* %target, align 4
  %179 = fsub float %177, %178
  %180 = call float @_Z5b2AbsIfET_S0_(float %179)
  %181 = load float, float* %tolerance, align 4
  %182 = fcmp olt float %180, %181
  br i1 %182, label %183, label %185

; <label>:183                                     ; preds = %168
  %184 = load float, float* %t, align 4
  store float %184, float* %t2, align 4
  br label %200

; <label>:185                                     ; preds = %168
  %186 = load float, float* %s, align 4
  %187 = load float, float* %target, align 4
  %188 = fcmp ogt float %186, %187
  br i1 %188, label %189, label %192

; <label>:189                                     ; preds = %185
  %190 = load float, float* %t, align 4
  store float %190, float* %a1, align 4
  %191 = load float, float* %s, align 4
  store float %191, float* %s1, align 4
  br label %195

; <label>:192                                     ; preds = %185
  %193 = load float, float* %t, align 4
  store float %193, float* %a2, align 4
  %194 = load float, float* %s, align 4
  store float %194, float* %s2, align 4
  br label %195

; <label>:195                                     ; preds = %192, %189
  %196 = load i32, i32* %rootIterCount, align 4
  %197 = icmp eq i32 %196, 50
  br i1 %197, label %198, label %199

; <label>:198                                     ; preds = %195
  br label %200

; <label>:199                                     ; preds = %195
  br label %145

; <label>:200                                     ; preds = %198, %183
  %201 = load i32, i32* @b2_toiMaxRootIters, align 4
  %202 = load i32, i32* %rootIterCount, align 4
  %203 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %201, i32 %202)
  store i32 %203, i32* @b2_toiMaxRootIters, align 4
  %204 = load i32, i32* %pushBackIter, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %pushBackIter, align 4
  %206 = load i32, i32* %pushBackIter, align 4
  %207 = icmp eq i32 %206, 8
  br i1 %207, label %208, label %209

; <label>:208                                     ; preds = %200
  br label %210

; <label>:209                                     ; preds = %200
  br label %92

; <label>:210                                     ; preds = %208, %136, %124, %112, %100
  %211 = load i32, i32* %iter, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %iter, align 4
  %213 = load i32, i32* @b2_toiIters, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* @b2_toiIters, align 4
  %215 = load i8, i8* %done, align 1
  %216 = trunc i8 %215 to i1
  br i1 %216, label %217, label %218

; <label>:217                                     ; preds = %210
  br label %228

; <label>:218                                     ; preds = %210
  %219 = load i32, i32* %iter, align 4
  %220 = icmp eq i32 %219, 20
  br i1 %220, label %221, label %227

; <label>:221                                     ; preds = %218
  %222 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %223 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %222, i32 0, i32 0
  store i32 1, i32* %223, align 4
  %224 = load float, float* %t1, align 4
  %225 = load %struct.b2TOIOutput*, %struct.b2TOIOutput** %1, align 8
  %226 = getelementptr inbounds %struct.b2TOIOutput, %struct.b2TOIOutput* %225, i32 0, i32 1
  store float %224, float* %226, align 4
  br label %228

; <label>:227                                     ; preds = %218
  br label %56

; <label>:228                                     ; preds = %221, %217, %80, %68
  %229 = load i32, i32* @b2_toiMaxIters, align 4
  %230 = load i32, i32* %iter, align 4
  %231 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %229, i32 %230)
  store i32 %231, i32* @b2_toiMaxIters, align 4
  %232 = call float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer)
  store float %232, float* %time, align 4
  %233 = load float, float* @b2_toiMaxTime, align 4
  %234 = load float, float* %time, align 4
  %235 = call float @_Z5b2MaxIfET_S0_S0_(float %233, float %234)
  store float %235, float* @b2_toiMaxTime, align 4
  %236 = load float, float* %time, align 4
  %237 = load float, float* @b2_toiTime, align 4
  %238 = fadd float %237, %236
  store float %238, float* @b2_toiTime, align 4
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN7b2Sweep9NormalizeEv(%struct.b2Sweep* %this) #5 comdat align 2 {
  %1 = alloca %struct.b2Sweep*, align 8
  %twoPi = alloca float, align 4
  %d = alloca float, align 4
  store %struct.b2Sweep* %this, %struct.b2Sweep** %1, align 8
  %2 = load %struct.b2Sweep*, %struct.b2Sweep** %1, align 8
  store float 0x401921FB60000000, float* %twoPi, align 4
  %3 = load float, float* %twoPi, align 4
  %4 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %2, i32 0, i32 3
  %5 = load float, float* %4, align 4
  %6 = load float, float* %twoPi, align 4
  %7 = fdiv float %5, %6
  %8 = call float @floorf(float %7) #11
  %9 = fmul float %3, %8
  store float %9, float* %d, align 4
  %10 = load float, float* %d, align 4
  %11 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %2, i32 0, i32 3
  %12 = load float, float* %11, align 4
  %13 = fsub float %12, %10
  store float %13, float* %11, align 4
  %14 = load float, float* %d, align 4
  %15 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %2, i32 0, i32 4
  %16 = load float, float* %15, align 4
  %17 = fsub float %16, %14
  store float %17, float* %15, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare float @floorf(float) #12

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %this, %struct.b2Transform* %xf, float %beta) #1 comdat align 2 {
  %1 = alloca %struct.b2Sweep*, align 8
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %angle = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  store %struct.b2Sweep* %this, %struct.b2Sweep** %1, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %2, align 8
  store float %beta, float* %3, align 4
  %8 = load %struct.b2Sweep*, %struct.b2Sweep** %1, align 8
  %9 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %10 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %9, i32 0, i32 0
  %11 = load float, float* %3, align 4
  %12 = fsub float 1.000000e+00, %11
  %13 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %8, i32 0, i32 1
  %14 = call <2 x float> @_ZmlfRK6b2Vec2(float %12, %struct.b2Vec2* dereferenceable(8) %13)
  %15 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %14, <2 x float>* %15, align 4
  %16 = load float, float* %3, align 4
  %17 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %8, i32 0, i32 2
  %18 = call <2 x float> @_ZmlfRK6b2Vec2(float %16, %struct.b2Vec2* dereferenceable(8) %17)
  %19 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %18, <2 x float>* %19, align 4
  %20 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %21 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %20, <2 x float>* %21, align 4
  %22 = bitcast %struct.b2Vec2* %10 to i8*
  %23 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  %24 = load float, float* %3, align 4
  %25 = fsub float 1.000000e+00, %24
  %26 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %8, i32 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = fmul float %25, %27
  %29 = load float, float* %3, align 4
  %30 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %8, i32 0, i32 4
  %31 = load float, float* %30, align 4
  %32 = fmul float %29, %31
  %33 = fadd float %28, %32
  store float %33, float* %angle, align 4
  %34 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %35 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %34, i32 0, i32 1
  %36 = load float, float* %angle, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %35, float %36)
  %37 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %38 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %37, i32 0, i32 0
  %39 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %40 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %39, i32 0, i32 1
  %41 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %8, i32 0, i32 0
  %42 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %40, %struct.b2Vec2* dereferenceable(8) %41)
  %43 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %42, <2 x float>* %43, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %38, %struct.b2Vec2* dereferenceable(8) %7)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN20b2SeparationFunctionC2Ev(%struct.b2SeparationFunction* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2SeparationFunction*, align 8
  store %struct.b2SeparationFunction* %this, %struct.b2SeparationFunction** %1, align 8
  %2 = load %struct.b2SeparationFunction*, %struct.b2SeparationFunction** %1, align 8
  %3 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %2, i32 0, i32 2
  call void @_ZN7b2SweepC2Ev(%struct.b2Sweep* %3)
  %4 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %2, i32 0, i32 3
  call void @_ZN7b2SweepC2Ev(%struct.b2Sweep* %4)
  %5 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %2, i32 0, i32 5
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %5)
  %6 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %2, i32 0, i32 6
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %6)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr float @_ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f(%struct.b2SeparationFunction* %this, %struct.b2SimplexCache* %cache, %struct.b2DistanceProxy* %proxyA, %struct.b2Sweep* dereferenceable(36) %sweepA, %struct.b2DistanceProxy* %proxyB, %struct.b2Sweep* dereferenceable(36) %sweepB, float %t1) #0 comdat align 2 {
  %1 = alloca float, align 4
  %2 = alloca %struct.b2SeparationFunction*, align 8
  %3 = alloca %struct.b2SimplexCache*, align 8
  %4 = alloca %struct.b2DistanceProxy*, align 8
  %5 = alloca %struct.b2Sweep*, align 8
  %6 = alloca %struct.b2DistanceProxy*, align 8
  %7 = alloca %struct.b2Sweep*, align 8
  %8 = alloca float, align 4
  %count = alloca i32, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %localPointA = alloca %struct.b2Vec2, align 4
  %localPointB = alloca %struct.b2Vec2, align 4
  %pointA = alloca %struct.b2Vec2, align 4
  %pointB = alloca %struct.b2Vec2, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %s = alloca float, align 4
  %localPointB1 = alloca %struct.b2Vec2, align 4
  %localPointB2 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %11 = alloca %struct.b2Vec2, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %pointB1 = alloca %struct.b2Vec2, align 4
  %localPointA2 = alloca %struct.b2Vec2, align 4
  %pointA3 = alloca %struct.b2Vec2, align 4
  %s4 = alloca float, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  %localPointA1 = alloca %struct.b2Vec2, align 4
  %localPointA25 = alloca %struct.b2Vec2, align 4
  %16 = alloca %struct.b2Vec2, align 4
  %17 = alloca %struct.b2Vec2, align 4
  %normal6 = alloca %struct.b2Vec2, align 4
  %18 = alloca %struct.b2Vec2, align 4
  %19 = alloca %struct.b2Vec2, align 4
  %pointA7 = alloca %struct.b2Vec2, align 4
  %localPointB8 = alloca %struct.b2Vec2, align 4
  %pointB9 = alloca %struct.b2Vec2, align 4
  %s10 = alloca float, align 4
  %20 = alloca %struct.b2Vec2, align 4
  %21 = alloca %struct.b2Vec2, align 4
  store %struct.b2SeparationFunction* %this, %struct.b2SeparationFunction** %2, align 8
  store %struct.b2SimplexCache* %cache, %struct.b2SimplexCache** %3, align 8
  store %struct.b2DistanceProxy* %proxyA, %struct.b2DistanceProxy** %4, align 8
  store %struct.b2Sweep* %sweepA, %struct.b2Sweep** %5, align 8
  store %struct.b2DistanceProxy* %proxyB, %struct.b2DistanceProxy** %6, align 8
  store %struct.b2Sweep* %sweepB, %struct.b2Sweep** %7, align 8
  store float %t1, float* %8, align 4
  %22 = load %struct.b2SeparationFunction*, %struct.b2SeparationFunction** %2, align 8
  %23 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %4, align 8
  %24 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 0
  store %struct.b2DistanceProxy* %23, %struct.b2DistanceProxy** %24, align 8
  %25 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %6, align 8
  %26 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 1
  store %struct.b2DistanceProxy* %25, %struct.b2DistanceProxy** %26, align 8
  %27 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %28 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %27, i32 0, i32 1
  %29 = load i16, i16* %28, align 4
  %30 = zext i16 %29 to i32
  store i32 %30, i32* %count, align 4
  %31 = load i32, i32* %count, align 4
  %32 = icmp slt i32 0, %31
  br i1 %32, label %33, label %37

; <label>:33                                      ; preds = %0
  %34 = load i32, i32* %count, align 4
  %35 = icmp slt i32 %34, 3
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %33
  br label %39

; <label>:37                                      ; preds = %33, %0
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.477, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1.476, i32 0, i32 0), i32 52, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @__PRETTY_FUNCTION__._ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %39

; <label>:39                                      ; preds = %38, %36
  %40 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 2
  %41 = load %struct.b2Sweep*, %struct.b2Sweep** %5, align 8
  %42 = bitcast %struct.b2Sweep* %40 to i8*
  %43 = bitcast %struct.b2Sweep* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 36, i32 4, i1 false)
  %44 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 3
  %45 = load %struct.b2Sweep*, %struct.b2Sweep** %7, align 8
  %46 = bitcast %struct.b2Sweep* %44 to i8*
  %47 = bitcast %struct.b2Sweep* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 36, i32 4, i1 false)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %48 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 2
  %49 = load float, float* %8, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %48, %struct.b2Transform* %xfA, float %49)
  %50 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 3
  %51 = load float, float* %8, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %50, %struct.b2Transform* %xfB, float %51)
  %52 = load i32, i32* %count, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %88

; <label>:54                                      ; preds = %39
  %55 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 4
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 0
  %57 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %56, align 8
  %58 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %59 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %58, i32 0, i32 2
  %60 = getelementptr inbounds [3 x i8], [3 x i8]* %59, i64 0, i64 0
  %61 = load i8, i8* %60, align 2
  %62 = zext i8 %61 to i32
  %63 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %57, i32 %62)
  %64 = bitcast %struct.b2Vec2* %localPointA to i8*
  %65 = bitcast %struct.b2Vec2* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 4, i1 false)
  %66 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 1
  %67 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %66, align 8
  %68 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %69 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %68, i32 0, i32 3
  %70 = getelementptr inbounds [3 x i8], [3 x i8]* %69, i64 0, i64 0
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %67, i32 %72)
  %74 = bitcast %struct.b2Vec2* %localPointB to i8*
  %75 = bitcast %struct.b2Vec2* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 4, i1 false)
  %76 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %localPointA)
  %77 = bitcast %struct.b2Vec2* %pointA to <2 x float>*
  store <2 x float> %76, <2 x float>* %77, align 4
  %78 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %localPointB)
  %79 = bitcast %struct.b2Vec2* %pointB to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %81 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %pointA)
  %82 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %81, <2 x float>* %82, align 4
  %83 = bitcast %struct.b2Vec2* %80 to i8*
  %84 = bitcast %struct.b2Vec2* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 4, i1 false)
  %85 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %86 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %85)
  store float %86, float* %s, align 4
  %87 = load float, float* %s, align 4
  store float %87, float* %1, align 4
  br label %243

; <label>:88                                      ; preds = %39
  %89 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %90 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %89, i32 0, i32 2
  %91 = getelementptr inbounds [3 x i8], [3 x i8]* %90, i64 0, i64 0
  %92 = load i8, i8* %91, align 2
  %93 = zext i8 %92 to i32
  %94 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %95 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %94, i32 0, i32 2
  %96 = getelementptr inbounds [3 x i8], [3 x i8]* %95, i64 0, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %93, %98
  br i1 %99, label %100, label %170

; <label>:100                                     ; preds = %88
  %101 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 4
  store i32 2, i32* %101, align 8
  %102 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %6, align 8
  %103 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %104 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %103, i32 0, i32 3
  %105 = getelementptr inbounds [3 x i8], [3 x i8]* %104, i64 0, i64 0
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %102, i32 %107)
  %109 = bitcast %struct.b2Vec2* %localPointB1 to i8*
  %110 = bitcast %struct.b2Vec2* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 4, i1 false)
  %111 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %6, align 8
  %112 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %113 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %112, i32 0, i32 3
  %114 = getelementptr inbounds [3 x i8], [3 x i8]* %113, i64 0, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %111, i32 %116)
  %118 = bitcast %struct.b2Vec2* %localPointB2 to i8*
  %119 = bitcast %struct.b2Vec2* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 4, i1 false)
  %120 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %121 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %localPointB2, %struct.b2Vec2* dereferenceable(8) %localPointB1)
  %122 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %121, <2 x float>* %122, align 4
  %123 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %11, float 1.000000e+00)
  %124 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %123, <2 x float>* %124, align 4
  %125 = bitcast %struct.b2Vec2* %120 to i8*
  %126 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 4, i1 false)
  %127 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %128 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %127)
  %129 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %130 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %131 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %129, %struct.b2Vec2* dereferenceable(8) %130)
  %132 = bitcast %struct.b2Vec2* %normal to <2 x float>*
  store <2 x float> %131, <2 x float>* %132, align 4
  %133 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 5
  %134 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %localPointB1, %struct.b2Vec2* dereferenceable(8) %localPointB2)
  %135 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %13)
  %137 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %136, <2 x float>* %137, align 4
  %138 = bitcast %struct.b2Vec2* %133 to i8*
  %139 = bitcast %struct.b2Vec2* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 4, i1 false)
  %140 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 5
  %141 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %140)
  %142 = bitcast %struct.b2Vec2* %pointB1 to <2 x float>*
  store <2 x float> %141, <2 x float>* %142, align 4
  %143 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %4, align 8
  %144 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %145 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %144, i32 0, i32 2
  %146 = getelementptr inbounds [3 x i8], [3 x i8]* %145, i64 0, i64 0
  %147 = load i8, i8* %146, align 2
  %148 = zext i8 %147 to i32
  %149 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %143, i32 %148)
  %150 = bitcast %struct.b2Vec2* %localPointA2 to i8*
  %151 = bitcast %struct.b2Vec2* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 4, i1 false)
  %152 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %localPointA2)
  %153 = bitcast %struct.b2Vec2* %pointA3 to <2 x float>*
  store <2 x float> %152, <2 x float>* %153, align 4
  %154 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointA3, %struct.b2Vec2* dereferenceable(8) %pointB1)
  %155 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %154, <2 x float>* %155, align 4
  %156 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %14, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %156, float* %s4, align 4
  %157 = load float, float* %s4, align 4
  %158 = fcmp olt float %157, 0.000000e+00
  br i1 %158, label %159, label %168

; <label>:159                                     ; preds = %100
  %160 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %161 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %162 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %161)
  %163 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 4
  %164 = bitcast %struct.b2Vec2* %160 to i8*
  %165 = bitcast %struct.b2Vec2* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 8, i32 4, i1 false)
  %166 = load float, float* %s4, align 4
  %167 = fsub float -0.000000e+00, %166
  store float %167, float* %s4, align 4
  br label %168

; <label>:168                                     ; preds = %159, %100
  %169 = load float, float* %s4, align 4
  store float %169, float* %1, align 4
  br label %243

; <label>:170                                     ; preds = %88
  %171 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 4
  store i32 1, i32* %171, align 8
  %172 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 0
  %173 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %172, align 8
  %174 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %175 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %174, i32 0, i32 2
  %176 = getelementptr inbounds [3 x i8], [3 x i8]* %175, i64 0, i64 0
  %177 = load i8, i8* %176, align 2
  %178 = zext i8 %177 to i32
  %179 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %173, i32 %178)
  %180 = bitcast %struct.b2Vec2* %localPointA1 to i8*
  %181 = bitcast %struct.b2Vec2* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %180, i8* %181, i64 8, i32 4, i1 false)
  %182 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 0
  %183 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %182, align 8
  %184 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %185 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %184, i32 0, i32 2
  %186 = getelementptr inbounds [3 x i8], [3 x i8]* %185, i64 0, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %183, i32 %188)
  %190 = bitcast %struct.b2Vec2* %localPointA25 to i8*
  %191 = bitcast %struct.b2Vec2* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %191, i64 8, i32 4, i1 false)
  %192 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %193 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %localPointA25, %struct.b2Vec2* dereferenceable(8) %localPointA1)
  %194 = bitcast %struct.b2Vec2* %17 to <2 x float>*
  store <2 x float> %193, <2 x float>* %194, align 4
  %195 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %17, float 1.000000e+00)
  %196 = bitcast %struct.b2Vec2* %16 to <2 x float>*
  store <2 x float> %195, <2 x float>* %196, align 4
  %197 = bitcast %struct.b2Vec2* %192 to i8*
  %198 = bitcast %struct.b2Vec2* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 8, i32 4, i1 false)
  %199 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %200 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %199)
  %201 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %202 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %203 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %201, %struct.b2Vec2* dereferenceable(8) %202)
  %204 = bitcast %struct.b2Vec2* %normal6 to <2 x float>*
  store <2 x float> %203, <2 x float>* %204, align 4
  %205 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 5
  %206 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %localPointA1, %struct.b2Vec2* dereferenceable(8) %localPointA25)
  %207 = bitcast %struct.b2Vec2* %19 to <2 x float>*
  store <2 x float> %206, <2 x float>* %207, align 4
  %208 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %19)
  %209 = bitcast %struct.b2Vec2* %18 to <2 x float>*
  store <2 x float> %208, <2 x float>* %209, align 4
  %210 = bitcast %struct.b2Vec2* %205 to i8*
  %211 = bitcast %struct.b2Vec2* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 8, i32 4, i1 false)
  %212 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 5
  %213 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %212)
  %214 = bitcast %struct.b2Vec2* %pointA7 to <2 x float>*
  store <2 x float> %213, <2 x float>* %214, align 4
  %215 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 1
  %216 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %215, align 8
  %217 = load %struct.b2SimplexCache*, %struct.b2SimplexCache** %3, align 8
  %218 = getelementptr inbounds %struct.b2SimplexCache, %struct.b2SimplexCache* %217, i32 0, i32 3
  %219 = getelementptr inbounds [3 x i8], [3 x i8]* %218, i64 0, i64 0
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %216, i32 %221)
  %223 = bitcast %struct.b2Vec2* %localPointB8 to i8*
  %224 = bitcast %struct.b2Vec2* %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %223, i8* %224, i64 8, i32 4, i1 false)
  %225 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %localPointB8)
  %226 = bitcast %struct.b2Vec2* %pointB9 to <2 x float>*
  store <2 x float> %225, <2 x float>* %226, align 4
  %227 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB9, %struct.b2Vec2* dereferenceable(8) %pointA7)
  %228 = bitcast %struct.b2Vec2* %20 to <2 x float>*
  store <2 x float> %227, <2 x float>* %228, align 4
  %229 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %normal6)
  store float %229, float* %s10, align 4
  %230 = load float, float* %s10, align 4
  %231 = fcmp olt float %230, 0.000000e+00
  br i1 %231, label %232, label %241

; <label>:232                                     ; preds = %170
  %233 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %234 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %22, i32 0, i32 6
  %235 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %234)
  %236 = bitcast %struct.b2Vec2* %21 to <2 x float>*
  store <2 x float> %235, <2 x float>* %236, align 4
  %237 = bitcast %struct.b2Vec2* %233 to i8*
  %238 = bitcast %struct.b2Vec2* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 8, i32 4, i1 false)
  %239 = load float, float* %s10, align 4
  %240 = fsub float -0.000000e+00, %239
  store float %240, float* %s10, align 4
  br label %241

; <label>:241                                     ; preds = %232, %170
  %242 = load float, float* %s10, align 4
  store float %242, float* %1, align 4
  br label %243

; <label>:243                                     ; preds = %241, %168, %54
  %244 = load float, float* %1, align 4
  ret float %244
}

; Function Attrs: uwtable
define linkonce_odr float @_ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f(%struct.b2SeparationFunction* %this, i32* %indexA, i32* %indexB, float %t) #0 comdat align 2 {
  %1 = alloca float, align 4
  %2 = alloca %struct.b2SeparationFunction*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca float, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %axisA = alloca %struct.b2Vec2, align 4
  %axisB = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %localPointA = alloca %struct.b2Vec2, align 4
  %localPointB = alloca %struct.b2Vec2, align 4
  %pointA = alloca %struct.b2Vec2, align 4
  %pointB = alloca %struct.b2Vec2, align 4
  %separation = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %pointA1 = alloca %struct.b2Vec2, align 4
  %axisB2 = alloca %struct.b2Vec2, align 4
  %8 = alloca %struct.b2Vec2, align 4
  %localPointB3 = alloca %struct.b2Vec2, align 4
  %pointB4 = alloca %struct.b2Vec2, align 4
  %separation5 = alloca float, align 4
  %9 = alloca %struct.b2Vec2, align 4
  %normal6 = alloca %struct.b2Vec2, align 4
  %pointB7 = alloca %struct.b2Vec2, align 4
  %axisA8 = alloca %struct.b2Vec2, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %localPointA9 = alloca %struct.b2Vec2, align 4
  %pointA10 = alloca %struct.b2Vec2, align 4
  %separation11 = alloca float, align 4
  %11 = alloca %struct.b2Vec2, align 4
  store %struct.b2SeparationFunction* %this, %struct.b2SeparationFunction** %2, align 8
  store i32* %indexA, i32** %3, align 8
  store i32* %indexB, i32** %4, align 8
  store float %t, float* %5, align 4
  %12 = load %struct.b2SeparationFunction*, %struct.b2SeparationFunction** %2, align 8
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %13 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 2
  %14 = load float, float* %5, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %13, %struct.b2Transform* %xfA, float %14)
  %15 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 3
  %16 = load float, float* %5, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %15, %struct.b2Transform* %xfB, float %16)
  %17 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 4
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %123 [
    i32 0, label %19
    i32 1, label %61
    i32 2, label %92
  ]

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %21 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 6
  %22 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %21)
  %23 = bitcast %struct.b2Vec2* %axisA to <2 x float>*
  store <2 x float> %22, <2 x float>* %23, align 4
  %24 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %25 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 6
  %26 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %25)
  %27 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %26, <2 x float>* %27, align 4
  %28 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %24, %struct.b2Vec2* dereferenceable(8) %6)
  %29 = bitcast %struct.b2Vec2* %axisB to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 0
  %31 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %30, align 8
  %32 = call i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %31, %struct.b2Vec2* dereferenceable(8) %axisA)
  %33 = load i32*, i32** %3, align 8
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 1
  %35 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %34, align 8
  %36 = call i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %35, %struct.b2Vec2* dereferenceable(8) %axisB)
  %37 = load i32*, i32** %4, align 8
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 0
  %39 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %38, align 8
  %40 = load i32*, i32** %3, align 8
  %41 = load i32, i32* %40, align 4
  %42 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %39, i32 %41)
  %43 = bitcast %struct.b2Vec2* %localPointA to i8*
  %44 = bitcast %struct.b2Vec2* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 4, i1 false)
  %45 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 1
  %46 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %45, align 8
  %47 = load i32*, i32** %4, align 8
  %48 = load i32, i32* %47, align 4
  %49 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %46, i32 %48)
  %50 = bitcast %struct.b2Vec2* %localPointB to i8*
  %51 = bitcast %struct.b2Vec2* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 4, i1 false)
  %52 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %localPointA)
  %53 = bitcast %struct.b2Vec2* %pointA to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %localPointB)
  %55 = bitcast %struct.b2Vec2* %pointB to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 4
  %56 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %pointA)
  %57 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  %58 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 6
  %59 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %58)
  store float %59, float* %separation, align 4
  %60 = load float, float* %separation, align 4
  store float %60, float* %1, align 4
  br label %124

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %63 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 6
  %64 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %62, %struct.b2Vec2* dereferenceable(8) %63)
  %65 = bitcast %struct.b2Vec2* %normal to <2 x float>*
  store <2 x float> %64, <2 x float>* %65, align 4
  %66 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 5
  %67 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %66)
  %68 = bitcast %struct.b2Vec2* %pointA1 to <2 x float>*
  store <2 x float> %67, <2 x float>* %68, align 4
  %69 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %70 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %normal)
  %71 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 4
  %72 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %69, %struct.b2Vec2* dereferenceable(8) %8)
  %73 = bitcast %struct.b2Vec2* %axisB2 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = load i32*, i32** %3, align 8
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 1
  %76 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %75, align 8
  %77 = call i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %76, %struct.b2Vec2* dereferenceable(8) %axisB2)
  %78 = load i32*, i32** %4, align 8
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 1
  %80 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %79, align 8
  %81 = load i32*, i32** %4, align 8
  %82 = load i32, i32* %81, align 4
  %83 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %80, i32 %82)
  %84 = bitcast %struct.b2Vec2* %localPointB3 to i8*
  %85 = bitcast %struct.b2Vec2* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 4, i1 false)
  %86 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %localPointB3)
  %87 = bitcast %struct.b2Vec2* %pointB4 to <2 x float>*
  store <2 x float> %86, <2 x float>* %87, align 4
  %88 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB4, %struct.b2Vec2* dereferenceable(8) %pointA1)
  %89 = bitcast %struct.b2Vec2* %9 to <2 x float>*
  store <2 x float> %88, <2 x float>* %89, align 4
  %90 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %9, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %90, float* %separation5, align 4
  %91 = load float, float* %separation5, align 4
  store float %91, float* %1, align 4
  br label %124

; <label>:92                                      ; preds = %0
  %93 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %94 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 6
  %95 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %93, %struct.b2Vec2* dereferenceable(8) %94)
  %96 = bitcast %struct.b2Vec2* %normal6 to <2 x float>*
  store <2 x float> %95, <2 x float>* %96, align 4
  %97 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 5
  %98 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %97)
  %99 = bitcast %struct.b2Vec2* %pointB7 to <2 x float>*
  store <2 x float> %98, <2 x float>* %99, align 4
  %100 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %101 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %normal6)
  %102 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %101, <2 x float>* %102, align 4
  %103 = call <2 x float> @_Z6b2MulTRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %100, %struct.b2Vec2* dereferenceable(8) %10)
  %104 = bitcast %struct.b2Vec2* %axisA8 to <2 x float>*
  store <2 x float> %103, <2 x float>* %104, align 4
  %105 = load i32*, i32** %4, align 8
  store i32 -1, i32* %105, align 4
  %106 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 0
  %107 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %106, align 8
  %108 = call i32 @_ZNK15b2DistanceProxy10GetSupportERK6b2Vec2(%struct.b2DistanceProxy* %107, %struct.b2Vec2* dereferenceable(8) %axisA8)
  %109 = load i32*, i32** %3, align 8
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %12, i32 0, i32 0
  %111 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %110, align 8
  %112 = load i32*, i32** %3, align 8
  %113 = load i32, i32* %112, align 4
  %114 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %111, i32 %113)
  %115 = bitcast %struct.b2Vec2* %localPointA9 to i8*
  %116 = bitcast %struct.b2Vec2* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 8, i32 4, i1 false)
  %117 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %localPointA9)
  %118 = bitcast %struct.b2Vec2* %pointA10 to <2 x float>*
  store <2 x float> %117, <2 x float>* %118, align 4
  %119 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointA10, %struct.b2Vec2* dereferenceable(8) %pointB7)
  %120 = bitcast %struct.b2Vec2* %11 to <2 x float>*
  store <2 x float> %119, <2 x float>* %120, align 4
  %121 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %normal6)
  store float %121, float* %separation11, align 4
  %122 = load float, float* %separation11, align 4
  store float %122, float* %1, align 4
  br label %124

; <label>:123                                     ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.478, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1.476, i32 0, i32 0), i32 186, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f, i32 0, i32 0)) #15
  unreachable

; <label>:124                                     ; preds = %92, %61, %19
  %125 = load float, float* %1, align 4
  ret float %125
}

; Function Attrs: uwtable
define linkonce_odr float @_ZNK20b2SeparationFunction8EvaluateEiif(%struct.b2SeparationFunction* %this, i32 %indexA, i32 %indexB, float %t) #0 comdat align 2 {
  %1 = alloca float, align 4
  %2 = alloca %struct.b2SeparationFunction*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca float, align 4
  %xfA = alloca %struct.b2Transform, align 4
  %xfB = alloca %struct.b2Transform, align 4
  %localPointA = alloca %struct.b2Vec2, align 4
  %localPointB = alloca %struct.b2Vec2, align 4
  %pointA = alloca %struct.b2Vec2, align 4
  %pointB = alloca %struct.b2Vec2, align 4
  %separation = alloca float, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %pointA1 = alloca %struct.b2Vec2, align 4
  %localPointB2 = alloca %struct.b2Vec2, align 4
  %pointB3 = alloca %struct.b2Vec2, align 4
  %separation4 = alloca float, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %normal5 = alloca %struct.b2Vec2, align 4
  %pointB6 = alloca %struct.b2Vec2, align 4
  %localPointA7 = alloca %struct.b2Vec2, align 4
  %pointA8 = alloca %struct.b2Vec2, align 4
  %separation9 = alloca float, align 4
  %8 = alloca %struct.b2Vec2, align 4
  store %struct.b2SeparationFunction* %this, %struct.b2SeparationFunction** %2, align 8
  store i32 %indexA, i32* %3, align 4
  store i32 %indexB, i32* %4, align 4
  store float %t, float* %5, align 4
  %9 = load %struct.b2SeparationFunction*, %struct.b2SeparationFunction** %2, align 8
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfA)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xfB)
  %10 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 2
  %11 = load float, float* %5, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %10, %struct.b2Transform* %xfA, float %11)
  %12 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 3
  %13 = load float, float* %5, align 4
  call void @_ZNK7b2Sweep12GetTransformEP11b2Transformf(%struct.b2Sweep* %12, %struct.b2Transform* %xfB, float %13)
  %14 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 4
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %78 [
    i32 0, label %16
    i32 1, label %38
    i32 2, label %58
  ]

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 0
  %18 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %17, align 8
  %19 = load i32, i32* %3, align 4
  %20 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %18, i32 %19)
  %21 = bitcast %struct.b2Vec2* %localPointA to i8*
  %22 = bitcast %struct.b2Vec2* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 1
  %24 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %23, align 8
  %25 = load i32, i32* %4, align 4
  %26 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %24, i32 %25)
  %27 = bitcast %struct.b2Vec2* %localPointB to i8*
  %28 = bitcast %struct.b2Vec2* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false)
  %29 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %localPointA)
  %30 = bitcast %struct.b2Vec2* %pointA to <2 x float>*
  store <2 x float> %29, <2 x float>* %30, align 4
  %31 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %localPointB)
  %32 = bitcast %struct.b2Vec2* %pointB to <2 x float>*
  store <2 x float> %31, <2 x float>* %32, align 4
  %33 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB, %struct.b2Vec2* dereferenceable(8) %pointA)
  %34 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %33, <2 x float>* %34, align 4
  %35 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 6
  %36 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %35)
  store float %36, float* %separation, align 4
  %37 = load float, float* %separation, align 4
  store float %37, float* %1, align 4
  br label %79

; <label>:38                                      ; preds = %0
  %39 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfA, i32 0, i32 1
  %40 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 6
  %41 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %39, %struct.b2Vec2* dereferenceable(8) %40)
  %42 = bitcast %struct.b2Vec2* %normal to <2 x float>*
  store <2 x float> %41, <2 x float>* %42, align 4
  %43 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 5
  %44 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %43)
  %45 = bitcast %struct.b2Vec2* %pointA1 to <2 x float>*
  store <2 x float> %44, <2 x float>* %45, align 4
  %46 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 1
  %47 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %46, align 8
  %48 = load i32, i32* %4, align 4
  %49 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %47, i32 %48)
  %50 = bitcast %struct.b2Vec2* %localPointB2 to i8*
  %51 = bitcast %struct.b2Vec2* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 4, i1 false)
  %52 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %localPointB2)
  %53 = bitcast %struct.b2Vec2* %pointB3 to <2 x float>*
  store <2 x float> %52, <2 x float>* %53, align 4
  %54 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointB3, %struct.b2Vec2* dereferenceable(8) %pointA1)
  %55 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 4
  %56 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %7, %struct.b2Vec2* dereferenceable(8) %normal)
  store float %56, float* %separation4, align 4
  %57 = load float, float* %separation4, align 4
  store float %57, float* %1, align 4
  br label %79

; <label>:58                                      ; preds = %0
  %59 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xfB, i32 0, i32 1
  %60 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 6
  %61 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %59, %struct.b2Vec2* dereferenceable(8) %60)
  %62 = bitcast %struct.b2Vec2* %normal5 to <2 x float>*
  store <2 x float> %61, <2 x float>* %62, align 4
  %63 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 5
  %64 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfB, %struct.b2Vec2* dereferenceable(8) %63)
  %65 = bitcast %struct.b2Vec2* %pointB6 to <2 x float>*
  store <2 x float> %64, <2 x float>* %65, align 4
  %66 = getelementptr inbounds %struct.b2SeparationFunction, %struct.b2SeparationFunction* %9, i32 0, i32 0
  %67 = load %struct.b2DistanceProxy*, %struct.b2DistanceProxy** %66, align 8
  %68 = load i32, i32* %3, align 4
  %69 = call dereferenceable(8) %struct.b2Vec2* @_ZNK15b2DistanceProxy9GetVertexEi(%struct.b2DistanceProxy* %67, i32 %68)
  %70 = bitcast %struct.b2Vec2* %localPointA7 to i8*
  %71 = bitcast %struct.b2Vec2* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 4, i1 false)
  %72 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xfA, %struct.b2Vec2* dereferenceable(8) %localPointA7)
  %73 = bitcast %struct.b2Vec2* %pointA8 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 4
  %74 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %pointA8, %struct.b2Vec2* dereferenceable(8) %pointB6)
  %75 = bitcast %struct.b2Vec2* %8 to <2 x float>*
  store <2 x float> %74, <2 x float>* %75, align 4
  %76 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %8, %struct.b2Vec2* dereferenceable(8) %normal5)
  store float %76, float* %separation9, align 4
  %77 = load float, float* %separation9, align 4
  store float %77, float* %1, align 4
  br label %79

; <label>:78                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.478, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1.476, i32 0, i32 0), i32 239, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZNK20b2SeparationFunction8EvaluateEiif, i32 0, i32 0)) #15
  unreachable

; <label>:79                                      ; preds = %58, %38, %16
  %80 = load float, float* %1, align 4
  ret float %80
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN6b2Body7AdvanceEf(%class.b2Body* %this, float %alpha) #1 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  %2 = alloca float, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  store float %alpha, float* %2, align 4
  %5 = load %class.b2Body*, %class.b2Body** %1, align 8
  %6 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %7 = load float, float* %2, align 4
  call void @_ZN7b2Sweep7AdvanceEf(%struct.b2Sweep* %6, float %7)
  %8 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %9 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %8, i32 0, i32 2
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %11 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %10, i32 0, i32 1
  %12 = bitcast %struct.b2Vec2* %9 to i8*
  %13 = bitcast %struct.b2Vec2* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %15 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %14, i32 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %18 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %17, i32 0, i32 4
  store float %16, float* %18, align 4
  %19 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %20 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %19, i32 0, i32 1
  %21 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %22 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %21, i32 0, i32 4
  %23 = load float, float* %22, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %20, float %23)
  %24 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %25 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %24, i32 0, i32 0
  %26 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %27 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %26, i32 0, i32 2
  %28 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 3
  %29 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %28, i32 0, i32 1
  %30 = getelementptr inbounds %class.b2Body, %class.b2Body* %5, i32 0, i32 4
  %31 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %30, i32 0, i32 0
  %32 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %29, %struct.b2Vec2* dereferenceable(8) %31)
  %33 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  %34 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %27, %struct.b2Vec2* dereferenceable(8) %4)
  %35 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = bitcast %struct.b2Vec2* %25 to i8*
  %37 = bitcast %struct.b2Vec2* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN9b2Contact10SetEnabledEb(%class.b2Contact* %this, i1 zeroext %flag) #5 comdat align 2 {
  %1 = alloca %class.b2Contact*, align 8
  %2 = alloca i8, align 1
  store %class.b2Contact* %this, %class.b2Contact** %1, align 8
  %3 = zext i1 %flag to i8
  store i8 %3, i8* %2, align 1
  %4 = load %class.b2Contact*, %class.b2Contact** %1, align 8
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  br i1 %6, label %7, label %11

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %4, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = or i32 %9, 4
  store i32 %10, i32* %8, align 8
  br label %15

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %class.b2Contact, %class.b2Contact* %4, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, -5
  store i32 %14, i32* %12, align 8
  br label %15

; <label>:15                                      ; preds = %11, %7
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World4StepEfii(%class.b2World* %this, float %dt, i32 %velocityIterations, i32 %positionIterations) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca float, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %stepTimer = alloca %class.b2Timer, align 8
  %step = alloca %struct.b2TimeStep, align 4
  %timer = alloca %class.b2Timer, align 8
  %timer1 = alloca %class.b2Timer, align 8
  %timer2 = alloca %class.b2Timer, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store float %dt, float* %2, align 4
  store i32 %velocityIterations, i32* %3, align 4
  store i32 %positionIterations, i32* %4, align 4
  %5 = load %class.b2World*, %class.b2World** %1, align 8
  call void @_ZN7b2TimerC1Ev(%class.b2Timer* %stepTimer)
  %6 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %15

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  call void @_ZN16b2ContactManager15FindNewContactsEv(%class.b2ContactManager* %11)
  %12 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, -2
  store i32 %14, i32* %12, align 8
  br label %15

; <label>:15                                      ; preds = %10, %0
  %16 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = or i32 %17, 2
  store i32 %18, i32* %16, align 8
  %19 = load float, float* %2, align 4
  %20 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 0
  store float %19, float* %20, align 4
  %21 = load i32, i32* %3, align 4
  %22 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 3
  store i32 %21, i32* %22, align 4
  %23 = load i32, i32* %4, align 4
  %24 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 4
  store i32 %23, i32* %24, align 4
  %25 = load float, float* %2, align 4
  %26 = fcmp ogt float %25, 0.000000e+00
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %15
  %28 = load float, float* %2, align 4
  %29 = fdiv float 1.000000e+00, %28
  %30 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 1
  store float %29, float* %30, align 4
  br label %33

; <label>:31                                      ; preds = %15
  %32 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 1
  store float 0.000000e+00, float* %32, align 4
  br label %33

; <label>:33                                      ; preds = %31, %27
  %34 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 12
  %35 = load float, float* %34, align 8
  %36 = load float, float* %2, align 4
  %37 = fmul float %35, %36
  %38 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 2
  store float %37, float* %38, align 4
  %39 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 13
  %40 = load i8, i8* %39, align 4
  %41 = trunc i8 %40 to i1
  %42 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 5
  %43 = zext i1 %41 to i8
  store i8 %43, i8* %42, align 4
  call void @_ZN7b2TimerC1Ev(%class.b2Timer* %timer)
  %44 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  call void @_ZN16b2ContactManager7CollideEv(%class.b2ContactManager* %44)
  %45 = call float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer)
  %46 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %47 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %46, i32 0, i32 1
  store float %45, float* %47, align 4
  %48 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 16
  %49 = load i8, i8* %48, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %59

; <label>:51                                      ; preds = %33
  %52 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = fcmp ogt float %53, 0.000000e+00
  br i1 %54, label %55, label %59

; <label>:55                                      ; preds = %51
  call void @_ZN7b2TimerC1Ev(%class.b2Timer* %timer1)
  call void @_ZN7b2World5SolveERK10b2TimeStep(%class.b2World* %5, %struct.b2TimeStep* dereferenceable(24) %step)
  %56 = call float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer1)
  %57 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %58 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %57, i32 0, i32 2
  store float %56, float* %58, align 8
  br label %59

; <label>:59                                      ; preds = %55, %51, %33
  %60 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 14
  %61 = load i8, i8* %60, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %71

; <label>:63                                      ; preds = %59
  %64 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 0
  %65 = load float, float* %64, align 4
  %66 = fcmp ogt float %65, 0.000000e+00
  br i1 %66, label %67, label %71

; <label>:67                                      ; preds = %63
  call void @_ZN7b2TimerC1Ev(%class.b2Timer* %timer2)
  call void @_ZN7b2World8SolveTOIERK10b2TimeStep(%class.b2World* %5, %struct.b2TimeStep* dereferenceable(24) %step)
  %68 = call float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %timer2)
  %69 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %70 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %69, i32 0, i32 7
  store float %68, float* %70, align 4
  br label %71

; <label>:71                                      ; preds = %67, %63, %59
  %72 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fcmp ogt float %73, 0.000000e+00
  br i1 %74, label %75, label %79

; <label>:75                                      ; preds = %71
  %76 = getelementptr inbounds %struct.b2TimeStep, %struct.b2TimeStep* %step, i32 0, i32 1
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 12
  store float %77, float* %78, align 8
  br label %79

; <label>:79                                      ; preds = %75, %71
  %80 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 2
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %79
  call void @_ZN7b2World11ClearForcesEv(%class.b2World* %5)
  br label %85

; <label>:85                                      ; preds = %84, %79
  %86 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, -3
  store i32 %88, i32* %86, align 8
  %89 = call float @_ZNK7b2Timer15GetMillisecondsEv(%class.b2Timer* %stepTimer)
  %90 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 17
  %91 = getelementptr inbounds %struct.b2Profile, %struct.b2Profile* %90, i32 0, i32 0
  store float %89, float* %91, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World11ClearForcesEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %body = alloca %class.b2Body*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 4
  %4 = load %class.b2Body*, %class.b2Body** %3, align 8
  store %class.b2Body* %4, %class.b2Body** %body, align 8
  br label %5

; <label>:5                                       ; preds = %13, %0
  %6 = load %class.b2Body*, %class.b2Body** %body, align 8
  %7 = icmp ne %class.b2Body* %6, null
  br i1 %7, label %8, label %16

; <label>:8                                       ; preds = %5
  %9 = load %class.b2Body*, %class.b2Body** %body, align 8
  %10 = getelementptr inbounds %class.b2Body, %class.b2Body* %9, i32 0, i32 7
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %10)
  %11 = load %class.b2Body*, %class.b2Body** %body, align 8
  %12 = getelementptr inbounds %class.b2Body, %class.b2Body* %11, i32 0, i32 8
  store float 0.000000e+00, float* %12, align 4
  br label %13

; <label>:13                                      ; preds = %8
  %14 = load %class.b2Body*, %class.b2Body** %body, align 8
  %15 = call %class.b2Body* @_ZN6b2Body7GetNextEv(%class.b2Body* %14)
  store %class.b2Body* %15, %class.b2Body** %body, align 8
  br label %5

; <label>:16                                      ; preds = %5
  ret void
}

; Function Attrs: uwtable
define void @_ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB(%class.b2World* %this, %class.b2ContactFilter* %callback, %struct.b2Transform* dereferenceable(16) %aabb) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2ContactFilter*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %wrapper = alloca %struct.b2WorldQueryWrapper, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2ContactFilter* %callback, %class.b2ContactFilter** %2, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %3, align 8
  %4 = load %class.b2World*, %class.b2World** %1, align 8
  %5 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 3
  %6 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %wrapper, i32 0, i32 0
  store %class.b2BroadPhase* %6, %class.b2BroadPhase** %7, align 8
  %8 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %9 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %wrapper, i32 0, i32 1
  store %class.b2ContactFilter* %8, %class.b2ContactFilter** %9, align 8
  %10 = getelementptr inbounds %class.b2World, %class.b2World* %4, i32 0, i32 3
  %11 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %10, i32 0, i32 0
  %12 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  call void @_ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB(%class.b2BroadPhase* %11, %struct.b2WorldQueryWrapper* %wrapper, %struct.b2Transform* dereferenceable(16) %12)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB(%class.b2BroadPhase* %this, %struct.b2WorldQueryWrapper* %callback, %struct.b2Transform* dereferenceable(16) %aabb) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca %struct.b2WorldQueryWrapper*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store %struct.b2WorldQueryWrapper* %callback, %struct.b2WorldQueryWrapper** %2, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %3, align 8
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  %6 = load %struct.b2WorldQueryWrapper*, %struct.b2WorldQueryWrapper** %2, align 8
  %7 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  call void @_ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB(%class.b2DynamicTree* %5, %struct.b2WorldQueryWrapper* %6, %struct.b2Transform* dereferenceable(16) %7)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB(%class.b2DynamicTree* %this, %struct.b2WorldQueryWrapper* %callback, %struct.b2Transform* dereferenceable(16) %aabb) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca %struct.b2WorldQueryWrapper*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %stack = alloca %class.b2GrowableStack, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %nodeId = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %proceed = alloca i8, align 1
  %6 = alloca i32
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store %struct.b2WorldQueryWrapper* %callback, %struct.b2WorldQueryWrapper** %2, align 8
  store %struct.b2Transform* %aabb, %struct.b2Transform** %3, align 8
  %7 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  call void @_ZN15b2GrowableStackIiLi256EEC2Ev(%class.b2GrowableStack* %stack)
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %7, i32 0, i32 0
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %8)
          to label %9 unwind label %20

; <label>:9                                       ; preds = %0
  br label %10

; <label>:10                                      ; preds = %59, %19, %9
  %11 = invoke i32 @_ZN15b2GrowableStackIiLi256EE8GetCountEv(%class.b2GrowableStack* %stack)
          to label %12 unwind label %20

; <label>:12                                      ; preds = %10
  %13 = icmp sgt i32 %11, 0
  br i1 %13, label %14, label %60

; <label>:14                                      ; preds = %12
  %15 = invoke i32 @_ZN15b2GrowableStackIiLi256EE3PopEv(%class.b2GrowableStack* %stack)
          to label %16 unwind label %20

; <label>:16                                      ; preds = %14
  store i32 %15, i32* %nodeId, align 4
  %17 = load i32, i32* %nodeId, align 4
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %24

; <label>:19                                      ; preds = %16
  br label %10

; <label>:20                                      ; preds = %54, %51, %39, %35, %24, %14, %10, %0
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %4, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %5, align 4
  invoke void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %stack)
          to label %63 unwind label %69

; <label>:24                                      ; preds = %16
  %25 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %7, i32 0, i32 2
  %26 = load %struct.b2TreeNode*, %struct.b2TreeNode** %25, align 8
  %27 = load i32, i32* %nodeId, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %26, i64 %28
  store %struct.b2TreeNode* %29, %struct.b2TreeNode** %node, align 8
  %30 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %31 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %30, i32 0, i32 0
  %32 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %33 = invoke zeroext i1 @_Z13b2TestOverlapRK6b2AABBS1_(%struct.b2Transform* dereferenceable(16) %31, %struct.b2Transform* dereferenceable(16) %32)
          to label %34 unwind label %20

; <label>:34                                      ; preds = %24
  br i1 %33, label %35, label %59

; <label>:35                                      ; preds = %34
  %36 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %37 = invoke zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %36)
          to label %38 unwind label %20

; <label>:38                                      ; preds = %35
  br i1 %37, label %39, label %51

; <label>:39                                      ; preds = %38
  %40 = load %struct.b2WorldQueryWrapper*, %struct.b2WorldQueryWrapper** %2, align 8
  %41 = load i32, i32* %nodeId, align 4
  %42 = invoke zeroext i1 @_ZN19b2WorldQueryWrapper13QueryCallbackEi(%struct.b2WorldQueryWrapper* %40, i32 %41)
          to label %43 unwind label %20

; <label>:43                                      ; preds = %39
  %44 = zext i1 %42 to i8
  store i8 %44, i8* %proceed, align 1
  %45 = load i8, i8* %proceed, align 1
  %46 = trunc i8 %45 to i1
  %47 = zext i1 %46 to i32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %43
  store i32 1, i32* %6, align 4
  br label %61

; <label>:50                                      ; preds = %43
  br label %58

; <label>:51                                      ; preds = %38
  %52 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %53 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %52, i32 0, i32 3
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %53)
          to label %54 unwind label %20

; <label>:54                                      ; preds = %51
  %55 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %56 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %55, i32 0, i32 4
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %56)
          to label %57 unwind label %20

; <label>:57                                      ; preds = %54
  br label %58

; <label>:58                                      ; preds = %57, %50
  br label %59

; <label>:59                                      ; preds = %58, %34
  br label %10

; <label>:60                                      ; preds = %12
  store i32 0, i32* %6, align 4
  br label %61

; <label>:61                                      ; preds = %60, %49
  call void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %stack)
  %cleanup.dest = load i32, i32* %6, align 4
  switch i32 %cleanup.dest, label %72 [
    i32 0, label %62
    i32 1, label %62
  ]

; <label>:62                                      ; preds = %61, %61
  ret void

; <label>:63                                      ; preds = %20
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i8*, i8** %4, align 8
  %66 = load i32, i32* %5, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69                                      ; preds = %20
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #15
  unreachable

; <label>:72                                      ; preds = %61
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr zeroext i1 @_ZN19b2WorldQueryWrapper13QueryCallbackEi(%struct.b2WorldQueryWrapper* %this, i32 %proxyId) #0 comdat align 2 {
  %1 = alloca %struct.b2WorldQueryWrapper*, align 8
  %2 = alloca i32, align 4
  %proxy = alloca %struct.b2FixtureProxy*, align 8
  store %struct.b2WorldQueryWrapper* %this, %struct.b2WorldQueryWrapper** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %struct.b2WorldQueryWrapper*, %struct.b2WorldQueryWrapper** %1, align 8
  %4 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %3, i32 0, i32 0
  %5 = load %class.b2BroadPhase*, %class.b2BroadPhase** %4, align 8
  %6 = load i32, i32* %2, align 4
  %7 = call i8* @_ZNK12b2BroadPhase11GetUserDataEi(%class.b2BroadPhase* %5, i32 %6)
  %8 = bitcast i8* %7 to %struct.b2FixtureProxy*
  store %struct.b2FixtureProxy* %8, %struct.b2FixtureProxy** %proxy, align 8
  %9 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %3, i32 0, i32 1
  %10 = load %class.b2ContactFilter*, %class.b2ContactFilter** %9, align 8
  %11 = bitcast %class.b2ContactFilter* %10 to i1 (%class.b2ContactFilter*, %class.b2Fixture*)***
  %12 = load i1 (%class.b2ContactFilter*, %class.b2Fixture*)**, i1 (%class.b2ContactFilter*, %class.b2Fixture*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.b2ContactFilter*, %class.b2Fixture*)*, i1 (%class.b2ContactFilter*, %class.b2Fixture*)** %12, i64 2
  %14 = load i1 (%class.b2ContactFilter*, %class.b2Fixture*)*, i1 (%class.b2ContactFilter*, %class.b2Fixture*)** %13, align 8
  %15 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %16 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %15, i32 0, i32 1
  %17 = load %class.b2Fixture*, %class.b2Fixture** %16, align 8
  %18 = call zeroext i1 %14(%class.b2ContactFilter* %10, %class.b2Fixture* %17)
  ret i1 %18
}

; Function Attrs: inlinehint uwtable
define linkonce_odr i8* @_ZNK12b2BroadPhase11GetUserDataEi(%class.b2BroadPhase* %this, i32 %proxyId) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %5 = load i32, i32* %2, align 4
  %6 = call i8* @_ZNK13b2DynamicTree11GetUserDataEi(%class.b2DynamicTree* %4, i32 %5)
  ret i8* %6
}

; Function Attrs: uwtable
define void @_ZNK7b2World7RayCastEP17b2RayCastCallbackRK6b2Vec2S4_(%class.b2World* %this, %class.b2ContactFilter* %callback, %struct.b2Vec2* dereferenceable(8) %point1, %struct.b2Vec2* dereferenceable(8) %point2) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2ContactFilter*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  %4 = alloca %struct.b2Vec2*, align 8
  %wrapper = alloca %struct.b2WorldQueryWrapper, align 8
  %input = alloca %struct.b2PositionSolverManifold, align 4
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2ContactFilter* %callback, %class.b2ContactFilter** %2, align 8
  store %struct.b2Vec2* %point1, %struct.b2Vec2** %3, align 8
  store %struct.b2Vec2* %point2, %struct.b2Vec2** %4, align 8
  %5 = load %class.b2World*, %class.b2World** %1, align 8
  %6 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %7 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %6, i32 0, i32 0
  %8 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %wrapper, i32 0, i32 0
  store %class.b2BroadPhase* %7, %class.b2BroadPhase** %8, align 8
  %9 = load %class.b2ContactFilter*, %class.b2ContactFilter** %2, align 8
  %10 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %wrapper, i32 0, i32 1
  store %class.b2ContactFilter* %9, %class.b2ContactFilter** %10, align 8
  call void @_ZN14b2RayCastInputC2Ev(%struct.b2PositionSolverManifold* %input)
  %11 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %input, i32 0, i32 2
  store float 1.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %input, i32 0, i32 0
  %13 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %14 = bitcast %struct.b2Vec2* %12 to i8*
  %15 = bitcast %struct.b2Vec2* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false)
  %16 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %input, i32 0, i32 1
  %17 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %18 = bitcast %struct.b2Vec2* %16 to i8*
  %19 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = getelementptr inbounds %class.b2World, %class.b2World* %5, i32 0, i32 3
  %21 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %20, i32 0, i32 0
  call void @_ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput(%class.b2BroadPhase* %21, %struct.b2WorldQueryWrapper* %wrapper, %struct.b2PositionSolverManifold* dereferenceable(20) %input)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN14b2RayCastInputC2Ev(%struct.b2PositionSolverManifold* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2PositionSolverManifold*, align 8
  store %struct.b2PositionSolverManifold* %this, %struct.b2PositionSolverManifold** %1, align 8
  %2 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %1, align 8
  %3 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput(%class.b2BroadPhase* %this, %struct.b2WorldQueryWrapper* %callback, %struct.b2PositionSolverManifold* dereferenceable(20) %input) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca %struct.b2WorldQueryWrapper*, align 8
  %3 = alloca %struct.b2PositionSolverManifold*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store %struct.b2WorldQueryWrapper* %callback, %struct.b2WorldQueryWrapper** %2, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %3, align 8
  %4 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %5 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %4, i32 0, i32 0
  %6 = load %struct.b2WorldQueryWrapper*, %struct.b2WorldQueryWrapper** %2, align 8
  %7 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  call void @_ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput(%class.b2DynamicTree* %5, %struct.b2WorldQueryWrapper* %6, %struct.b2PositionSolverManifold* dereferenceable(20) %7)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput(%class.b2DynamicTree* %this, %struct.b2WorldQueryWrapper* %callback, %struct.b2PositionSolverManifold* dereferenceable(20) %input) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca %struct.b2WorldQueryWrapper*, align 8
  %3 = alloca %struct.b2PositionSolverManifold*, align 8
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %r = alloca %struct.b2Vec2, align 4
  %v = alloca %struct.b2Vec2, align 4
  %abs_v = alloca %struct.b2Vec2, align 4
  %maxFraction = alloca float, align 4
  %segmentAABB = alloca %struct.b2Transform, align 4
  %t = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  %stack = alloca %class.b2GrowableStack, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %nodeId = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %c = alloca %struct.b2Vec2, align 4
  %h = alloca %struct.b2Vec2, align 4
  %separation = alloca float, align 4
  %10 = alloca %struct.b2Vec2, align 4
  %subInput = alloca %struct.b2PositionSolverManifold, align 4
  %value = alloca float, align 4
  %11 = alloca i32
  %t1 = alloca %struct.b2Vec2, align 4
  %12 = alloca %struct.b2Vec2, align 4
  %13 = alloca %struct.b2Vec2, align 4
  %14 = alloca %struct.b2Vec2, align 4
  %15 = alloca %struct.b2Vec2, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store %struct.b2WorldQueryWrapper* %callback, %struct.b2WorldQueryWrapper** %2, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %3, align 8
  %16 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %17 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %18 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %17, i32 0, i32 0
  %19 = bitcast %struct.b2Vec2* %p1 to i8*
  %20 = bitcast %struct.b2Vec2* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false)
  %21 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %22 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %21, i32 0, i32 1
  %23 = bitcast %struct.b2Vec2* %p2 to i8*
  %24 = bitcast %struct.b2Vec2* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false)
  %25 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %26 = bitcast %struct.b2Vec2* %r to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 4
  %27 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %r)
  %28 = fcmp ogt float %27, 0.000000e+00
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %0
  br label %32

; <label>:30                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28.290, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.25.291, i32 0, i32 0), i32 209, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %32

; <label>:32                                      ; preds = %31, %29
  %33 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %r)
  %34 = call <2 x float> @_Z7b2CrossfRK6b2Vec2(float 1.000000e+00, %struct.b2Vec2* dereferenceable(8) %r)
  %35 = bitcast %struct.b2Vec2* %v to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = call <2 x float> @_Z5b2AbsRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %v)
  %37 = bitcast %struct.b2Vec2* %abs_v to <2 x float>*
  store <2 x float> %36, <2 x float>* %37, align 4
  %38 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %39 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %38, i32 0, i32 2
  %40 = load float, float* %39, align 4
  store float %40, float* %maxFraction, align 4
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %segmentAABB)
  %41 = load float, float* %maxFraction, align 4
  %42 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %43 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %42, <2 x float>* %43, align 4
  %44 = call <2 x float> @_ZmlfRK6b2Vec2(float %41, %struct.b2Vec2* dereferenceable(8) %5)
  %45 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %44, <2 x float>* %45, align 4
  %46 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %4)
  %47 = bitcast %struct.b2Vec2* %t to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 4
  %48 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %segmentAABB, i32 0, i32 0
  %49 = call <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %t)
  %50 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 4
  %51 = bitcast %struct.b2Vec2* %48 to i8*
  %52 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false)
  %53 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %segmentAABB, i32 0, i32 1
  %54 = call <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %t)
  %55 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 4
  %56 = bitcast %struct.b2Vec2* %53 to i8*
  %57 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 4, i1 false)
  call void @_ZN15b2GrowableStackIiLi256EEC2Ev(%class.b2GrowableStack* %stack)
  %58 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %16, i32 0, i32 0
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %58)
          to label %59 unwind label %70

; <label>:59                                      ; preds = %32
  br label %60

; <label>:60                                      ; preds = %171, %110, %86, %69, %59
  %61 = invoke i32 @_ZN15b2GrowableStackIiLi256EE8GetCountEv(%class.b2GrowableStack* %stack)
          to label %62 unwind label %70

; <label>:62                                      ; preds = %60
  %63 = icmp sgt i32 %61, 0
  br i1 %63, label %64, label %172

; <label>:64                                      ; preds = %62
  %65 = invoke i32 @_ZN15b2GrowableStackIiLi256EE3PopEv(%class.b2GrowableStack* %stack)
          to label %66 unwind label %70

; <label>:66                                      ; preds = %64
  store i32 %65, i32* %nodeId, align 4
  %67 = load i32, i32* %nodeId, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %74

; <label>:69                                      ; preds = %66
  br label %60

; <label>:70                                      ; preds = %167, %164, %153, %149, %146, %143, %139, %116, %115, %111, %104, %102, %99, %96, %91, %87, %74, %64, %60, %32
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %8, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %9, align 4
  invoke void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %stack)
          to label %175 unwind label %181

; <label>:74                                      ; preds = %66
  %75 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %16, i32 0, i32 2
  %76 = load %struct.b2TreeNode*, %struct.b2TreeNode** %75, align 8
  %77 = load i32, i32* %nodeId, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %76, i64 %78
  store %struct.b2TreeNode* %79, %struct.b2TreeNode** %node, align 8
  %80 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %81 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %80, i32 0, i32 0
  %82 = invoke zeroext i1 @_Z13b2TestOverlapRK6b2AABBS1_(%struct.b2Transform* dereferenceable(16) %81, %struct.b2Transform* dereferenceable(16) %segmentAABB)
          to label %83 unwind label %70

; <label>:83                                      ; preds = %74
  %84 = zext i1 %82 to i32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  br label %60

; <label>:87                                      ; preds = %83
  %88 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %89 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %88, i32 0, i32 0
  %90 = invoke <2 x float> @_ZNK6b2AABB9GetCenterEv(%struct.b2Transform* %89)
          to label %91 unwind label %70

; <label>:91                                      ; preds = %87
  %92 = bitcast %struct.b2Vec2* %c to <2 x float>*
  store <2 x float> %90, <2 x float>* %92, align 4
  %93 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %94 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %93, i32 0, i32 0
  %95 = invoke <2 x float> @_ZNK6b2AABB10GetExtentsEv(%struct.b2Transform* %94)
          to label %96 unwind label %70

; <label>:96                                      ; preds = %91
  %97 = bitcast %struct.b2Vec2* %h to <2 x float>*
  store <2 x float> %95, <2 x float>* %97, align 4
  %98 = invoke <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %c)
          to label %99 unwind label %70

; <label>:99                                      ; preds = %96
  %100 = bitcast %struct.b2Vec2* %10 to <2 x float>*
  store <2 x float> %98, <2 x float>* %100, align 4
  %101 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v, %struct.b2Vec2* dereferenceable(8) %10)
          to label %102 unwind label %70

; <label>:102                                     ; preds = %99
  %103 = invoke float @_Z5b2AbsIfET_S0_(float %101)
          to label %104 unwind label %70

; <label>:104                                     ; preds = %102
  %105 = invoke float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %abs_v, %struct.b2Vec2* dereferenceable(8) %h)
          to label %106 unwind label %70

; <label>:106                                     ; preds = %104
  %107 = fsub float %103, %105
  store float %107, float* %separation, align 4
  %108 = load float, float* %separation, align 4
  %109 = fcmp ogt float %108, 0.000000e+00
  br i1 %109, label %110, label %111

; <label>:110                                     ; preds = %106
  br label %60

; <label>:111                                     ; preds = %106
  %112 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %113 = invoke zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %112)
          to label %114 unwind label %70

; <label>:114                                     ; preds = %111
  br i1 %113, label %115, label %164

; <label>:115                                     ; preds = %114
  invoke void @_ZN14b2RayCastInputC2Ev(%struct.b2PositionSolverManifold* %subInput)
          to label %116 unwind label %70

; <label>:116                                     ; preds = %115
  %117 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %subInput, i32 0, i32 0
  %118 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %119 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %118, i32 0, i32 0
  %120 = bitcast %struct.b2Vec2* %117 to i8*
  %121 = bitcast %struct.b2Vec2* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 4, i1 false)
  %122 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %subInput, i32 0, i32 1
  %123 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %124 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %123, i32 0, i32 1
  %125 = bitcast %struct.b2Vec2* %122 to i8*
  %126 = bitcast %struct.b2Vec2* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 8, i32 4, i1 false)
  %127 = load float, float* %maxFraction, align 4
  %128 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %subInput, i32 0, i32 2
  store float %127, float* %128, align 4
  %129 = load %struct.b2WorldQueryWrapper*, %struct.b2WorldQueryWrapper** %2, align 8
  %130 = load i32, i32* %nodeId, align 4
  %131 = invoke float @_ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi(%struct.b2WorldQueryWrapper* %129, %struct.b2PositionSolverManifold* dereferenceable(20) %subInput, i32 %130)
          to label %132 unwind label %70

; <label>:132                                     ; preds = %116
  store float %131, float* %value, align 4
  %133 = load float, float* %value, align 4
  %134 = fcmp oeq float %133, 0.000000e+00
  br i1 %134, label %135, label %136

; <label>:135                                     ; preds = %132
  store i32 1, i32* %11, align 4
  br label %173

; <label>:136                                     ; preds = %132
  %137 = load float, float* %value, align 4
  %138 = fcmp ogt float %137, 0.000000e+00
  br i1 %138, label %139, label %163

; <label>:139                                     ; preds = %136
  %140 = load float, float* %value, align 4
  store float %140, float* %maxFraction, align 4
  %141 = load float, float* %maxFraction, align 4
  %142 = invoke <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
          to label %143 unwind label %70

; <label>:143                                     ; preds = %139
  %144 = bitcast %struct.b2Vec2* %13 to <2 x float>*
  store <2 x float> %142, <2 x float>* %144, align 4
  %145 = invoke <2 x float> @_ZmlfRK6b2Vec2(float %141, %struct.b2Vec2* dereferenceable(8) %13)
          to label %146 unwind label %70

; <label>:146                                     ; preds = %143
  %147 = bitcast %struct.b2Vec2* %12 to <2 x float>*
  store <2 x float> %145, <2 x float>* %147, align 4
  %148 = invoke <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %12)
          to label %149 unwind label %70

; <label>:149                                     ; preds = %146
  %150 = bitcast %struct.b2Vec2* %t1 to <2 x float>*
  store <2 x float> %148, <2 x float>* %150, align 4
  %151 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %segmentAABB, i32 0, i32 0
  %152 = invoke <2 x float> @_Z5b2MinRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %t1)
          to label %153 unwind label %70

; <label>:153                                     ; preds = %149
  %154 = bitcast %struct.b2Vec2* %14 to <2 x float>*
  store <2 x float> %152, <2 x float>* %154, align 4
  %155 = bitcast %struct.b2Vec2* %151 to i8*
  %156 = bitcast %struct.b2Vec2* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 8, i32 4, i1 false)
  %157 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %segmentAABB, i32 0, i32 1
  %158 = invoke <2 x float> @_Z5b2MaxRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %t1)
          to label %159 unwind label %70

; <label>:159                                     ; preds = %153
  %160 = bitcast %struct.b2Vec2* %15 to <2 x float>*
  store <2 x float> %158, <2 x float>* %160, align 4
  %161 = bitcast %struct.b2Vec2* %157 to i8*
  %162 = bitcast %struct.b2Vec2* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %162, i64 8, i32 4, i1 false)
  br label %163

; <label>:163                                     ; preds = %159, %136
  br label %171

; <label>:164                                     ; preds = %114
  %165 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %166 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %165, i32 0, i32 3
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %166)
          to label %167 unwind label %70

; <label>:167                                     ; preds = %164
  %168 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %169 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %168, i32 0, i32 4
  invoke void @_ZN15b2GrowableStackIiLi256EE4PushERKi(%class.b2GrowableStack* %stack, i32* dereferenceable(4) %169)
          to label %170 unwind label %70

; <label>:170                                     ; preds = %167
  br label %171

; <label>:171                                     ; preds = %170, %163
  br label %60

; <label>:172                                     ; preds = %62
  store i32 0, i32* %11, align 4
  br label %173

; <label>:173                                     ; preds = %172, %135
  call void @_ZN15b2GrowableStackIiLi256EED2Ev(%class.b2GrowableStack* %stack)
  %cleanup.dest = load i32, i32* %11, align 4
  switch i32 %cleanup.dest, label %184 [
    i32 0, label %174
    i32 1, label %174
  ]

; <label>:174                                     ; preds = %173, %173
  ret void

; <label>:175                                     ; preds = %70
  br label %176

; <label>:176                                     ; preds = %175
  %177 = load i8*, i8** %8, align 8
  %178 = load i32, i32* %9, align 4
  %179 = insertvalue { i8*, i32 } undef, i8* %177, 0
  %180 = insertvalue { i8*, i32 } %179, i32 %178, 1
  resume { i8*, i32 } %180

; <label>:181                                     ; preds = %70
  %182 = landingpad { i8*, i32 }
          catch i8* null
  %183 = extractvalue { i8*, i32 } %182, 0
  call void @__clang_call_terminate(i8* %183) #15
  unreachable

; <label>:184                                     ; preds = %173
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr <2 x float> @_Z5b2AbsRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %a) #1 comdat {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = call float @_Z5b2AbsIfET_S0_(float %5)
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %8 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %7, i32 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = call float @_Z5b2AbsIfET_S0_(float %9)
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %6, float %10)
  %11 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  ret <2 x float> %12
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK6b2AABB9GetCenterEv(%struct.b2Transform* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %2, align 8
  %4 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 1
  %7 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %3)
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %9, <2 x float>* %10, align 4
  %11 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  ret <2 x float> %12
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK6b2AABB10GetExtentsEv(%struct.b2Transform* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Vec2, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %2, align 8
  %4 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  %5 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 1
  %6 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %4, i32 0, i32 0
  %7 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %8 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %7, <2 x float>* %8, align 4
  %9 = call <2 x float> @_ZmlfRK6b2Vec2(float 5.000000e-01, %struct.b2Vec2* dereferenceable(8) %3)
  %10 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  store <2 x float> %9, <2 x float>* %10, align 4
  %11 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  ret <2 x float> %12
}

; Function Attrs: uwtable
define linkonce_odr float @_ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi(%struct.b2WorldQueryWrapper* %this, %struct.b2PositionSolverManifold* dereferenceable(20) %input, i32 %proxyId) #0 comdat align 2 {
  %1 = alloca float, align 4
  %2 = alloca %struct.b2WorldQueryWrapper*, align 8
  %3 = alloca %struct.b2PositionSolverManifold*, align 8
  %4 = alloca i32, align 4
  %userData = alloca i8*, align 8
  %proxy = alloca %struct.b2FixtureProxy*, align 8
  %fixture = alloca %class.b2Fixture*, align 8
  %index = alloca i32, align 4
  %output = alloca %struct.b2Position, align 4
  %hit = alloca i8, align 1
  %fraction = alloca float, align 4
  %point = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %struct.b2WorldQueryWrapper* %this, %struct.b2WorldQueryWrapper** %2, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %3, align 8
  store i32 %proxyId, i32* %4, align 4
  %7 = load %struct.b2WorldQueryWrapper*, %struct.b2WorldQueryWrapper** %2, align 8
  %8 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %7, i32 0, i32 0
  %9 = load %class.b2BroadPhase*, %class.b2BroadPhase** %8, align 8
  %10 = load i32, i32* %4, align 4
  %11 = call i8* @_ZNK12b2BroadPhase11GetUserDataEi(%class.b2BroadPhase* %9, i32 %10)
  store i8* %11, i8** %userData, align 8
  %12 = load i8*, i8** %userData, align 8
  %13 = bitcast i8* %12 to %struct.b2FixtureProxy*
  store %struct.b2FixtureProxy* %13, %struct.b2FixtureProxy** %proxy, align 8
  %14 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %15 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %14, i32 0, i32 1
  %16 = load %class.b2Fixture*, %class.b2Fixture** %15, align 8
  store %class.b2Fixture* %16, %class.b2Fixture** %fixture, align 8
  %17 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %18 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %index, align 4
  call void @_ZN15b2RayCastOutputC2Ev(%struct.b2Position* %output)
  %20 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %21 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %22 = load i32, i32* %index, align 4
  %23 = call zeroext i1 @_ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi(%class.b2Fixture* %20, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %21, i32 %22)
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %hit, align 1
  %25 = load i8, i8* %hit, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %53

; <label>:27                                      ; preds = %0
  %28 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %output, i32 0, i32 1
  %29 = load float, float* %28, align 4
  store float %29, float* %fraction, align 4
  %30 = load float, float* %fraction, align 4
  %31 = fsub float 1.000000e+00, %30
  %32 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %33 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %32, i32 0, i32 0
  %34 = call <2 x float> @_ZmlfRK6b2Vec2(float %31, %struct.b2Vec2* dereferenceable(8) %33)
  %35 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %34, <2 x float>* %35, align 4
  %36 = load float, float* %fraction, align 4
  %37 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %38 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %37, i32 0, i32 1
  %39 = call <2 x float> @_ZmlfRK6b2Vec2(float %36, %struct.b2Vec2* dereferenceable(8) %38)
  %40 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %39, <2 x float>* %40, align 4
  %41 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %5, %struct.b2Vec2* dereferenceable(8) %6)
  %42 = bitcast %struct.b2Vec2* %point to <2 x float>*
  store <2 x float> %41, <2 x float>* %42, align 4
  %43 = getelementptr inbounds %struct.b2WorldQueryWrapper, %struct.b2WorldQueryWrapper* %7, i32 0, i32 1
  %44 = load %class.b2ContactFilter*, %class.b2ContactFilter** %43, align 8
  %45 = bitcast %class.b2ContactFilter* %44 to float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)***
  %46 = load float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)**, float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)*** %45, align 8
  %47 = getelementptr inbounds float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)*, float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)** %46, i64 2
  %48 = load float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)*, float (%class.b2ContactFilter*, %class.b2Fixture*, %struct.b2Vec2*, %struct.b2Vec2*, float)** %47, align 8
  %49 = load %class.b2Fixture*, %class.b2Fixture** %fixture, align 8
  %50 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %output, i32 0, i32 0
  %51 = load float, float* %fraction, align 4
  %52 = call float %48(%class.b2ContactFilter* %44, %class.b2Fixture* %49, %struct.b2Vec2* dereferenceable(8) %point, %struct.b2Vec2* dereferenceable(8) %50, float %51)
  store float %52, float* %1, align 4
  br label %57

; <label>:53                                      ; preds = %0
  %54 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %55 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %54, i32 0, i32 2
  %56 = load float, float* %55, align 4
  store float %56, float* %1, align 4
  br label %57

; <label>:57                                      ; preds = %53, %27
  %58 = load float, float* %1, align 4
  ret float %58
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN15b2RayCastOutputC2Ev(%struct.b2Position* %this) unnamed_addr #1 comdat align 2 {
  %1 = alloca %struct.b2Position*, align 8
  store %struct.b2Position* %this, %struct.b2Position** %1, align 8
  %2 = load %struct.b2Position*, %struct.b2Position** %1, align 8
  %3 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %2, i32 0, i32 0
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr zeroext i1 @_ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi(%class.b2Fixture* %this, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %input, i32 %childIndex) #1 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  %2 = alloca %struct.b2Position*, align 8
  %3 = alloca %struct.b2PositionSolverManifold*, align 8
  %4 = alloca i32, align 4
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  store %struct.b2Position* %output, %struct.b2Position** %2, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %3, align 8
  store i32 %childIndex, i32* %4, align 4
  %5 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %6 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 3
  %7 = load %class.b2Shape*, %class.b2Shape** %6, align 8
  %8 = bitcast %class.b2Shape* %7 to i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)***
  %9 = load i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)**, i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)*, i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)** %9, i64 5
  %11 = load i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)*, i1 (%class.b2Shape*, %struct.b2Position*, %struct.b2PositionSolverManifold*, %struct.b2Transform*, i32)** %10, align 8
  %12 = load %struct.b2Position*, %struct.b2Position** %2, align 8
  %13 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %3, align 8
  %14 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %5, i32 0, i32 2
  %15 = load %class.b2Body*, %class.b2Body** %14, align 8
  %16 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %15)
  %17 = load i32, i32* %4, align 4
  %18 = call zeroext i1 %11(%class.b2Shape* %7, %struct.b2Position* %12, %struct.b2PositionSolverManifold* dereferenceable(20) %13, %struct.b2Transform* dereferenceable(16) %16, i32 %17)
  ret i1 %18
}

; Function Attrs: uwtable
define void @_ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color(%class.b2World* %this, %class.b2Fixture* %fixture, %struct.b2Transform* dereferenceable(16) %xf, %struct.b2Color* dereferenceable(16) %color) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2Fixture*, align 8
  %3 = alloca %struct.b2Transform*, align 8
  %4 = alloca %struct.b2Color*, align 8
  %circle = alloca %class.b2CircleShape*, align 8
  %center = alloca %struct.b2Vec2, align 4
  %radius = alloca float, align 4
  %axis = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %edge = alloca %class.b2EdgeShape*, align 8
  %v1 = alloca %struct.b2Vec2, align 4
  %v2 = alloca %struct.b2Vec2, align 4
  %chain = alloca %class.b2ChainShape*, align 8
  %count = alloca i32, align 4
  %vertices = alloca %struct.b2Vec2*, align 8
  %ghostColor = alloca %struct.b2Color, align 4
  %v11 = alloca %struct.b2Vec2, align 4
  %vp = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %v22 = alloca %struct.b2Vec2, align 4
  %vn = alloca %struct.b2Vec2, align 4
  %poly = alloca %class.b2PolygonShape*, align 8
  %vertexCount = alloca i32, align 4
  %vertices3 = alloca [8 x %struct.b2Vec2], align 16
  %i4 = alloca i32, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2Fixture* %fixture, %class.b2Fixture** %2, align 8
  store %struct.b2Transform* %xf, %struct.b2Transform** %3, align 8
  store %struct.b2Color* %color, %struct.b2Color** %4, align 8
  %7 = load %class.b2World*, %class.b2World** %1, align 8
  %8 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %9 = call i32 @_ZNK9b2Fixture7GetTypeEv(%class.b2Fixture* %8)
  switch i32 %9, label %222 [
    i32 0, label %10
    i32 1, label %35
    i32 3, label %56
    i32 2, label %171
  ]

; <label>:10                                      ; preds = %0
  %11 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %12 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %11)
  %13 = bitcast %class.b2Shape* %12 to %class.b2CircleShape*
  store %class.b2CircleShape* %13, %class.b2CircleShape** %circle, align 8
  %14 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %15 = load %class.b2CircleShape*, %class.b2CircleShape** %circle, align 8
  %16 = getelementptr inbounds %class.b2CircleShape, %class.b2CircleShape* %15, i32 0, i32 1
  %17 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %14, %struct.b2Vec2* dereferenceable(8) %16)
  %18 = bitcast %struct.b2Vec2* %center to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 4
  %19 = load %class.b2CircleShape*, %class.b2CircleShape** %circle, align 8
  %20 = bitcast %class.b2CircleShape* %19 to %class.b2Shape*
  %21 = getelementptr inbounds %class.b2Shape, %class.b2Shape* %20, i32 0, i32 2
  %22 = load float, float* %21, align 4
  store float %22, float* %radius, align 4
  %23 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %24 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %23, i32 0, i32 1
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %5, float 1.000000e+00, float 0.000000e+00)
  %25 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %24, %struct.b2Vec2* dereferenceable(8) %5)
  %26 = bitcast %struct.b2Vec2* %axis to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 4
  %27 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %28 = load %class.b2Draw*, %class.b2Draw** %27, align 8
  %29 = bitcast %class.b2Draw* %28 to void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)***
  %30 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)** %30, i64 5
  %32 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Vec2*, %struct.b2Color*)** %31, align 8
  %33 = load float, float* %radius, align 4
  %34 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  call void %32(%class.b2Draw* %28, %struct.b2Vec2* dereferenceable(8) %center, float %33, %struct.b2Vec2* dereferenceable(8) %axis, %struct.b2Color* dereferenceable(16) %34)
  br label %223

; <label>:35                                      ; preds = %0
  %36 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %37 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %36)
  %38 = bitcast %class.b2Shape* %37 to %class.b2EdgeShape*
  store %class.b2EdgeShape* %38, %class.b2EdgeShape** %edge, align 8
  %39 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %40 = load %class.b2EdgeShape*, %class.b2EdgeShape** %edge, align 8
  %41 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %40, i32 0, i32 1
  %42 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %39, %struct.b2Vec2* dereferenceable(8) %41)
  %43 = bitcast %struct.b2Vec2* %v1 to <2 x float>*
  store <2 x float> %42, <2 x float>* %43, align 4
  %44 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %45 = load %class.b2EdgeShape*, %class.b2EdgeShape** %edge, align 8
  %46 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %45, i32 0, i32 2
  %47 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %44, %struct.b2Vec2* dereferenceable(8) %46)
  %48 = bitcast %struct.b2Vec2* %v2 to <2 x float>*
  store <2 x float> %47, <2 x float>* %48, align 4
  %49 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %50 = load %class.b2Draw*, %class.b2Draw** %49, align 8
  %51 = bitcast %class.b2Draw* %50 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %52 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %52, i64 6
  %54 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %53, align 8
  %55 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  call void %54(%class.b2Draw* %50, %struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2, %struct.b2Color* dereferenceable(16) %55)
  br label %223

; <label>:56                                      ; preds = %0
  %57 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %58 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %57)
  %59 = bitcast %class.b2Shape* %58 to %class.b2ChainShape*
  store %class.b2ChainShape* %59, %class.b2ChainShape** %chain, align 8
  %60 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %61 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %60, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %count, align 4
  %63 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %64 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %63, i32 0, i32 1
  %65 = load %struct.b2Vec2*, %struct.b2Vec2** %64, align 8
  store %struct.b2Vec2* %65, %struct.b2Vec2** %vertices, align 8
  %66 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  %67 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %66, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float 7.500000e-01, %68
  %70 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  %71 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %70, i32 0, i32 1
  %72 = load float, float* %71, align 4
  %73 = fmul float 7.500000e-01, %72
  %74 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  %75 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %74, i32 0, i32 2
  %76 = load float, float* %75, align 4
  %77 = fmul float 7.500000e-01, %76
  %78 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  %79 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %78, i32 0, i32 3
  %80 = load float, float* %79, align 4
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %ghostColor, float %69, float %73, float %77, float %80)
  %81 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %82 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices, align 8
  %83 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %82, i64 0
  %84 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %81, %struct.b2Vec2* dereferenceable(8) %83)
  %85 = bitcast %struct.b2Vec2* %v11 to <2 x float>*
  store <2 x float> %84, <2 x float>* %85, align 4
  %86 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %87 = load %class.b2Draw*, %class.b2Draw** %86, align 8
  %88 = bitcast %class.b2Draw* %87 to void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)***
  %89 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %89, i64 8
  %91 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %90, align 8
  %92 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  call void %91(%class.b2Draw* %87, %struct.b2Vec2* dereferenceable(8) %v11, float 4.000000e+00, %struct.b2Color* dereferenceable(16) %92)
  %93 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %94 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %93, i32 0, i32 5
  %95 = load i8, i8* %94, align 4
  %96 = trunc i8 %95 to i1
  br i1 %96, label %97, label %115

; <label>:97                                      ; preds = %56
  %98 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %99 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %100 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %99, i32 0, i32 3
  %101 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %98, %struct.b2Vec2* dereferenceable(8) %100)
  %102 = bitcast %struct.b2Vec2* %vp to <2 x float>*
  store <2 x float> %101, <2 x float>* %102, align 4
  %103 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %104 = load %class.b2Draw*, %class.b2Draw** %103, align 8
  %105 = bitcast %class.b2Draw* %104 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %106 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %106, i64 6
  %108 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %107, align 8
  call void %108(%class.b2Draw* %104, %struct.b2Vec2* dereferenceable(8) %vp, %struct.b2Vec2* dereferenceable(8) %v11, %struct.b2Color* dereferenceable(16) %ghostColor)
  %109 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %110 = load %class.b2Draw*, %class.b2Draw** %109, align 8
  %111 = bitcast %class.b2Draw* %110 to void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)***
  %112 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %112, i64 4
  %114 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %113, align 8
  call void %114(%class.b2Draw* %110, %struct.b2Vec2* dereferenceable(8) %vp, float 0x3FB99999A0000000, %struct.b2Color* dereferenceable(16) %ghostColor)
  br label %115

; <label>:115                                     ; preds = %97, %56
  store i32 1, i32* %i, align 4
  br label %116

; <label>:116                                     ; preds = %144, %115
  %117 = load i32, i32* %i, align 4
  %118 = load i32, i32* %count, align 4
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %120, label %147

; <label>:120                                     ; preds = %116
  %121 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %122 = load i32, i32* %i, align 4
  %123 = sext i32 %122 to i64
  %124 = load %struct.b2Vec2*, %struct.b2Vec2** %vertices, align 8
  %125 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %124, i64 %123
  %126 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %121, %struct.b2Vec2* dereferenceable(8) %125)
  %127 = bitcast %struct.b2Vec2* %v22 to <2 x float>*
  store <2 x float> %126, <2 x float>* %127, align 4
  %128 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %129 = load %class.b2Draw*, %class.b2Draw** %128, align 8
  %130 = bitcast %class.b2Draw* %129 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %131 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %131, i64 6
  %133 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %132, align 8
  %134 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  call void %133(%class.b2Draw* %129, %struct.b2Vec2* dereferenceable(8) %v11, %struct.b2Vec2* dereferenceable(8) %v22, %struct.b2Color* dereferenceable(16) %134)
  %135 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %136 = load %class.b2Draw*, %class.b2Draw** %135, align 8
  %137 = bitcast %class.b2Draw* %136 to void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)***
  %138 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %138, i64 8
  %140 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %139, align 8
  %141 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  call void %140(%class.b2Draw* %136, %struct.b2Vec2* dereferenceable(8) %v22, float 4.000000e+00, %struct.b2Color* dereferenceable(16) %141)
  %142 = bitcast %struct.b2Vec2* %v11 to i8*
  %143 = bitcast %struct.b2Vec2* %v22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %143, i64 8, i32 4, i1 false)
  br label %144

; <label>:144                                     ; preds = %120
  %145 = load i32, i32* %i, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %i, align 4
  br label %116

; <label>:147                                     ; preds = %116
  %148 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %149 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %148, i32 0, i32 6
  %150 = load i8, i8* %149, align 1
  %151 = trunc i8 %150 to i1
  br i1 %151, label %152, label %170

; <label>:152                                     ; preds = %147
  %153 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %154 = load %class.b2ChainShape*, %class.b2ChainShape** %chain, align 8
  %155 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %154, i32 0, i32 4
  %156 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %153, %struct.b2Vec2* dereferenceable(8) %155)
  %157 = bitcast %struct.b2Vec2* %vn to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 4
  %158 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %159 = load %class.b2Draw*, %class.b2Draw** %158, align 8
  %160 = bitcast %class.b2Draw* %159 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %161 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %161, i64 6
  %163 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %162, align 8
  call void %163(%class.b2Draw* %159, %struct.b2Vec2* dereferenceable(8) %v11, %struct.b2Vec2* dereferenceable(8) %vn, %struct.b2Color* dereferenceable(16) %ghostColor)
  %164 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %165 = load %class.b2Draw*, %class.b2Draw** %164, align 8
  %166 = bitcast %class.b2Draw* %165 to void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)***
  %167 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %167, i64 4
  %169 = load void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, float, %struct.b2Color*)** %168, align 8
  call void %169(%class.b2Draw* %165, %struct.b2Vec2* dereferenceable(8) %vn, float 0x3FB99999A0000000, %struct.b2Color* dereferenceable(16) %ghostColor)
  br label %170

; <label>:170                                     ; preds = %152, %147
  br label %223

; <label>:171                                     ; preds = %0
  %172 = load %class.b2Fixture*, %class.b2Fixture** %2, align 8
  %173 = call %class.b2Shape* @_ZN9b2Fixture8GetShapeEv(%class.b2Fixture* %172)
  %174 = bitcast %class.b2Shape* %173 to %class.b2PolygonShape*
  store %class.b2PolygonShape* %174, %class.b2PolygonShape** %poly, align 8
  %175 = load %class.b2PolygonShape*, %class.b2PolygonShape** %poly, align 8
  %176 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %175, i32 0, i32 4
  %177 = load i32, i32* %176, align 8
  store i32 %177, i32* %vertexCount, align 4
  %178 = load i32, i32* %vertexCount, align 4
  %179 = icmp sle i32 %178, 8
  br i1 %179, label %180, label %181

; <label>:180                                     ; preds = %171
  br label %183

; <label>:181                                     ; preds = %171
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7.292, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 1094, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %183

; <label>:183                                     ; preds = %182, %180
  %184 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %vertices3, i32 0, i32 0
  %185 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %184, i64 8
  br label %186

; <label>:186                                     ; preds = %186, %183
  %187 = phi %struct.b2Vec2* [ %184, %183 ], [ %188, %186 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %187)
  %188 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %187, i64 1
  %189 = icmp eq %struct.b2Vec2* %188, %185
  br i1 %189, label %190, label %186

; <label>:190                                     ; preds = %186
  store i32 0, i32* %i4, align 4
  br label %191

; <label>:191                                     ; preds = %209, %190
  %192 = load i32, i32* %i4, align 4
  %193 = load i32, i32* %vertexCount, align 4
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %195, label %212

; <label>:195                                     ; preds = %191
  %196 = load i32, i32* %i4, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %vertices3, i64 0, i64 %197
  %199 = load %struct.b2Transform*, %struct.b2Transform** %3, align 8
  %200 = load i32, i32* %i4, align 4
  %201 = sext i32 %200 to i64
  %202 = load %class.b2PolygonShape*, %class.b2PolygonShape** %poly, align 8
  %203 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %202, i32 0, i32 2
  %204 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %203, i64 0, i64 %201
  %205 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %199, %struct.b2Vec2* dereferenceable(8) %204)
  %206 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %205, <2 x float>* %206, align 4
  %207 = bitcast %struct.b2Vec2* %198 to i8*
  %208 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %208, i64 8, i32 4, i1 false)
  br label %209

; <label>:209                                     ; preds = %195
  %210 = load i32, i32* %i4, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %i4, align 4
  br label %191

; <label>:212                                     ; preds = %191
  %213 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %214 = load %class.b2Draw*, %class.b2Draw** %213, align 8
  %215 = bitcast %class.b2Draw* %214 to void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)***
  %216 = load void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)*** %215, align 8
  %217 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)** %216, i64 3
  %218 = load void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)** %217, align 8
  %219 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %vertices3, i32 0, i32 0
  %220 = load i32, i32* %vertexCount, align 4
  %221 = load %struct.b2Color*, %struct.b2Color** %4, align 8
  call void %218(%class.b2Draw* %214, %struct.b2Vec2* %219, i32 %220, %struct.b2Color* dereferenceable(16) %221)
  br label %223

; <label>:222                                     ; preds = %0
  br label %223

; <label>:223                                     ; preds = %222, %212, %170, %35, %10
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7b2ColorC2Effff(%struct.b2Color* %this, float %rIn, float %gIn, float %bIn, float %aIn) unnamed_addr #2 comdat align 2 {
  %1 = alloca %struct.b2Color*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  store %struct.b2Color* %this, %struct.b2Color** %1, align 8
  store float %rIn, float* %2, align 4
  store float %gIn, float* %3, align 4
  store float %bIn, float* %4, align 4
  store float %aIn, float* %5, align 4
  %6 = load %struct.b2Color*, %struct.b2Color** %1, align 8
  %7 = load float, float* %2, align 4
  %8 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %6, i32 0, i32 0
  store float %7, float* %8, align 4
  %9 = load float, float* %3, align 4
  %10 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %6, i32 0, i32 1
  store float %9, float* %10, align 4
  %11 = load float, float* %4, align 4
  %12 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %6, i32 0, i32 2
  store float %11, float* %12, align 4
  %13 = load float, float* %5, align 4
  %14 = getelementptr inbounds %struct.b2Color, %struct.b2Color* %6, i32 0, i32 3
  store float %13, float* %14, align 4
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World9DrawJointEP7b2Joint(%class.b2World* %this, %class.b2Joint* %joint) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %class.b2Joint*, align 8
  %bodyA = alloca %class.b2Body*, align 8
  %bodyB = alloca %class.b2Body*, align 8
  %xf1 = alloca %struct.b2Transform*, align 8
  %xf2 = alloca %struct.b2Transform*, align 8
  %x1 = alloca %struct.b2Vec2, align 4
  %x2 = alloca %struct.b2Vec2, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %color = alloca %struct.b2Color, align 4
  %pulley = alloca %class.b2PulleyJoint*, align 8
  %s1 = alloca %struct.b2Vec2, align 4
  %s2 = alloca %struct.b2Vec2, align 4
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %class.b2Joint* %joint, %class.b2Joint** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %5 = call %class.b2Body* @_ZN7b2Joint8GetBodyAEv(%class.b2Joint* %4)
  store %class.b2Body* %5, %class.b2Body** %bodyA, align 8
  %6 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %7 = call %class.b2Body* @_ZN7b2Joint8GetBodyBEv(%class.b2Joint* %6)
  store %class.b2Body* %7, %class.b2Body** %bodyB, align 8
  %8 = load %class.b2Body*, %class.b2Body** %bodyA, align 8
  %9 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %8)
  store %struct.b2Transform* %9, %struct.b2Transform** %xf1, align 8
  %10 = load %class.b2Body*, %class.b2Body** %bodyB, align 8
  %11 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %10)
  store %struct.b2Transform* %11, %struct.b2Transform** %xf2, align 8
  %12 = load %struct.b2Transform*, %struct.b2Transform** %xf1, align 8
  %13 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %12, i32 0, i32 0
  %14 = bitcast %struct.b2Vec2* %x1 to i8*
  %15 = bitcast %struct.b2Vec2* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false)
  %16 = load %struct.b2Transform*, %struct.b2Transform** %xf2, align 8
  %17 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %16, i32 0, i32 0
  %18 = bitcast %struct.b2Vec2* %x2 to i8*
  %19 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %21 = bitcast %class.b2Joint* %20 to <2 x float> (%class.b2Joint*)***
  %22 = load <2 x float> (%class.b2Joint*)**, <2 x float> (%class.b2Joint*)*** %21, align 8
  %23 = getelementptr inbounds <2 x float> (%class.b2Joint*)*, <2 x float> (%class.b2Joint*)** %22, i64 0
  %24 = load <2 x float> (%class.b2Joint*)*, <2 x float> (%class.b2Joint*)** %23, align 8
  %25 = call <2 x float> %24(%class.b2Joint* %20)
  %26 = bitcast %struct.b2Vec2* %p1 to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 4
  %27 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %28 = bitcast %class.b2Joint* %27 to <2 x float> (%class.b2Joint*)***
  %29 = load <2 x float> (%class.b2Joint*)**, <2 x float> (%class.b2Joint*)*** %28, align 8
  %30 = getelementptr inbounds <2 x float> (%class.b2Joint*)*, <2 x float> (%class.b2Joint*)** %29, i64 1
  %31 = load <2 x float> (%class.b2Joint*)*, <2 x float> (%class.b2Joint*)** %30, align 8
  %32 = call <2 x float> %31(%class.b2Joint* %27)
  %33 = bitcast %struct.b2Vec2* %p2 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %color, float 5.000000e-01, float 0x3FE99999A0000000, float 0x3FE99999A0000000, float 1.000000e+00)
  %34 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %35 = call i32 @_ZNK7b2Joint7GetTypeEv(%class.b2Joint* %34)
  switch i32 %35, label %71 [
    i32 3, label %36
    i32 4, label %43
    i32 5, label %70
  ]

; <label>:36                                      ; preds = %0
  %37 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %38 = load %class.b2Draw*, %class.b2Draw** %37, align 8
  %39 = bitcast %class.b2Draw* %38 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %40 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %40, i64 6
  %42 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %41, align 8
  call void %42(%class.b2Draw* %38, %struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Color* dereferenceable(16) %color)
  br label %90

; <label>:43                                      ; preds = %0
  %44 = load %class.b2Joint*, %class.b2Joint** %2, align 8
  %45 = bitcast %class.b2Joint* %44 to %class.b2PulleyJoint*
  store %class.b2PulleyJoint* %45, %class.b2PulleyJoint** %pulley, align 8
  %46 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %pulley, align 8
  %47 = call <2 x float> @_ZNK13b2PulleyJoint16GetGroundAnchorAEv(%class.b2PulleyJoint* %46)
  %48 = bitcast %struct.b2Vec2* %s1 to <2 x float>*
  store <2 x float> %47, <2 x float>* %48, align 4
  %49 = load %class.b2PulleyJoint*, %class.b2PulleyJoint** %pulley, align 8
  %50 = call <2 x float> @_ZNK13b2PulleyJoint16GetGroundAnchorBEv(%class.b2PulleyJoint* %49)
  %51 = bitcast %struct.b2Vec2* %s2 to <2 x float>*
  store <2 x float> %50, <2 x float>* %51, align 4
  %52 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %53 = load %class.b2Draw*, %class.b2Draw** %52, align 8
  %54 = bitcast %class.b2Draw* %53 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %55 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %55, i64 6
  %57 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %56, align 8
  call void %57(%class.b2Draw* %53, %struct.b2Vec2* dereferenceable(8) %s1, %struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Color* dereferenceable(16) %color)
  %58 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %59 = load %class.b2Draw*, %class.b2Draw** %58, align 8
  %60 = bitcast %class.b2Draw* %59 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %61 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %61, i64 6
  %63 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %62, align 8
  call void %63(%class.b2Draw* %59, %struct.b2Vec2* dereferenceable(8) %s2, %struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Color* dereferenceable(16) %color)
  %64 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %65 = load %class.b2Draw*, %class.b2Draw** %64, align 8
  %66 = bitcast %class.b2Draw* %65 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %67 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %67, i64 6
  %69 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %68, align 8
  call void %69(%class.b2Draw* %65, %struct.b2Vec2* dereferenceable(8) %s1, %struct.b2Vec2* dereferenceable(8) %s2, %struct.b2Color* dereferenceable(16) %color)
  br label %90

; <label>:70                                      ; preds = %0
  br label %90

; <label>:71                                      ; preds = %0
  %72 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %73 = load %class.b2Draw*, %class.b2Draw** %72, align 8
  %74 = bitcast %class.b2Draw* %73 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %75 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %75, i64 6
  %77 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %76, align 8
  call void %77(%class.b2Draw* %73, %struct.b2Vec2* dereferenceable(8) %x1, %struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Color* dereferenceable(16) %color)
  %78 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %79 = load %class.b2Draw*, %class.b2Draw** %78, align 8
  %80 = bitcast %class.b2Draw* %79 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %81 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %81, i64 6
  %83 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %82, align 8
  call void %83(%class.b2Draw* %79, %struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Color* dereferenceable(16) %color)
  %84 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 11
  %85 = load %class.b2Draw*, %class.b2Draw** %84, align 8
  %86 = bitcast %class.b2Draw* %85 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %87 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %87, i64 6
  %89 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %88, align 8
  call void %89(%class.b2Draw* %85, %struct.b2Vec2* dereferenceable(8) %x2, %struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Color* dereferenceable(16) %color)
  br label %90

; <label>:90                                      ; preds = %71, %70, %43, %36
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World13DrawDebugDataEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %flags = alloca i32, align 4
  %b = alloca %class.b2Body*, align 8
  %xf = alloca %struct.b2Transform*, align 8
  %f = alloca %class.b2Fixture*, align 8
  %2 = alloca %struct.b2Color, align 4
  %3 = alloca %struct.b2Color, align 4
  %4 = alloca %struct.b2Color, align 4
  %5 = alloca %struct.b2Color, align 4
  %6 = alloca %struct.b2Color, align 4
  %j = alloca %class.b2Joint*, align 8
  %color = alloca %struct.b2Color, align 4
  %c = alloca %class.b2Contact*, align 8
  %color1 = alloca %struct.b2Color, align 4
  %bp = alloca %class.b2BroadPhase*, align 8
  %b2 = alloca %class.b2Body*, align 8
  %f3 = alloca %class.b2Fixture*, align 8
  %i = alloca i32, align 4
  %proxy = alloca %struct.b2FixtureProxy*, align 8
  %aabb = alloca %struct.b2Transform, align 4
  %vs = alloca [4 x %struct.b2Vec2], align 16
  %b4 = alloca %class.b2Body*, align 8
  %xf5 = alloca %struct.b2Transform, align 4
  store %class.b2World* %this, %class.b2World** %1, align 8
  %7 = load %class.b2World*, %class.b2World** %1, align 8
  %8 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %9 = load %class.b2Draw*, %class.b2Draw** %8, align 8
  %10 = icmp eq %class.b2Draw* %9, null
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  br label %239

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %14 = load %class.b2Draw*, %class.b2Draw** %13, align 8
  %15 = call i32 @_ZNK6b2Draw8GetFlagsEv(%class.b2Draw* %14)
  store i32 %15, i32* %flags, align 4
  %16 = load i32, i32* %flags, align 4
  %17 = and i32 %16, 1
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %78

; <label>:19                                      ; preds = %12
  %20 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 4
  %21 = load %class.b2Body*, %class.b2Body** %20, align 8
  store %class.b2Body* %21, %class.b2Body** %b, align 8
  br label %22

; <label>:22                                      ; preds = %74, %19
  %23 = load %class.b2Body*, %class.b2Body** %b, align 8
  %24 = icmp ne %class.b2Body* %23, null
  br i1 %24, label %25, label %77

; <label>:25                                      ; preds = %22
  %26 = load %class.b2Body*, %class.b2Body** %b, align 8
  %27 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %26)
  store %struct.b2Transform* %27, %struct.b2Transform** %xf, align 8
  %28 = load %class.b2Body*, %class.b2Body** %b, align 8
  %29 = call %class.b2Fixture* @_ZN6b2Body14GetFixtureListEv(%class.b2Body* %28)
  store %class.b2Fixture* %29, %class.b2Fixture** %f, align 8
  br label %30

; <label>:30                                      ; preds = %70, %25
  %31 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %32 = icmp ne %class.b2Fixture* %31, null
  br i1 %32, label %33, label %73

; <label>:33                                      ; preds = %30
  %34 = load %class.b2Body*, %class.b2Body** %b, align 8
  %35 = call zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %34)
  %36 = zext i1 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

; <label>:38                                      ; preds = %33
  %39 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %40 = load %struct.b2Transform*, %struct.b2Transform** %xf, align 8
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %2, float 5.000000e-01, float 5.000000e-01, float 0x3FD3333340000000, float 1.000000e+00)
  call void @_ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color(%class.b2World* %7, %class.b2Fixture* %39, %struct.b2Transform* dereferenceable(16) %40, %struct.b2Color* dereferenceable(16) %2)
  br label %69

; <label>:41                                      ; preds = %33
  %42 = load %class.b2Body*, %class.b2Body** %b, align 8
  %43 = call i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %42)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %48

; <label>:45                                      ; preds = %41
  %46 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %47 = load %struct.b2Transform*, %struct.b2Transform** %xf, align 8
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %3, float 5.000000e-01, float 0x3FECCCCCC0000000, float 5.000000e-01, float 1.000000e+00)
  call void @_ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color(%class.b2World* %7, %class.b2Fixture* %46, %struct.b2Transform* dereferenceable(16) %47, %struct.b2Color* dereferenceable(16) %3)
  br label %68

; <label>:48                                      ; preds = %41
  %49 = load %class.b2Body*, %class.b2Body** %b, align 8
  %50 = call i32 @_ZNK6b2Body7GetTypeEv(%class.b2Body* %49)
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %55

; <label>:52                                      ; preds = %48
  %53 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %54 = load %struct.b2Transform*, %struct.b2Transform** %xf, align 8
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %4, float 5.000000e-01, float 5.000000e-01, float 0x3FECCCCCC0000000, float 1.000000e+00)
  call void @_ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color(%class.b2World* %7, %class.b2Fixture* %53, %struct.b2Transform* dereferenceable(16) %54, %struct.b2Color* dereferenceable(16) %4)
  br label %67

; <label>:55                                      ; preds = %48
  %56 = load %class.b2Body*, %class.b2Body** %b, align 8
  %57 = call zeroext i1 @_ZNK6b2Body7IsAwakeEv(%class.b2Body* %56)
  %58 = zext i1 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

; <label>:60                                      ; preds = %55
  %61 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %62 = load %struct.b2Transform*, %struct.b2Transform** %xf, align 8
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %5, float 0x3FE3333340000000, float 0x3FE3333340000000, float 0x3FE3333340000000, float 1.000000e+00)
  call void @_ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color(%class.b2World* %7, %class.b2Fixture* %61, %struct.b2Transform* dereferenceable(16) %62, %struct.b2Color* dereferenceable(16) %5)
  br label %66

; <label>:63                                      ; preds = %55
  %64 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %65 = load %struct.b2Transform*, %struct.b2Transform** %xf, align 8
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %6, float 0x3FECCCCCC0000000, float 0x3FE6666660000000, float 0x3FE6666660000000, float 1.000000e+00)
  call void @_ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color(%class.b2World* %7, %class.b2Fixture* %64, %struct.b2Transform* dereferenceable(16) %65, %struct.b2Color* dereferenceable(16) %6)
  br label %66

; <label>:66                                      ; preds = %63, %60
  br label %67

; <label>:67                                      ; preds = %66, %52
  br label %68

; <label>:68                                      ; preds = %67, %45
  br label %69

; <label>:69                                      ; preds = %68, %38
  br label %70

; <label>:70                                      ; preds = %69
  %71 = load %class.b2Fixture*, %class.b2Fixture** %f, align 8
  %72 = call %class.b2Fixture* @_ZN9b2Fixture7GetNextEv(%class.b2Fixture* %71)
  store %class.b2Fixture* %72, %class.b2Fixture** %f, align 8
  br label %30

; <label>:73                                      ; preds = %30
  br label %74

; <label>:74                                      ; preds = %73
  %75 = load %class.b2Body*, %class.b2Body** %b, align 8
  %76 = call %class.b2Body* @_ZN6b2Body7GetNextEv(%class.b2Body* %75)
  store %class.b2Body* %76, %class.b2Body** %b, align 8
  br label %22

; <label>:77                                      ; preds = %22
  br label %78

; <label>:78                                      ; preds = %77, %12
  %79 = load i32, i32* %flags, align 4
  %80 = and i32 %79, 2
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %94

; <label>:82                                      ; preds = %78
  %83 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 5
  %84 = load %class.b2Joint*, %class.b2Joint** %83, align 8
  store %class.b2Joint* %84, %class.b2Joint** %j, align 8
  br label %85

; <label>:85                                      ; preds = %90, %82
  %86 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %87 = icmp ne %class.b2Joint* %86, null
  br i1 %87, label %88, label %93

; <label>:88                                      ; preds = %85
  %89 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  call void @_ZN7b2World9DrawJointEP7b2Joint(%class.b2World* %7, %class.b2Joint* %89)
  br label %90

; <label>:90                                      ; preds = %88
  %91 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %92 = call %class.b2Joint* @_ZN7b2Joint7GetNextEv(%class.b2Joint* %91)
  store %class.b2Joint* %92, %class.b2Joint** %j, align 8
  br label %85

; <label>:93                                      ; preds = %85
  br label %94

; <label>:94                                      ; preds = %93, %78
  %95 = load i32, i32* %flags, align 4
  %96 = and i32 %95, 8
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %110

; <label>:98                                      ; preds = %94
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %color, float 0x3FD3333340000000, float 0x3FECCCCCC0000000, float 0x3FECCCCCC0000000, float 1.000000e+00)
  %99 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 3
  %100 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %99, i32 0, i32 1
  %101 = load %class.b2Contact*, %class.b2Contact** %100, align 8
  store %class.b2Contact* %101, %class.b2Contact** %c, align 8
  br label %102

; <label>:102                                     ; preds = %106, %98
  %103 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %104 = icmp ne %class.b2Contact* %103, null
  br i1 %104, label %105, label %109

; <label>:105                                     ; preds = %102
  br label %106

; <label>:106                                     ; preds = %105
  %107 = load %class.b2Contact*, %class.b2Contact** %c, align 8
  %108 = call %class.b2Contact* @_ZN9b2Contact7GetNextEv(%class.b2Contact* %107)
  store %class.b2Contact* %108, %class.b2Contact** %c, align 8
  br label %102

; <label>:109                                     ; preds = %102
  br label %110

; <label>:110                                     ; preds = %109, %94
  %111 = load i32, i32* %flags, align 4
  %112 = and i32 %111, 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %209

; <label>:114                                     ; preds = %110
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %color1, float 0x3FECCCCCC0000000, float 0x3FD3333340000000, float 0x3FECCCCCC0000000, float 1.000000e+00)
  %115 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 3
  %116 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %115, i32 0, i32 0
  store %class.b2BroadPhase* %116, %class.b2BroadPhase** %bp, align 8
  %117 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 4
  %118 = load %class.b2Body*, %class.b2Body** %117, align 8
  store %class.b2Body* %118, %class.b2Body** %b2, align 8
  br label %119

; <label>:119                                     ; preds = %205, %114
  %120 = load %class.b2Body*, %class.b2Body** %b2, align 8
  %121 = icmp ne %class.b2Body* %120, null
  br i1 %121, label %122, label %208

; <label>:122                                     ; preds = %119
  %123 = load %class.b2Body*, %class.b2Body** %b2, align 8
  %124 = call zeroext i1 @_ZNK6b2Body8IsActiveEv(%class.b2Body* %123)
  %125 = zext i1 %124 to i32
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

; <label>:127                                     ; preds = %122
  br label %205

; <label>:128                                     ; preds = %122
  %129 = load %class.b2Body*, %class.b2Body** %b2, align 8
  %130 = call %class.b2Fixture* @_ZN6b2Body14GetFixtureListEv(%class.b2Body* %129)
  store %class.b2Fixture* %130, %class.b2Fixture** %f3, align 8
  br label %131

; <label>:131                                     ; preds = %201, %128
  %132 = load %class.b2Fixture*, %class.b2Fixture** %f3, align 8
  %133 = icmp ne %class.b2Fixture* %132, null
  br i1 %133, label %134, label %204

; <label>:134                                     ; preds = %131
  store i32 0, i32* %i, align 4
  br label %135

; <label>:135                                     ; preds = %197, %134
  %136 = load i32, i32* %i, align 4
  %137 = load %class.b2Fixture*, %class.b2Fixture** %f3, align 8
  %138 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %137, i32 0, i32 7
  %139 = load i32, i32* %138, align 8
  %140 = icmp slt i32 %136, %139
  br i1 %140, label %141, label %200

; <label>:141                                     ; preds = %135
  %142 = load %class.b2Fixture*, %class.b2Fixture** %f3, align 8
  %143 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %142, i32 0, i32 6
  %144 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %143, align 8
  %145 = load i32, i32* %i, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %144, i64 %146
  store %struct.b2FixtureProxy* %147, %struct.b2FixtureProxy** %proxy, align 8
  %148 = load %class.b2BroadPhase*, %class.b2BroadPhase** %bp, align 8
  %149 = load %struct.b2FixtureProxy*, %struct.b2FixtureProxy** %proxy, align 8
  %150 = getelementptr inbounds %struct.b2FixtureProxy, %struct.b2FixtureProxy* %149, i32 0, i32 3
  %151 = load i32, i32* %150, align 4
  %152 = call dereferenceable(16) %struct.b2Transform* @_ZNK12b2BroadPhase10GetFatAABBEi(%class.b2BroadPhase* %148, i32 %151)
  %153 = bitcast %struct.b2Transform* %aabb to i8*
  %154 = bitcast %struct.b2Transform* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 16, i32 4, i1 false)
  %155 = getelementptr inbounds [4 x %struct.b2Vec2], [4 x %struct.b2Vec2]* %vs, i32 0, i32 0
  %156 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %155, i64 4
  br label %157

; <label>:157                                     ; preds = %157, %141
  %158 = phi %struct.b2Vec2* [ %155, %141 ], [ %159, %157 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %158)
  %159 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %158, i64 1
  %160 = icmp eq %struct.b2Vec2* %159, %156
  br i1 %160, label %161, label %157

; <label>:161                                     ; preds = %157
  %162 = getelementptr inbounds [4 x %struct.b2Vec2], [4 x %struct.b2Vec2]* %vs, i64 0, i64 0
  %163 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 0
  %164 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %163, i32 0, i32 0
  %165 = load float, float* %164, align 4
  %166 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 0
  %167 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %166, i32 0, i32 1
  %168 = load float, float* %167, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %162, float %165, float %168)
  %169 = getelementptr inbounds [4 x %struct.b2Vec2], [4 x %struct.b2Vec2]* %vs, i64 0, i64 1
  %170 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 1
  %171 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %170, i32 0, i32 0
  %172 = load float, float* %171, align 4
  %173 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 0
  %174 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %173, i32 0, i32 1
  %175 = load float, float* %174, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %169, float %172, float %175)
  %176 = getelementptr inbounds [4 x %struct.b2Vec2], [4 x %struct.b2Vec2]* %vs, i64 0, i64 2
  %177 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 1
  %178 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %177, i32 0, i32 0
  %179 = load float, float* %178, align 4
  %180 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 1
  %181 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %180, i32 0, i32 1
  %182 = load float, float* %181, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %176, float %179, float %182)
  %183 = getelementptr inbounds [4 x %struct.b2Vec2], [4 x %struct.b2Vec2]* %vs, i64 0, i64 3
  %184 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 0
  %185 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %184, i32 0, i32 0
  %186 = load float, float* %185, align 4
  %187 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 1
  %188 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %187, i32 0, i32 1
  %189 = load float, float* %188, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %183, float %186, float %189)
  %190 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %191 = load %class.b2Draw*, %class.b2Draw** %190, align 8
  %192 = bitcast %class.b2Draw* %191 to void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)***
  %193 = load void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)*** %192, align 8
  %194 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)** %193, i64 2
  %195 = load void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, i32, %struct.b2Color*)** %194, align 8
  %196 = getelementptr inbounds [4 x %struct.b2Vec2], [4 x %struct.b2Vec2]* %vs, i32 0, i32 0
  call void %195(%class.b2Draw* %191, %struct.b2Vec2* %196, i32 4, %struct.b2Color* dereferenceable(16) %color1)
  br label %197

; <label>:197                                     ; preds = %161
  %198 = load i32, i32* %i, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %i, align 4
  br label %135

; <label>:200                                     ; preds = %135
  br label %201

; <label>:201                                     ; preds = %200
  %202 = load %class.b2Fixture*, %class.b2Fixture** %f3, align 8
  %203 = call %class.b2Fixture* @_ZN9b2Fixture7GetNextEv(%class.b2Fixture* %202)
  store %class.b2Fixture* %203, %class.b2Fixture** %f3, align 8
  br label %131

; <label>:204                                     ; preds = %131
  br label %205

; <label>:205                                     ; preds = %204, %127
  %206 = load %class.b2Body*, %class.b2Body** %b2, align 8
  %207 = call %class.b2Body* @_ZN6b2Body7GetNextEv(%class.b2Body* %206)
  store %class.b2Body* %207, %class.b2Body** %b2, align 8
  br label %119

; <label>:208                                     ; preds = %119
  br label %209

; <label>:209                                     ; preds = %208, %110
  %210 = load i32, i32* %flags, align 4
  %211 = and i32 %210, 16
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %239

; <label>:213                                     ; preds = %209
  %214 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 4
  %215 = load %class.b2Body*, %class.b2Body** %214, align 8
  store %class.b2Body* %215, %class.b2Body** %b4, align 8
  br label %216

; <label>:216                                     ; preds = %235, %213
  %217 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %218 = icmp ne %class.b2Body* %217, null
  br i1 %218, label %219, label %238

; <label>:219                                     ; preds = %216
  %220 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %221 = call dereferenceable(16) %struct.b2Transform* @_ZNK6b2Body12GetTransformEv(%class.b2Body* %220)
  %222 = bitcast %struct.b2Transform* %xf5 to i8*
  %223 = bitcast %struct.b2Transform* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 16, i32 4, i1 false)
  %224 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf5, i32 0, i32 0
  %225 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %226 = call dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body14GetWorldCenterEv(%class.b2Body* %225)
  %227 = bitcast %struct.b2Vec2* %224 to i8*
  %228 = bitcast %struct.b2Vec2* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %227, i8* %228, i64 8, i32 4, i1 false)
  %229 = getelementptr inbounds %class.b2World, %class.b2World* %7, i32 0, i32 11
  %230 = load %class.b2Draw*, %class.b2Draw** %229, align 8
  %231 = bitcast %class.b2Draw* %230 to void (%class.b2Draw*, %struct.b2Transform*)***
  %232 = load void (%class.b2Draw*, %struct.b2Transform*)**, void (%class.b2Draw*, %struct.b2Transform*)*** %231, align 8
  %233 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Transform*)*, void (%class.b2Draw*, %struct.b2Transform*)** %232, i64 7
  %234 = load void (%class.b2Draw*, %struct.b2Transform*)*, void (%class.b2Draw*, %struct.b2Transform*)** %233, align 8
  call void %234(%class.b2Draw* %230, %struct.b2Transform* dereferenceable(16) %xf5)
  br label %235

; <label>:235                                     ; preds = %219
  %236 = load %class.b2Body*, %class.b2Body** %b4, align 8
  %237 = call %class.b2Body* @_ZN6b2Body7GetNextEv(%class.b2Body* %236)
  store %class.b2Body* %237, %class.b2Body** %b4, align 8
  br label %216

; <label>:238                                     ; preds = %216
  br label %239

; <label>:239                                     ; preds = %238, %209, %11
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK6b2Draw8GetFlagsEv(%class.b2Draw* %this) #2 align 2 {
  %1 = alloca %class.b2Draw*, align 8
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  %2 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  %3 = getelementptr inbounds %class.b2Draw, %class.b2Draw* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Fixture* @_ZN6b2Body14GetFixtureListEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 12
  %4 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  ret %class.b2Fixture* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Fixture* @_ZN9b2Fixture7GetNextEv(%class.b2Fixture* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Fixture*, align 8
  store %class.b2Fixture* %this, %class.b2Fixture** %1, align 8
  %2 = load %class.b2Fixture*, %class.b2Fixture** %1, align 8
  %3 = getelementptr inbounds %class.b2Fixture, %class.b2Fixture* %2, i32 0, i32 1
  %4 = load %class.b2Fixture*, %class.b2Fixture** %3, align 8
  ret %class.b2Fixture* %4
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr %class.b2Joint* @_ZN7b2Joint7GetNextEv(%class.b2Joint* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Joint*, align 8
  store %class.b2Joint* %this, %class.b2Joint** %1, align 8
  %2 = load %class.b2Joint*, %class.b2Joint** %1, align 8
  %3 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %2, i32 0, i32 3
  %4 = load %class.b2Joint*, %class.b2Joint** %3, align 8
  ret %class.b2Joint* %4
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dereferenceable(16) %struct.b2Transform* @_ZNK12b2BroadPhase10GetFatAABBEi(%class.b2BroadPhase* %this, i32 %proxyId) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca i32, align 4
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store i32 %proxyId, i32* %2, align 4
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %5 = load i32, i32* %2, align 4
  %6 = call dereferenceable(16) %struct.b2Transform* @_ZNK13b2DynamicTree10GetFatAABBEi(%class.b2DynamicTree* %4, i32 %5)
  ret %struct.b2Transform* %6
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body14GetWorldCenterEv(%class.b2Body* %this) #5 comdat align 2 {
  %1 = alloca %class.b2Body*, align 8
  store %class.b2Body* %this, %class.b2Body** %1, align 8
  %2 = load %class.b2Body*, %class.b2Body** %1, align 8
  %3 = getelementptr inbounds %class.b2Body, %class.b2Body* %2, i32 0, i32 4
  %4 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %3, i32 0, i32 2
  ret %struct.b2Vec2* %4
}

; Function Attrs: uwtable
define i32 @_ZNK7b2World13GetProxyCountEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 3
  %4 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 0
  %5 = call i32 @_ZNK12b2BroadPhase13GetProxyCountEv(%class.b2BroadPhase* %4)
  ret i32 %5
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_ZNK12b2BroadPhase13GetProxyCountEv(%class.b2BroadPhase* %this) #5 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  %2 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %3 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: uwtable
define i32 @_ZNK7b2World13GetTreeHeightEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 3
  %4 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 0
  %5 = call i32 @_ZNK12b2BroadPhase13GetTreeHeightEv(%class.b2BroadPhase* %4)
  ret i32 %5
}

; Function Attrs: inlinehint uwtable
define linkonce_odr i32 @_ZNK12b2BroadPhase13GetTreeHeightEv(%class.b2BroadPhase* %this) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  %2 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %3 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %2, i32 0, i32 0
  %4 = call i32 @_ZNK13b2DynamicTree9GetHeightEv(%class.b2DynamicTree* %3)
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK13b2DynamicTree9GetHeightEv(%class.b2DynamicTree* %this) #2 align 2 {
  %1 = alloca i32, align 4
  %2 = alloca %class.b2DynamicTree*, align 8
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %2, align 8
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %2, align 8
  %4 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i32 0, i32* %1, align 4
  br label %17

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %13 = load %struct.b2TreeNode*, %struct.b2TreeNode** %12, align 8
  %14 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %13, i64 %11
  %15 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %14, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %1, align 4
  br label %17

; <label>:17                                      ; preds = %8, %7
  %18 = load i32, i32* %1, align 4
  ret i32 %18
}

; Function Attrs: uwtable
define i32 @_ZNK7b2World14GetTreeBalanceEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 3
  %4 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 0
  %5 = call i32 @_ZNK12b2BroadPhase14GetTreeBalanceEv(%class.b2BroadPhase* %4)
  ret i32 %5
}

; Function Attrs: inlinehint uwtable
define linkonce_odr i32 @_ZNK12b2BroadPhase14GetTreeBalanceEv(%class.b2BroadPhase* %this) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  %2 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %3 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %2, i32 0, i32 0
  %4 = call i32 @_ZNK13b2DynamicTree13GetMaxBalanceEv(%class.b2DynamicTree* %3)
  ret i32 %4
}

; Function Attrs: uwtable
define i32 @_ZNK13b2DynamicTree13GetMaxBalanceEv(%class.b2DynamicTree* %this) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %maxBalance = alloca i32, align 4
  %i = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %child1 = alloca i32, align 4
  %child2 = alloca i32, align 4
  %balance = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  store i32 0, i32* %maxBalance, align 4
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %53, %0
  %4 = load i32, i32* %i, align 4
  %5 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %56

; <label>:8                                       ; preds = %3
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %10 = load %struct.b2TreeNode*, %struct.b2TreeNode** %9, align 8
  %11 = load i32, i32* %i, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %10, i64 %12
  store %struct.b2TreeNode* %13, %struct.b2TreeNode** %node, align 8
  %14 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %15 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %14, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp sle i32 %16, 1
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %8
  br label %53

; <label>:19                                      ; preds = %8
  %20 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %21 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %20)
  %22 = zext i1 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %19
  br label %27

; <label>:25                                      ; preds = %19
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31.466, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 685, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree13GetMaxBalanceEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %27

; <label>:27                                      ; preds = %26, %24
  %28 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %29 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %child1, align 4
  %31 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %32 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %31, i32 0, i32 4
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %child2, align 4
  %34 = load i32, i32* %child2, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %37 = load %struct.b2TreeNode*, %struct.b2TreeNode** %36, align 8
  %38 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %37, i64 %35
  %39 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %38, i32 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %child1, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %44 = load %struct.b2TreeNode*, %struct.b2TreeNode** %43, align 8
  %45 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %44, i64 %42
  %46 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %45, i32 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = sub nsw i32 %40, %47
  %49 = call i32 @_Z5b2AbsIiET_S0_(i32 %48)
  store i32 %49, i32* %balance, align 4
  %50 = load i32, i32* %maxBalance, align 4
  %51 = load i32, i32* %balance, align 4
  %52 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %50, i32 %51)
  store i32 %52, i32* %maxBalance, align 4
  br label %53

; <label>:53                                      ; preds = %27, %18
  %54 = load i32, i32* %i, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %i, align 4
  br label %3

; <label>:56                                      ; preds = %3
  %57 = load i32, i32* %maxBalance, align 4
  ret i32 %57
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr i32 @_Z5b2AbsIiET_S0_(i32 %a) #5 comdat {
  %1 = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = load i32, i32* %1, align 4
  br label %9

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %1, align 4
  %8 = sub nsw i32 0, %7
  br label %9

; <label>:9                                       ; preds = %6, %4
  %10 = phi i32 [ %5, %4 ], [ %8, %6 ]
  ret i32 %10
}

; Function Attrs: uwtable
define float @_ZNK7b2World14GetTreeQualityEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 3
  %4 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %3, i32 0, i32 0
  %5 = call float @_ZNK12b2BroadPhase14GetTreeQualityEv(%class.b2BroadPhase* %4)
  ret float %5
}

; Function Attrs: inlinehint uwtable
define linkonce_odr float @_ZNK12b2BroadPhase14GetTreeQualityEv(%class.b2BroadPhase* %this) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  %2 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %3 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %2, i32 0, i32 0
  %4 = call float @_ZNK13b2DynamicTree12GetAreaRatioEv(%class.b2DynamicTree* %3)
  ret float %4
}

; Function Attrs: uwtable
define float @_ZNK13b2DynamicTree12GetAreaRatioEv(%class.b2DynamicTree* %this) #0 align 2 {
  %1 = alloca float, align 4
  %2 = alloca %class.b2DynamicTree*, align 8
  %root = alloca %struct.b2TreeNode*, align 8
  %rootArea = alloca float, align 4
  %totalArea = alloca float, align 4
  %i = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %2, align 8
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %2, align 8
  %4 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store float 0.000000e+00, float* %1, align 4
  br label %47

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %10 = load %struct.b2TreeNode*, %struct.b2TreeNode** %9, align 8
  %11 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %10, i64 %13
  store %struct.b2TreeNode* %14, %struct.b2TreeNode** %root, align 8
  %15 = load %struct.b2TreeNode*, %struct.b2TreeNode** %root, align 8
  %16 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %15, i32 0, i32 0
  %17 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %16)
  store float %17, float* %rootArea, align 4
  store float 0.000000e+00, float* %totalArea, align 4
  store i32 0, i32* %i, align 4
  br label %18

; <label>:18                                      ; preds = %40, %8
  %19 = load i32, i32* %i, align 4
  %20 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %19, %21
  br i1 %22, label %23, label %43

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %25 = load %struct.b2TreeNode*, %struct.b2TreeNode** %24, align 8
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %25, i64 %27
  store %struct.b2TreeNode* %28, %struct.b2TreeNode** %node, align 8
  %29 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %30 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %29, i32 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %23
  br label %40

; <label>:34                                      ; preds = %23
  %35 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %36 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %35, i32 0, i32 0
  %37 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %36)
  %38 = load float, float* %totalArea, align 4
  %39 = fadd float %38, %37
  store float %39, float* %totalArea, align 4
  br label %40

; <label>:40                                      ; preds = %34, %33
  %41 = load i32, i32* %i, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %i, align 4
  br label %18

; <label>:43                                      ; preds = %18
  %44 = load float, float* %totalArea, align 4
  %45 = load float, float* %rootArea, align 4
  %46 = fdiv float %44, %45
  store float %46, float* %1, align 4
  br label %47

; <label>:47                                      ; preds = %43, %7
  %48 = load float, float* %1, align 4
  ret float %48
}

; Function Attrs: uwtable
define void @_ZN7b2World11ShiftOriginERK6b2Vec2(%class.b2World* %this, %struct.b2Vec2* dereferenceable(8) %newOrigin) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %b = alloca %class.b2Body*, align 8
  %j = alloca %class.b2Joint*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  store %struct.b2Vec2* %newOrigin, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2World*, %class.b2World** %1, align 8
  %4 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.293, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1.279, i32 0, i32 0), i32 1278, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZN7b2World11ShiftOriginERK6b2Vec2, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %11
  br label %61

; <label>:17                                      ; preds = %11
  %18 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 4
  %19 = load %class.b2Body*, %class.b2Body** %18, align 8
  store %class.b2Body* %19, %class.b2Body** %b, align 8
  br label %20

; <label>:20                                      ; preds = %36, %17
  %21 = load %class.b2Body*, %class.b2Body** %b, align 8
  %22 = icmp ne %class.b2Body* %21, null
  br i1 %22, label %23, label %40

; <label>:23                                      ; preds = %20
  %24 = load %class.b2Body*, %class.b2Body** %b, align 8
  %25 = getelementptr inbounds %class.b2Body, %class.b2Body* %24, i32 0, i32 3
  %26 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %25, i32 0, i32 0
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %26, %struct.b2Vec2* dereferenceable(8) %27)
  %28 = load %class.b2Body*, %class.b2Body** %b, align 8
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %28, i32 0, i32 4
  %30 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %29, i32 0, i32 1
  %31 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %30, %struct.b2Vec2* dereferenceable(8) %31)
  %32 = load %class.b2Body*, %class.b2Body** %b, align 8
  %33 = getelementptr inbounds %class.b2Body, %class.b2Body* %32, i32 0, i32 4
  %34 = getelementptr inbounds %struct.b2Sweep, %struct.b2Sweep* %33, i32 0, i32 2
  %35 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %34, %struct.b2Vec2* dereferenceable(8) %35)
  br label %36

; <label>:36                                      ; preds = %23
  %37 = load %class.b2Body*, %class.b2Body** %b, align 8
  %38 = getelementptr inbounds %class.b2Body, %class.b2Body* %37, i32 0, i32 11
  %39 = load %class.b2Body*, %class.b2Body** %38, align 8
  store %class.b2Body* %39, %class.b2Body** %b, align 8
  br label %20

; <label>:40                                      ; preds = %20
  %41 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 5
  %42 = load %class.b2Joint*, %class.b2Joint** %41, align 8
  store %class.b2Joint* %42, %class.b2Joint** %j, align 8
  br label %43

; <label>:43                                      ; preds = %53, %40
  %44 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %45 = icmp ne %class.b2Joint* %44, null
  br i1 %45, label %46, label %57

; <label>:46                                      ; preds = %43
  %47 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %48 = bitcast %class.b2Joint* %47 to void (%class.b2Joint*, %struct.b2Vec2*)***
  %49 = load void (%class.b2Joint*, %struct.b2Vec2*)**, void (%class.b2Joint*, %struct.b2Vec2*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.b2Joint*, %struct.b2Vec2*)*, void (%class.b2Joint*, %struct.b2Vec2*)** %49, i64 5
  %51 = load void (%class.b2Joint*, %struct.b2Vec2*)*, void (%class.b2Joint*, %struct.b2Vec2*)** %50, align 8
  %52 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void %51(%class.b2Joint* %47, %struct.b2Vec2* dereferenceable(8) %52)
  br label %53

; <label>:53                                      ; preds = %46
  %54 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %55 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %54, i32 0, i32 3
  %56 = load %class.b2Joint*, %class.b2Joint** %55, align 8
  store %class.b2Joint* %56, %class.b2Joint** %j, align 8
  br label %43

; <label>:57                                      ; preds = %43
  %58 = getelementptr inbounds %class.b2World, %class.b2World* %3, i32 0, i32 3
  %59 = getelementptr inbounds %class.b2ContactManager, %class.b2ContactManager* %58, i32 0, i32 0
  %60 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN12b2BroadPhase11ShiftOriginERK6b2Vec2(%class.b2BroadPhase* %59, %struct.b2Vec2* dereferenceable(8) %60)
  br label %61

; <label>:61                                      ; preds = %57, %16
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZN12b2BroadPhase11ShiftOriginERK6b2Vec2(%class.b2BroadPhase* %this, %struct.b2Vec2* dereferenceable(8) %newOrigin) #1 comdat align 2 {
  %1 = alloca %class.b2BroadPhase*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2BroadPhase* %this, %class.b2BroadPhase** %1, align 8
  store %struct.b2Vec2* %newOrigin, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2BroadPhase*, %class.b2BroadPhase** %1, align 8
  %4 = getelementptr inbounds %class.b2BroadPhase, %class.b2BroadPhase* %3, i32 0, i32 0
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN13b2DynamicTree11ShiftOriginERK6b2Vec2(%class.b2DynamicTree* %4, %struct.b2Vec2* dereferenceable(8) %5)
  ret void
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTree11ShiftOriginERK6b2Vec2(%class.b2DynamicTree* %this, %struct.b2Vec2* dereferenceable(8) %newOrigin) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %i = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store %struct.b2Vec2* %newOrigin, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %26, %0
  %5 = load i32, i32* %i, align 4
  %6 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %29

; <label>:9                                       ; preds = %4
  %10 = load i32, i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %13 = load %struct.b2TreeNode*, %struct.b2TreeNode** %12, align 8
  %14 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %13, i64 %11
  %15 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %15, i32 0, i32 0
  %17 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %16, %struct.b2Vec2* dereferenceable(8) %17)
  %18 = load i32, i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %21 = load %struct.b2TreeNode*, %struct.b2TreeNode** %20, align 8
  %22 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %21, i64 %19
  %23 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %23, i32 0, i32 1
  %25 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %24, %struct.b2Vec2* dereferenceable(8) %25)
  br label %26

; <label>:26                                      ; preds = %9
  %27 = load i32, i32* %i, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %i, align 4
  br label %4

; <label>:29                                      ; preds = %4
  ret void
}

; Function Attrs: uwtable
define void @_ZN7b2World4DumpEv(%class.b2World* %this) #0 align 2 {
  %1 = alloca %class.b2World*, align 8
  %i = alloca i32, align 4
  %b = alloca %class.b2Body*, align 8
  %j = alloca %class.b2Joint*, align 8
  %j1 = alloca %class.b2Joint*, align 8
  %j2 = alloca %class.b2Joint*, align 8
  store %class.b2World* %this, %class.b2World** %1, align 8
  %2 = load %class.b2World*, %class.b2World** %1, align 8
  %3 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %98

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 8
  %10 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %9, i32 0, i32 0
  %11 = load float, float* %10, align 8
  %12 = fpext float %11 to double
  %13 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 8
  %14 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %13, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fpext float %15 to double
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.294, i32 0, i32 0), double %12, double %16)
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.295, i32 0, i32 0))
  %17 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 6
  %18 = load i32, i32* %17, align 8
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11.296, i32 0, i32 0), i32 %18)
  %19 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 7
  %20 = load i32, i32* %19, align 4
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.12.297, i32 0, i32 0), i32 %20)
  store i32 0, i32* %i, align 4
  %21 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 4
  %22 = load %class.b2Body*, %class.b2Body** %21, align 8
  store %class.b2Body* %22, %class.b2Body** %b, align 8
  br label %23

; <label>:23                                      ; preds = %33, %8
  %24 = load %class.b2Body*, %class.b2Body** %b, align 8
  %25 = icmp ne %class.b2Body* %24, null
  br i1 %25, label %26, label %37

; <label>:26                                      ; preds = %23
  %27 = load i32, i32* %i, align 4
  %28 = load %class.b2Body*, %class.b2Body** %b, align 8
  %29 = getelementptr inbounds %class.b2Body, %class.b2Body* %28, i32 0, i32 2
  store i32 %27, i32* %29, align 8
  %30 = load %class.b2Body*, %class.b2Body** %b, align 8
  call void @_ZN6b2Body4DumpEv(%class.b2Body* %30)
  %31 = load i32, i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %33

; <label>:33                                      ; preds = %26
  %34 = load %class.b2Body*, %class.b2Body** %b, align 8
  %35 = getelementptr inbounds %class.b2Body, %class.b2Body* %34, i32 0, i32 11
  %36 = load %class.b2Body*, %class.b2Body** %35, align 8
  store %class.b2Body* %36, %class.b2Body** %b, align 8
  br label %23

; <label>:37                                      ; preds = %23
  store i32 0, i32* %i, align 4
  %38 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 5
  %39 = load %class.b2Joint*, %class.b2Joint** %38, align 8
  store %class.b2Joint* %39, %class.b2Joint** %j, align 8
  br label %40

; <label>:40                                      ; preds = %49, %37
  %41 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %42 = icmp ne %class.b2Joint* %41, null
  br i1 %42, label %43, label %53

; <label>:43                                      ; preds = %40
  %44 = load i32, i32* %i, align 4
  %45 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %46 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %45, i32 0, i32 8
  store i32 %44, i32* %46, align 8
  %47 = load i32, i32* %i, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %i, align 4
  br label %49

; <label>:49                                      ; preds = %43
  %50 = load %class.b2Joint*, %class.b2Joint** %j, align 8
  %51 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %50, i32 0, i32 3
  %52 = load %class.b2Joint*, %class.b2Joint** %51, align 8
  store %class.b2Joint* %52, %class.b2Joint** %j, align 8
  br label %40

; <label>:53                                      ; preds = %40
  %54 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 5
  %55 = load %class.b2Joint*, %class.b2Joint** %54, align 8
  store %class.b2Joint* %55, %class.b2Joint** %j1, align 8
  br label %56

; <label>:56                                      ; preds = %71, %53
  %57 = load %class.b2Joint*, %class.b2Joint** %j1, align 8
  %58 = icmp ne %class.b2Joint* %57, null
  br i1 %58, label %59, label %75

; <label>:59                                      ; preds = %56
  %60 = load %class.b2Joint*, %class.b2Joint** %j1, align 8
  %61 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 6
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %59
  br label %71

; <label>:65                                      ; preds = %59
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.298, i32 0, i32 0))
  %66 = load %class.b2Joint*, %class.b2Joint** %j1, align 8
  %67 = bitcast %class.b2Joint* %66 to void (%class.b2Joint*)***
  %68 = load void (%class.b2Joint*)**, void (%class.b2Joint*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.b2Joint*)*, void (%class.b2Joint*)** %68, i64 4
  %70 = load void (%class.b2Joint*)*, void (%class.b2Joint*)** %69, align 8
  call void %70(%class.b2Joint* %66)
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.299, i32 0, i32 0))
  br label %71

; <label>:71                                      ; preds = %65, %64
  %72 = load %class.b2Joint*, %class.b2Joint** %j1, align 8
  %73 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %72, i32 0, i32 3
  %74 = load %class.b2Joint*, %class.b2Joint** %73, align 8
  store %class.b2Joint* %74, %class.b2Joint** %j1, align 8
  br label %56

; <label>:75                                      ; preds = %56
  %76 = getelementptr inbounds %class.b2World, %class.b2World* %2, i32 0, i32 5
  %77 = load %class.b2Joint*, %class.b2Joint** %76, align 8
  store %class.b2Joint* %77, %class.b2Joint** %j2, align 8
  br label %78

; <label>:78                                      ; preds = %93, %75
  %79 = load %class.b2Joint*, %class.b2Joint** %j2, align 8
  %80 = icmp ne %class.b2Joint* %79, null
  br i1 %80, label %81, label %97

; <label>:81                                      ; preds = %78
  %82 = load %class.b2Joint*, %class.b2Joint** %j2, align 8
  %83 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp ne i32 %84, 6
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %81
  br label %93

; <label>:87                                      ; preds = %81
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.298, i32 0, i32 0))
  %88 = load %class.b2Joint*, %class.b2Joint** %j2, align 8
  %89 = bitcast %class.b2Joint* %88 to void (%class.b2Joint*)***
  %90 = load void (%class.b2Joint*)**, void (%class.b2Joint*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.b2Joint*)*, void (%class.b2Joint*)** %90, i64 4
  %92 = load void (%class.b2Joint*)*, void (%class.b2Joint*)** %91, align 8
  call void %92(%class.b2Joint* %88)
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.299, i32 0, i32 0))
  br label %93

; <label>:93                                      ; preds = %87, %86
  %94 = load %class.b2Joint*, %class.b2Joint** %j2, align 8
  %95 = getelementptr inbounds %class.b2Joint, %class.b2Joint* %94, i32 0, i32 3
  %96 = load %class.b2Joint*, %class.b2Joint** %95, align 8
  store %class.b2Joint* %96, %class.b2Joint** %j2, align 8
  br label %78

; <label>:97                                      ; preds = %78
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.300, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16.301, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17.302, i32 0, i32 0))
  call void (i8*, ...) @_Z5b2LogPKcz(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18.303, i32 0, i32 0))
  br label %98

; <label>:98                                      ; preds = %97, %7
  ret void
}

; Function Attrs: uwtable
define void @_ZN16b2BlockAllocator5ClearEv(%class.b2BlockAllocator* %this) #0 align 2 {
  %1 = alloca %class.b2BlockAllocator*, align 8
  %i = alloca i32, align 4
  store %class.b2BlockAllocator* %this, %class.b2BlockAllocator** %1, align 8
  %2 = load %class.b2BlockAllocator*, %class.b2BlockAllocator** %1, align 8
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %17, %0
  %4 = load i32, i32* %i, align 4
  %5 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %20

; <label>:8                                       ; preds = %3
  %9 = load i32, i32* %i, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 0
  %12 = load %struct.b2Chunk*, %struct.b2Chunk** %11, align 8
  %13 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %12, i64 %10
  %14 = getelementptr inbounds %struct.b2Chunk, %struct.b2Chunk* %13, i32 0, i32 1
  %15 = load %struct.b2Block*, %struct.b2Block** %14, align 8
  %16 = bitcast %struct.b2Block* %15 to i8*
  call void @_Z6b2FreePv(i8* %16)
  br label %17

; <label>:17                                      ; preds = %8
  %18 = load i32, i32* %i, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %3

; <label>:20                                      ; preds = %3
  %21 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 1
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 0
  %23 = load %struct.b2Chunk*, %struct.b2Chunk** %22, align 8
  %24 = bitcast %struct.b2Chunk* %23 to i8*
  %25 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = mul i64 %27, 16
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 %28, i32 8, i1 false)
  %29 = getelementptr inbounds %class.b2BlockAllocator, %class.b2BlockAllocator* %2, i32 0, i32 3
  %30 = getelementptr inbounds [14 x %struct.b2Block*], [14 x %struct.b2Block*]* %29, i32 0, i32 0
  %31 = bitcast %struct.b2Block** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 112, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN6b2DrawC2Ev(%class.b2Draw* %this) unnamed_addr #2 align 2 {
  %1 = alloca %class.b2Draw*, align 8
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  %2 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  %3 = bitcast %class.b2Draw* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZTV6b2Draw, i64 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.b2Draw, %class.b2Draw* %2, i32 0, i32 1
  store i32 0, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN6b2DrawD2Ev(%class.b2Draw* %this) unnamed_addr #2 comdat align 2 {
  %1 = alloca %class.b2Draw*, align 8
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  %2 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN6b2DrawD0Ev(%class.b2Draw* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %class.b2Draw*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  %4 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  invoke void @_ZN6b2DrawD2Ev(%class.b2Draw* %4)
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = bitcast %class.b2Draw* %4 to i8*
  call void @_ZdlPv(i8* %6) #14
  ret void

; <label>:7                                       ; preds = %0
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %2, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %3, align 4
  %11 = bitcast %class.b2Draw* %4 to i8*
  call void @_ZdlPv(i8* %11) #14
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: nounwind uwtable
define void @_ZN6b2Draw8SetFlagsEj(%class.b2Draw* %this, i32 %flags) #2 align 2 {
  %1 = alloca %class.b2Draw*, align 8
  %2 = alloca i32, align 4
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  store i32 %flags, i32* %2, align 4
  %3 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds %class.b2Draw, %class.b2Draw* %3, i32 0, i32 1
  store i32 %4, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN6b2Draw11AppendFlagsEj(%class.b2Draw* %this, i32 %flags) #2 align 2 {
  %1 = alloca %class.b2Draw*, align 8
  %2 = alloca i32, align 4
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  store i32 %flags, i32* %2, align 4
  %3 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds %class.b2Draw, %class.b2Draw* %3, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, %4
  store i32 %7, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN6b2Draw10ClearFlagsEj(%class.b2Draw* %this, i32 %flags) #2 align 2 {
  %1 = alloca %class.b2Draw*, align 8
  %2 = alloca i32, align 4
  store %class.b2Draw* %this, %class.b2Draw** %1, align 8
  store i32 %flags, i32* %2, align 4
  %3 = load %class.b2Draw*, %class.b2Draw** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = xor i32 %4, -1
  %6 = getelementptr inbounds %class.b2Draw, %class.b2Draw* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, %5
  store i32 %8, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @_ZNK16b2StackAllocator16GetMaxAllocationEv(%class.b2StackAllocator* %this) #2 align 2 {
  %1 = alloca %class.b2StackAllocator*, align 8
  store %class.b2StackAllocator* %this, %class.b2StackAllocator** %1, align 8
  %2 = load %class.b2StackAllocator*, %class.b2StackAllocator** %1, align 8
  %3 = getelementptr inbounds %class.b2StackAllocator, %class.b2StackAllocator* %2, i32 0, i32 3
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define void @_ZN11b2EdgeShape3SetERK6b2Vec2S2_(%class.b2EdgeShape* %this, %struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2) #2 align 2 {
  %1 = alloca %class.b2EdgeShape*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca %struct.b2Vec2*, align 8
  store %class.b2EdgeShape* %this, %class.b2EdgeShape** %1, align 8
  store %struct.b2Vec2* %v1, %struct.b2Vec2** %2, align 8
  store %struct.b2Vec2* %v2, %struct.b2Vec2** %3, align 8
  %4 = load %class.b2EdgeShape*, %class.b2EdgeShape** %1, align 8
  %5 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 1
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %7 = bitcast %struct.b2Vec2* %5 to i8*
  %8 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false)
  %9 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 2
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %11 = bitcast %struct.b2Vec2* %9 to i8*
  %12 = bitcast %struct.b2Vec2* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false)
  %13 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 5
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.b2EdgeShape, %class.b2EdgeShape* %4, i32 0, i32 6
  store i8 0, i8* %14, align 1
  ret void
}

; Function Attrs: uwtable
define void @_ZN12b2ChainShape10CreateLoopEPK6b2Vec2i(%class.b2ChainShape* %this, %struct.b2Vec2* %vertices, i32 %count) #0 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  %v1 = alloca %struct.b2Vec2, align 4
  %v2 = alloca %struct.b2Vec2, align 4
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Vec2* %vertices, %struct.b2Vec2** %2, align 8
  store i32 %count, i32* %3, align 4
  %4 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %5 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %5, align 8
  %7 = icmp eq %struct.b2Vec2* %6, null
  br i1 %7, label %8, label %13

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %8
  br label %15

; <label>:13                                      ; preds = %8, %0
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 38, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN12b2ChainShape10CreateLoopEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load i32, i32* %3, align 4
  %17 = icmp sge i32 %16, 3
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %15
  br label %21

; <label>:19                                      ; preds = %15
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.366, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 39, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN12b2ChainShape10CreateLoopEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %21

; <label>:21                                      ; preds = %20, %18
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 3
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %21
  br label %101

; <label>:25                                      ; preds = %21
  store i32 1, i32* %i, align 4
  br label %26

; <label>:26                                      ; preds = %50, %25
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %3, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %53

; <label>:30                                      ; preds = %26
  %31 = load i32, i32* %i, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %34, i64 %33
  %36 = bitcast %struct.b2Vec2* %v1 to i8*
  %37 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  %38 = load i32, i32* %i, align 4
  %39 = sext i32 %38 to i64
  %40 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %41 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %40, i64 %39
  %42 = bitcast %struct.b2Vec2* %v2 to i8*
  %43 = bitcast %struct.b2Vec2* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false)
  %44 = call float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v1, %struct.b2Vec2* dereferenceable(8) %v2)
  %45 = fcmp ogt float %44, 0x3EFA36E2E0000000
  br i1 %45, label %46, label %47

; <label>:46                                      ; preds = %30
  br label %49

; <label>:47                                      ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.367, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1.362, i32 0, i32 0), i32 50, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN12b2ChainShape10CreateLoopEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %49

; <label>:49                                      ; preds = %48, %46
  br label %50

; <label>:50                                      ; preds = %49
  %51 = load i32, i32* %i, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %i, align 4
  br label %26

; <label>:53                                      ; preds = %26
  %54 = load i32, i32* %3, align 4
  %55 = add nsw i32 %54, 1
  %56 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = mul i64 %59, 8
  %61 = trunc i64 %60 to i32
  %62 = call i8* @_Z7b2Alloci(i32 %61)
  %63 = bitcast i8* %62 to %struct.b2Vec2*
  %64 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  store %struct.b2Vec2* %63, %struct.b2Vec2** %64, align 8
  %65 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %66 = load %struct.b2Vec2*, %struct.b2Vec2** %65, align 8
  %67 = bitcast %struct.b2Vec2* %66 to i8*
  %68 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %69 = bitcast %struct.b2Vec2* %68 to i8*
  %70 = load i32, i32* %3, align 4
  %71 = sext i32 %70 to i64
  %72 = mul i64 %71, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %69, i64 %72, i32 4, i1 false)
  %73 = load i32, i32* %3, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %76 = load %struct.b2Vec2*, %struct.b2Vec2** %75, align 8
  %77 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %76, i64 %74
  %78 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %79 = load %struct.b2Vec2*, %struct.b2Vec2** %78, align 8
  %80 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %79, i64 0
  %81 = bitcast %struct.b2Vec2* %77 to i8*
  %82 = bitcast %struct.b2Vec2* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 4, i1 false)
  %83 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 3
  %84 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = sub nsw i32 %85, 2
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %89 = load %struct.b2Vec2*, %struct.b2Vec2** %88, align 8
  %90 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %89, i64 %87
  %91 = bitcast %struct.b2Vec2* %83 to i8*
  %92 = bitcast %struct.b2Vec2* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 4, i1 false)
  %93 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 4
  %94 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 1
  %95 = load %struct.b2Vec2*, %struct.b2Vec2** %94, align 8
  %96 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %95, i64 1
  %97 = bitcast %struct.b2Vec2* %93 to i8*
  %98 = bitcast %struct.b2Vec2* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 4, i1 false)
  %99 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 5
  store i8 1, i8* %99, align 4
  %100 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %4, i32 0, i32 6
  store i8 1, i8* %100, align 1
  br label %101

; <label>:101                                     ; preds = %53, %24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12b2ChainShape13SetPrevVertexERK6b2Vec2(%class.b2ChainShape* %this, %struct.b2Vec2* dereferenceable(8) %prevVertex) #2 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Vec2* %prevVertex, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %4 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 3
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  %7 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 4, i1 false)
  %8 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 5
  store i8 1, i8* %8, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12b2ChainShape13SetNextVertexERK6b2Vec2(%class.b2ChainShape* %this, %struct.b2Vec2* dereferenceable(8) %nextVertex) #2 align 2 {
  %1 = alloca %class.b2ChainShape*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %class.b2ChainShape* %this, %class.b2ChainShape** %1, align 8
  store %struct.b2Vec2* %nextVertex, %struct.b2Vec2** %2, align 8
  %3 = load %class.b2ChainShape*, %class.b2ChainShape** %1, align 8
  %4 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 4
  %5 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %6 = bitcast %struct.b2Vec2* %4 to i8*
  %7 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 4, i1 false)
  %8 = getelementptr inbounds %class.b2ChainShape, %class.b2ChainShape* %3, i32 0, i32 6
  store i8 1, i8* %8, align 1
  ret void
}

; Function Attrs: uwtable
define void @_ZN14b2PolygonShape8SetAsBoxEff(%class.b2PolygonShape* %this, float %hx, float %hy) #0 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  store float %hx, float* %2, align 4
  store float %hy, float* %3, align 4
  %4 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %5 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 4
  store i32 4, i32* %5, align 8
  %6 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 2
  %7 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %6, i64 0, i64 0
  %8 = load float, float* %2, align 4
  %9 = fsub float -0.000000e+00, %8
  %10 = load float, float* %3, align 4
  %11 = fsub float -0.000000e+00, %10
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %7, float %9, float %11)
  %12 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 2
  %13 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %12, i64 0, i64 1
  %14 = load float, float* %2, align 4
  %15 = load float, float* %3, align 4
  %16 = fsub float -0.000000e+00, %15
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %13, float %14, float %16)
  %17 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 2
  %18 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %17, i64 0, i64 2
  %19 = load float, float* %2, align 4
  %20 = load float, float* %3, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %18, float %19, float %20)
  %21 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 2
  %22 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %21, i64 0, i64 3
  %23 = load float, float* %2, align 4
  %24 = fsub float -0.000000e+00, %23
  %25 = load float, float* %3, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %22, float %24, float %25)
  %26 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 3
  %27 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %26, i64 0, i64 0
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %27, float 0.000000e+00, float -1.000000e+00)
  %28 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 3
  %29 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %28, i64 0, i64 1
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %29, float 1.000000e+00, float 0.000000e+00)
  %30 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 3
  %31 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %30, i64 0, i64 2
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %31, float 0.000000e+00, float 1.000000e+00)
  %32 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 3
  %33 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %32, i64 0, i64 3
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %33, float -1.000000e+00, float 0.000000e+00)
  %34 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %4, i32 0, i32 1
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %34)
  ret void
}

; Function Attrs: uwtable
define void @_ZN14b2PolygonShape8SetAsBoxEffRK6b2Vec2f(%class.b2PolygonShape* %this, float %hx, float %hy, %struct.b2Vec2* dereferenceable(8) %center, float %angle) #0 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = alloca %struct.b2Vec2*, align 8
  %5 = alloca float, align 4
  %xf = alloca %struct.b2Transform, align 4
  %i = alloca i32, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  store float %hx, float* %2, align 4
  store float %hy, float* %3, align 4
  store %struct.b2Vec2* %center, %struct.b2Vec2** %4, align 8
  store float %angle, float* %5, align 4
  %8 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %9 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 4
  store i32 4, i32* %9, align 8
  %10 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 2
  %11 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %10, i64 0, i64 0
  %12 = load float, float* %2, align 4
  %13 = fsub float -0.000000e+00, %12
  %14 = load float, float* %3, align 4
  %15 = fsub float -0.000000e+00, %14
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %11, float %13, float %15)
  %16 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 2
  %17 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %16, i64 0, i64 1
  %18 = load float, float* %2, align 4
  %19 = load float, float* %3, align 4
  %20 = fsub float -0.000000e+00, %19
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %17, float %18, float %20)
  %21 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 2
  %22 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %21, i64 0, i64 2
  %23 = load float, float* %2, align 4
  %24 = load float, float* %3, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %22, float %23, float %24)
  %25 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 2
  %26 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %25, i64 0, i64 3
  %27 = load float, float* %2, align 4
  %28 = fsub float -0.000000e+00, %27
  %29 = load float, float* %3, align 4
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %26, float %28, float %29)
  %30 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 3
  %31 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %30, i64 0, i64 0
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %31, float 0.000000e+00, float -1.000000e+00)
  %32 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 3
  %33 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %32, i64 0, i64 1
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %33, float 1.000000e+00, float 0.000000e+00)
  %34 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 3
  %35 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %34, i64 0, i64 2
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %35, float 0.000000e+00, float 1.000000e+00)
  %36 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 3
  %37 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %36, i64 0, i64 3
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %37, float -1.000000e+00, float 0.000000e+00)
  %38 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 1
  %39 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %40 = bitcast %struct.b2Vec2* %38 to i8*
  %41 = bitcast %struct.b2Vec2* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 4, i1 false)
  call void @_ZN11b2TransformC2Ev(%struct.b2Transform* %xf)
  %42 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf, i32 0, i32 0
  %43 = load %struct.b2Vec2*, %struct.b2Vec2** %4, align 8
  %44 = bitcast %struct.b2Vec2* %42 to i8*
  %45 = bitcast %struct.b2Vec2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 4, i1 false)
  %46 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf, i32 0, i32 1
  %47 = load float, float* %5, align 4
  call void @_ZN5b2Rot3SetEf(%struct.b2Vec2* %46, float %47)
  store i32 0, i32* %i, align 4
  br label %48

; <label>:48                                      ; preds = %79, %0
  %49 = load i32, i32* %i, align 4
  %50 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %53, label %82

; <label>:53                                      ; preds = %48
  %54 = load i32, i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 2
  %57 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %56, i64 0, i64 %55
  %58 = load i32, i32* %i, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 2
  %61 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %60, i64 0, i64 %59
  %62 = call <2 x float> @_Z5b2MulRK11b2TransformRK6b2Vec2(%struct.b2Transform* dereferenceable(16) %xf, %struct.b2Vec2* dereferenceable(8) %61)
  %63 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %62, <2 x float>* %63, align 4
  %64 = bitcast %struct.b2Vec2* %57 to i8*
  %65 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 4, i1 false)
  %66 = load i32, i32* %i, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 3
  %69 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %68, i64 0, i64 %67
  %70 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %xf, i32 0, i32 1
  %71 = load i32, i32* %i, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %8, i32 0, i32 3
  %74 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %73, i64 0, i64 %72
  %75 = call <2 x float> @_Z5b2MulRK5b2RotRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %70, %struct.b2Vec2* dereferenceable(8) %74)
  %76 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %75, <2 x float>* %76, align 4
  %77 = bitcast %struct.b2Vec2* %69 to i8*
  %78 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 4, i1 false)
  br label %79

; <label>:79                                      ; preds = %53
  %80 = load i32, i32* %i, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %i, align 4
  br label %48

; <label>:82                                      ; preds = %48
  ret void
}

; Function Attrs: uwtable
define void @_ZN14b2PolygonShape3SetEPK6b2Vec2i(%class.b2PolygonShape* %this, %struct.b2Vec2* %vertices, i32 %count) #0 align 2 {
  %1 = alloca %class.b2PolygonShape*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca i32, align 4
  %n = alloca i32, align 4
  %ps = alloca [8 x %struct.b2Vec2], align 16
  %tempCount = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca %struct.b2Vec2, align 4
  %unique = alloca i8, align 1
  %j = alloca i32, align 4
  %i0 = alloca i32, align 4
  %x0 = alloca float, align 4
  %i1 = alloca i32, align 4
  %x = alloca float, align 4
  %hull = alloca [8 x i32], align 16
  %m = alloca i32, align 4
  %ih = alloca i32, align 4
  %ie = alloca i32, align 4
  %j2 = alloca i32, align 4
  %r = alloca %struct.b2Vec2, align 4
  %v3 = alloca %struct.b2Vec2, align 4
  %c = alloca float, align 4
  %i4 = alloca i32, align 4
  %i5 = alloca i32, align 4
  %i16 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %edge = alloca %struct.b2Vec2, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %1, align 8
  store %struct.b2Vec2* %vertices, %struct.b2Vec2** %2, align 8
  store i32 %count, i32* %3, align 4
  %6 = load %class.b2PolygonShape*, %class.b2PolygonShape** %1, align 8
  %7 = load i32, i32* %3, align 4
  %8 = icmp sle i32 3, %7
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %0
  %10 = load i32, i32* %3, align 4
  %11 = icmp sle i32 %10, 8
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %9
  br label %15

; <label>:13                                      ; preds = %9, %0
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 122, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__._ZN14b2PolygonShape3SetEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load i32, i32* %3, align 4
  %17 = icmp slt i32 %16, 3
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %15
  call void @_ZN14b2PolygonShape8SetAsBoxEff(%class.b2PolygonShape* %6, float 1.000000e+00, float 1.000000e+00)
  br label %266

; <label>:19                                      ; preds = %15
  %20 = load i32, i32* %3, align 4
  %21 = call i32 @_Z5b2MinIiET_S0_S0_(i32 %20, i32 8)
  store i32 %21, i32* %n, align 4
  %22 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i32 0, i32 0
  %23 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %22, i64 8
  br label %24

; <label>:24                                      ; preds = %24, %19
  %25 = phi %struct.b2Vec2* [ %22, %19 ], [ %26, %24 ]
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %25)
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i64 1
  %27 = icmp eq %struct.b2Vec2* %26, %23
  br i1 %27, label %28, label %24

; <label>:28                                      ; preds = %24
  store i32 0, i32* %tempCount, align 4
  store i32 0, i32* %i, align 4
  br label %29

; <label>:29                                      ; preds = %66, %28
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* %n, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %69

; <label>:33                                      ; preds = %29
  %34 = load i32, i32* %i, align 4
  %35 = sext i32 %34 to i64
  %36 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %37 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %36, i64 %35
  %38 = bitcast %struct.b2Vec2* %v to i8*
  %39 = bitcast %struct.b2Vec2* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false)
  store i8 1, i8* %unique, align 1
  store i32 0, i32* %j, align 4
  br label %40

; <label>:40                                      ; preds = %52, %33
  %41 = load i32, i32* %j, align 4
  %42 = load i32, i32* %tempCount, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %44, label %55

; <label>:44                                      ; preds = %40
  %45 = load i32, i32* %j, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %46
  %48 = call float @_Z17b2DistanceSquaredRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %v, %struct.b2Vec2* dereferenceable(8) %47)
  %49 = fcmp olt float %48, 0x3EDA36E2E0000000
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %44
  store i8 0, i8* %unique, align 1
  br label %55

; <label>:51                                      ; preds = %44
  br label %52

; <label>:52                                      ; preds = %51
  %53 = load i32, i32* %j, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %j, align 4
  br label %40

; <label>:55                                      ; preds = %50, %40
  %56 = load i8, i8* %unique, align 1
  %57 = trunc i8 %56 to i1
  br i1 %57, label %58, label %65

; <label>:58                                      ; preds = %55
  %59 = load i32, i32* %tempCount, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %tempCount, align 4
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %61
  %63 = bitcast %struct.b2Vec2* %62 to i8*
  %64 = bitcast %struct.b2Vec2* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 4, i1 false)
  br label %65

; <label>:65                                      ; preds = %58, %55
  br label %66

; <label>:66                                      ; preds = %65
  %67 = load i32, i32* %i, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %i, align 4
  br label %29

; <label>:69                                      ; preds = %29
  %70 = load i32, i32* %tempCount, align 4
  store i32 %70, i32* %n, align 4
  %71 = load i32, i32* %n, align 4
  %72 = icmp slt i32 %71, 3
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %69
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.376, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 158, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__._ZN14b2PolygonShape3SetEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable

; <label>:74                                      ; preds = %69
  store i32 0, i32* %i0, align 4
  %75 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 0
  %76 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %75, i32 0, i32 0
  %77 = load float, float* %76, align 16
  store float %77, float* %x0, align 4
  store i32 1, i32* %i1, align 4
  br label %78

; <label>:78                                      ; preds = %111, %74
  %79 = load i32, i32* %i1, align 4
  %80 = load i32, i32* %n, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %114

; <label>:82                                      ; preds = %78
  %83 = load i32, i32* %i1, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %84
  %86 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %85, i32 0, i32 0
  %87 = load float, float* %86, align 8
  store float %87, float* %x, align 4
  %88 = load float, float* %x, align 4
  %89 = load float, float* %x0, align 4
  %90 = fcmp ogt float %88, %89
  br i1 %90, label %107, label %91

; <label>:91                                      ; preds = %82
  %92 = load float, float* %x, align 4
  %93 = load float, float* %x0, align 4
  %94 = fcmp oeq float %92, %93
  br i1 %94, label %95, label %110

; <label>:95                                      ; preds = %91
  %96 = load i32, i32* %i1, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %97
  %99 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %98, i32 0, i32 1
  %100 = load float, float* %99, align 4
  %101 = load i32, i32* %i0, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %102
  %104 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %103, i32 0, i32 1
  %105 = load float, float* %104, align 4
  %106 = fcmp olt float %100, %105
  br i1 %106, label %107, label %110

; <label>:107                                     ; preds = %95, %82
  %108 = load i32, i32* %i1, align 4
  store i32 %108, i32* %i0, align 4
  %109 = load float, float* %x, align 4
  store float %109, float* %x0, align 4
  br label %110

; <label>:110                                     ; preds = %107, %95, %91
  br label %111

; <label>:111                                     ; preds = %110
  %112 = load i32, i32* %i1, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %i1, align 4
  br label %78

; <label>:114                                     ; preds = %78
  store i32 0, i32* %m, align 4
  %115 = load i32, i32* %i0, align 4
  store i32 %115, i32* %ih, align 4
  br label %116

; <label>:116                                     ; preds = %180, %114
  %117 = load i32, i32* %ih, align 4
  %118 = load i32, i32* %m, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [8 x i32], [8 x i32]* %hull, i64 0, i64 %119
  store i32 %117, i32* %120, align 4
  store i32 0, i32* %ie, align 4
  store i32 1, i32* %j2, align 4
  br label %121

; <label>:121                                     ; preds = %169, %116
  %122 = load i32, i32* %j2, align 4
  %123 = load i32, i32* %n, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %125, label %172

; <label>:125                                     ; preds = %121
  %126 = load i32, i32* %ie, align 4
  %127 = load i32, i32* %ih, align 4
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %129, label %131

; <label>:129                                     ; preds = %125
  %130 = load i32, i32* %j2, align 4
  store i32 %130, i32* %ie, align 4
  br label %169

; <label>:131                                     ; preds = %125
  %132 = load i32, i32* %ie, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %133
  %135 = load i32, i32* %m, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %hull, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %139
  %141 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %134, %struct.b2Vec2* dereferenceable(8) %140)
  %142 = bitcast %struct.b2Vec2* %r to <2 x float>*
  store <2 x float> %141, <2 x float>* %142, align 4
  %143 = load i32, i32* %j2, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %144
  %146 = load i32, i32* %m, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [8 x i32], [8 x i32]* %hull, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %150
  %152 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %145, %struct.b2Vec2* dereferenceable(8) %151)
  %153 = bitcast %struct.b2Vec2* %v3 to <2 x float>*
  store <2 x float> %152, <2 x float>* %153, align 4
  %154 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %r, %struct.b2Vec2* dereferenceable(8) %v3)
  store float %154, float* %c, align 4
  %155 = load float, float* %c, align 4
  %156 = fcmp olt float %155, 0.000000e+00
  br i1 %156, label %157, label %159

; <label>:157                                     ; preds = %131
  %158 = load i32, i32* %j2, align 4
  store i32 %158, i32* %ie, align 4
  br label %159

; <label>:159                                     ; preds = %157, %131
  %160 = load float, float* %c, align 4
  %161 = fcmp oeq float %160, 0.000000e+00
  br i1 %161, label %162, label %168

; <label>:162                                     ; preds = %159
  %163 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %v3)
  %164 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %r)
  %165 = fcmp ogt float %163, %164
  br i1 %165, label %166, label %168

; <label>:166                                     ; preds = %162
  %167 = load i32, i32* %j2, align 4
  store i32 %167, i32* %ie, align 4
  br label %168

; <label>:168                                     ; preds = %166, %162, %159
  br label %169

; <label>:169                                     ; preds = %168, %129
  %170 = load i32, i32* %j2, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %j2, align 4
  br label %121

; <label>:172                                     ; preds = %121
  %173 = load i32, i32* %m, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %m, align 4
  %175 = load i32, i32* %ie, align 4
  store i32 %175, i32* %ih, align 4
  %176 = load i32, i32* %ie, align 4
  %177 = load i32, i32* %i0, align 4
  %178 = icmp eq i32 %176, %177
  br i1 %178, label %179, label %180

; <label>:179                                     ; preds = %172
  br label %181

; <label>:180                                     ; preds = %172
  br label %116

; <label>:181                                     ; preds = %179
  %182 = load i32, i32* %m, align 4
  %183 = icmp slt i32 %182, 3
  br i1 %183, label %184, label %185

; <label>:184                                     ; preds = %181
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.376, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 223, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__._ZN14b2PolygonShape3SetEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable

; <label>:185                                     ; preds = %181
  %186 = load i32, i32* %m, align 4
  %187 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 4
  store i32 %186, i32* %187, align 8
  store i32 0, i32* %i4, align 4
  br label %188

; <label>:188                                     ; preds = %205, %185
  %189 = load i32, i32* %i4, align 4
  %190 = load i32, i32* %m, align 4
  %191 = icmp slt i32 %189, %190
  br i1 %191, label %192, label %208

; <label>:192                                     ; preds = %188
  %193 = load i32, i32* %i4, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 2
  %196 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %195, i64 0, i64 %194
  %197 = load i32, i32* %i4, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [8 x i32], [8 x i32]* %hull, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %ps, i64 0, i64 %201
  %203 = bitcast %struct.b2Vec2* %196 to i8*
  %204 = bitcast %struct.b2Vec2* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %203, i8* %204, i64 8, i32 8, i1 false)
  br label %205

; <label>:205                                     ; preds = %192
  %206 = load i32, i32* %i4, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %i4, align 4
  br label %188

; <label>:208                                     ; preds = %188
  store i32 0, i32* %i5, align 4
  br label %209

; <label>:209                                     ; preds = %254, %208
  %210 = load i32, i32* %i5, align 4
  %211 = load i32, i32* %m, align 4
  %212 = icmp slt i32 %210, %211
  br i1 %212, label %213, label %257

; <label>:213                                     ; preds = %209
  %214 = load i32, i32* %i5, align 4
  store i32 %214, i32* %i16, align 4
  %215 = load i32, i32* %i5, align 4
  %216 = add nsw i32 %215, 1
  %217 = load i32, i32* %m, align 4
  %218 = icmp slt i32 %216, %217
  br i1 %218, label %219, label %222

; <label>:219                                     ; preds = %213
  %220 = load i32, i32* %i5, align 4
  %221 = add nsw i32 %220, 1
  br label %223

; <label>:222                                     ; preds = %213
  br label %223

; <label>:223                                     ; preds = %222, %219
  %224 = phi i32 [ %221, %219 ], [ 0, %222 ]
  store i32 %224, i32* %i2, align 4
  %225 = load i32, i32* %i2, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 2
  %228 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %227, i64 0, i64 %226
  %229 = load i32, i32* %i16, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 2
  %232 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %231, i64 0, i64 %230
  %233 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %228, %struct.b2Vec2* dereferenceable(8) %232)
  %234 = bitcast %struct.b2Vec2* %edge to <2 x float>*
  store <2 x float> %233, <2 x float>* %234, align 4
  %235 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %edge)
  %236 = fcmp ogt float %235, 0x3D10000000000000
  br i1 %236, label %237, label %238

; <label>:237                                     ; preds = %223
  br label %240

; <label>:238                                     ; preds = %223
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.377, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 242, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__._ZN14b2PolygonShape3SetEPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %240

; <label>:240                                     ; preds = %239, %237
  %241 = load i32, i32* %i5, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 3
  %244 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %243, i64 0, i64 %242
  %245 = call <2 x float> @_Z7b2CrossRK6b2Vec2f(%struct.b2Vec2* dereferenceable(8) %edge, float 1.000000e+00)
  %246 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %245, <2 x float>* %246, align 4
  %247 = bitcast %struct.b2Vec2* %244 to i8*
  %248 = bitcast %struct.b2Vec2* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %247, i8* %248, i64 8, i32 4, i1 false)
  %249 = load i32, i32* %i5, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 3
  %252 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %251, i64 0, i64 %250
  %253 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %252)
  br label %254

; <label>:254                                     ; preds = %240
  %255 = load i32, i32* %i5, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %i5, align 4
  br label %209

; <label>:257                                     ; preds = %209
  %258 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 1
  %259 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %6, i32 0, i32 2
  %260 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %259, i32 0, i32 0
  %261 = load i32, i32* %m, align 4
  %262 = call <2 x float> @_ZL15ComputeCentroidPK6b2Vec2i(%struct.b2Vec2* %260, i32 %261)
  %263 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %262, <2 x float>* %263, align 4
  %264 = bitcast %struct.b2Vec2* %258 to i8*
  %265 = bitcast %struct.b2Vec2* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %264, i8* %265, i64 8, i32 4, i1 false)
  br label %266

; <label>:266                                     ; preds = %257, %18
  ret void
}

; Function Attrs: uwtable
define internal <2 x float> @_ZL15ComputeCentroidPK6b2Vec2i(%struct.b2Vec2* %vs, i32 %count) #0 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  %3 = alloca i32, align 4
  %area = alloca float, align 4
  %pRef = alloca %struct.b2Vec2, align 4
  %inv3 = alloca float, align 4
  %i = alloca i32, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %p3 = alloca %struct.b2Vec2, align 4
  %e1 = alloca %struct.b2Vec2, align 4
  %e2 = alloca %struct.b2Vec2, align 4
  %D = alloca float, align 4
  %triangleArea = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %struct.b2Vec2* %vs, %struct.b2Vec2** %2, align 8
  store i32 %count, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp sge i32 %7, 3
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.378, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 76, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__._ZL15ComputeCentroidPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %1)
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %1, float 0.000000e+00, float 0.000000e+00)
  store float 0.000000e+00, float* %area, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %pRef, float 0.000000e+00, float 0.000000e+00)
  store float 0x3FD5555560000000, float* %inv3, align 4
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %61, %12
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %3, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %64

; <label>:17                                      ; preds = %13
  %18 = bitcast %struct.b2Vec2* %p1 to i8*
  %19 = bitcast %struct.b2Vec2* %pRef to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = load i32, i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %23 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %22, i64 %21
  %24 = bitcast %struct.b2Vec2* %p2 to i8*
  %25 = bitcast %struct.b2Vec2* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false)
  %26 = load i32, i32* %i, align 4
  %27 = add nsw i32 %26, 1
  %28 = load i32, i32* %3, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %36

; <label>:30                                      ; preds = %17
  %31 = load i32, i32* %i, align 4
  %32 = add nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %34, i64 %33
  br label %39

; <label>:36                                      ; preds = %17
  %37 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %38 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %37, i64 0
  br label %39

; <label>:39                                      ; preds = %36, %30
  %40 = phi %struct.b2Vec2* [ %35, %30 ], [ %38, %36 ]
  %41 = bitcast %struct.b2Vec2* %p3 to i8*
  %42 = bitcast %struct.b2Vec2* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false)
  %43 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %44 = bitcast %struct.b2Vec2* %e1 to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 4
  %45 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p3, %struct.b2Vec2* dereferenceable(8) %p1)
  %46 = bitcast %struct.b2Vec2* %e2 to <2 x float>*
  store <2 x float> %45, <2 x float>* %46, align 4
  %47 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e1, %struct.b2Vec2* dereferenceable(8) %e2)
  store float %47, float* %D, align 4
  %48 = load float, float* %D, align 4
  %49 = fmul float 5.000000e-01, %48
  store float %49, float* %triangleArea, align 4
  %50 = load float, float* %triangleArea, align 4
  %51 = load float, float* %area, align 4
  %52 = fadd float %51, %50
  store float %52, float* %area, align 4
  %53 = load float, float* %triangleArea, align 4
  %54 = fmul float %53, 0x3FD5555560000000
  %55 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %p2)
  %56 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 4
  %57 = call <2 x float> @_ZplRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %6, %struct.b2Vec2* dereferenceable(8) %p3)
  %58 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %57, <2 x float>* %58, align 4
  %59 = call <2 x float> @_ZmlfRK6b2Vec2(float %54, %struct.b2Vec2* dereferenceable(8) %5)
  %60 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %59, <2 x float>* %60, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %1, %struct.b2Vec2* dereferenceable(8) %4)
  br label %61

; <label>:61                                      ; preds = %39
  %62 = load i32, i32* %i, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %i, align 4
  br label %13

; <label>:64                                      ; preds = %13
  %65 = load float, float* %area, align 4
  %66 = fcmp ogt float %65, 0x3E80000000000000
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %64
  br label %70

; <label>:68                                      ; preds = %64
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.374, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1.372, i32 0, i32 0), i32 115, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__._ZL15ComputeCentroidPK6b2Vec2i, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %70

; <label>:70                                      ; preds = %69, %67
  %71 = load float, float* %area, align 4
  %72 = fdiv float 1.000000e+00, %71
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %1, float %72)
  %73 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %74 = load <2 x float>, <2 x float>* %73, align 4
  ret <2 x float> %74
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK14b2PolygonShape8ValidateEv(%class.b2PolygonShape* %this) #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %class.b2PolygonShape*, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %p = alloca %struct.b2Vec2, align 4
  %e = alloca %struct.b2Vec2, align 4
  %j = alloca i32, align 4
  %v = alloca %struct.b2Vec2, align 4
  %c = alloca float, align 4
  store %class.b2PolygonShape* %this, %class.b2PolygonShape** %2, align 8
  %3 = load %class.b2PolygonShape*, %class.b2PolygonShape** %2, align 8
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %64, %0
  %5 = load i32, i32* %i, align 4
  %6 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %3, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %67

; <label>:9                                       ; preds = %4
  %10 = load i32, i32* %i, align 4
  store i32 %10, i32* %i1, align 4
  %11 = load i32, i32* %i, align 4
  %12 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %3, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = sub nsw i32 %13, 1
  %15 = icmp slt i32 %11, %14
  br i1 %15, label %16, label %19

; <label>:16                                      ; preds = %9
  %17 = load i32, i32* %i1, align 4
  %18 = add nsw i32 %17, 1
  br label %20

; <label>:19                                      ; preds = %9
  br label %20

; <label>:20                                      ; preds = %19, %16
  %21 = phi i32 [ %18, %16 ], [ 0, %19 ]
  store i32 %21, i32* %i2, align 4
  %22 = load i32, i32* %i1, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %3, i32 0, i32 2
  %25 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %24, i64 0, i64 %23
  %26 = bitcast %struct.b2Vec2* %p to i8*
  %27 = bitcast %struct.b2Vec2* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 4, i1 false)
  %28 = load i32, i32* %i2, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %3, i32 0, i32 2
  %31 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %30, i64 0, i64 %29
  %32 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %31, %struct.b2Vec2* dereferenceable(8) %p)
  %33 = bitcast %struct.b2Vec2* %e to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  store i32 0, i32* %j, align 4
  br label %34

; <label>:34                                      ; preds = %60, %20
  %35 = load i32, i32* %j, align 4
  %36 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %3, i32 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %39, label %63

; <label>:39                                      ; preds = %34
  %40 = load i32, i32* %j, align 4
  %41 = load i32, i32* %i1, align 4
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %47, label %43

; <label>:43                                      ; preds = %39
  %44 = load i32, i32* %j, align 4
  %45 = load i32, i32* %i2, align 4
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %48

; <label>:47                                      ; preds = %43, %39
  br label %60

; <label>:48                                      ; preds = %43
  %49 = load i32, i32* %j, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %class.b2PolygonShape, %class.b2PolygonShape* %3, i32 0, i32 2
  %52 = getelementptr inbounds [8 x %struct.b2Vec2], [8 x %struct.b2Vec2]* %51, i64 0, i64 %50
  %53 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %52, %struct.b2Vec2* dereferenceable(8) %p)
  %54 = bitcast %struct.b2Vec2* %v to <2 x float>*
  store <2 x float> %53, <2 x float>* %54, align 4
  %55 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %e, %struct.b2Vec2* dereferenceable(8) %v)
  store float %55, float* %c, align 4
  %56 = load float, float* %c, align 4
  %57 = fcmp olt float %56, 0.000000e+00
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %48
  store i1 false, i1* %1, align 1
  br label %68

; <label>:59                                      ; preds = %48
  br label %60

; <label>:60                                      ; preds = %59, %47
  %61 = load i32, i32* %j, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %j, align 4
  br label %34

; <label>:63                                      ; preds = %34
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i32, i32* %i, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %i, align 4
  br label %4

; <label>:67                                      ; preds = %4
  store i1 true, i1* %1, align 1
  br label %68

; <label>:68                                      ; preds = %67, %58
  %69 = load i1, i1* %1, align 1
  ret i1 %69
}

; Function Attrs: nounwind uwtable
define void @_Z16b2GetPointStatesP12b2PointStateS0_PK10b2ManifoldS3_(i32* %state1, i32* %state2, %struct.b2Manifold* %manifold1, %struct.b2Manifold* %manifold2) #2 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca %struct.b2Manifold*, align 8
  %4 = alloca %struct.b2Manifold*, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %id = alloca %union.anon, align 4
  %j = alloca i32, align 4
  %i2 = alloca i32, align 4
  %id3 = alloca %union.anon, align 4
  %j4 = alloca i32, align 4
  store i32* %state1, i32** %1, align 8
  store i32* %state2, i32** %2, align 8
  store %struct.b2Manifold* %manifold1, %struct.b2Manifold** %3, align 8
  store %struct.b2Manifold* %manifold2, %struct.b2Manifold** %4, align 8
  store i32 0, i32* %i, align 4
  br label %5

; <label>:5                                       ; preds = %17, %0
  %6 = load i32, i32* %i, align 4
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %20

; <label>:8                                       ; preds = %5
  %9 = load i32, i32* %i, align 4
  %10 = sext i32 %9 to i64
  %11 = load i32*, i32** %1, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %10
  store i32 0, i32* %12, align 4
  %13 = load i32, i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = load i32*, i32** %2, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  store i32 0, i32* %16, align 4
  br label %17

; <label>:17                                      ; preds = %8
  %18 = load i32, i32* %i, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %5

; <label>:20                                      ; preds = %5
  store i32 0, i32* %i1, align 4
  br label %21

; <label>:21                                      ; preds = %68, %20
  %22 = load i32, i32* %i1, align 4
  %23 = load %struct.b2Manifold*, %struct.b2Manifold** %3, align 8
  %24 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %22, %25
  br i1 %26, label %27, label %71

; <label>:27                                      ; preds = %21
  %28 = load i32, i32* %i1, align 4
  %29 = sext i32 %28 to i64
  %30 = load %struct.b2Manifold*, %struct.b2Manifold** %3, align 8
  %31 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %30, i32 0, i32 0
  %32 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %31, i64 0, i64 %29
  %33 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %32, i32 0, i32 3
  %34 = bitcast %union.anon* %id to i8*
  %35 = bitcast %union.anon* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 4, i32 4, i1 false)
  %36 = load i32, i32* %i1, align 4
  %37 = sext i32 %36 to i64
  %38 = load i32*, i32** %1, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %37
  store i32 3, i32* %39, align 4
  store i32 0, i32* %j, align 4
  br label %40

; <label>:40                                      ; preds = %64, %27
  %41 = load i32, i32* %j, align 4
  %42 = load %struct.b2Manifold*, %struct.b2Manifold** %4, align 8
  %43 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %42, i32 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %41, %44
  br i1 %45, label %46, label %67

; <label>:46                                      ; preds = %40
  %47 = load i32, i32* %j, align 4
  %48 = sext i32 %47 to i64
  %49 = load %struct.b2Manifold*, %struct.b2Manifold** %4, align 8
  %50 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %49, i32 0, i32 0
  %51 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %50, i64 0, i64 %48
  %52 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %51, i32 0, i32 3
  %53 = bitcast %union.anon* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = bitcast %union.anon* %id to i32*
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %58, label %63

; <label>:58                                      ; preds = %46
  %59 = load i32, i32* %i1, align 4
  %60 = sext i32 %59 to i64
  %61 = load i32*, i32** %1, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %60
  store i32 2, i32* %62, align 4
  br label %67

; <label>:63                                      ; preds = %46
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i32, i32* %j, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %j, align 4
  br label %40

; <label>:67                                      ; preds = %58, %40
  br label %68

; <label>:68                                      ; preds = %67
  %69 = load i32, i32* %i1, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %i1, align 4
  br label %21

; <label>:71                                      ; preds = %21
  store i32 0, i32* %i2, align 4
  br label %72

; <label>:72                                      ; preds = %119, %71
  %73 = load i32, i32* %i2, align 4
  %74 = load %struct.b2Manifold*, %struct.b2Manifold** %4, align 8
  %75 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %74, i32 0, i32 4
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %73, %76
  br i1 %77, label %78, label %122

; <label>:78                                      ; preds = %72
  %79 = load i32, i32* %i2, align 4
  %80 = sext i32 %79 to i64
  %81 = load %struct.b2Manifold*, %struct.b2Manifold** %4, align 8
  %82 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %81, i32 0, i32 0
  %83 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %82, i64 0, i64 %80
  %84 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %83, i32 0, i32 3
  %85 = bitcast %union.anon* %id3 to i8*
  %86 = bitcast %union.anon* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 4, i32 4, i1 false)
  %87 = load i32, i32* %i2, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32*, i32** %2, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 %88
  store i32 1, i32* %90, align 4
  store i32 0, i32* %j4, align 4
  br label %91

; <label>:91                                      ; preds = %115, %78
  %92 = load i32, i32* %j4, align 4
  %93 = load %struct.b2Manifold*, %struct.b2Manifold** %3, align 8
  %94 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %93, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %92, %95
  br i1 %96, label %97, label %118

; <label>:97                                      ; preds = %91
  %98 = load i32, i32* %j4, align 4
  %99 = sext i32 %98 to i64
  %100 = load %struct.b2Manifold*, %struct.b2Manifold** %3, align 8
  %101 = getelementptr inbounds %struct.b2Manifold, %struct.b2Manifold* %100, i32 0, i32 0
  %102 = getelementptr inbounds [2 x %struct.b2ManifoldPoint], [2 x %struct.b2ManifoldPoint]* %101, i64 0, i64 %99
  %103 = getelementptr inbounds %struct.b2ManifoldPoint, %struct.b2ManifoldPoint* %102, i32 0, i32 3
  %104 = bitcast %union.anon* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = bitcast %union.anon* %id3 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %114

; <label>:109                                     ; preds = %97
  %110 = load i32, i32* %i2, align 4
  %111 = sext i32 %110 to i64
  %112 = load i32*, i32** %2, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %111
  store i32 2, i32* %113, align 4
  br label %118

; <label>:114                                     ; preds = %97
  br label %115

; <label>:115                                     ; preds = %114
  %116 = load i32, i32* %j4, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %j4, align 4
  br label %91

; <label>:118                                     ; preds = %109, %91
  br label %119

; <label>:119                                     ; preds = %118
  %120 = load i32, i32* %i2, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %i2, align 4
  br label %72

; <label>:122                                     ; preds = %72
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZNK6b2AABB7RayCastEP15b2RayCastOutputRK14b2RayCastInput(%struct.b2Transform* %this, %struct.b2Position* %output, %struct.b2PositionSolverManifold* dereferenceable(20) %input) #0 align 2 {
  %1 = alloca i1, align 1
  %2 = alloca %struct.b2Transform*, align 8
  %3 = alloca %struct.b2Position*, align 8
  %4 = alloca %struct.b2PositionSolverManifold*, align 8
  %tmin = alloca float, align 4
  %tmax = alloca float, align 4
  %p = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %absD = alloca %struct.b2Vec2, align 4
  %normal = alloca %struct.b2Vec2, align 4
  %i = alloca i32, align 4
  %inv_d = alloca float, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  %s = alloca float, align 4
  store %struct.b2Transform* %this, %struct.b2Transform** %2, align 8
  store %struct.b2Position* %output, %struct.b2Position** %3, align 8
  store %struct.b2PositionSolverManifold* %input, %struct.b2PositionSolverManifold** %4, align 8
  %5 = load %struct.b2Transform*, %struct.b2Transform** %2, align 8
  store float 0xC7EFFFFFE0000000, float* %tmin, align 4
  store float 0x47EFFFFFE0000000, float* %tmax, align 4
  %6 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %7 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %6, i32 0, i32 0
  %8 = bitcast %struct.b2Vec2* %p to i8*
  %9 = bitcast %struct.b2Vec2* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false)
  %10 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %11 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %10, i32 0, i32 1
  %12 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %13 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %12, i32 0, i32 0
  %14 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %11, %struct.b2Vec2* dereferenceable(8) %13)
  %15 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %14, <2 x float>* %15, align 4
  %16 = call <2 x float> @_Z5b2AbsRK6b2Vec2(%struct.b2Vec2* dereferenceable(8) %d)
  %17 = bitcast %struct.b2Vec2* %absD to <2 x float>*
  store <2 x float> %16, <2 x float>* %17, align 4
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %normal)
  store i32 0, i32* %i, align 4
  br label %18

; <label>:18                                      ; preds = %90, %0
  %19 = load i32, i32* %i, align 4
  %20 = icmp slt i32 %19, 2
  br i1 %20, label %21, label %93

; <label>:21                                      ; preds = %18
  %22 = load i32, i32* %i, align 4
  %23 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %absD, i32 %22)
  %24 = load float, float* %23, align 4
  %25 = fcmp olt float %24, 0x3E80000000000000
  br i1 %25, label %26, label %44

; <label>:26                                      ; preds = %21
  %27 = load i32, i32* %i, align 4
  %28 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %p, i32 %27)
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 0
  %31 = load i32, i32* %i, align 4
  %32 = call float @_ZNK6b2Vec2clEi(%struct.b2Vec2* %30, i32 %31)
  %33 = fcmp olt float %29, %32
  br i1 %33, label %42, label %34

; <label>:34                                      ; preds = %26
  %35 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 1
  %36 = load i32, i32* %i, align 4
  %37 = call float @_ZNK6b2Vec2clEi(%struct.b2Vec2* %35, i32 %36)
  %38 = load i32, i32* %i, align 4
  %39 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %p, i32 %38)
  %40 = load float, float* %39, align 4
  %41 = fcmp olt float %37, %40
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %34, %26
  store i1 false, i1* %1, align 1
  br label %111

; <label>:43                                      ; preds = %34
  br label %89

; <label>:44                                      ; preds = %21
  %45 = load i32, i32* %i, align 4
  %46 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %d, i32 %45)
  %47 = load float, float* %46, align 4
  %48 = fdiv float 1.000000e+00, %47
  store float %48, float* %inv_d, align 4
  %49 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 0
  %50 = load i32, i32* %i, align 4
  %51 = call float @_ZNK6b2Vec2clEi(%struct.b2Vec2* %49, i32 %50)
  %52 = load i32, i32* %i, align 4
  %53 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %p, i32 %52)
  %54 = load float, float* %53, align 4
  %55 = fsub float %51, %54
  %56 = load float, float* %inv_d, align 4
  %57 = fmul float %55, %56
  store float %57, float* %t1, align 4
  %58 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %5, i32 0, i32 1
  %59 = load i32, i32* %i, align 4
  %60 = call float @_ZNK6b2Vec2clEi(%struct.b2Vec2* %58, i32 %59)
  %61 = load i32, i32* %i, align 4
  %62 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %p, i32 %61)
  %63 = load float, float* %62, align 4
  %64 = fsub float %60, %63
  %65 = load float, float* %inv_d, align 4
  %66 = fmul float %64, %65
  store float %66, float* %t2, align 4
  store float -1.000000e+00, float* %s, align 4
  %67 = load float, float* %t1, align 4
  %68 = load float, float* %t2, align 4
  %69 = fcmp ogt float %67, %68
  br i1 %69, label %70, label %71

; <label>:70                                      ; preds = %44
  call void @_Z6b2SwapIfEvRT_S1_(float* dereferenceable(4) %t1, float* dereferenceable(4) %t2)
  store float 1.000000e+00, float* %s, align 4
  br label %71

; <label>:71                                      ; preds = %70, %44
  %72 = load float, float* %t1, align 4
  %73 = load float, float* %tmin, align 4
  %74 = fcmp ogt float %72, %73
  br i1 %74, label %75, label %80

; <label>:75                                      ; preds = %71
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %normal)
  %76 = load float, float* %s, align 4
  %77 = load i32, i32* %i, align 4
  %78 = call dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %normal, i32 %77)
  store float %76, float* %78, align 4
  %79 = load float, float* %t1, align 4
  store float %79, float* %tmin, align 4
  br label %80

; <label>:80                                      ; preds = %75, %71
  %81 = load float, float* %tmax, align 4
  %82 = load float, float* %t2, align 4
  %83 = call float @_Z5b2MinIfET_S0_S0_(float %81, float %82)
  store float %83, float* %tmax, align 4
  %84 = load float, float* %tmin, align 4
  %85 = load float, float* %tmax, align 4
  %86 = fcmp ogt float %84, %85
  br i1 %86, label %87, label %88

; <label>:87                                      ; preds = %80
  store i1 false, i1* %1, align 1
  br label %111

; <label>:88                                      ; preds = %80
  br label %89

; <label>:89                                      ; preds = %88, %43
  br label %90

; <label>:90                                      ; preds = %89
  %91 = load i32, i32* %i, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %i, align 4
  br label %18

; <label>:93                                      ; preds = %18
  %94 = load float, float* %tmin, align 4
  %95 = fcmp olt float %94, 0.000000e+00
  br i1 %95, label %102, label %96

; <label>:96                                      ; preds = %93
  %97 = load %struct.b2PositionSolverManifold*, %struct.b2PositionSolverManifold** %4, align 8
  %98 = getelementptr inbounds %struct.b2PositionSolverManifold, %struct.b2PositionSolverManifold* %97, i32 0, i32 2
  %99 = load float, float* %98, align 4
  %100 = load float, float* %tmin, align 4
  %101 = fcmp olt float %99, %100
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %96, %93
  store i1 false, i1* %1, align 1
  br label %111

; <label>:103                                     ; preds = %96
  %104 = load float, float* %tmin, align 4
  %105 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %106 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %105, i32 0, i32 1
  store float %104, float* %106, align 4
  %107 = load %struct.b2Position*, %struct.b2Position** %3, align 8
  %108 = getelementptr inbounds %struct.b2Position, %struct.b2Position* %107, i32 0, i32 0
  %109 = bitcast %struct.b2Vec2* %108 to i8*
  %110 = bitcast %struct.b2Vec2* %normal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 4, i1 false)
  store i1 true, i1* %1, align 1
  br label %111

; <label>:111                                     ; preds = %103, %102, %87, %42
  %112 = load i1, i1* %1, align 1
  ret i1 %112
}

; Function Attrs: nounwind uwtable
define linkonce_odr dereferenceable(4) float* @_ZN6b2Vec2clEi(%struct.b2Vec2* %this, i32 %i) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca i32, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store i32 %i, i32* %2, align 4
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %7 = getelementptr inbounds float, float* %6, i64 %5
  ret float* %7
}

; Function Attrs: nounwind uwtable
define linkonce_odr float @_ZNK6b2Vec2clEi(%struct.b2Vec2* %this, i32 %i) #2 comdat align 2 {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca i32, align 4
  store %struct.b2Vec2* %this, %struct.b2Vec2** %1, align 8
  store i32 %i, i32* %2, align 4
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %7 = getelementptr inbounds float, float* %6, i64 %5
  %8 = load float, float* %7, align 4
  ret float %8
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_Z6b2SwapIfEvRT_S1_(float* dereferenceable(4) %a, float* dereferenceable(4) %b) #5 comdat {
  %1 = alloca float*, align 8
  %2 = alloca float*, align 8
  %tmp = alloca float, align 4
  store float* %a, float** %1, align 8
  store float* %b, float** %2, align 8
  %3 = load float*, float** %1, align 8
  %4 = load float, float* %3, align 4
  store float %4, float* %tmp, align 4
  %5 = load float*, float** %2, align 8
  %6 = load float, float* %5, align 4
  %7 = load float*, float** %1, align 8
  store float %6, float* %7, align 4
  %8 = load float, float* %tmp, align 4
  %9 = load float*, float** %2, align 8
  store float %8, float* %9, align 4
  ret void
}

; Function Attrs: uwtable
define i32 @_ZNK13b2DynamicTree13ComputeHeightEi(%class.b2DynamicTree* %this, i32 %nodeId) #0 align 2 {
  %1 = alloca i32, align 4
  %2 = alloca %class.b2DynamicTree*, align 8
  %3 = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %height1 = alloca i32, align 4
  %height2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %2, align 8
  store i32 %nodeId, i32* %3, align 4
  %4 = load %class.b2DynamicTree*, %class.b2DynamicTree** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = icmp sle i32 0, %5
  br i1 %6, label %7, label %13

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %3, align 4
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %7
  br label %15

; <label>:13                                      ; preds = %7, %0
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.425, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 560, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree13ComputeHeightEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %4, i32 0, i32 2
  %17 = load %struct.b2TreeNode*, %struct.b2TreeNode** %16, align 8
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %17, i64 %19
  store %struct.b2TreeNode* %20, %struct.b2TreeNode** %node, align 8
  %21 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %22 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %21)
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %15
  store i32 0, i32* %1, align 4
  br label %37

; <label>:24                                      ; preds = %15
  %25 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %26 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = call i32 @_ZNK13b2DynamicTree13ComputeHeightEi(%class.b2DynamicTree* %4, i32 %27)
  store i32 %28, i32* %height1, align 4
  %29 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %30 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %29, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = call i32 @_ZNK13b2DynamicTree13ComputeHeightEi(%class.b2DynamicTree* %4, i32 %31)
  store i32 %32, i32* %height2, align 4
  %33 = load i32, i32* %height1, align 4
  %34 = load i32, i32* %height2, align 4
  %35 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %33, i32 %34)
  %36 = add nsw i32 1, %35
  store i32 %36, i32* %1, align 4
  br label %37

; <label>:37                                      ; preds = %24, %23
  %38 = load i32, i32* %1, align 4
  ret i32 %38
}

; Function Attrs: uwtable
define i32 @_ZNK13b2DynamicTree13ComputeHeightEv(%class.b2DynamicTree* %this) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %height = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %3 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = call i32 @_ZNK13b2DynamicTree13ComputeHeightEi(%class.b2DynamicTree* %2, i32 %4)
  store i32 %5, i32* %height, align 4
  %6 = load i32, i32* %height, align 4
  ret i32 %6
}

; Function Attrs: uwtable
define void @_ZNK13b2DynamicTree17ValidateStructureEi(%class.b2DynamicTree* %this, i32 %index) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %child1 = alloca i32, align 4
  %child2 = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %114

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %2, align 4
  %9 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %26

; <label>:12                                      ; preds = %7
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %16 = load %struct.b2TreeNode*, %struct.b2TreeNode** %15, align 8
  %17 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %16, i64 %14
  %18 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %17, i32 0, i32 2
  %19 = bitcast %union.anon* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %12
  br label %25

; <label>:23                                      ; preds = %12
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17.450, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 588, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %25

; <label>:25                                      ; preds = %24, %22
  br label %26

; <label>:26                                      ; preds = %25, %7
  %27 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %28 = load %struct.b2TreeNode*, %struct.b2TreeNode** %27, align 8
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %28, i64 %30
  store %struct.b2TreeNode* %31, %struct.b2TreeNode** %node, align 8
  %32 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %33 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %child1, align 4
  %35 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %36 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %35, i32 0, i32 4
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %child2, align 4
  %38 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %39 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %38)
  br i1 %39, label %40, label %61

; <label>:40                                      ; preds = %26
  %41 = load i32, i32* %child1, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %40
  br label %46

; <label>:44                                      ; preds = %40
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18.451, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 598, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %46

; <label>:46                                      ; preds = %45, %43
  %47 = load i32, i32* %child2, align 4
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %46
  br label %52

; <label>:50                                      ; preds = %46
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19.452, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 599, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %52

; <label>:52                                      ; preds = %51, %49
  %53 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %54 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %53, i32 0, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

; <label>:57                                      ; preds = %52
  br label %60

; <label>:58                                      ; preds = %52
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20.453, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 600, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %60

; <label>:60                                      ; preds = %59, %57
  br label %114

; <label>:61                                      ; preds = %26
  %62 = load i32, i32* %child1, align 4
  %63 = icmp sle i32 0, %62
  br i1 %63, label %64, label %70

; <label>:64                                      ; preds = %61
  %65 = load i32, i32* %child1, align 4
  %66 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %65, %67
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %64
  br label %72

; <label>:70                                      ; preds = %64, %61
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.454, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 604, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %72

; <label>:72                                      ; preds = %71, %69
  %73 = load i32, i32* %child2, align 4
  %74 = icmp sle i32 0, %73
  br i1 %74, label %75, label %81

; <label>:75                                      ; preds = %72
  %76 = load i32, i32* %child2, align 4
  %77 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %76, %78
  br i1 %79, label %80, label %81

; <label>:80                                      ; preds = %75
  br label %83

; <label>:81                                      ; preds = %75, %72
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22.455, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 605, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %83

; <label>:83                                      ; preds = %82, %80
  %84 = load i32, i32* %child1, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %87 = load %struct.b2TreeNode*, %struct.b2TreeNode** %86, align 8
  %88 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %87, i64 %85
  %89 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %88, i32 0, i32 2
  %90 = bitcast %union.anon* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = load i32, i32* %2, align 4
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %95

; <label>:94                                      ; preds = %83
  br label %97

; <label>:95                                      ; preds = %83
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.456, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 607, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %97

; <label>:97                                      ; preds = %96, %94
  %98 = load i32, i32* %child2, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %101 = load %struct.b2TreeNode*, %struct.b2TreeNode** %100, align 8
  %102 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %101, i64 %99
  %103 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %102, i32 0, i32 2
  %104 = bitcast %union.anon* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = load i32, i32* %2, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %108, label %109

; <label>:108                                     ; preds = %97
  br label %111

; <label>:109                                     ; preds = %97
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24.457, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 608, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree17ValidateStructureEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %111

; <label>:111                                     ; preds = %110, %108
  %112 = load i32, i32* %child1, align 4
  call void @_ZNK13b2DynamicTree17ValidateStructureEi(%class.b2DynamicTree* %3, i32 %112)
  %113 = load i32, i32* %child2, align 4
  call void @_ZNK13b2DynamicTree17ValidateStructureEi(%class.b2DynamicTree* %3, i32 %113)
  br label %114

; <label>:114                                     ; preds = %111, %60, %6
  ret void
}

; Function Attrs: uwtable
define void @_ZNK13b2DynamicTree15ValidateMetricsEi(%class.b2DynamicTree* %this, i32 %index) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %2 = alloca i32, align 4
  %node = alloca %struct.b2TreeNode*, align 8
  %child1 = alloca i32, align 4
  %child2 = alloca i32, align 4
  %height1 = alloca i32, align 4
  %height2 = alloca i32, align 4
  %height = alloca i32, align 4
  %aabb = alloca %struct.b2Transform, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %124

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %9 = load %struct.b2TreeNode*, %struct.b2TreeNode** %8, align 8
  %10 = load i32, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %9, i64 %11
  store %struct.b2TreeNode* %12, %struct.b2TreeNode** %node, align 8
  %13 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %14 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %child1, align 4
  %16 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %17 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %16, i32 0, i32 4
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %child2, align 4
  %19 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %20 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %19)
  br i1 %20, label %21, label %42

; <label>:21                                      ; preds = %7
  %22 = load i32, i32* %child1, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %21
  br label %27

; <label>:25                                      ; preds = %21
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18.451, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 628, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %27

; <label>:27                                      ; preds = %26, %24
  %28 = load i32, i32* %child2, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %27
  br label %33

; <label>:31                                      ; preds = %27
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19.452, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 629, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %33

; <label>:33                                      ; preds = %32, %30
  %34 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %35 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %34, i32 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %33
  br label %41

; <label>:39                                      ; preds = %33
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20.453, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 630, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %41

; <label>:41                                      ; preds = %40, %38
  br label %124

; <label>:42                                      ; preds = %7
  %43 = load i32, i32* %child1, align 4
  %44 = icmp sle i32 0, %43
  br i1 %44, label %45, label %51

; <label>:45                                      ; preds = %42
  %46 = load i32, i32* %child1, align 4
  %47 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %46, %48
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %45
  br label %53

; <label>:51                                      ; preds = %45, %42
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.454, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 634, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %53

; <label>:53                                      ; preds = %52, %50
  %54 = load i32, i32* %child2, align 4
  %55 = icmp sle i32 0, %54
  br i1 %55, label %56, label %62

; <label>:56                                      ; preds = %53
  %57 = load i32, i32* %child2, align 4
  %58 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %57, %59
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  br label %64

; <label>:62                                      ; preds = %56, %53
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22.455, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 635, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64                                      ; preds = %63, %61
  %65 = load i32, i32* %child1, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %68 = load %struct.b2TreeNode*, %struct.b2TreeNode** %67, align 8
  %69 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %68, i64 %66
  %70 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %height1, align 4
  %72 = load i32, i32* %child2, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %75 = load %struct.b2TreeNode*, %struct.b2TreeNode** %74, align 8
  %76 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %75, i64 %73
  %77 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %76, i32 0, i32 5
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %height2, align 4
  %79 = load i32, i32* %height1, align 4
  %80 = load i32, i32* %height2, align 4
  %81 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %79, i32 %80)
  %82 = add nsw i32 1, %81
  store i32 %82, i32* %height, align 4
  %83 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %84 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %83, i32 0, i32 5
  %85 = load i32, i32* %84, align 4
  %86 = load i32, i32* %height, align 4
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %64
  br label %91

; <label>:89                                      ; preds = %64
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25.458, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 641, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %91

; <label>:91                                      ; preds = %90, %88
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %aabb)
  %92 = load i32, i32* %child1, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %95 = load %struct.b2TreeNode*, %struct.b2TreeNode** %94, align 8
  %96 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %95, i64 %93
  %97 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %96, i32 0, i32 0
  %98 = load i32, i32* %child2, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %3, i32 0, i32 2
  %101 = load %struct.b2TreeNode*, %struct.b2TreeNode** %100, align 8
  %102 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %101, i64 %99
  %103 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %102, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %aabb, %struct.b2Transform* dereferenceable(16) %97, %struct.b2Transform* dereferenceable(16) %103)
  %104 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 0
  %105 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %106 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %105, i32 0, i32 0
  %107 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %106, i32 0, i32 0
  %108 = call zeroext i1 @_ZeqRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %104, %struct.b2Vec2* dereferenceable(8) %107)
  br i1 %108, label %109, label %110

; <label>:109                                     ; preds = %91
  br label %112

; <label>:110                                     ; preds = %91
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.459, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 646, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %112

; <label>:112                                     ; preds = %111, %109
  %113 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %aabb, i32 0, i32 1
  %114 = load %struct.b2TreeNode*, %struct.b2TreeNode** %node, align 8
  %115 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %114, i32 0, i32 0
  %116 = getelementptr inbounds %struct.b2Transform, %struct.b2Transform* %115, i32 0, i32 1
  %117 = call zeroext i1 @_ZeqRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %113, %struct.b2Vec2* dereferenceable(8) %116)
  br i1 %117, label %118, label %119

; <label>:118                                     ; preds = %112
  br label %121

; <label>:119                                     ; preds = %112
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27.460, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 647, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree15ValidateMetricsEi, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %121

; <label>:121                                     ; preds = %120, %118
  %122 = load i32, i32* %child1, align 4
  call void @_ZNK13b2DynamicTree15ValidateMetricsEi(%class.b2DynamicTree* %3, i32 %122)
  %123 = load i32, i32* %child2, align 4
  call void @_ZNK13b2DynamicTree15ValidateMetricsEi(%class.b2DynamicTree* %3, i32 %123)
  br label %124

; <label>:124                                     ; preds = %121, %41, %6
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr zeroext i1 @_ZeqRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %a, %struct.b2Vec2* dereferenceable(8) %b) #5 comdat {
  %1 = alloca %struct.b2Vec2*, align 8
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %a, %struct.b2Vec2** %1, align 8
  store %struct.b2Vec2* %b, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %6, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %5, %8
  br i1 %9, label %10, label %18

; <label>:10                                      ; preds = %0
  %11 = load %struct.b2Vec2*, %struct.b2Vec2** %1, align 8
  %12 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %11, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %15 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %14, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %13, %16
  br label %18

; <label>:18                                      ; preds = %10, %0
  %19 = phi i1 [ false, %0 ], [ %17, %10 ]
  ret i1 %19
}

; Function Attrs: uwtable
define void @_ZNK13b2DynamicTree8ValidateEv(%class.b2DynamicTree* %this) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %freeCount = alloca i32, align 4
  %freeIndex = alloca i32, align 4
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %3 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  call void @_ZNK13b2DynamicTree17ValidateStructureEi(%class.b2DynamicTree* %2, i32 %4)
  %5 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  call void @_ZNK13b2DynamicTree15ValidateMetricsEi(%class.b2DynamicTree* %2, i32 %6)
  store i32 0, i32* %freeCount, align 4
  %7 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 5
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %freeIndex, align 4
  br label %9

; <label>:9                                       ; preds = %23, %0
  %10 = load i32, i32* %freeIndex, align 4
  %11 = icmp ne i32 %10, -1
  br i1 %11, label %12, label %34

; <label>:12                                      ; preds = %9
  %13 = load i32, i32* %freeIndex, align 4
  %14 = icmp sle i32 0, %13
  br i1 %14, label %15, label %21

; <label>:15                                      ; preds = %12
  %16 = load i32, i32* %freeIndex, align 4
  %17 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %15
  br label %23

; <label>:21                                      ; preds = %15, %12
  call void @__assert_fail(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28.461, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 663, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree8ValidateEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %23

; <label>:23                                      ; preds = %22, %20
  %24 = load i32, i32* %freeIndex, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %27 = load %struct.b2TreeNode*, %struct.b2TreeNode** %26, align 8
  %28 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %27, i64 %25
  %29 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %28, i32 0, i32 2
  %30 = bitcast %union.anon* %29 to i32*
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %freeIndex, align 4
  %32 = load i32, i32* %freeCount, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %freeCount, align 4
  br label %9

; <label>:34                                      ; preds = %9
  %35 = call i32 @_ZNK13b2DynamicTree9GetHeightEv(%class.b2DynamicTree* %2)
  %36 = call i32 @_ZNK13b2DynamicTree13ComputeHeightEv(%class.b2DynamicTree* %2)
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %34
  br label %41

; <label>:39                                      ; preds = %34
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.462, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 668, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree8ValidateEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %41

; <label>:41                                      ; preds = %40, %38
  %42 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = load i32, i32* %freeCount, align 4
  %45 = add nsw i32 %43, %44
  %46 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %41
  br label %52

; <label>:50                                      ; preds = %41
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30.463, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.424, i32 0, i32 0), i32 670, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZNK13b2DynamicTree8ValidateEv, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %52

; <label>:52                                      ; preds = %51, %49
  ret void
}

; Function Attrs: uwtable
define void @_ZN13b2DynamicTree15RebuildBottomUpEv(%class.b2DynamicTree* %this) #0 align 2 {
  %1 = alloca %class.b2DynamicTree*, align 8
  %nodes = alloca i32*, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %minCost = alloca float, align 4
  %iMin = alloca i32, align 4
  %jMin = alloca i32, align 4
  %i1 = alloca i32, align 4
  %aabbi = alloca %struct.b2Transform, align 4
  %j = alloca i32, align 4
  %aabbj = alloca %struct.b2Transform, align 4
  %b = alloca %struct.b2Transform, align 4
  %cost = alloca float, align 4
  %index1 = alloca i32, align 4
  %index2 = alloca i32, align 4
  %child1 = alloca %struct.b2TreeNode*, align 8
  %child2 = alloca %struct.b2TreeNode*, align 8
  %parentIndex = alloca i32, align 4
  %parent = alloca %struct.b2TreeNode*, align 8
  store %class.b2DynamicTree* %this, %class.b2DynamicTree** %1, align 8
  %2 = load %class.b2DynamicTree*, %class.b2DynamicTree** %1, align 8
  %3 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = mul i64 %5, 4
  %7 = trunc i64 %6 to i32
  %8 = call i8* @_Z7b2Alloci(i32 %7)
  %9 = bitcast i8* %8 to i32*
  store i32* %9, i32** %nodes, align 8
  store i32 0, i32* %count, align 4
  store i32 0, i32* %i, align 4
  br label %10

; <label>:10                                      ; preds = %50, %0
  %11 = load i32, i32* %i, align 4
  %12 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %11, %13
  br i1 %14, label %15, label %53

; <label>:15                                      ; preds = %10
  %16 = load i32, i32* %i, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %19 = load %struct.b2TreeNode*, %struct.b2TreeNode** %18, align 8
  %20 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %19, i64 %17
  %21 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %20, i32 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %15
  br label %50

; <label>:25                                      ; preds = %15
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %29 = load %struct.b2TreeNode*, %struct.b2TreeNode** %28, align 8
  %30 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %29, i64 %27
  %31 = call zeroext i1 @_ZNK10b2TreeNode6IsLeafEv(%struct.b2TreeNode* %30)
  br i1 %31, label %32, label %47

; <label>:32                                      ; preds = %25
  %33 = load i32, i32* %i, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %36 = load %struct.b2TreeNode*, %struct.b2TreeNode** %35, align 8
  %37 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %36, i64 %34
  %38 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %37, i32 0, i32 2
  %39 = bitcast %union.anon* %38 to i32*
  store i32 -1, i32* %39, align 8
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* %count, align 4
  %42 = sext i32 %41 to i64
  %43 = load i32*, i32** %nodes, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %42
  store i32 %40, i32* %44, align 4
  %45 = load i32, i32* %count, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %count, align 4
  br label %49

; <label>:47                                      ; preds = %25
  %48 = load i32, i32* %i, align 4
  call void @_ZN13b2DynamicTree8FreeNodeEi(%class.b2DynamicTree* %2, i32 %48)
  br label %49

; <label>:49                                      ; preds = %47, %32
  br label %50

; <label>:50                                      ; preds = %49, %24
  %51 = load i32, i32* %i, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %i, align 4
  br label %10

; <label>:53                                      ; preds = %10
  br label %54

; <label>:54                                      ; preds = %110, %53
  %55 = load i32, i32* %count, align 4
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %57, label %187

; <label>:57                                      ; preds = %54
  store float 0x47EFFFFFE0000000, float* %minCost, align 4
  store i32 -1, i32* %iMin, align 4
  store i32 -1, i32* %jMin, align 4
  store i32 0, i32* %i1, align 4
  br label %58

; <label>:58                                      ; preds = %107, %57
  %59 = load i32, i32* %i1, align 4
  %60 = load i32, i32* %count, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %110

; <label>:62                                      ; preds = %58
  %63 = load i32, i32* %i1, align 4
  %64 = sext i32 %63 to i64
  %65 = load i32*, i32** %nodes, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %64
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %70 = load %struct.b2TreeNode*, %struct.b2TreeNode** %69, align 8
  %71 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %70, i64 %68
  %72 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %71, i32 0, i32 0
  %73 = bitcast %struct.b2Transform* %aabbi to i8*
  %74 = bitcast %struct.b2Transform* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 4, i1 false)
  %75 = load i32, i32* %i1, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %j, align 4
  br label %77

; <label>:77                                      ; preds = %103, %62
  %78 = load i32, i32* %j, align 4
  %79 = load i32, i32* %count, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %106

; <label>:81                                      ; preds = %77
  %82 = load i32, i32* %j, align 4
  %83 = sext i32 %82 to i64
  %84 = load i32*, i32** %nodes, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %83
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %89 = load %struct.b2TreeNode*, %struct.b2TreeNode** %88, align 8
  %90 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %89, i64 %87
  %91 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %90, i32 0, i32 0
  %92 = bitcast %struct.b2Transform* %aabbj to i8*
  %93 = bitcast %struct.b2Transform* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 16, i32 4, i1 false)
  call void @_ZN6b2AABBC2Ev(%struct.b2Transform* %b)
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %b, %struct.b2Transform* dereferenceable(16) %aabbi, %struct.b2Transform* dereferenceable(16) %aabbj)
  %94 = call float @_ZNK6b2AABB12GetPerimeterEv(%struct.b2Transform* %b)
  store float %94, float* %cost, align 4
  %95 = load float, float* %cost, align 4
  %96 = load float, float* %minCost, align 4
  %97 = fcmp olt float %95, %96
  br i1 %97, label %98, label %102

; <label>:98                                      ; preds = %81
  %99 = load i32, i32* %i1, align 4
  store i32 %99, i32* %iMin, align 4
  %100 = load i32, i32* %j, align 4
  store i32 %100, i32* %jMin, align 4
  %101 = load float, float* %cost, align 4
  store float %101, float* %minCost, align 4
  br label %102

; <label>:102                                     ; preds = %98, %81
  br label %103

; <label>:103                                     ; preds = %102
  %104 = load i32, i32* %j, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %j, align 4
  br label %77

; <label>:106                                     ; preds = %77
  br label %107

; <label>:107                                     ; preds = %106
  %108 = load i32, i32* %i1, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %i1, align 4
  br label %58

; <label>:110                                     ; preds = %58
  %111 = load i32, i32* %iMin, align 4
  %112 = sext i32 %111 to i64
  %113 = load i32*, i32** %nodes, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 %112
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %index1, align 4
  %116 = load i32, i32* %jMin, align 4
  %117 = sext i32 %116 to i64
  %118 = load i32*, i32** %nodes, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %117
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %index2, align 4
  %121 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %122 = load %struct.b2TreeNode*, %struct.b2TreeNode** %121, align 8
  %123 = load i32, i32* %index1, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %122, i64 %124
  store %struct.b2TreeNode* %125, %struct.b2TreeNode** %child1, align 8
  %126 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %127 = load %struct.b2TreeNode*, %struct.b2TreeNode** %126, align 8
  %128 = load i32, i32* %index2, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %127, i64 %129
  store %struct.b2TreeNode* %130, %struct.b2TreeNode** %child2, align 8
  %131 = call i32 @_ZN13b2DynamicTree12AllocateNodeEv(%class.b2DynamicTree* %2)
  store i32 %131, i32* %parentIndex, align 4
  %132 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 2
  %133 = load %struct.b2TreeNode*, %struct.b2TreeNode** %132, align 8
  %134 = load i32, i32* %parentIndex, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %133, i64 %135
  store %struct.b2TreeNode* %136, %struct.b2TreeNode** %parent, align 8
  %137 = load i32, i32* %index1, align 4
  %138 = load %struct.b2TreeNode*, %struct.b2TreeNode** %parent, align 8
  %139 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %138, i32 0, i32 3
  store i32 %137, i32* %139, align 4
  %140 = load i32, i32* %index2, align 4
  %141 = load %struct.b2TreeNode*, %struct.b2TreeNode** %parent, align 8
  %142 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %141, i32 0, i32 4
  store i32 %140, i32* %142, align 8
  %143 = load %struct.b2TreeNode*, %struct.b2TreeNode** %child1, align 8
  %144 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %143, i32 0, i32 5
  %145 = load i32, i32* %144, align 4
  %146 = load %struct.b2TreeNode*, %struct.b2TreeNode** %child2, align 8
  %147 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %146, i32 0, i32 5
  %148 = load i32, i32* %147, align 4
  %149 = call i32 @_Z5b2MaxIiET_S0_S0_(i32 %145, i32 %148)
  %150 = add nsw i32 1, %149
  %151 = load %struct.b2TreeNode*, %struct.b2TreeNode** %parent, align 8
  %152 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %151, i32 0, i32 5
  store i32 %150, i32* %152, align 4
  %153 = load %struct.b2TreeNode*, %struct.b2TreeNode** %parent, align 8
  %154 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %153, i32 0, i32 0
  %155 = load %struct.b2TreeNode*, %struct.b2TreeNode** %child1, align 8
  %156 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %155, i32 0, i32 0
  %157 = load %struct.b2TreeNode*, %struct.b2TreeNode** %child2, align 8
  %158 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %157, i32 0, i32 0
  call void @_ZN6b2AABB7CombineERKS_S1_(%struct.b2Transform* %154, %struct.b2Transform* dereferenceable(16) %156, %struct.b2Transform* dereferenceable(16) %158)
  %159 = load %struct.b2TreeNode*, %struct.b2TreeNode** %parent, align 8
  %160 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %159, i32 0, i32 2
  %161 = bitcast %union.anon* %160 to i32*
  store i32 -1, i32* %161, align 8
  %162 = load i32, i32* %parentIndex, align 4
  %163 = load %struct.b2TreeNode*, %struct.b2TreeNode** %child1, align 8
  %164 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %163, i32 0, i32 2
  %165 = bitcast %union.anon* %164 to i32*
  store i32 %162, i32* %165, align 8
  %166 = load i32, i32* %parentIndex, align 4
  %167 = load %struct.b2TreeNode*, %struct.b2TreeNode** %child2, align 8
  %168 = getelementptr inbounds %struct.b2TreeNode, %struct.b2TreeNode* %167, i32 0, i32 2
  %169 = bitcast %union.anon* %168 to i32*
  store i32 %166, i32* %169, align 8
  %170 = load i32, i32* %count, align 4
  %171 = sub nsw i32 %170, 1
  %172 = sext i32 %171 to i64
  %173 = load i32*, i32** %nodes, align 8
  %174 = getelementptr inbounds i32, i32* %173, i64 %172
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %jMin, align 4
  %177 = sext i32 %176 to i64
  %178 = load i32*, i32** %nodes, align 8
  %179 = getelementptr inbounds i32, i32* %178, i64 %177
  store i32 %175, i32* %179, align 4
  %180 = load i32, i32* %parentIndex, align 4
  %181 = load i32, i32* %iMin, align 4
  %182 = sext i32 %181 to i64
  %183 = load i32*, i32** %nodes, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 %182
  store i32 %180, i32* %184, align 4
  %185 = load i32, i32* %count, align 4
  %186 = add nsw i32 %185, -1
  store i32 %186, i32* %count, align 4
  br label %54

; <label>:187                                     ; preds = %54
  %188 = load i32*, i32** %nodes, align 8
  %189 = getelementptr inbounds i32, i32* %188, i64 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %class.b2DynamicTree, %class.b2DynamicTree* %2, i32 0, i32 0
  store i32 %190, i32* %191, align 8
  %192 = load i32*, i32** %nodes, align 8
  %193 = bitcast i32* %192 to i8*
  call void @_Z6b2FreePv(i8* %193)
  call void @_ZNK13b2DynamicTree8ValidateEv(%class.b2DynamicTree* %2)
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2RopeC2Ev(%class.b2Rope* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  %2 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %3 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 8
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 2
  store %struct.b2Vec2* null, %struct.b2Vec2** %5, align 8
  %6 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 3
  store %struct.b2Vec2* null, %struct.b2Vec2** %6, align 8
  %7 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 4
  store %struct.b2Vec2* null, %struct.b2Vec2** %7, align 8
  %8 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 5
  store float* null, float** %8, align 8
  %9 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 6
  store float* null, float** %9, align 8
  %10 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 7
  store float* null, float** %10, align 8
  %11 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 8
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %11)
  %12 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 10
  store float 1.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 11
  store float 0x3FB99999A0000000, float* %13, align 8
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2RopeD2Ev(%class.b2Rope* %this) unnamed_addr #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  %2 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %3 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 2
  %4 = load %struct.b2Vec2*, %struct.b2Vec2** %3, align 8
  %5 = bitcast %struct.b2Vec2* %4 to i8*
  call void @_Z6b2FreePv(i8* %5)
  %6 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 3
  %7 = load %struct.b2Vec2*, %struct.b2Vec2** %6, align 8
  %8 = bitcast %struct.b2Vec2* %7 to i8*
  call void @_Z6b2FreePv(i8* %8)
  %9 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 4
  %10 = load %struct.b2Vec2*, %struct.b2Vec2** %9, align 8
  %11 = bitcast %struct.b2Vec2* %10 to i8*
  call void @_Z6b2FreePv(i8* %11)
  %12 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 5
  %13 = load float*, float** %12, align 8
  %14 = bitcast float* %13 to i8*
  call void @_Z6b2FreePv(i8* %14)
  %15 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 6
  %16 = load float*, float** %15, align 8
  %17 = bitcast float* %16 to i8*
  call void @_Z6b2FreePv(i8* %17)
  %18 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %2, i32 0, i32 7
  %19 = load float*, float** %18, align 8
  %20 = bitcast float* %19 to i8*
  call void @_Z6b2FreePv(i8* %20)
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Rope10InitializeEPK9b2RopeDef(%class.b2Rope* %this, %struct.b2RopeDef* %def) #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  %2 = alloca %struct.b2RopeDef*, align 8
  %i = alloca i32, align 4
  %m = alloca float, align 4
  %count2 = alloca i32, align 4
  %count3 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %i2 = alloca i32, align 4
  %p13 = alloca %struct.b2Vec2, align 4
  %p24 = alloca %struct.b2Vec2, align 4
  %p3 = alloca %struct.b2Vec2, align 4
  %d1 = alloca %struct.b2Vec2, align 4
  %d2 = alloca %struct.b2Vec2, align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  store %struct.b2RopeDef* %def, %struct.b2RopeDef** %2, align 8
  %3 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %4 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %5 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp sge i32 %6, 3
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %11

; <label>:9                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1.480, i32 0, i32 0), i32 48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN6b2Rope10InitializeEPK9b2RopeDef, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %11

; <label>:11                                      ; preds = %10, %8
  %12 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %13 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 8
  %20 = trunc i64 %19 to i32
  %21 = call i8* @_Z7b2Alloci(i32 %20)
  %22 = bitcast i8* %21 to %struct.b2Vec2*
  %23 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  store %struct.b2Vec2* %22, %struct.b2Vec2** %23, align 8
  %24 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = mul i64 %26, 8
  %28 = trunc i64 %27 to i32
  %29 = call i8* @_Z7b2Alloci(i32 %28)
  %30 = bitcast i8* %29 to %struct.b2Vec2*
  %31 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 3
  store %struct.b2Vec2* %30, %struct.b2Vec2** %31, align 8
  %32 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = mul i64 %34, 8
  %36 = trunc i64 %35 to i32
  %37 = call i8* @_Z7b2Alloci(i32 %36)
  %38 = bitcast i8* %37 to %struct.b2Vec2*
  %39 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 4
  store %struct.b2Vec2* %38, %struct.b2Vec2** %39, align 8
  %40 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = mul i64 %42, 4
  %44 = trunc i64 %43 to i32
  %45 = call i8* @_Z7b2Alloci(i32 %44)
  %46 = bitcast i8* %45 to float*
  %47 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 5
  store float* %46, float** %47, align 8
  store i32 0, i32* %i, align 4
  br label %48

; <label>:48                                      ; preds = %109, %11
  %49 = load i32, i32* %i, align 4
  %50 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %53, label %112

; <label>:53                                      ; preds = %48
  %54 = load i32, i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %57 = load %struct.b2Vec2*, %struct.b2Vec2** %56, align 8
  %58 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %57, i64 %55
  %59 = load i32, i32* %i, align 4
  %60 = sext i32 %59 to i64
  %61 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %62 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %61, i32 0, i32 0
  %63 = load %struct.b2Vec2*, %struct.b2Vec2** %62, align 8
  %64 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %63, i64 %60
  %65 = bitcast %struct.b2Vec2* %58 to i8*
  %66 = bitcast %struct.b2Vec2* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false)
  %67 = load i32, i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 3
  %70 = load %struct.b2Vec2*, %struct.b2Vec2** %69, align 8
  %71 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %70, i64 %68
  %72 = load i32, i32* %i, align 4
  %73 = sext i32 %72 to i64
  %74 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %75 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %74, i32 0, i32 0
  %76 = load %struct.b2Vec2*, %struct.b2Vec2** %75, align 8
  %77 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %76, i64 %73
  %78 = bitcast %struct.b2Vec2* %71 to i8*
  %79 = bitcast %struct.b2Vec2* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 4, i1 false)
  %80 = load i32, i32* %i, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 4
  %83 = load %struct.b2Vec2*, %struct.b2Vec2** %82, align 8
  %84 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %83, i64 %81
  call void @_ZN6b2Vec27SetZeroEv(%struct.b2Vec2* %84)
  %85 = load i32, i32* %i, align 4
  %86 = sext i32 %85 to i64
  %87 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %88 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %87, i32 0, i32 3
  %89 = load float*, float** %88, align 8
  %90 = getelementptr inbounds float, float* %89, i64 %86
  %91 = load float, float* %90, align 4
  store float %91, float* %m, align 4
  %92 = load float, float* %m, align 4
  %93 = fcmp ogt float %92, 0.000000e+00
  br i1 %93, label %94, label %102

; <label>:94                                      ; preds = %53
  %95 = load float, float* %m, align 4
  %96 = fdiv float 1.000000e+00, %95
  %97 = load i32, i32* %i, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 5
  %100 = load float*, float** %99, align 8
  %101 = getelementptr inbounds float, float* %100, i64 %98
  store float %96, float* %101, align 4
  br label %108

; <label>:102                                     ; preds = %53
  %103 = load i32, i32* %i, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 5
  %106 = load float*, float** %105, align 8
  %107 = getelementptr inbounds float, float* %106, i64 %104
  store float 0.000000e+00, float* %107, align 4
  br label %108

; <label>:108                                     ; preds = %102, %94
  br label %109

; <label>:109                                     ; preds = %108
  %110 = load i32, i32* %i, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %i, align 4
  br label %48

; <label>:112                                     ; preds = %48
  %113 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = sub nsw i32 %114, 1
  store i32 %115, i32* %count2, align 4
  %116 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = sub nsw i32 %117, 2
  store i32 %118, i32* %count3, align 4
  %119 = load i32, i32* %count2, align 4
  %120 = sext i32 %119 to i64
  %121 = mul i64 %120, 4
  %122 = trunc i64 %121 to i32
  %123 = call i8* @_Z7b2Alloci(i32 %122)
  %124 = bitcast i8* %123 to float*
  %125 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 6
  store float* %124, float** %125, align 8
  %126 = load i32, i32* %count3, align 4
  %127 = sext i32 %126 to i64
  %128 = mul i64 %127, 4
  %129 = trunc i64 %128 to i32
  %130 = call i8* @_Z7b2Alloci(i32 %129)
  %131 = bitcast i8* %130 to float*
  %132 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 7
  store float* %131, float** %132, align 8
  store i32 0, i32* %i1, align 4
  br label %133

; <label>:133                                     ; preds = %159, %112
  %134 = load i32, i32* %i1, align 4
  %135 = load i32, i32* %count2, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %137, label %162

; <label>:137                                     ; preds = %133
  %138 = load i32, i32* %i1, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %141 = load %struct.b2Vec2*, %struct.b2Vec2** %140, align 8
  %142 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %141, i64 %139
  %143 = bitcast %struct.b2Vec2* %p1 to i8*
  %144 = bitcast %struct.b2Vec2* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 4, i1 false)
  %145 = load i32, i32* %i1, align 4
  %146 = add nsw i32 %145, 1
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %149 = load %struct.b2Vec2*, %struct.b2Vec2** %148, align 8
  %150 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %149, i64 %147
  %151 = bitcast %struct.b2Vec2* %p2 to i8*
  %152 = bitcast %struct.b2Vec2* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %152, i64 8, i32 4, i1 false)
  %153 = call float @_Z10b2DistanceRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p1, %struct.b2Vec2* dereferenceable(8) %p2)
  %154 = load i32, i32* %i1, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 6
  %157 = load float*, float** %156, align 8
  %158 = getelementptr inbounds float, float* %157, i64 %155
  store float %153, float* %158, align 4
  br label %159

; <label>:159                                     ; preds = %137
  %160 = load i32, i32* %i1, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %i1, align 4
  br label %133

; <label>:162                                     ; preds = %133
  store i32 0, i32* %i2, align 4
  br label %163

; <label>:163                                     ; preds = %205, %162
  %164 = load i32, i32* %i2, align 4
  %165 = load i32, i32* %count3, align 4
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %167, label %208

; <label>:167                                     ; preds = %163
  %168 = load i32, i32* %i2, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %171 = load %struct.b2Vec2*, %struct.b2Vec2** %170, align 8
  %172 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %171, i64 %169
  %173 = bitcast %struct.b2Vec2* %p13 to i8*
  %174 = bitcast %struct.b2Vec2* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %174, i64 8, i32 4, i1 false)
  %175 = load i32, i32* %i2, align 4
  %176 = add nsw i32 %175, 1
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %179 = load %struct.b2Vec2*, %struct.b2Vec2** %178, align 8
  %180 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %179, i64 %177
  %181 = bitcast %struct.b2Vec2* %p24 to i8*
  %182 = bitcast %struct.b2Vec2* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 8, i32 4, i1 false)
  %183 = load i32, i32* %i2, align 4
  %184 = add nsw i32 %183, 2
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %187 = load %struct.b2Vec2*, %struct.b2Vec2** %186, align 8
  %188 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %187, i64 %185
  %189 = bitcast %struct.b2Vec2* %p3 to i8*
  %190 = bitcast %struct.b2Vec2* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %189, i8* %190, i64 8, i32 4, i1 false)
  %191 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p24, %struct.b2Vec2* dereferenceable(8) %p13)
  %192 = bitcast %struct.b2Vec2* %d1 to <2 x float>*
  store <2 x float> %191, <2 x float>* %192, align 4
  %193 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p3, %struct.b2Vec2* dereferenceable(8) %p24)
  %194 = bitcast %struct.b2Vec2* %d2 to <2 x float>*
  store <2 x float> %193, <2 x float>* %194, align 4
  %195 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d1, %struct.b2Vec2* dereferenceable(8) %d2)
  store float %195, float* %a, align 4
  %196 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d1, %struct.b2Vec2* dereferenceable(8) %d2)
  store float %196, float* %b, align 4
  %197 = load float, float* %a, align 4
  %198 = load float, float* %b, align 4
  %199 = call float @atan2f(float %197, float %198) #3
  %200 = load i32, i32* %i2, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 7
  %203 = load float*, float** %202, align 8
  %204 = getelementptr inbounds float, float* %203, i64 %201
  store float %199, float* %204, align 4
  br label %205

; <label>:205                                     ; preds = %167
  %206 = load i32, i32* %i2, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %i2, align 4
  br label %163

; <label>:208                                     ; preds = %163
  %209 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 8
  %210 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %211 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %210, i32 0, i32 4
  %212 = bitcast %struct.b2Vec2* %209 to i8*
  %213 = bitcast %struct.b2Vec2* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %213, i64 8, i32 8, i1 false)
  %214 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %215 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %214, i32 0, i32 5
  %216 = load float, float* %215, align 8
  %217 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 9
  store float %216, float* %217, align 8
  %218 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %219 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %218, i32 0, i32 6
  %220 = load float, float* %219, align 4
  %221 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 10
  store float %220, float* %221, align 4
  %222 = load %struct.b2RopeDef*, %struct.b2RopeDef** %2, align 8
  %223 = getelementptr inbounds %struct.b2RopeDef, %struct.b2RopeDef* %222, i32 0, i32 7
  %224 = load float, float* %223, align 8
  %225 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 11
  store float %224, float* %225, align 8
  ret void
}

; Function Attrs: nounwind
declare float @atan2f(float, float) #8

; Function Attrs: uwtable
define void @_ZN6b2Rope4StepEfi(%class.b2Rope* %this, float %h, i32 %iterations) #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  %2 = alloca float, align 4
  %3 = alloca i32, align 4
  %d = alloca float, align 4
  %i = alloca i32, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %i1 = alloca i32, align 4
  %inv_h = alloca float, align 4
  %i2 = alloca i32, align 4
  %6 = alloca %struct.b2Vec2, align 4
  %7 = alloca %struct.b2Vec2, align 4
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  store float %h, float* %2, align 4
  store i32 %iterations, i32* %3, align 4
  %8 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %9 = load float, float* %2, align 4
  %10 = fpext float %9 to double
  %11 = fcmp oeq double %10, 0.000000e+00
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %121

; <label>:13                                      ; preds = %0
  %14 = load float, float* %2, align 4
  %15 = fsub float -0.000000e+00, %14
  %16 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 9
  %17 = load float, float* %16, align 8
  %18 = fmul float %15, %17
  %19 = call float @expf(float %18) #3
  store float %19, float* %d, align 4
  store i32 0, i32* %i, align 4
  br label %20

; <label>:20                                      ; preds = %75, %13
  %21 = load i32, i32* %i, align 4
  %22 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %25, label %78

; <label>:25                                      ; preds = %20
  %26 = load i32, i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 3
  %29 = load %struct.b2Vec2*, %struct.b2Vec2** %28, align 8
  %30 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %29, i64 %27
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 2
  %34 = load %struct.b2Vec2*, %struct.b2Vec2** %33, align 8
  %35 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %34, i64 %32
  %36 = bitcast %struct.b2Vec2* %30 to i8*
  %37 = bitcast %struct.b2Vec2* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 4, i1 false)
  %38 = load i32, i32* %i, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 5
  %41 = load float*, float** %40, align 8
  %42 = getelementptr inbounds float, float* %41, i64 %39
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0.000000e+00
  br i1 %44, label %45, label %55

; <label>:45                                      ; preds = %25
  %46 = load i32, i32* %i, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 4
  %49 = load %struct.b2Vec2*, %struct.b2Vec2** %48, align 8
  %50 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %49, i64 %47
  %51 = load float, float* %2, align 4
  %52 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 8
  %53 = call <2 x float> @_ZmlfRK6b2Vec2(float %51, %struct.b2Vec2* dereferenceable(8) %52)
  %54 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %53, <2 x float>* %54, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %50, %struct.b2Vec2* dereferenceable(8) %4)
  br label %55

; <label>:55                                      ; preds = %45, %25
  %56 = load i32, i32* %i, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 4
  %59 = load %struct.b2Vec2*, %struct.b2Vec2** %58, align 8
  %60 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %59, i64 %57
  %61 = load float, float* %d, align 4
  call void @_ZN6b2Vec2mLEf(%struct.b2Vec2* %60, float %61)
  %62 = load i32, i32* %i, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 2
  %65 = load %struct.b2Vec2*, %struct.b2Vec2** %64, align 8
  %66 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %65, i64 %63
  %67 = load float, float* %2, align 4
  %68 = load i32, i32* %i, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 4
  %71 = load %struct.b2Vec2*, %struct.b2Vec2** %70, align 8
  %72 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %71, i64 %69
  %73 = call <2 x float> @_ZmlfRK6b2Vec2(float %67, %struct.b2Vec2* dereferenceable(8) %72)
  %74 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %73, <2 x float>* %74, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %66, %struct.b2Vec2* dereferenceable(8) %5)
  br label %75

; <label>:75                                      ; preds = %55
  %76 = load i32, i32* %i, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %i, align 4
  br label %20

; <label>:78                                      ; preds = %20
  store i32 0, i32* %i1, align 4
  br label %79

; <label>:79                                      ; preds = %84, %78
  %80 = load i32, i32* %i1, align 4
  %81 = load i32, i32* %3, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %83, label %87

; <label>:83                                      ; preds = %79
  call void @_ZN6b2Rope7SolveC2Ev(%class.b2Rope* %8)
  call void @_ZN6b2Rope7SolveC3Ev(%class.b2Rope* %8)
  call void @_ZN6b2Rope7SolveC2Ev(%class.b2Rope* %8)
  br label %84

; <label>:84                                      ; preds = %83
  %85 = load i32, i32* %i1, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %i1, align 4
  br label %79

; <label>:87                                      ; preds = %79
  %88 = load float, float* %2, align 4
  %89 = fdiv float 1.000000e+00, %88
  store float %89, float* %inv_h, align 4
  store i32 0, i32* %i2, align 4
  br label %90

; <label>:90                                      ; preds = %118, %87
  %91 = load i32, i32* %i2, align 4
  %92 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp slt i32 %91, %93
  br i1 %94, label %95, label %121

; <label>:95                                      ; preds = %90
  %96 = load i32, i32* %i2, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 4
  %99 = load %struct.b2Vec2*, %struct.b2Vec2** %98, align 8
  %100 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %99, i64 %97
  %101 = load float, float* %inv_h, align 4
  %102 = load i32, i32* %i2, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 2
  %105 = load %struct.b2Vec2*, %struct.b2Vec2** %104, align 8
  %106 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %105, i64 %103
  %107 = load i32, i32* %i2, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %8, i32 0, i32 3
  %110 = load %struct.b2Vec2*, %struct.b2Vec2** %109, align 8
  %111 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %110, i64 %108
  %112 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %106, %struct.b2Vec2* dereferenceable(8) %111)
  %113 = bitcast %struct.b2Vec2* %7 to <2 x float>*
  store <2 x float> %112, <2 x float>* %113, align 4
  %114 = call <2 x float> @_ZmlfRK6b2Vec2(float %101, %struct.b2Vec2* dereferenceable(8) %7)
  %115 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %114, <2 x float>* %115, align 4
  %116 = bitcast %struct.b2Vec2* %100 to i8*
  %117 = bitcast %struct.b2Vec2* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 8, i32 4, i1 false)
  br label %118

; <label>:118                                     ; preds = %95
  %119 = load i32, i32* %i2, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %i2, align 4
  br label %90

; <label>:121                                     ; preds = %90, %12
  ret void
}

; Function Attrs: nounwind
declare float @expf(float) #8

; Function Attrs: uwtable
define void @_ZN6b2Rope7SolveC2Ev(%class.b2Rope* %this) #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  %count2 = alloca i32, align 4
  %i = alloca i32, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %d = alloca %struct.b2Vec2, align 4
  %L = alloca float, align 4
  %im1 = alloca float, align 4
  %im2 = alloca float, align 4
  %s1 = alloca float, align 4
  %s2 = alloca float, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  %4 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %5 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = sub nsw i32 %6, 1
  store i32 %7, i32* %count2, align 4
  store i32 0, i32* %i, align 4
  br label %8

; <label>:8                                       ; preds = %105, %0
  %9 = load i32, i32* %i, align 4
  %10 = load i32, i32* %count2, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %108

; <label>:12                                      ; preds = %8
  %13 = load i32, i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 2
  %16 = load %struct.b2Vec2*, %struct.b2Vec2** %15, align 8
  %17 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %16, i64 %14
  %18 = bitcast %struct.b2Vec2* %p1 to i8*
  %19 = bitcast %struct.b2Vec2* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false)
  %20 = load i32, i32* %i, align 4
  %21 = add nsw i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 2
  %24 = load %struct.b2Vec2*, %struct.b2Vec2** %23, align 8
  %25 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %24, i64 %22
  %26 = bitcast %struct.b2Vec2* %p2 to i8*
  %27 = bitcast %struct.b2Vec2* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 4, i1 false)
  %28 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %29 = bitcast %struct.b2Vec2* %d to <2 x float>*
  store <2 x float> %28, <2 x float>* %29, align 4
  %30 = call float @_ZN6b2Vec29NormalizeEv(%struct.b2Vec2* %d)
  store float %30, float* %L, align 4
  %31 = load i32, i32* %i, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 5
  %34 = load float*, float** %33, align 8
  %35 = getelementptr inbounds float, float* %34, i64 %32
  %36 = load float, float* %35, align 4
  store float %36, float* %im1, align 4
  %37 = load i32, i32* %i, align 4
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 5
  %41 = load float*, float** %40, align 8
  %42 = getelementptr inbounds float, float* %41, i64 %39
  %43 = load float, float* %42, align 4
  store float %43, float* %im2, align 4
  %44 = load float, float* %im1, align 4
  %45 = load float, float* %im2, align 4
  %46 = fadd float %44, %45
  %47 = fcmp oeq float %46, 0.000000e+00
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %12
  br label %105

; <label>:49                                      ; preds = %12
  %50 = load float, float* %im1, align 4
  %51 = load float, float* %im1, align 4
  %52 = load float, float* %im2, align 4
  %53 = fadd float %51, %52
  %54 = fdiv float %50, %53
  store float %54, float* %s1, align 4
  %55 = load float, float* %im2, align 4
  %56 = load float, float* %im1, align 4
  %57 = load float, float* %im2, align 4
  %58 = fadd float %56, %57
  %59 = fdiv float %55, %58
  store float %59, float* %s2, align 4
  %60 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 10
  %61 = load float, float* %60, align 4
  %62 = load float, float* %s1, align 4
  %63 = fmul float %61, %62
  %64 = load i32, i32* %i, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 6
  %67 = load float*, float** %66, align 8
  %68 = getelementptr inbounds float, float* %67, i64 %65
  %69 = load float, float* %68, align 4
  %70 = load float, float* %L, align 4
  %71 = fsub float %69, %70
  %72 = fmul float %63, %71
  %73 = call <2 x float> @_ZmlfRK6b2Vec2(float %72, %struct.b2Vec2* dereferenceable(8) %d)
  %74 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %73, <2 x float>* %74, align 4
  call void @_ZN6b2Vec2mIERKS_(%struct.b2Vec2* %p1, %struct.b2Vec2* dereferenceable(8) %2)
  %75 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 10
  %76 = load float, float* %75, align 4
  %77 = load float, float* %s2, align 4
  %78 = fmul float %76, %77
  %79 = load i32, i32* %i, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 6
  %82 = load float*, float** %81, align 8
  %83 = getelementptr inbounds float, float* %82, i64 %80
  %84 = load float, float* %83, align 4
  %85 = load float, float* %L, align 4
  %86 = fsub float %84, %85
  %87 = fmul float %78, %86
  %88 = call <2 x float> @_ZmlfRK6b2Vec2(float %87, %struct.b2Vec2* dereferenceable(8) %d)
  %89 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %88, <2 x float>* %89, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %p2, %struct.b2Vec2* dereferenceable(8) %3)
  %90 = load i32, i32* %i, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 2
  %93 = load %struct.b2Vec2*, %struct.b2Vec2** %92, align 8
  %94 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %93, i64 %91
  %95 = bitcast %struct.b2Vec2* %94 to i8*
  %96 = bitcast %struct.b2Vec2* %p1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false)
  %97 = load i32, i32* %i, align 4
  %98 = add nsw i32 %97, 1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %4, i32 0, i32 2
  %101 = load %struct.b2Vec2*, %struct.b2Vec2** %100, align 8
  %102 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %101, i64 %99
  %103 = bitcast %struct.b2Vec2* %102 to i8*
  %104 = bitcast %struct.b2Vec2* %p2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 8, i32 4, i1 false)
  br label %105

; <label>:105                                     ; preds = %49, %48
  %106 = load i32, i32* %i, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %i, align 4
  br label %8

; <label>:108                                     ; preds = %8
  ret void
}

; Function Attrs: uwtable
define void @_ZN6b2Rope7SolveC3Ev(%class.b2Rope* %this) #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  %count3 = alloca i32, align 4
  %i = alloca i32, align 4
  %p1 = alloca %struct.b2Vec2, align 4
  %p2 = alloca %struct.b2Vec2, align 4
  %p3 = alloca %struct.b2Vec2, align 4
  %m1 = alloca float, align 4
  %m2 = alloca float, align 4
  %m3 = alloca float, align 4
  %d1 = alloca %struct.b2Vec2, align 4
  %d2 = alloca %struct.b2Vec2, align 4
  %L1sqr = alloca float, align 4
  %L2sqr = alloca float, align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %angle = alloca float, align 4
  %Jd1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2, align 4
  %Jd2 = alloca %struct.b2Vec2, align 4
  %3 = alloca %struct.b2Vec2, align 4
  %J1 = alloca %struct.b2Vec2, align 4
  %J2 = alloca %struct.b2Vec2, align 4
  %J3 = alloca %struct.b2Vec2, align 4
  %mass = alloca float, align 4
  %C = alloca float, align 4
  %impulse = alloca float, align 4
  %4 = alloca %struct.b2Vec2, align 4
  %5 = alloca %struct.b2Vec2, align 4
  %6 = alloca %struct.b2Vec2, align 4
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  %7 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %8 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sub nsw i32 %9, 2
  store i32 %10, i32* %count3, align 4
  store i32 0, i32* %i, align 4
  br label %11

; <label>:11                                      ; preds = %194, %0
  %12 = load i32, i32* %i, align 4
  %13 = load i32, i32* %count3, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %197

; <label>:15                                      ; preds = %11
  %16 = load i32, i32* %i, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 2
  %19 = load %struct.b2Vec2*, %struct.b2Vec2** %18, align 8
  %20 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %19, i64 %17
  %21 = bitcast %struct.b2Vec2* %p1 to i8*
  %22 = bitcast %struct.b2Vec2* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false)
  %23 = load i32, i32* %i, align 4
  %24 = add nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 2
  %27 = load %struct.b2Vec2*, %struct.b2Vec2** %26, align 8
  %28 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %27, i64 %25
  %29 = bitcast %struct.b2Vec2* %p2 to i8*
  %30 = bitcast %struct.b2Vec2* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = load i32, i32* %i, align 4
  %32 = add nsw i32 %31, 2
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 2
  %35 = load %struct.b2Vec2*, %struct.b2Vec2** %34, align 8
  %36 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %35, i64 %33
  %37 = bitcast %struct.b2Vec2* %p3 to i8*
  %38 = bitcast %struct.b2Vec2* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false)
  %39 = load i32, i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 5
  %42 = load float*, float** %41, align 8
  %43 = getelementptr inbounds float, float* %42, i64 %40
  %44 = load float, float* %43, align 4
  store float %44, float* %m1, align 4
  %45 = load i32, i32* %i, align 4
  %46 = add nsw i32 %45, 1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 5
  %49 = load float*, float** %48, align 8
  %50 = getelementptr inbounds float, float* %49, i64 %47
  %51 = load float, float* %50, align 4
  store float %51, float* %m2, align 4
  %52 = load i32, i32* %i, align 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 5
  %56 = load float*, float** %55, align 8
  %57 = getelementptr inbounds float, float* %56, i64 %54
  %58 = load float, float* %57, align 4
  store float %58, float* %m3, align 4
  %59 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p2, %struct.b2Vec2* dereferenceable(8) %p1)
  %60 = bitcast %struct.b2Vec2* %d1 to <2 x float>*
  store <2 x float> %59, <2 x float>* %60, align 4
  %61 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %p3, %struct.b2Vec2* dereferenceable(8) %p2)
  %62 = bitcast %struct.b2Vec2* %d2 to <2 x float>*
  store <2 x float> %61, <2 x float>* %62, align 4
  %63 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %d1)
  store float %63, float* %L1sqr, align 4
  %64 = call float @_ZNK6b2Vec213LengthSquaredEv(%struct.b2Vec2* %d2)
  store float %64, float* %L2sqr, align 4
  %65 = load float, float* %L1sqr, align 4
  %66 = load float, float* %L2sqr, align 4
  %67 = fmul float %65, %66
  %68 = fcmp oeq float %67, 0.000000e+00
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %15
  br label %194

; <label>:70                                      ; preds = %15
  %71 = call float @_Z7b2CrossRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d1, %struct.b2Vec2* dereferenceable(8) %d2)
  store float %71, float* %a, align 4
  %72 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %d1, %struct.b2Vec2* dereferenceable(8) %d2)
  store float %72, float* %b, align 4
  %73 = load float, float* %a, align 4
  %74 = load float, float* %b, align 4
  %75 = call float @atan2f(float %73, float %74) #3
  store float %75, float* %angle, align 4
  %76 = load float, float* %L1sqr, align 4
  %77 = fdiv float -1.000000e+00, %76
  %78 = call <2 x float> @_ZNK6b2Vec24SkewEv(%struct.b2Vec2* %d1)
  %79 = bitcast %struct.b2Vec2* %2 to <2 x float>*
  store <2 x float> %78, <2 x float>* %79, align 4
  %80 = call <2 x float> @_ZmlfRK6b2Vec2(float %77, %struct.b2Vec2* dereferenceable(8) %2)
  %81 = bitcast %struct.b2Vec2* %Jd1 to <2 x float>*
  store <2 x float> %80, <2 x float>* %81, align 4
  %82 = load float, float* %L2sqr, align 4
  %83 = fdiv float 1.000000e+00, %82
  %84 = call <2 x float> @_ZNK6b2Vec24SkewEv(%struct.b2Vec2* %d2)
  %85 = bitcast %struct.b2Vec2* %3 to <2 x float>*
  store <2 x float> %84, <2 x float>* %85, align 4
  %86 = call <2 x float> @_ZmlfRK6b2Vec2(float %83, %struct.b2Vec2* dereferenceable(8) %3)
  %87 = bitcast %struct.b2Vec2* %Jd2 to <2 x float>*
  store <2 x float> %86, <2 x float>* %87, align 4
  %88 = call <2 x float> @_ZNK6b2Vec2ngEv(%struct.b2Vec2* %Jd1)
  %89 = bitcast %struct.b2Vec2* %J1 to <2 x float>*
  store <2 x float> %88, <2 x float>* %89, align 4
  %90 = call <2 x float> @_ZmiRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %Jd1, %struct.b2Vec2* dereferenceable(8) %Jd2)
  %91 = bitcast %struct.b2Vec2* %J2 to <2 x float>*
  store <2 x float> %90, <2 x float>* %91, align 4
  %92 = bitcast %struct.b2Vec2* %J3 to i8*
  %93 = bitcast %struct.b2Vec2* %Jd2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 8, i32 4, i1 false)
  %94 = load float, float* %m1, align 4
  %95 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %J1, %struct.b2Vec2* dereferenceable(8) %J1)
  %96 = fmul float %94, %95
  %97 = load float, float* %m2, align 4
  %98 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %J2, %struct.b2Vec2* dereferenceable(8) %J2)
  %99 = fmul float %97, %98
  %100 = fadd float %96, %99
  %101 = load float, float* %m3, align 4
  %102 = call float @_Z5b2DotRK6b2Vec2S1_(%struct.b2Vec2* dereferenceable(8) %J3, %struct.b2Vec2* dereferenceable(8) %J3)
  %103 = fmul float %101, %102
  %104 = fadd float %100, %103
  store float %104, float* %mass, align 4
  %105 = load float, float* %mass, align 4
  %106 = fcmp oeq float %105, 0.000000e+00
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %70
  br label %194

; <label>:108                                     ; preds = %70
  %109 = load float, float* %mass, align 4
  %110 = fdiv float 1.000000e+00, %109
  store float %110, float* %mass, align 4
  %111 = load float, float* %angle, align 4
  %112 = load i32, i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 7
  %115 = load float*, float** %114, align 8
  %116 = getelementptr inbounds float, float* %115, i64 %113
  %117 = load float, float* %116, align 4
  %118 = fsub float %111, %117
  store float %118, float* %C, align 4
  br label %119

; <label>:119                                     ; preds = %122, %108
  %120 = load float, float* %C, align 4
  %121 = fcmp ogt float %120, 0x400921FB60000000
  br i1 %121, label %122, label %133

; <label>:122                                     ; preds = %119
  %123 = load float, float* %angle, align 4
  %124 = fsub float %123, 0x401921FB60000000
  store float %124, float* %angle, align 4
  %125 = load float, float* %angle, align 4
  %126 = load i32, i32* %i, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 7
  %129 = load float*, float** %128, align 8
  %130 = getelementptr inbounds float, float* %129, i64 %127
  %131 = load float, float* %130, align 4
  %132 = fsub float %125, %131
  store float %132, float* %C, align 4
  br label %119

; <label>:133                                     ; preds = %119
  br label %134

; <label>:134                                     ; preds = %137, %133
  %135 = load float, float* %C, align 4
  %136 = fcmp olt float %135, 0xC00921FB60000000
  br i1 %136, label %137, label %148

; <label>:137                                     ; preds = %134
  %138 = load float, float* %angle, align 4
  %139 = fadd float %138, 0x401921FB60000000
  store float %139, float* %angle, align 4
  %140 = load float, float* %angle, align 4
  %141 = load i32, i32* %i, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 7
  %144 = load float*, float** %143, align 8
  %145 = getelementptr inbounds float, float* %144, i64 %142
  %146 = load float, float* %145, align 4
  %147 = fsub float %140, %146
  store float %147, float* %C, align 4
  br label %134

; <label>:148                                     ; preds = %134
  %149 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 11
  %150 = load float, float* %149, align 8
  %151 = fsub float -0.000000e+00, %150
  %152 = load float, float* %mass, align 4
  %153 = fmul float %151, %152
  %154 = load float, float* %C, align 4
  %155 = fmul float %153, %154
  store float %155, float* %impulse, align 4
  %156 = load float, float* %m1, align 4
  %157 = load float, float* %impulse, align 4
  %158 = fmul float %156, %157
  %159 = call <2 x float> @_ZmlfRK6b2Vec2(float %158, %struct.b2Vec2* dereferenceable(8) %J1)
  %160 = bitcast %struct.b2Vec2* %4 to <2 x float>*
  store <2 x float> %159, <2 x float>* %160, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %p1, %struct.b2Vec2* dereferenceable(8) %4)
  %161 = load float, float* %m2, align 4
  %162 = load float, float* %impulse, align 4
  %163 = fmul float %161, %162
  %164 = call <2 x float> @_ZmlfRK6b2Vec2(float %163, %struct.b2Vec2* dereferenceable(8) %J2)
  %165 = bitcast %struct.b2Vec2* %5 to <2 x float>*
  store <2 x float> %164, <2 x float>* %165, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %p2, %struct.b2Vec2* dereferenceable(8) %5)
  %166 = load float, float* %m3, align 4
  %167 = load float, float* %impulse, align 4
  %168 = fmul float %166, %167
  %169 = call <2 x float> @_ZmlfRK6b2Vec2(float %168, %struct.b2Vec2* dereferenceable(8) %J3)
  %170 = bitcast %struct.b2Vec2* %6 to <2 x float>*
  store <2 x float> %169, <2 x float>* %170, align 4
  call void @_ZN6b2Vec2pLERKS_(%struct.b2Vec2* %p3, %struct.b2Vec2* dereferenceable(8) %6)
  %171 = load i32, i32* %i, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 2
  %174 = load %struct.b2Vec2*, %struct.b2Vec2** %173, align 8
  %175 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %174, i64 %172
  %176 = bitcast %struct.b2Vec2* %175 to i8*
  %177 = bitcast %struct.b2Vec2* %p1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %176, i8* %177, i64 8, i32 4, i1 false)
  %178 = load i32, i32* %i, align 4
  %179 = add nsw i32 %178, 1
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 2
  %182 = load %struct.b2Vec2*, %struct.b2Vec2** %181, align 8
  %183 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %182, i64 %180
  %184 = bitcast %struct.b2Vec2* %183 to i8*
  %185 = bitcast %struct.b2Vec2* %p2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* %185, i64 8, i32 4, i1 false)
  %186 = load i32, i32* %i, align 4
  %187 = add nsw i32 %186, 2
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %7, i32 0, i32 2
  %190 = load %struct.b2Vec2*, %struct.b2Vec2** %189, align 8
  %191 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %190, i64 %188
  %192 = bitcast %struct.b2Vec2* %191 to i8*
  %193 = bitcast %struct.b2Vec2* %p3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %193, i64 8, i32 4, i1 false)
  br label %194

; <label>:194                                     ; preds = %148, %107, %69
  %195 = load i32, i32* %i, align 4
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %i, align 4
  br label %11

; <label>:197                                     ; preds = %11
  ret void
}

; Function Attrs: uwtable
define linkonce_odr <2 x float> @_ZNK6b2Vec24SkewEv(%struct.b2Vec2* %this) #0 comdat align 2 {
  %1 = alloca %struct.b2Vec2, align 4
  %2 = alloca %struct.b2Vec2*, align 8
  store %struct.b2Vec2* %this, %struct.b2Vec2** %2, align 8
  %3 = load %struct.b2Vec2*, %struct.b2Vec2** %2, align 8
  %4 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fsub float -0.000000e+00, %5
  %7 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %3, i32 0, i32 0
  %8 = load float, float* %7, align 4
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %1, float %6, float %8)
  %9 = bitcast %struct.b2Vec2* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  ret <2 x float> %10
}

; Function Attrs: nounwind uwtable
define void @_ZN6b2Rope8SetAngleEf(%class.b2Rope* %this, float %angle) #2 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  %2 = alloca float, align 4
  %count3 = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  store float %angle, float* %2, align 4
  %3 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  %4 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sub nsw i32 %5, 2
  store i32 %6, i32* %count3, align 4
  store i32 0, i32* %i, align 4
  br label %7

; <label>:7                                       ; preds = %18, %0
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %count3, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %21

; <label>:11                                      ; preds = %7
  %12 = load float, float* %2, align 4
  %13 = load i32, i32* %i, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 7
  %16 = load float*, float** %15, align 8
  %17 = getelementptr inbounds float, float* %16, i64 %14
  store float %12, float* %17, align 4
  br label %18

; <label>:18                                      ; preds = %11
  %19 = load i32, i32* %i, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %i, align 4
  br label %7

; <label>:21                                      ; preds = %7
  ret void
}

; Function Attrs: uwtable
define void @_ZNK6b2Rope4DrawEP6b2Draw(%class.b2Rope* %this, %class.b2Draw* %draw) #0 align 2 {
  %1 = alloca %class.b2Rope*, align 8
  %2 = alloca %class.b2Draw*, align 8
  %c = alloca %struct.b2Color, align 4
  %i = alloca i32, align 4
  store %class.b2Rope* %this, %class.b2Rope** %1, align 8
  store %class.b2Draw* %draw, %class.b2Draw** %2, align 8
  %3 = load %class.b2Rope*, %class.b2Rope** %1, align 8
  call void @_ZN7b2ColorC2Effff(%struct.b2Color* %c, float 0x3FD99999A0000000, float 5.000000e-01, float 0x3FE6666660000000, float 1.000000e+00)
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %27, %0
  %5 = load i32, i32* %i, align 4
  %6 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = sub nsw i32 %7, 1
  %9 = icmp slt i32 %5, %8
  br i1 %9, label %10, label %30

; <label>:10                                      ; preds = %4
  %11 = load %class.b2Draw*, %class.b2Draw** %2, align 8
  %12 = bitcast %class.b2Draw* %11 to void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)***
  %13 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)**, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %13, i64 6
  %15 = load void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)*, void (%class.b2Draw*, %struct.b2Vec2*, %struct.b2Vec2*, %struct.b2Color*)** %14, align 8
  %16 = load i32, i32* %i, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %19 = load %struct.b2Vec2*, %struct.b2Vec2** %18, align 8
  %20 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %19, i64 %17
  %21 = load i32, i32* %i, align 4
  %22 = add nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.b2Rope, %class.b2Rope* %3, i32 0, i32 2
  %25 = load %struct.b2Vec2*, %struct.b2Vec2** %24, align 8
  %26 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %25, i64 %23
  call void %15(%class.b2Draw* %11, %struct.b2Vec2* dereferenceable(8) %20, %struct.b2Vec2* dereferenceable(8) %26, %struct.b2Color* dereferenceable(16) %c)
  br label %27

; <label>:27                                      ; preds = %10
  %28 = load i32, i32* %i, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %i, align 4
  br label %4

; <label>:30                                      ; preds = %4
  ret void
}

; Function Attrs: nounwind uwtable
define void @marker(i32 %x, i32 %from, i32 %to) #2 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %x, i32* %1, align 4
  store i32 %from, i32* %2, align 4
  store i32 %to, i32* %3, align 4
  ret void
}

; Function Attrs: uwtable
define void @_Z4testii(i32 %i, i32 %j) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %c = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 %i, i32* %1, align 4
  store i32 %j, i32* %2, align 4
  store i32 4, i32* %c, align 4
  %3 = load i32, i32* %1, align 4
  %4 = load i32, i32* %2, align 4
  %5 = add nsw i32 %3, %4
  store i32 %5, i32* %b, align 4
  %6 = load i32, i32* %c, align 4
  call void @marker(i32 %6, i32 3, i32 8)
  %7 = load i32, i32* %b, align 4
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), i32 %7)
  ret void
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: norecurse uwtable
define i32 @main(i32 %argc, i8** %argv) #13 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %i = alloca i32, align 4
  %gravity = alloca %struct.b2Vec2, align 4
  %world = alloca %class.b2World, align 8
  %groundBodyDef = alloca %struct.b2BodyDef, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %groundBody = alloca %class.b2Body*, align 8
  %groundBox = alloca %class.b2PolygonShape, align 8
  %bodyDef = alloca %struct.b2BodyDef, align 8
  %body = alloca %class.b2Body*, align 8
  %dynamicBox = alloca %class.b2PolygonShape, align 8
  %fixtureDef = alloca %struct.b2FixtureDef, align 8
  %timeStep = alloca float, align 4
  %velocityIterations = alloca i32, align 4
  %positionIterations = alloca i32, align 4
  %i1 = alloca i32, align 4
  %position = alloca %struct.b2Vec2, align 4
  %angle = alloca float, align 4
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  store i32 4, i32* %i, align 4
  %6 = load i32, i32* %i, align 4
  call void @marker(i32 %6, i32 3, i32 8)
  call void @_Z4testii(i32 2, i32 3)
  call void @_ZN6b2Vec2C2Eff(%struct.b2Vec2* %gravity, float 0.000000e+00, float -1.000000e+01)
  call void @_ZN7b2WorldC1ERK6b2Vec2(%class.b2World* %world, %struct.b2Vec2* dereferenceable(8) %gravity)
  invoke void @_ZN9b2BodyDefC2Ev(%struct.b2BodyDef* %groundBodyDef)
          to label %7 unwind label %63

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %groundBodyDef, i32 0, i32 1
  invoke void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %8, float 0.000000e+00, float -1.000000e+01)
          to label %9 unwind label %63

; <label>:9                                       ; preds = %7
  %10 = invoke %class.b2Body* @_ZN7b2World10CreateBodyEPK9b2BodyDef(%class.b2World* %world, %struct.b2BodyDef* %groundBodyDef)
          to label %11 unwind label %63

; <label>:11                                      ; preds = %9
  store %class.b2Body* %10, %class.b2Body** %groundBody, align 8
  invoke void @_ZN14b2PolygonShapeC2Ev(%class.b2PolygonShape* %groundBox)
          to label %12 unwind label %63

; <label>:12                                      ; preds = %11
  invoke void @_ZN14b2PolygonShape8SetAsBoxEff(%class.b2PolygonShape* %groundBox, float 5.000000e+01, float 1.000000e+01)
          to label %13 unwind label %67

; <label>:13                                      ; preds = %12
  %14 = load %class.b2Body*, %class.b2Body** %groundBody, align 8
  %15 = bitcast %class.b2PolygonShape* %groundBox to %class.b2Shape*
  %16 = invoke %class.b2Fixture* @_ZN6b2Body13CreateFixtureEPK7b2Shapef(%class.b2Body* %14, %class.b2Shape* %15, float 0.000000e+00)
          to label %17 unwind label %67

; <label>:17                                      ; preds = %13
  invoke void @_ZN9b2BodyDefC2Ev(%struct.b2BodyDef* %bodyDef)
          to label %18 unwind label %67

; <label>:18                                      ; preds = %17
  %19 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %bodyDef, i32 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %bodyDef, i32 0, i32 1
  invoke void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %20, float 0.000000e+00, float 4.000000e+00)
          to label %21 unwind label %67

; <label>:21                                      ; preds = %18
  %22 = invoke %class.b2Body* @_ZN7b2World10CreateBodyEPK9b2BodyDef(%class.b2World* %world, %struct.b2BodyDef* %bodyDef)
          to label %23 unwind label %67

; <label>:23                                      ; preds = %21
  store %class.b2Body* %22, %class.b2Body** %body, align 8
  invoke void @_ZN14b2PolygonShapeC2Ev(%class.b2PolygonShape* %dynamicBox)
          to label %24 unwind label %67

; <label>:24                                      ; preds = %23
  invoke void @_ZN14b2PolygonShape8SetAsBoxEff(%class.b2PolygonShape* %dynamicBox, float 1.000000e+00, float 1.000000e+00)
          to label %25 unwind label %71

; <label>:25                                      ; preds = %24
  invoke void @_ZN12b2FixtureDefC2Ev(%struct.b2FixtureDef* %fixtureDef)
          to label %26 unwind label %71

; <label>:26                                      ; preds = %25
  %27 = bitcast %class.b2PolygonShape* %dynamicBox to %class.b2Shape*
  %28 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %fixtureDef, i32 0, i32 0
  store %class.b2Shape* %27, %class.b2Shape** %28, align 8
  %29 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %fixtureDef, i32 0, i32 4
  store float 1.000000e+00, float* %29, align 8
  %30 = getelementptr inbounds %struct.b2FixtureDef, %struct.b2FixtureDef* %fixtureDef, i32 0, i32 2
  store float 0x3FD3333340000000, float* %30, align 8
  %31 = load %class.b2Body*, %class.b2Body** %body, align 8
  %32 = invoke %class.b2Fixture* @_ZN6b2Body13CreateFixtureEPK12b2FixtureDef(%class.b2Body* %31, %struct.b2FixtureDef* %fixtureDef)
          to label %33 unwind label %71

; <label>:33                                      ; preds = %26
  store float 0x3F91111120000000, float* %timeStep, align 4
  store i32 6, i32* %velocityIterations, align 4
  store i32 2, i32* %positionIterations, align 4
  store i32 0, i32* %i1, align 4
  br label %34

; <label>:34                                      ; preds = %60, %33
  %35 = load i32, i32* %i1, align 4
  %36 = icmp slt i32 %35, 60
  br i1 %36, label %37, label %75

; <label>:37                                      ; preds = %34
  %38 = load float, float* %timeStep, align 4
  %39 = load i32, i32* %velocityIterations, align 4
  %40 = load i32, i32* %positionIterations, align 4
  invoke void @_ZN7b2World4StepEfii(%class.b2World* %world, float %38, i32 %39, i32 %40)
          to label %41 unwind label %71

; <label>:41                                      ; preds = %37
  %42 = load %class.b2Body*, %class.b2Body** %body, align 8
  %43 = invoke dereferenceable(8) %struct.b2Vec2* @_ZNK6b2Body11GetPositionEv(%class.b2Body* %42)
          to label %44 unwind label %71

; <label>:44                                      ; preds = %41
  %45 = bitcast %struct.b2Vec2* %position to i8*
  %46 = bitcast %struct.b2Vec2* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false)
  %47 = load %class.b2Body*, %class.b2Body** %body, align 8
  %48 = invoke float @_ZNK6b2Body8GetAngleEv(%class.b2Body* %47)
          to label %49 unwind label %71

; <label>:49                                      ; preds = %44
  store float %48, float* %angle, align 4
  %50 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %position, i32 0, i32 0
  %51 = load float, float* %50, align 4
  %52 = fpext float %51 to double
  %53 = getelementptr inbounds %struct.b2Vec2, %struct.b2Vec2* %position, i32 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = fpext float %54 to double
  %56 = load float, float* %angle, align 4
  %57 = fpext float %56 to double
  %58 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.35, i32 0, i32 0), double %52, double %55, double %57)
          to label %59 unwind label %71

; <label>:59                                      ; preds = %49
  br label %60

; <label>:60                                      ; preds = %59
  %61 = load i32, i32* %i1, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %i1, align 4
  br label %34

; <label>:63                                      ; preds = %77, %11, %9, %7, %0
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %4, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %5, align 4
  br label %83

; <label>:67                                      ; preds = %76, %23, %21, %18, %17, %13, %12
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %4, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %5, align 4
  br label %81

; <label>:71                                      ; preds = %75, %49, %44, %41, %37, %26, %25, %24
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %4, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %5, align 4
  invoke void @_ZN14b2PolygonShapeD2Ev(%class.b2PolygonShape* %dynamicBox)
          to label %78 unwind label %90

; <label>:75                                      ; preds = %34
  invoke void @_Z4testii(i32 4, i32 6)
          to label %76 unwind label %71

; <label>:76                                      ; preds = %75
  store i32 0, i32* %1, align 4
  invoke void @_ZN14b2PolygonShapeD2Ev(%class.b2PolygonShape* %dynamicBox)
          to label %77 unwind label %67

; <label>:77                                      ; preds = %76
  invoke void @_ZN14b2PolygonShapeD2Ev(%class.b2PolygonShape* %groundBox)
          to label %79 unwind label %63

; <label>:78                                      ; preds = %71
  br label %81

; <label>:79                                      ; preds = %77
  call void @_ZN7b2WorldD1Ev(%class.b2World* %world)
  %80 = load i32, i32* %1, align 4
  ret i32 %80

; <label>:81                                      ; preds = %78, %67
  invoke void @_ZN14b2PolygonShapeD2Ev(%class.b2PolygonShape* %groundBox)
          to label %82 unwind label %90

; <label>:82                                      ; preds = %81
  br label %83

; <label>:83                                      ; preds = %82, %63
  invoke void @_ZN7b2WorldD1Ev(%class.b2World* %world)
          to label %84 unwind label %90

; <label>:84                                      ; preds = %83
  br label %85

; <label>:85                                      ; preds = %84
  %86 = load i8*, i8** %4, align 8
  %87 = load i32, i32* %5, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  resume { i8*, i32 } %89

; <label>:90                                      ; preds = %83, %81, %71
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  call void @__clang_call_terminate(i8* %92) #15
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN9b2BodyDefC2Ev(%struct.b2BodyDef* %this) unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.b2BodyDef*, align 8
  store %struct.b2BodyDef* %this, %struct.b2BodyDef** %1, align 8
  %2 = load %struct.b2BodyDef*, %struct.b2BodyDef** %1, align 8
  %3 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 1
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %3)
  %4 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 3
  call void @_ZN6b2Vec2C2Ev(%struct.b2Vec2* %4)
  %5 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 13
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 1
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %6, float 0.000000e+00, float 0.000000e+00)
  %7 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 2
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 3
  call void @_ZN6b2Vec23SetEff(%struct.b2Vec2* %8, float 0.000000e+00, float 0.000000e+00)
  %9 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 4
  store float 0.000000e+00, float* %9, align 8
  %10 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 5
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 6
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 7
  store i8 1, i8* %12, align 4
  %13 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 8
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 9
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 10
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 11
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %struct.b2BodyDef, %struct.b2BodyDef* %2, i32 0, i32 14
  store float 1.000000e+00, float* %18, align 8
  ret void
}

attributes #0 = { uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { norecurse uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}
